{
	"id": "901f018ce04668224edeb321f81bb7f1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/WVLTToken.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``sender``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(\r\n            currentAllowance >= amount,\r\n            \"ERC20: transfer amount exceeds allowance\"\r\n        );\r\n        unchecked {\r\n            _approve(sender, _msgSender(), currentAllowance - amount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender] + addedValue\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(\r\n            currentAllowance >= subtractedValue,\r\n            \"ERC20: decreased allowance below zero\"\r\n        );\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        uint256 senderBalance = _balances[sender];\r\n        require(\r\n            senderBalance >= amount,\r\n            \"ERC20: transfer amount exceeds balance\"\r\n        );\r\n        unchecked {\r\n            _balances[sender] = senderBalance - amount;\r\n        }\r\n        _balances[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n\r\n        _afterTokenTransfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _setOwner(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _setOwner(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n        _setOwner(newOwner);\r\n    }\r\n\r\n    function _setOwner(address newOwner) private {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\npragma solidity 0.8.7;\r\n\r\ncontract WVLTToken is ERC20(\"WVLTToken\", \"WVLT\"), Ownable {\r\n    uint256 public constant MAX_SUPPLY = 100_000_000e18; // 100 million WVLT\r\n\r\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\r\n    function mint(address _to, uint256 _amount) public onlyOwner {\r\n        require(\r\n            totalSupply() + _amount <= MAX_SUPPLY,\r\n            \"WVLT::mint: cannot exceed max supply\"\r\n        );\r\n        _mint(_to, _amount);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/WVLTToken.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WVLTToken.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/WVLTToken.sol\":{\"keccak256\":\"0xa7822fe14f3fe2de91ec7d733038c03e5ca55dcea2ade270dbe9a3f897952682\",\"urls\":[\"bzz-raw://5faaf328033f1035a990367640b0dd20a9cfc4f1ffc62834edfc97e9f22b0002\",\"dweb:/ipfs/QmewABb842VBUrEvKq3aCDbmqVh5hcgyA1bG3oJqvr3pGk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/WVLTToken.sol\":5432:16576  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/WVLTToken.sol\":6026:6142  constructor(string memory name_, string memory symbol_) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/WVLTToken.sol\":6093:6106  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"contracts/WVLTToken.sol\":6093:6098  _name */\n  0x03\n  swap1\n    /* \"contracts/WVLTToken.sol\":6093:6106  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/WVLTToken.sol\":6117:6134  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"contracts/WVLTToken.sol\":6117:6124  _symbol */\n  0x04\n  swap1\n    /* \"contracts/WVLTToken.sol\":6117:6134  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/WVLTToken.sol\":6026:6142  constructor(string memory name_, string memory symbol_) {\r... */\n  pop\n  pop\n    /* \"contracts/WVLTToken.sol\":5432:16576  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_24:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_36:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_11:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_27:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_21:\n    /* \"contracts/WVLTToken.sol\":5432:16576  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/WVLTToken.sol\":5432:16576  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/WVLTToken.sol\":6212:6312  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WVLTToken.sol\":8520:8730  function approve(address spender, uint256 amount)\r... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1405:1419   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1398:1420   */\n      iszero\n        /* \"#utility.yul\":1380:1421   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1368:1370   */\n      0x20\n        /* \"#utility.yul\":1353:1371   */\n      add\n        /* \"contracts/WVLTToken.sol\":8520:8730  function approve(address spender, uint256 amount)\r... */\n      tag_17\n        /* \"#utility.yul\":1240:1427   */\n      jump\n        /* \"contracts/WVLTToken.sol\":7332:7440  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_5:\n        /* \"contracts/WVLTToken.sol\":7420:7432  _totalSupply */\n      sload(0x02)\n        /* \"contracts/WVLTToken.sol\":7332:7440  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":5020:5045   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5008:5010   */\n      0x20\n        /* \"#utility.yul\":4993:5011   */\n      add\n        /* \"contracts/WVLTToken.sol\":7332:7440  function totalSupply() public view virtual override returns (uint256) {\r... */\n      tag_17\n        /* \"#utility.yul\":4874:5051   */\n      jump\n        /* \"contracts/WVLTToken.sol\":9212:9741  function transferFrom(\r... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"contracts/WVLTToken.sol\":7174:7267  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_7:\n      mload(0x40)\n        /* \"contracts/WVLTToken.sol\":7257:7259  18 */\n      0x12\n        /* \"#utility.yul\":5198:5234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5186:5188   */\n      0x20\n        /* \"#utility.yul\":5171:5189   */\n      add\n        /* \"contracts/WVLTToken.sol\":7174:7267  function decimals() public view virtual override returns (uint8) {\r... */\n      tag_17\n        /* \"#utility.yul\":5056:5240   */\n      jump\n        /* \"contracts/WVLTToken.sol\":10150:10447  function increaseAllowance(address spender, uint256 addedValue)\r... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"contracts/WVLTToken.sol\":7503:7680  function balanceOf(address account)\r... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":7654:7672  _balances[account] */\n      and\n        /* \"contracts/WVLTToken.sol\":7622:7629  uint256 */\n      0x00\n        /* \"contracts/WVLTToken.sol\":7654:7672  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/WVLTToken.sol\":7503:7680  function balanceOf(address account)\r... */\n      jump\n        /* \"contracts/WVLTToken.sol\":6431:6535  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"contracts/WVLTToken.sol\":10950:11432  function decreaseAllowance(address spender, uint256 subtractedValue)\r... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"contracts/WVLTToken.sol\":7893:8109  function transfer(address recipient, uint256 amount)\r... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"contracts/WVLTToken.sol\":8172:8373  function allowance(address owner, address spender)\r... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":8338:8356  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/WVLTToken.sol\":8306:8313  uint256 */\n      0x00\n        /* \"contracts/WVLTToken.sol\":8338:8356  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WVLTToken.sol\":8338:8349  _allowances */\n      0x01\n        /* \"contracts/WVLTToken.sol\":8338:8356  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/WVLTToken.sol\":8338:8365  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/WVLTToken.sol\":8172:8373  function allowance(address owner, address spender)\r... */\n      jump\n        /* \"contracts/WVLTToken.sol\":6212:6312  function name() public view virtual override returns (string memory) {\r... */\n    tag_16:\n        /* \"contracts/WVLTToken.sol\":6266:6279  string memory */\n      0x60\n        /* \"contracts/WVLTToken.sol\":6299:6304  _name */\n      0x03\n        /* \"contracts/WVLTToken.sol\":6292:6304  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/WVLTToken.sol\":6212:6312  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/WVLTToken.sol\":8520:8730  function approve(address spender, uint256 amount)\r... */\n    tag_22:\n        /* \"contracts/WVLTToken.sol\":8639:8643  bool */\n      0x00\n        /* \"contracts/WVLTToken.sol\":8661:8700  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"contracts/WVLTToken.sol\":4073:4083  msg.sender */\n      caller\n        /* \"contracts/WVLTToken.sol\":8684:8691  spender */\n      dup5\n        /* \"contracts/WVLTToken.sol\":8693:8699  amount */\n      dup5\n        /* \"contracts/WVLTToken.sol\":8661:8669  _approve */\n      tag_74\n        /* \"contracts/WVLTToken.sol\":8661:8700  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"contracts/WVLTToken.sol\":8718:8722  true */\n      0x01\n        /* \"contracts/WVLTToken.sol\":8520:8730  function approve(address spender, uint256 amount)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WVLTToken.sol\":9212:9741  function transferFrom(\r... */\n    tag_32:\n        /* \"contracts/WVLTToken.sol\":9352:9356  bool */\n      0x00\n        /* \"contracts/WVLTToken.sol\":9369:9405  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \"contracts/WVLTToken.sol\":9379:9385  sender */\n      dup5\n        /* \"contracts/WVLTToken.sol\":9387:9396  recipient */\n      dup5\n        /* \"contracts/WVLTToken.sol\":9398:9404  amount */\n      dup5\n        /* \"contracts/WVLTToken.sol\":9369:9378  _transfer */\n      tag_78\n        /* \"contracts/WVLTToken.sol\":9369:9405  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":9445:9464  _allowances[sender] */\n      dup5\n      and\n        /* \"contracts/WVLTToken.sol\":9418:9442  uint256 currentAllowance */\n      0x00\n        /* \"contracts/WVLTToken.sol\":9445:9464  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WVLTToken.sol\":9445:9456  _allowances */\n      0x01\n        /* \"contracts/WVLTToken.sol\":9445:9464  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/WVLTToken.sol\":4073:4083  msg.sender */\n      caller\n        /* \"contracts/WVLTToken.sol\":9445:9478  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/WVLTToken.sol\":9511:9537  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/WVLTToken.sol\":9489:9605  require(\r... */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3450:3452   */\n      0x20\n        /* \"contracts/WVLTToken.sol\":9489:9605  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3432:3453   */\n      mstore\n        /* \"#utility.yul\":3489:3491   */\n      0x28\n        /* \"#utility.yul\":3469:3487   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3462:3492   */\n      mstore\n        /* \"#utility.yul\":3528:3562   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3508:3526   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3501:3563   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":3579:3597   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3572:3610   */\n      mstore\n        /* \"#utility.yul\":3627:3646   */\n      0x84\n      add\n        /* \"contracts/WVLTToken.sol\":9489:9605  require(\r... */\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"contracts/WVLTToken.sol\":9641:9698  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_83\n        /* \"contracts/WVLTToken.sol\":9650:9656  sender */\n      dup6\n        /* \"contracts/WVLTToken.sol\":4073:4083  msg.sender */\n      caller\n        /* \"contracts/WVLTToken.sol\":9691:9697  amount */\n      dup6\n        /* \"contracts/WVLTToken.sol\":9672:9688  currentAllowance */\n      dup5\n        /* \"contracts/WVLTToken.sol\":9672:9697  currentAllowance - amount */\n      sub\n        /* \"contracts/WVLTToken.sol\":9641:9649  _approve */\n      tag_74\n        /* \"contracts/WVLTToken.sol\":9641:9698  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \"contracts/WVLTToken.sol\":9729:9733  true */\n      0x01\n      swap5\n        /* \"contracts/WVLTToken.sol\":9212:9741  function transferFrom(\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WVLTToken.sol\":10150:10447  function increaseAllowance(address spender, uint256 addedValue)\r... */\n    tag_40:\n        /* \"contracts/WVLTToken.sol\":4073:4083  msg.sender */\n      caller\n        /* \"contracts/WVLTToken.sol\":10265:10269  bool */\n      0x00\n        /* \"contracts/WVLTToken.sol\":10359:10384  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/WVLTToken.sol\":10359:10370  _allowances */\n      0x01\n        /* \"contracts/WVLTToken.sol\":10359:10384  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":10359:10393  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/WVLTToken.sol\":10265:10269  bool */\n      swap1\n      swap2\n        /* \"contracts/WVLTToken.sol\":10287:10417  _approve(\r... */\n      tag_71\n      swap2\n        /* \"contracts/WVLTToken.sol\":10337:10344  spender */\n      dup6\n      swap1\n        /* \"contracts/WVLTToken.sol\":10359:10406  _allowances[_msgSender()][spender] + addedValue */\n      tag_90\n      swap1\n        /* \"contracts/WVLTToken.sol\":10396:10406  addedValue */\n      dup7\n      swap1\n        /* \"contracts/WVLTToken.sol\":10359:10406  _allowances[_msgSender()][spender] + addedValue */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"contracts/WVLTToken.sol\":10287:10295  _approve */\n      tag_74\n        /* \"contracts/WVLTToken.sol\":10287:10417  _approve(\r... */\n      jump\t// in\n        /* \"contracts/WVLTToken.sol\":6431:6535  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_48:\n        /* \"contracts/WVLTToken.sol\":6487:6500  string memory */\n      0x60\n        /* \"contracts/WVLTToken.sol\":6520:6527  _symbol */\n      0x04\n        /* \"contracts/WVLTToken.sol\":6513:6527  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"contracts/WVLTToken.sol\":10950:11432  function decreaseAllowance(address spender, uint256 subtractedValue)\r... */\n    tag_52:\n        /* \"contracts/WVLTToken.sol\":4073:4083  msg.sender */\n      caller\n        /* \"contracts/WVLTToken.sol\":11070:11074  bool */\n      0x00\n        /* \"contracts/WVLTToken.sol\":11119:11144  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WVLTToken.sol\":11119:11130  _allowances */\n      0x01\n        /* \"contracts/WVLTToken.sol\":11119:11144  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":11119:11153  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/WVLTToken.sol\":11186:11221  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/WVLTToken.sol\":11164:11286  require(\r... */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4670:4672   */\n      0x20\n        /* \"contracts/WVLTToken.sol\":11164:11286  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4652:4673   */\n      mstore\n        /* \"#utility.yul\":4709:4711   */\n      0x25\n        /* \"#utility.yul\":4689:4707   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4682:4712   */\n      mstore\n        /* \"#utility.yul\":4748:4782   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4728:4746   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4721:4783   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4799:4817   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4792:4827   */\n      mstore\n        /* \"#utility.yul\":4844:4863   */\n      0x84\n      add\n        /* \"contracts/WVLTToken.sol\":11164:11286  require(\r... */\n      tag_81\n        /* \"#utility.yul\":4468:4869   */\n      jump\n        /* \"contracts/WVLTToken.sol\":11164:11286  require(\r... */\n    tag_101:\n        /* \"contracts/WVLTToken.sol\":11322:11389  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_104\n        /* \"contracts/WVLTToken.sol\":4073:4083  msg.sender */\n      caller\n        /* \"contracts/WVLTToken.sol\":11345:11352  spender */\n      dup6\n        /* \"contracts/WVLTToken.sol\":11373:11388  subtractedValue */\n      dup6\n        /* \"contracts/WVLTToken.sol\":11354:11370  currentAllowance */\n      dup5\n        /* \"contracts/WVLTToken.sol\":11354:11388  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/WVLTToken.sol\":11322:11330  _approve */\n      tag_74\n        /* \"contracts/WVLTToken.sol\":11322:11389  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"contracts/WVLTToken.sol\":11420:11424  true */\n      0x01\n      swap4\n        /* \"contracts/WVLTToken.sol\":10950:11432  function decreaseAllowance(address spender, uint256 subtractedValue)\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WVLTToken.sol\":7893:8109  function transfer(address recipient, uint256 amount)\r... */\n    tag_56:\n        /* \"contracts/WVLTToken.sol\":8015:8019  bool */\n      0x00\n        /* \"contracts/WVLTToken.sol\":8037:8079  _transfer(_msgSender(), recipient, amount) */\n      tag_71\n        /* \"contracts/WVLTToken.sol\":4073:4083  msg.sender */\n      caller\n        /* \"contracts/WVLTToken.sol\":8061:8070  recipient */\n      dup5\n        /* \"contracts/WVLTToken.sol\":8072:8078  amount */\n      dup5\n        /* \"contracts/WVLTToken.sol\":8037:8046  _transfer */\n      tag_78\n        /* \"contracts/WVLTToken.sol\":8037:8079  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/WVLTToken.sol\":14740:15120  function _approve(\r... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":14876:14895  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/WVLTToken.sol\":14868:14936  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4265:4267   */\n      0x20\n        /* \"contracts/WVLTToken.sol\":14868:14936  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4247:4268   */\n      mstore\n        /* \"#utility.yul\":4304:4306   */\n      0x24\n        /* \"#utility.yul\":4284:4302   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4277:4307   */\n      mstore\n        /* \"#utility.yul\":4343:4377   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4323:4341   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4316:4378   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4394:4412   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4387:4421   */\n      mstore\n        /* \"#utility.yul\":4438:4457   */\n      0x84\n      add\n        /* \"contracts/WVLTToken.sol\":14868:14936  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4063:4463   */\n      jump\n        /* \"contracts/WVLTToken.sol\":14868:14936  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":14955:14976  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/WVLTToken.sol\":14947:15015  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2640:2642   */\n      0x20\n        /* \"contracts/WVLTToken.sol\":14947:15015  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2622:2643   */\n      mstore\n        /* \"#utility.yul\":2679:2681   */\n      0x22\n        /* \"#utility.yul\":2659:2677   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2652:2682   */\n      mstore\n        /* \"#utility.yul\":2718:2752   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2698:2716   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2691:2753   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2769:2787   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2762:2794   */\n      mstore\n        /* \"#utility.yul\":2811:2830   */\n      0x84\n      add\n        /* \"contracts/WVLTToken.sol\":14947:15015  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":2438:2836   */\n      jump\n        /* \"contracts/WVLTToken.sol\":14947:15015  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":15028:15046  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/WVLTToken.sol\":15028:15039  _allowances */\n      0x01\n        /* \"contracts/WVLTToken.sol\":15028:15046  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/WVLTToken.sol\":15028:15055  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/WVLTToken.sol\":15028:15064  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/WVLTToken.sol\":15080:15112  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":5020:5045   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/WVLTToken.sol\":15080:15112  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4993:5011   */\n      add\n        /* \"contracts/WVLTToken.sol\":15080:15112  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/WVLTToken.sol\":14740:15120  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WVLTToken.sol\":11922:12692  function _transfer(\r... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":12062:12082  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/WVLTToken.sol\":12054:12124  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3859:3861   */\n      0x20\n        /* \"contracts/WVLTToken.sol\":12054:12124  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3841:3862   */\n      mstore\n        /* \"#utility.yul\":3898:3900   */\n      0x25\n        /* \"#utility.yul\":3878:3896   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3871:3901   */\n      mstore\n        /* \"#utility.yul\":3937:3971   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3917:3935   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3910:3972   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3988:4006   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3981:4016   */\n      mstore\n        /* \"#utility.yul\":4033:4052   */\n      0x84\n      add\n        /* \"contracts/WVLTToken.sol\":12054:12124  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":3657:4058   */\n      jump\n        /* \"contracts/WVLTToken.sol\":12054:12124  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":12143:12166  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/WVLTToken.sol\":12135:12206  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2236:2238   */\n      0x20\n        /* \"contracts/WVLTToken.sol\":12135:12206  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2218:2239   */\n      mstore\n        /* \"#utility.yul\":2275:2277   */\n      0x23\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2248:2278   */\n      mstore\n        /* \"#utility.yul\":2314:2348   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2294:2312   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2287:2349   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2365:2383   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2358:2391   */\n      mstore\n        /* \"#utility.yul\":2408:2427   */\n      0x84\n      add\n        /* \"contracts/WVLTToken.sol\":12135:12206  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":2034:2433   */\n      jump\n        /* \"contracts/WVLTToken.sol\":12135:12206  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":12303:12320  _balances[sender] */\n      dup4\n      and\n        /* \"contracts/WVLTToken.sol\":12279:12300  uint256 senderBalance */\n      0x00\n        /* \"contracts/WVLTToken.sol\":12303:12320  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/WVLTToken.sol\":12353:12376  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/WVLTToken.sol\":12331:12442  require(\r... */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3043:3045   */\n      0x20\n        /* \"contracts/WVLTToken.sol\":12331:12442  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3025:3046   */\n      mstore\n        /* \"#utility.yul\":3082:3084   */\n      0x26\n        /* \"#utility.yul\":3062:3080   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3055:3085   */\n      mstore\n        /* \"#utility.yul\":3121:3155   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3101:3119   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3094:3156   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3172:3190   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3165:3201   */\n      mstore\n        /* \"#utility.yul\":3218:3237   */\n      0x84\n      add\n        /* \"contracts/WVLTToken.sol\":12331:12442  require(\r... */\n      tag_81\n        /* \"#utility.yul\":2841:3243   */\n      jump\n        /* \"contracts/WVLTToken.sol\":12331:12442  require(\r... */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":12478:12495  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"contracts/WVLTToken.sol\":12478:12487  _balances */\n      0x00\n        /* \"contracts/WVLTToken.sol\":12478:12495  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/WVLTToken.sol\":12498:12520  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"contracts/WVLTToken.sol\":12478:12520  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/WVLTToken.sol\":12542:12562  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/WVLTToken.sol\":12542:12572  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"contracts/WVLTToken.sol\":12514:12520  amount */\n      dup5\n      swap3\n        /* \"contracts/WVLTToken.sol\":12478:12487  _balances */\n      swap1\n        /* \"contracts/WVLTToken.sol\":12542:12572  _balances[recipient] += amount */\n      tag_131\n      swap1\n        /* \"contracts/WVLTToken.sol\":12514:12520  amount */\n      dup5\n      swap1\n        /* \"contracts/WVLTToken.sol\":12542:12572  _balances[recipient] += amount */\n      tag_91\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/WVLTToken.sol\":12607:12616  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":12590:12625  Transfer(sender, recipient, amount) */\n      and\n        /* \"contracts/WVLTToken.sol\":12599:12605  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":12590:12625  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/WVLTToken.sol\":12618:12624  amount */\n      dup5\n        /* \"contracts/WVLTToken.sol\":12590:12625  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_132\n      swap2\n        /* \"#utility.yul\":5020:5045   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5008:5010   */\n      0x20\n        /* \"#utility.yul\":4993:5011   */\n      add\n      swap1\n        /* \"#utility.yul\":4874:5051   */\n      jump\n        /* \"contracts/WVLTToken.sol\":12590:12625  Transfer(sender, recipient, amount) */\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/WVLTToken.sol\":12043:12692  {\r... */\n      pop\n        /* \"contracts/WVLTToken.sol\":11922:12692  function _transfer(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_138:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_140\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_140:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_44:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_142:\n        /* \"#utility.yul\":343:372   */\n      tag_143\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_138\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_60:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_145:\n        /* \"#utility.yul\":551:580   */\n      tag_146\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_138\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_147\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_138\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_31:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_149:\n        /* \"#utility.yul\":833:862   */\n      tag_150\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_138\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_151\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_138\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_21:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_153:\n        /* \"#utility.yul\":1149:1178   */\n      tag_154\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_138\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1432:2029   */\n    tag_18:\n        /* \"#utility.yul\":1544:1548   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x20\n        /* \"#utility.yul\":1602:1604   */\n      dup1\n        /* \"#utility.yul\":1591:1600   */\n      dup4\n        /* \"#utility.yul\":1584:1605   */\n      mstore\n        /* \"#utility.yul\":1634:1640   */\n      dup4\n        /* \"#utility.yul\":1628:1641   */\n      mload\n        /* \"#utility.yul\":1677:1683   */\n      dup1\n        /* \"#utility.yul\":1672:1674   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup6\n        /* \"#utility.yul\":1657:1675   */\n      add\n        /* \"#utility.yul\":1650:1684   */\n      mstore\n        /* \"#utility.yul\":1702:1703   */\n      0x00\n        /* \"#utility.yul\":1712:1852   */\n    tag_157:\n        /* \"#utility.yul\":1726:1732   */\n      dup2\n        /* \"#utility.yul\":1723:1724   */\n      dup2\n        /* \"#utility.yul\":1720:1733   */\n      lt\n        /* \"#utility.yul\":1712:1852   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1821:1835   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1817:1840   */\n      dup4\n      add\n        /* \"#utility.yul\":1811:1841   */\n      mload\n        /* \"#utility.yul\":1787:1804   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1806:1808   */\n      0x40\n        /* \"#utility.yul\":1783:1809   */\n      add\n        /* \"#utility.yul\":1776:1842   */\n      mstore\n        /* \"#utility.yul\":1741:1751   */\n      dup3\n      add\n        /* \"#utility.yul\":1712:1852   */\n      jump(tag_157)\n    tag_159:\n        /* \"#utility.yul\":1870:1876   */\n      dup2\n        /* \"#utility.yul\":1867:1868   */\n      dup2\n        /* \"#utility.yul\":1864:1877   */\n      gt\n        /* \"#utility.yul\":1861:1952   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1935:1937   */\n      0x40\n        /* \"#utility.yul\":1926:1932   */\n      dup4\n        /* \"#utility.yul\":1915:1924   */\n      dup8\n        /* \"#utility.yul\":1911:1933   */\n      add\n        /* \"#utility.yul\":1907:1938   */\n      add\n        /* \"#utility.yul\":1900:1942   */\n      mstore\n        /* \"#utility.yul\":1861:1952   */\n    tag_160:\n      pop\n        /* \"#utility.yul\":2013:2015   */\n      0x1f\n        /* \"#utility.yul\":1992:2007   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1988:2017   */\n      and\n        /* \"#utility.yul\":1973:2018   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2020:2022   */\n      0x40\n        /* \"#utility.yul\":1969:2023   */\n      add\n      swap4\n        /* \"#utility.yul\":1432:2029   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5245:5470   */\n    tag_91:\n        /* \"#utility.yul\":5285:5288   */\n      0x00\n        /* \"#utility.yul\":5316:5317   */\n      dup3\n        /* \"#utility.yul\":5312:5318   */\n      not\n        /* \"#utility.yul\":5309:5310   */\n      dup3\n        /* \"#utility.yul\":5306:5319   */\n      gt\n        /* \"#utility.yul\":5303:5439   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":5361:5371   */\n      0x4e487b71\n        /* \"#utility.yul\":5356:5359   */\n      0xe0\n        /* \"#utility.yul\":5352:5372   */\n      shl\n        /* \"#utility.yul\":5349:5350   */\n      0x00\n        /* \"#utility.yul\":5342:5373   */\n      mstore\n        /* \"#utility.yul\":5396:5400   */\n      0x11\n        /* \"#utility.yul\":5393:5394   */\n      0x04\n        /* \"#utility.yul\":5386:5401   */\n      mstore\n        /* \"#utility.yul\":5424:5428   */\n      0x24\n        /* \"#utility.yul\":5421:5422   */\n      0x00\n        /* \"#utility.yul\":5414:5429   */\n      revert\n        /* \"#utility.yul\":5303:5439   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":5455:5464   */\n      add\n      swap1\n        /* \"#utility.yul\":5245:5470   */\n      jump\t// out\n        /* \"#utility.yul\":5475:5855   */\n    tag_65:\n        /* \"#utility.yul\":5554:5555   */\n      0x01\n        /* \"#utility.yul\":5550:5562   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5597:5609   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5618:5679   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":5672:5676   */\n      0x7f\n        /* \"#utility.yul\":5664:5670   */\n      dup3\n        /* \"#utility.yul\":5660:5677   */\n      and\n        /* \"#utility.yul\":5650:5677   */\n      swap2\n      pop\n        /* \"#utility.yul\":5618:5679   */\n    tag_173:\n        /* \"#utility.yul\":5725:5727   */\n      0x20\n        /* \"#utility.yul\":5717:5723   */\n      dup3\n        /* \"#utility.yul\":5714:5728   */\n      lt\n        /* \"#utility.yul\":5694:5712   */\n      dup2\n        /* \"#utility.yul\":5691:5729   */\n      eq\n        /* \"#utility.yul\":5688:5849   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":5771:5781   */\n      0x4e487b71\n        /* \"#utility.yul\":5766:5769   */\n      0xe0\n        /* \"#utility.yul\":5762:5782   */\n      shl\n        /* \"#utility.yul\":5759:5760   */\n      0x00\n        /* \"#utility.yul\":5752:5783   */\n      mstore\n        /* \"#utility.yul\":5806:5810   */\n      0x22\n        /* \"#utility.yul\":5803:5804   */\n      0x04\n        /* \"#utility.yul\":5796:5811   */\n      mstore\n        /* \"#utility.yul\":5834:5838   */\n      0x24\n        /* \"#utility.yul\":5831:5832   */\n      0x00\n        /* \"#utility.yul\":5824:5839   */\n      revert\n        /* \"#utility.yul\":5688:5849   */\n    tag_174:\n      pop\n        /* \"#utility.yul\":5475:5855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206ed7014dad19eb3d378070289b6ae2f2c61d8f6bf5a10bf2c9358fc004261e2164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:1"
															},
															"nodeType": "YulIf",
															"src": "88:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:1"
															},
															"nodeType": "YulIf",
															"src": "221:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:1"
															},
															"nodeType": "YulIf",
															"src": "404:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:1"
															},
															"nodeType": "YulIf",
															"src": "566:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:1",
																"statements": []
															},
															"src": "647:133:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:1"
															},
															"nodeType": "YulIf",
															"src": "789:80:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:1",
														"type": ""
													}
												],
												"src": "14:885:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:1"
															},
															"nodeType": "YulIf",
															"src": "1032:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:1"
															},
															"nodeType": "YulIf",
															"src": "1169:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:1"
															},
															"nodeType": "YulIf",
															"src": "1342:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:1",
														"type": ""
													}
												],
												"src": "904:562:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:1"
															},
															"nodeType": "YulIf",
															"src": "1614:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:1"
															},
															"nodeType": "YulIf",
															"src": "1684:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:1",
														"type": ""
													}
												],
												"src": "1471:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b5638038062000b568339810160408190526200003491620001c5565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6108c480620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107d8565b60405180910390f35b6100df6100da3660046107ae565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610772565b61026e565b604051601281526020016100c3565b6100df6101313660046107ae565b61031d565b6100f361014436600461071d565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df6101753660046107ae565b610368565b6100df6101883660046107ae565b610401565b6100f361019b36600461073f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610853565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610853565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026591859061035490869061082d565b61040e565b6060600480546101d590610853565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a790849061082d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461071857600080fd5b919050565b60006020828403121561072f57600080fd5b61073882610701565b9392505050565b6000806040838503121561075257600080fd5b61075b83610701565b915061076960208401610701565b90509250929050565b60008060006060848603121561078757600080fd5b61079084610701565b925061079e60208501610701565b9150604084013590509250925092565b600080604083850312156107c157600080fd5b6107ca83610701565b946020939093013593505050565b600060208083528351808285015260005b81811015610805578581018301518582016040015282016107e9565b81811115610817576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561084e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061086757607f821691505b6020821081141561088857634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212206ed7014dad19eb3d378070289b6ae2f2c61d8f6bf5a10bf2c9358fc004261e2164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB56 CODESIZE SUB DUP1 PUSH3 0xB56 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8C4 DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x738 DUP3 PUSH2 0x701 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75B DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH2 0x769 PUSH1 0x20 DUP5 ADD PUSH2 0x701 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x790 DUP5 PUSH2 0x701 JUMP JUMPDEST SWAP3 POP PUSH2 0x79E PUSH1 0x20 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CA DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7E9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x867 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xD7014DAD19EB3D378070289B6AE2F2 0xC6 SAR DUP16 PUSH12 0xF5A10BF2C9358FC004261E21 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "5432:11144:0:-:0;;;6026:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6093:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;6117:17:0;;;;:7;;:17;;;;;:::i;:::-;;6026:116;;5432:11144;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5432:11144:0;;;-1:-1:-1;5432:11144:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:1;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:1;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:1;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:1:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:1;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;5432:11144:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_662": {
									"entryPoint": null,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_640": {
									"entryPoint": 1038,
									"id": 640,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_651": {
									"entryPoint": null,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_467": {
									"entryPoint": 1330,
									"id": 467,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_255": {
									"entryPoint": null,
									"id": 255,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_276": {
									"entryPoint": 600,
									"id": 276,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_216": {
									"entryPoint": null,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_192": {
									"entryPoint": null,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_390": {
									"entryPoint": 872,
									"id": 390,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_351": {
									"entryPoint": 797,
									"id": 351,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_172": {
									"entryPoint": 454,
									"id": 172,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_182": {
									"entryPoint": 857,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_324": {
									"entryPoint": 622,
									"id": 324,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_237": {
									"entryPoint": 1025,
									"id": 237,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5857:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:1"
															},
															"nodeType": "YulIf",
															"src": "480:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:1",
														"type": ""
													}
												],
												"src": "383:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:1"
															},
															"nodeType": "YulIf",
															"src": "762:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:1",
														"type": ""
													}
												],
												"src": "648:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:1"
															},
															"nodeType": "YulIf",
															"src": "1078:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:1",
														"type": ""
													}
												],
												"src": "981:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1345:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1357:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1345:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1387:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1412:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1405:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1405:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1398:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1398:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1304:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:1",
														"type": ""
													}
												],
												"src": "1240:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1553:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1563:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1573:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1567:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1591:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1584:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1614:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1634:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1628:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1618:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1661:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1672:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1657:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1677:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1650:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1693:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1702:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1697:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1762:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1791:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1802:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1787:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1787:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1806:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1783:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1783:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1825:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1833:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1821:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1821:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1837:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1817:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1817:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1811:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1811:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1776:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1776:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1723:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1726:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1720:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1734:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1736:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1745:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1748:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1741:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1736:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1716:3:1",
																"statements": []
															},
															"src": "1712:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1886:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1915:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1926:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1911:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1911:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1935:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1907:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1907:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1900:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1900:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1867:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1870:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1864:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:13:1"
															},
															"nodeType": "YulIf",
															"src": "1861:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1996:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2004:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1992:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1992:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2013:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2009:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2009:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1988:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1988:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1973:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1969:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1961:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1522:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1533:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1544:4:1",
														"type": ""
													}
												],
												"src": "1432:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2225:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2259:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2270:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2275:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2248:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2309:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2314:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2287:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2287:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2369:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2380:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2365:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2385:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2358:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2400:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2412:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2423:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2400:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2199:4:1",
														"type": ""
													}
												],
												"src": "2034:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2622:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2663:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2674:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2659:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2659:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2652:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2713:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2698:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2718:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2691:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2691:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2773:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2784:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2769:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2789:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2762:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2803:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2815:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2826:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2803:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2589:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2603:4:1",
														"type": ""
													}
												],
												"src": "2438:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3015:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3032:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3082:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3121:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3094:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3176:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3187:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3172:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3172:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3192:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3165:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3165:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3210:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3222:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3233:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3218:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3218:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3210:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2992:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3006:4:1",
														"type": ""
													}
												],
												"src": "2841:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3422:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3439:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3432:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3432:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3473:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3484:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3469:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3469:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3489:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3462:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3462:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3462:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3512:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3523:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3508:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3508:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3528:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3501:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3501:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3501:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3583:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3594:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3579:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3579:18:1"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3599:10:1",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3572:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3619:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3631:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3642:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3627:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3619:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3399:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3413:4:1",
														"type": ""
													}
												],
												"src": "3248:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3831:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3848:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3859:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3882:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3893:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3878:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3878:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3871:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3871:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3921:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3932:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3917:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3937:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3910:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3910:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3910:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3992:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4003:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3988:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3988:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4008:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3981:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3981:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4025:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4037:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4048:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4033:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4033:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4025:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3808:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3822:4:1",
														"type": ""
													}
												],
												"src": "3657:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4237:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4254:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4265:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4247:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4247:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4288:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4299:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4284:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4284:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4304:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4277:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4277:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4277:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4327:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4338:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4323:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4323:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4343:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4316:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4398:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4409:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4394:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4394:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4414:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4387:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4387:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4430:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4442:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4453:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4438:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4438:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4430:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4214:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4228:4:1",
														"type": ""
													}
												],
												"src": "4063:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4642:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4659:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4670:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4652:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4652:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4693:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4704:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4689:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4689:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4709:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4682:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4682:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4682:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4732:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4743:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4728:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4728:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4748:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4721:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4721:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4721:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4803:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4814:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4799:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4799:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4819:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4792:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4792:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4792:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4836:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4848:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4859:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4844:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4844:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4836:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4619:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4633:4:1",
														"type": ""
													}
												],
												"src": "4468:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4975:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4985:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4997:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5008:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4993:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4993:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4985:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5027:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5038:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5020:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5020:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4944:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4955:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4966:4:1",
														"type": ""
													}
												],
												"src": "4874:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5153:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5163:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5175:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5186:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5171:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5171:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5163:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5205:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5220:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5228:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5216:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5216:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5198:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5198:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5198:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5122:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5133:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5144:4:1",
														"type": ""
													}
												],
												"src": "5056:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5293:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5328:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5349:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5356:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5361:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5352:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5352:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5342:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5342:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5342:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5393:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5396:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5386:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5386:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5386:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5421:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5424:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5414:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5414:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5414:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5309:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5316:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5312:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5312:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5306:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5306:13:1"
															},
															"nodeType": "YulIf",
															"src": "5303:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5448:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5459:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5462:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5455:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5455:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5448:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5276:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5279:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5285:3:1",
														"type": ""
													}
												],
												"src": "5245:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5530:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5540:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5554:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5557:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5550:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5540:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5571:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5601:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5607:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5597:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5597:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5575:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5648:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5650:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5664:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5672:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5660:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5660:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5650:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5628:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5621:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5621:26:1"
															},
															"nodeType": "YulIf",
															"src": "5618:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5738:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5759:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5766:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5771:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5762:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5762:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5752:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5752:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5752:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5803:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5806:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5796:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5796:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5796:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5831:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5834:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5824:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5824:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5824:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5694:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5717:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5725:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5714:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5714:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5691:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5691:38:1"
															},
															"nodeType": "YulIf",
															"src": "5688:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5510:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5519:6:1",
														"type": ""
													}
												],
												"src": "5475:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107d8565b60405180910390f35b6100df6100da3660046107ae565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610772565b61026e565b604051601281526020016100c3565b6100df6101313660046107ae565b61031d565b6100f361014436600461071d565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df6101753660046107ae565b610368565b6100df6101883660046107ae565b610401565b6100f361019b36600461073f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610853565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610853565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026591859061035490869061082d565b61040e565b6060600480546101d590610853565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a790849061082d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461071857600080fd5b919050565b60006020828403121561072f57600080fd5b61073882610701565b9392505050565b6000806040838503121561075257600080fd5b61075b83610701565b915061076960208401610701565b90509250929050565b60008060006060848603121561078757600080fd5b61079084610701565b925061079e60208501610701565b9150604084013590509250925092565b600080604083850312156107c157600080fd5b6107ca83610701565b946020939093013593505050565b600060208083528351808285015260005b81811015610805578581018301518582016040015282016107e9565b81811115610817576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561084e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061086757607f821691505b6020821081141561088857634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212206ed7014dad19eb3d378070289b6ae2f2c61d8f6bf5a10bf2c9358fc004261e2164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x738 DUP3 PUSH2 0x701 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75B DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH2 0x769 PUSH1 0x20 DUP5 ADD PUSH2 0x701 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x790 DUP5 PUSH2 0x701 JUMP JUMPDEST SWAP3 POP PUSH2 0x79E PUSH1 0x20 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CA DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7E9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x867 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xD7014DAD19EB3D378070289B6AE2F2 0xC6 SAR DUP16 PUSH12 0xF5A10BF2C9358FC004261E21 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "5432:11144:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6212:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8520:210;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:1;;1398:22;1380:41;;1368:2;1353:18;8520:210:0;1240:187:1;7332:108:0;7420:12;;7332:108;;;5020:25:1;;;5008:2;4993:18;7332:108:0;4874:177:1;9212:529:0;;;;;;:::i;:::-;;:::i;7174:93::-;;;7257:2;5198:36:1;;5186:2;5171:18;7174:93:0;5056:184:1;10150:297:0;;;;;;:::i;:::-;;:::i;7503:177::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7654:18:0;7622:7;7654:18;;;;;;;;;;;;7503:177;6431:104;;;:::i;10950:482::-;;;;;;:::i;:::-;;:::i;7893:216::-;;;;;;:::i;:::-;;:::i;8172:201::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8338:18:0;;;8306:7;8338:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8172:201;6212:100;6266:13;6299:5;6292:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6212:100;:::o;8520:210::-;8639:4;8661:39;4073:10;8684:7;8693:6;8661:8;:39::i;:::-;-1:-1:-1;8718:4:0;8520:210;;;;:::o;9212:529::-;9352:4;9369:36;9379:6;9387:9;9398:6;9369:9;:36::i;:::-;-1:-1:-1;;;;;9445:19:0;;9418:24;9445:19;;;:11;:19;;;;;;;;4073:10;9445:33;;;;;;;;9511:26;;;;9489:116;;;;-1:-1:-1;;;9489:116:0;;3450:2:1;9489:116:0;;;3432:21:1;3489:2;3469:18;;;3462:30;3528:34;3508:18;;;3501:62;-1:-1:-1;;;3579:18:1;;;3572:38;3627:19;;9489:116:0;;;;;;;;;9641:57;9650:6;4073:10;9691:6;9672:16;:25;9641:8;:57::i;:::-;-1:-1:-1;9729:4:0;;9212:529;-1:-1:-1;;;;9212:529:0:o;10150:297::-;4073:10;10265:4;10359:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10359:34:0;;;;;;;;;;10265:4;;10287:130;;10337:7;;10359:47;;10396:10;;10359:47;:::i;:::-;10287:8;:130::i;6431:104::-;6487:13;6520:7;6513:14;;;;;:::i;10950:482::-;4073:10;11070:4;11119:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;11119:34:0;;;;;;;;;;11186:35;;;;11164:122;;;;-1:-1:-1;;;11164:122:0;;4670:2:1;11164:122:0;;;4652:21:1;4709:2;4689:18;;;4682:30;4748:34;4728:18;;;4721:62;-1:-1:-1;;;4799:18:1;;;4792:35;4844:19;;11164:122:0;4468:401:1;11164:122:0;11322:67;4073:10;11345:7;11373:15;11354:16;:34;11322:8;:67::i;:::-;-1:-1:-1;11420:4:0;;10950:482;-1:-1:-1;;;10950:482:0:o;7893:216::-;8015:4;8037:42;4073:10;8061:9;8072:6;8037:9;:42::i;14740:380::-;-1:-1:-1;;;;;14876:19:0;;14868:68;;;;-1:-1:-1;;;14868:68:0;;4265:2:1;14868:68:0;;;4247:21:1;4304:2;4284:18;;;4277:30;4343:34;4323:18;;;4316:62;-1:-1:-1;;;4394:18:1;;;4387:34;4438:19;;14868:68:0;4063:400:1;14868:68:0;-1:-1:-1;;;;;14955:21:0;;14947:68;;;;-1:-1:-1;;;14947:68:0;;2640:2:1;14947:68:0;;;2622:21:1;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:1;;;2762:32;2811:19;;14947:68:0;2438:398:1;14947:68:0;-1:-1:-1;;;;;15028:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15080:32;;5020:25:1;;;15080:32:0;;4993:18:1;15080:32:0;;;;;;;14740:380;;;:::o;11922:770::-;-1:-1:-1;;;;;12062:20:0;;12054:70;;;;-1:-1:-1;;;12054:70:0;;3859:2:1;12054:70:0;;;3841:21:1;3898:2;3878:18;;;3871:30;3937:34;3917:18;;;3910:62;-1:-1:-1;;;3988:18:1;;;3981:35;4033:19;;12054:70:0;3657:401:1;12054:70:0;-1:-1:-1;;;;;12143:23:0;;12135:71;;;;-1:-1:-1;;;12135:71:0;;2236:2:1;12135:71:0;;;2218:21:1;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:1;;;2358:33;2408:19;;12135:71:0;2034:399:1;12135:71:0;-1:-1:-1;;;;;12303:17:0;;12279:21;12303:17;;;;;;;;;;;12353:23;;;;12331:111;;;;-1:-1:-1;;;12331:111:0;;3043:2:1;12331:111:0;;;3025:21:1;3082:2;3062:18;;;3055:30;3121:34;3101:18;;;3094:62;-1:-1:-1;;;3172:18:1;;;3165:36;3218:19;;12331:111:0;2841:402:1;12331:111:0;-1:-1:-1;;;;;12478:17:0;;;:9;:17;;;;;;;;;;;12498:22;;;12478:42;;12542:20;;;;;;;;:30;;12514:6;;12478:9;12542:30;;12514:6;;12542:30;:::i;:::-;;;;;;;;12607:9;-1:-1:-1;;;;;12590:35:0;12599:6;-1:-1:-1;;;;;12590:35:0;;12618:6;12590:35;;;;5020:25:1;;5008:2;4993:18;;4874:177;12590:35:0;;;;;;;;12043:649;11922:770;;;:::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:1:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:1:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:91;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:91;-1:-1:-1;2013:2:1;1992:15;-1:-1:-1;;1988:29:1;1973:45;;;;2020:2;1969:54;;1432:597;-1:-1:-1;;;1432:597:1:o;5245:225::-;5285:3;5316:1;5312:6;5309:1;5306:13;5303:136;;;5361:10;5356:3;5352:20;5349:1;5342:31;5396:4;5393:1;5386:15;5424:4;5421:1;5414:15;5303:136;-1:-1:-1;5455:9:1;;5245:225::o;5475:380::-;5554:1;5550:12;;;;5597;;;5618:61;;5672:4;5664:6;5660:17;5650:27;;5618:61;5725:2;5717:6;5714:14;5694:18;5691:38;5688:161;;;5771:10;5766:3;5762:20;5759:1;5752:31;5806:4;5803:1;5796:15;5834:4;5831:1;5824:15;5688:161;;5475:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "448800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24619",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "26954",
								"increaseAllowance(address,uint256)": "26934",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51253",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6093,
									"end": 6106,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6093,
									"end": 6106,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6093,
									"end": 6106,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6093,
									"end": 6106,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6093,
									"end": 6098,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6093,
									"end": 6098,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6093,
									"end": 6106,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6093,
									"end": 6106,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6093,
									"end": 6106,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6093,
									"end": 6106,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6093,
									"end": 6106,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6093,
									"end": 6106,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6093,
									"end": 6106,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6093,
									"end": 6106,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6117,
									"end": 6124,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6117,
									"end": 6124,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 16576,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206ed7014dad19eb3d378070289b6ae2f2c61d8f6bf5a10bf2c9358fc004261e2164736f6c63430008070033",
									".code": [
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5432,
											"end": 16576,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1240,
											"end": 1427,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7332,
											"end": 7440,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7332,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7432,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7420,
											"end": 7432,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7440,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7332,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7332,
											"end": 7440,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7332,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4874,
											"end": 5051,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7174,
											"end": 7267,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7174,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7174,
											"end": 7267,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7257,
											"end": 7259,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5198,
											"end": 5234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5198,
											"end": 5234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5188,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5171,
											"end": 5189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7174,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5056,
											"end": 5240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6535,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6431,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6431,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6431,
											"end": 6535,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8306,
											"end": 8313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8349,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6279,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6299,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8661,
											"end": 8700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4073,
											"end": 4083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8691,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8693,
											"end": 8699,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8661,
											"end": 8669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8661,
											"end": 8700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8661,
											"end": 8700,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8661,
											"end": 8700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8718,
											"end": 8722,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9369,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9379,
											"end": 9385,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9369,
											"end": 9405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9369,
											"end": 9405,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9369,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9418,
											"end": 9442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9456,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4073,
											"end": 4083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9478,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9478,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9478,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9537,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9537,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3452,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3491,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3627,
											"end": 3646,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3627,
											"end": 3646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9641,
											"end": 9698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9650,
											"end": 9656,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4073,
											"end": 4083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9691,
											"end": 9697,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9672,
											"end": 9688,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9672,
											"end": 9697,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9641,
											"end": 9649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 9641,
											"end": 9698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9641,
											"end": 9698,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9641,
											"end": 9698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9729,
											"end": 9733,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9729,
											"end": 9733,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4073,
											"end": 4083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10265,
											"end": 10269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10370,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10359,
											"end": 10393,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10393,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10393,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10265,
											"end": 10269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10265,
											"end": 10269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10287,
											"end": 10417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 10287,
											"end": 10417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10337,
											"end": 10344,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10337,
											"end": 10344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 10359,
											"end": 10406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10396,
											"end": 10406,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10396,
											"end": 10406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 10359,
											"end": 10406,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10359,
											"end": 10406,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 10359,
											"end": 10406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10287,
											"end": 10295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10287,
											"end": 10417,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6535,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6431,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6487,
											"end": 6500,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6520,
											"end": 6527,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4073,
											"end": 4083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11070,
											"end": 11074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11130,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11119,
											"end": 11153,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11153,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11153,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11153,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11186,
											"end": 11221,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11186,
											"end": 11221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11186,
											"end": 11221,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11186,
											"end": 11221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4672,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4682,
											"end": 4712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 4782,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4721,
											"end": 4783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4792,
											"end": 4827,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4863,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4844,
											"end": 4863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4468,
											"end": 4869,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11322,
											"end": 11389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4073,
											"end": 4083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11345,
											"end": 11352,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11373,
											"end": 11388,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11354,
											"end": 11370,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11354,
											"end": 11388,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11322,
											"end": 11330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11322,
											"end": 11389,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11322,
											"end": 11389,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 11322,
											"end": 11389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11420,
											"end": 11424,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11420,
											"end": 11424,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8015,
											"end": 8019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8037,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4073,
											"end": 4083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8061,
											"end": 8070,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8037,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8037,
											"end": 8079,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14740,
											"end": 15120,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 14740,
											"end": 15120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14876,
											"end": 14895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14876,
											"end": 14895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 4268,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4304,
											"end": 4306,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4343,
											"end": 4377,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4387,
											"end": 4421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4438,
											"end": 4457,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4438,
											"end": 4457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4063,
											"end": 4463,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14955,
											"end": 14976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2642,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2682,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2752,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2753,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2794,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2438,
											"end": 2836,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15039,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15064,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15064,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 15120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 15120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 15120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 15120,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11922,
											"end": 12692,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 11922,
											"end": 12692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12062,
											"end": 12082,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12062,
											"end": 12082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 3861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 3971,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3981,
											"end": 4016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4033,
											"end": 4052,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4033,
											"end": 4052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3657,
											"end": 4058,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12143,
											"end": 12166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12143,
											"end": 12166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2239,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2277,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2348,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2349,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2034,
											"end": 2433,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 12300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 12376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 12376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 12376,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 12376,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3155,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3201,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2841,
											"end": 3243,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12498,
											"end": 12520,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12498,
											"end": 12520,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12498,
											"end": 12520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12520,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12562,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12562,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12514,
											"end": 12520,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12514,
											"end": 12520,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12514,
											"end": 12520,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12514,
											"end": 12520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12607,
											"end": 12616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12599,
											"end": 12605,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12618,
											"end": 12624,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 5051,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12043,
											"end": 12692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11922,
											"end": 12692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11922,
											"end": 12692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11922,
											"end": 12692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11922,
											"end": 12692,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1841,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1937,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1992,
											"end": 2007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5316,
											"end": 5317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5318,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5309,
											"end": 5310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5306,
											"end": 5319,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5371,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5356,
											"end": 5359,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5352,
											"end": 5372,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5349,
											"end": 5350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5396,
											"end": 5400,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5393,
											"end": 5394,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5386,
											"end": 5401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5428,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5421,
											"end": 5422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5455,
											"end": 5464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5455,
											"end": 5464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5554,
											"end": 5555,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5676,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 5664,
											"end": 5670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5677,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5725,
											"end": 5727,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5717,
											"end": 5723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5714,
											"end": 5728,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5691,
											"end": 5729,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5771,
											"end": 5781,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5766,
											"end": 5769,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5762,
											"end": 5782,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5759,
											"end": 5760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5806,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5803,
											"end": 5804,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5796,
											"end": 5811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5838,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5831,
											"end": 5832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5824,
											"end": 5839,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WVLTToken.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/WVLTToken.sol\":{\"keccak256\":\"0xa7822fe14f3fe2de91ec7d733038c03e5ca55dcea2ade270dbe9a3f897952682\",\"urls\":[\"bzz-raw://5faaf328033f1035a990367640b0dd20a9cfc4f1ffc62834edfc97e9f22b0002\",\"dweb:/ipfs/QmewABb842VBUrEvKq3aCDbmqVh5hcgyA1bG3oJqvr3pGk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 133,
								"contract": "contracts/WVLTToken.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "contracts/WVLTToken.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "contracts/WVLTToken.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "contracts/WVLTToken.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "contracts/WVLTToken.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WVLTToken.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/WVLTToken.sol\":{\"keccak256\":\"0xa7822fe14f3fe2de91ec7d733038c03e5ca55dcea2ade270dbe9a3f897952682\",\"urls\":[\"bzz-raw://5faaf328033f1035a990367640b0dd20a9cfc4f1ffc62834edfc97e9f22b0002\",\"dweb:/ipfs/QmewABb842VBUrEvKq3aCDbmqVh5hcgyA1bG3oJqvr3pGk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WVLTToken.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/WVLTToken.sol\":{\"keccak256\":\"0xa7822fe14f3fe2de91ec7d733038c03e5ca55dcea2ade270dbe9a3f897952682\",\"urls\":[\"bzz-raw://5faaf328033f1035a990367640b0dd20a9cfc4f1ffc62834edfc97e9f22b0002\",\"dweb:/ipfs/QmewABb842VBUrEvKq3aCDbmqVh5hcgyA1bG3oJqvr3pGk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WVLTToken.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/WVLTToken.sol\":{\"keccak256\":\"0xa7822fe14f3fe2de91ec7d733038c03e5ca55dcea2ade270dbe9a3f897952682\",\"urls\":[\"bzz-raw://5faaf328033f1035a990367640b0dd20a9cfc4f1ffc62834edfc97e9f22b0002\",\"dweb:/ipfs/QmewABb842VBUrEvKq3aCDbmqVh5hcgyA1bG3oJqvr3pGk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 669,
								"contract": "contracts/WVLTToken.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"WVLTToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/WVLTToken.sol\":18885:19364  contract WVLTToken is ERC20(\"WVLTToken\", \"WVLT\"), Ownable {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/WVLTToken.sol\":6026:6142  constructor(string memory name_, string memory symbol_) {\r... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x09\n  dup2\n  mstore\n  shl(0xb9, 0x2bab262a2a37b5b2b7)\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  dup3\n  mstore\n  dup4\n  mload\n  dup1\n  dup6\n  add\n  swap1\n  swap5\n  mstore\n  0x04\n  dup5\n  mstore\n  shl(0xe2, 0x15d59315)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"contracts/WVLTToken.sol\":6093:6106  _name = name_ */\n  dup2\n  mload\n    /* \"contracts/WVLTToken.sol\":6026:6142  constructor(string memory name_, string memory symbol_) {\r... */\n  swap2\n  swap3\n  swap2\n    /* \"contracts/WVLTToken.sol\":6093:6106  _name = name_ */\n  tag_5\n  swap2\n    /* \"contracts/WVLTToken.sol\":6093:6098  _name */\n  0x03\n  swap2\n    /* \"contracts/WVLTToken.sol\":6093:6106  _name = name_ */\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"contracts/WVLTToken.sol\":6117:6134  _symbol = symbol_ */\n  dup1\n  mload\n  tag_7\n  swap1\n    /* \"contracts/WVLTToken.sol\":6117:6124  _symbol */\n  0x04\n  swap1\n    /* \"contracts/WVLTToken.sol\":6117:6134  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/WVLTToken.sol\":6026:6142  constructor(string memory name_, string memory symbol_) {\r... */\n  pop\n  pop\n    /* \"contracts/WVLTToken.sol\":17430:17453  _setOwner(_msgSender()) */\n  tag_9\n    /* \"contracts/WVLTToken.sol\":17440:17452  _msgSender() */\n  tag_10\n    /* \"contracts/WVLTToken.sol\":17440:17450  _msgSender */\n  shl(0x20, tag_11)\n    /* \"contracts/WVLTToken.sol\":17440:17452  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"contracts/WVLTToken.sol\":17430:17439  _setOwner */\n  tag_12\n    /* \"contracts/WVLTToken.sol\":17430:17453  _setOwner(_msgSender()) */\n  jump\t// in\ntag_9:\n    /* \"contracts/WVLTToken.sol\":18885:19364  contract WVLTToken is ERC20(\"WVLTToken\", \"WVLT\"), Ownable {\r... */\n  jump(tag_27)\n    /* \"contracts/WVLTToken.sol\":3993:4091  function _msgSender() internal view virtual returns (address) {\r... */\ntag_11:\n    /* \"contracts/WVLTToken.sol\":4073:4083  msg.sender */\n  caller\n  swap1\n    /* \"contracts/WVLTToken.sol\":3993:4091  function _msgSender() internal view virtual returns (address) {\r... */\n  jump\t// out\n    /* \"contracts/WVLTToken.sol\":18679:18852  function _setOwner(address newOwner) private {\r... */\ntag_12:\n    /* \"contracts/WVLTToken.sol\":18754:18760  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/WVLTToken.sol\":18771:18788  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/WVLTToken.sol\":18804:18844  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/WVLTToken.sol\":18754:18760  _owner */\n  swap2\n  and\n  swap2\n    /* \"contracts/WVLTToken.sol\":18771:18788  _owner = newOwner */\n  swap1\n    /* \"contracts/WVLTToken.sol\":18754:18760  _owner */\n  dup3\n  swap1\n    /* \"contracts/WVLTToken.sol\":18804:18844  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/WVLTToken.sol\":18735:18751  address oldOwner */\n  0x00\n  swap1\n    /* \"contracts/WVLTToken.sol\":18804:18844  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/WVLTToken.sol\":18724:18852  {\r... */\n  pop\n    /* \"contracts/WVLTToken.sol\":18679:18852  function _setOwner(address newOwner) private {\r... */\n  pop\n  jump\t// out\n    /* \"contracts/WVLTToken.sol\":18885:19364  contract WVLTToken is ERC20(\"WVLTToken\", \"WVLT\"), Ownable {\r... */\ntag_6:\n  dup3\n  dup1\n  sload\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_19\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_22)\ntag_19:\n  dup3\n  0x1f\n  lt\n  tag_20\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_22\n  jumpi\n  swap2\n  dup3\n  add\ntag_21:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_22\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_21)\ntag_22:\n  pop\n  tag_23\n  swap3\n  swap2\n  pop\n  tag_24\n  jump\t// in\ntag_23:\n  pop\n  swap1\n  jump\t// out\ntag_24:\ntag_25:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_25)\n    /* \"#utility.yul\":14:394   */\ntag_17:\n    /* \"#utility.yul\":93:94   */\n  0x01\n    /* \"#utility.yul\":89:101   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":136:148   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":157:218   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":211:215   */\n  0x7f\n    /* \"#utility.yul\":203:209   */\n  dup3\n    /* \"#utility.yul\":199:216   */\n  and\n    /* \"#utility.yul\":189:216   */\n  swap2\n  pop\n    /* \"#utility.yul\":157:218   */\ntag_29:\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":256:262   */\n  dup3\n    /* \"#utility.yul\":253:267   */\n  lt\n    /* \"#utility.yul\":233:251   */\n  dup2\n    /* \"#utility.yul\":230:268   */\n  eq\n    /* \"#utility.yul\":227:388   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":310:320   */\n  0x4e487b71\n    /* \"#utility.yul\":305:308   */\n  0xe0\n    /* \"#utility.yul\":301:321   */\n  shl\n    /* \"#utility.yul\":298:299   */\n  0x00\n    /* \"#utility.yul\":291:322   */\n  mstore\n    /* \"#utility.yul\":345:349   */\n  0x22\n    /* \"#utility.yul\":342:343   */\n  0x04\n    /* \"#utility.yul\":335:350   */\n  mstore\n    /* \"#utility.yul\":373:377   */\n  0x24\n    /* \"#utility.yul\":370:371   */\n  0x00\n    /* \"#utility.yul\":363:378   */\n  revert\n    /* \"#utility.yul\":227:388   */\ntag_30:\n  pop\n    /* \"#utility.yul\":14:394   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_27:\n    /* \"contracts/WVLTToken.sol\":18885:19364  contract WVLTToken is ERC20(\"WVLTToken\", \"WVLT\"), Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/WVLTToken.sol\":18885:19364  contract WVLTToken is ERC20(\"WVLTToken\", \"WVLT\"), Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x32cb6b0c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/WVLTToken.sol\":6212:6312  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WVLTToken.sol\":8520:8730  function approve(address spender, uint256 amount)\r... */\n    tag_4:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":1613:1627   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1606:1628   */\n      iszero\n        /* \"#utility.yul\":1588:1629   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1576:1578   */\n      0x20\n        /* \"#utility.yul\":1561:1579   */\n      add\n        /* \"contracts/WVLTToken.sol\":8520:8730  function approve(address spender, uint256 amount)\r... */\n      tag_24\n        /* \"#utility.yul\":1448:1635   */\n      jump\n        /* \"contracts/WVLTToken.sol\":7332:7440  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_5:\n        /* \"contracts/WVLTToken.sol\":7420:7432  _totalSupply */\n      sload(0x02)\n        /* \"contracts/WVLTToken.sol\":7332:7440  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":6761:6786   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":6749:6751   */\n      0x20\n        /* \"#utility.yul\":6734:6752   */\n      add\n        /* \"contracts/WVLTToken.sol\":7332:7440  function totalSupply() public view virtual override returns (uint256) {\r... */\n      tag_24\n        /* \"#utility.yul\":6615:6792   */\n      jump\n        /* \"contracts/WVLTToken.sol\":9212:9741  function transferFrom(\r... */\n    tag_6:\n      tag_26\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n        /* \"contracts/WVLTToken.sol\":7174:7267  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_7:\n      mload(0x40)\n        /* \"contracts/WVLTToken.sol\":7257:7259  18 */\n      0x12\n        /* \"#utility.yul\":6939:6975   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6927:6929   */\n      0x20\n        /* \"#utility.yul\":6912:6930   */\n      add\n        /* \"contracts/WVLTToken.sol\":7174:7267  function decimals() public view virtual override returns (uint8) {\r... */\n      tag_24\n        /* \"#utility.yul\":6797:6981   */\n      jump\n        /* \"contracts/WVLTToken.sol\":18950:19001  uint256 public constant MAX_SUPPLY = 100_000_000e18 */\n    tag_8:\n      tag_32\n        /* \"contracts/WVLTToken.sol\":18987:19001  100_000_000e18 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/WVLTToken.sol\":18950:19001  uint256 public constant MAX_SUPPLY = 100_000_000e18 */\n      dup2\n      jump\n        /* \"contracts/WVLTToken.sol\":10150:10447  function increaseAllowance(address spender, uint256 addedValue)\r... */\n    tag_9:\n      tag_26\n      tag_49\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"contracts/WVLTToken.sol\":19128:19361  function mint(address _to, uint256 _amount) public onlyOwner {\r... */\n    tag_10:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/WVLTToken.sol\":7503:7680  function balanceOf(address account)\r... */\n    tag_11:\n      tag_32\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":7654:7672  _balances[account] */\n      and\n        /* \"contracts/WVLTToken.sol\":7622:7629  uint256 */\n      0x00\n        /* \"contracts/WVLTToken.sol\":7654:7672  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/WVLTToken.sol\":7503:7680  function balanceOf(address account)\r... */\n      jump\n        /* \"contracts/WVLTToken.sol\":18193:18287  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_12:\n      tag_52\n      tag_61\n      jump\t// in\n        /* \"contracts/WVLTToken.sol\":17542:17629  function owner() public view virtual returns (address) {\r... */\n    tag_13:\n        /* \"contracts/WVLTToken.sol\":17615:17621  _owner */\n      sload(0x05)\n        /* \"contracts/WVLTToken.sol\":17542:17629  function owner() public view virtual returns (address) {\r... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":17615:17621  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1386:1437   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1374:1376   */\n      0x20\n        /* \"#utility.yul\":1359:1377   */\n      add\n        /* \"contracts/WVLTToken.sol\":17542:17629  function owner() public view virtual returns (address) {\r... */\n      tag_24\n        /* \"#utility.yul\":1240:1443   */\n      jump\n        /* \"contracts/WVLTToken.sol\":6431:6535  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_14:\n      tag_22\n      tag_67\n      jump\t// in\n        /* \"contracts/WVLTToken.sol\":10950:11432  function decreaseAllowance(address spender, uint256 subtractedValue)\r... */\n    tag_15:\n      tag_26\n      tag_70\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n        /* \"contracts/WVLTToken.sol\":7893:8109  function transfer(address recipient, uint256 amount)\r... */\n    tag_16:\n      tag_26\n      tag_74\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"contracts/WVLTToken.sol\":8172:8373  function allowance(address owner, address spender)\r... */\n    tag_17:\n      tag_32\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":8338:8356  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/WVLTToken.sol\":8306:8313  uint256 */\n      0x00\n        /* \"contracts/WVLTToken.sol\":8338:8356  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WVLTToken.sol\":8338:8349  _allowances */\n      0x01\n        /* \"contracts/WVLTToken.sol\":8338:8356  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/WVLTToken.sol\":8338:8365  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/WVLTToken.sol\":8172:8373  function allowance(address owner, address spender)\r... */\n      jump\n        /* \"contracts/WVLTToken.sol\":18442:18671  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_18:\n      tag_52\n      tag_83\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"contracts/WVLTToken.sol\":6212:6312  function name() public view virtual override returns (string memory) {\r... */\n    tag_23:\n        /* \"contracts/WVLTToken.sol\":6266:6279  string memory */\n      0x60\n        /* \"contracts/WVLTToken.sol\":6299:6304  _name */\n      0x03\n        /* \"contracts/WVLTToken.sol\":6292:6304  return _name */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/WVLTToken.sol\":6212:6312  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/WVLTToken.sol\":8520:8730  function approve(address spender, uint256 amount)\r... */\n    tag_29:\n        /* \"contracts/WVLTToken.sol\":8639:8643  bool */\n      0x00\n        /* \"contracts/WVLTToken.sol\":8661:8700  _approve(_msgSender(), spender, amount) */\n      tag_93\n        /* \"contracts/WVLTToken.sol\":4073:4083  msg.sender */\n      caller\n        /* \"contracts/WVLTToken.sol\":8684:8691  spender */\n      dup5\n        /* \"contracts/WVLTToken.sol\":8693:8699  amount */\n      dup5\n        /* \"contracts/WVLTToken.sol\":8661:8669  _approve */\n      tag_96\n        /* \"contracts/WVLTToken.sol\":8661:8700  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_93:\n      pop\n        /* \"contracts/WVLTToken.sol\":8718:8722  true */\n      0x01\n        /* \"contracts/WVLTToken.sol\":8520:8730  function approve(address spender, uint256 amount)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WVLTToken.sol\":9212:9741  function transferFrom(\r... */\n    tag_39:\n        /* \"contracts/WVLTToken.sol\":9352:9356  bool */\n      0x00\n        /* \"contracts/WVLTToken.sol\":9369:9405  _transfer(sender, recipient, amount) */\n      tag_99\n        /* \"contracts/WVLTToken.sol\":9379:9385  sender */\n      dup5\n        /* \"contracts/WVLTToken.sol\":9387:9396  recipient */\n      dup5\n        /* \"contracts/WVLTToken.sol\":9398:9404  amount */\n      dup5\n        /* \"contracts/WVLTToken.sol\":9369:9378  _transfer */\n      tag_100\n        /* \"contracts/WVLTToken.sol\":9369:9405  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":9445:9464  _allowances[sender] */\n      dup5\n      and\n        /* \"contracts/WVLTToken.sol\":9418:9442  uint256 currentAllowance */\n      0x00\n        /* \"contracts/WVLTToken.sol\":9445:9464  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WVLTToken.sol\":9445:9456  _allowances */\n      0x01\n        /* \"contracts/WVLTToken.sol\":9445:9464  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/WVLTToken.sol\":4073:4083  msg.sender */\n      caller\n        /* \"contracts/WVLTToken.sol\":9445:9478  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/WVLTToken.sol\":9511:9537  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/WVLTToken.sol\":9489:9605  require(\r... */\n      tag_102\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4470:4472   */\n      0x20\n        /* \"contracts/WVLTToken.sol\":9489:9605  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4452:4473   */\n      mstore\n        /* \"#utility.yul\":4509:4511   */\n      0x28\n        /* \"#utility.yul\":4489:4507   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4482:4512   */\n      mstore\n        /* \"#utility.yul\":4548:4582   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":4528:4546   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4521:4583   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":4599:4617   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4592:4630   */\n      mstore\n        /* \"#utility.yul\":4647:4666   */\n      0x84\n      add\n        /* \"contracts/WVLTToken.sol\":9489:9605  require(\r... */\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"contracts/WVLTToken.sol\":9641:9698  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_105\n        /* \"contracts/WVLTToken.sol\":9650:9656  sender */\n      dup6\n        /* \"contracts/WVLTToken.sol\":4073:4083  msg.sender */\n      caller\n        /* \"contracts/WVLTToken.sol\":9691:9697  amount */\n      dup6\n        /* \"contracts/WVLTToken.sol\":9672:9688  currentAllowance */\n      dup5\n        /* \"contracts/WVLTToken.sol\":9672:9697  currentAllowance - amount */\n      sub\n        /* \"contracts/WVLTToken.sol\":9641:9649  _approve */\n      tag_96\n        /* \"contracts/WVLTToken.sol\":9641:9698  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_105:\n      pop\n        /* \"contracts/WVLTToken.sol\":9729:9733  true */\n      0x01\n      swap5\n        /* \"contracts/WVLTToken.sol\":9212:9741  function transferFrom(\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WVLTToken.sol\":10150:10447  function increaseAllowance(address spender, uint256 addedValue)\r... */\n    tag_50:\n        /* \"contracts/WVLTToken.sol\":4073:4083  msg.sender */\n      caller\n        /* \"contracts/WVLTToken.sol\":10265:10269  bool */\n      0x00\n        /* \"contracts/WVLTToken.sol\":10359:10384  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/WVLTToken.sol\":10359:10370  _allowances */\n      0x01\n        /* \"contracts/WVLTToken.sol\":10359:10384  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":10359:10393  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/WVLTToken.sol\":10265:10269  bool */\n      swap1\n      swap2\n        /* \"contracts/WVLTToken.sol\":10287:10417  _approve(\r... */\n      tag_93\n      swap2\n        /* \"contracts/WVLTToken.sol\":10337:10344  spender */\n      dup6\n      swap1\n        /* \"contracts/WVLTToken.sol\":10359:10406  _allowances[_msgSender()][spender] + addedValue */\n      tag_112\n      swap1\n        /* \"contracts/WVLTToken.sol\":10396:10406  addedValue */\n      dup7\n      swap1\n        /* \"contracts/WVLTToken.sol\":10359:10406  _allowances[_msgSender()][spender] + addedValue */\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"contracts/WVLTToken.sol\":10287:10295  _approve */\n      tag_96\n        /* \"contracts/WVLTToken.sol\":10287:10417  _approve(\r... */\n      jump\t// in\n        /* \"contracts/WVLTToken.sol\":19128:19361  function mint(address _to, uint256 _amount) public onlyOwner {\r... */\n    tag_54:\n        /* \"contracts/WVLTToken.sol\":17615:17621  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"contracts/WVLTToken.sol\":4073:4083  msg.sender */\n      caller\n        /* \"contracts/WVLTToken.sol\":17762:17785  owner() == _msgSender() */\n      eq\n        /* \"contracts/WVLTToken.sol\":17754:17822  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_119\n      jump\t// in\n    tag_117:\n        /* \"contracts/WVLTToken.sol\":18987:19001  100_000_000e18 */\n      0x52b7d2dcc80cd2e4000000\n        /* \"contracts/WVLTToken.sol\":19238:19245  _amount */\n      dup2\n        /* \"contracts/WVLTToken.sol\":19222:19235  totalSupply() */\n      tag_121\n        /* \"contracts/WVLTToken.sol\":7420:7432  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"contracts/WVLTToken.sol\":7332:7440  function totalSupply() public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"contracts/WVLTToken.sol\":19222:19235  totalSupply() */\n    tag_121:\n        /* \"contracts/WVLTToken.sol\":19222:19245  totalSupply() + _amount */\n      tag_122\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_122:\n        /* \"contracts/WVLTToken.sol\":19222:19259  totalSupply() + _amount <= MAX_SUPPLY */\n      gt\n      iszero\n        /* \"contracts/WVLTToken.sol\":19200:19323  require(\r... */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4065:4067   */\n      0x20\n        /* \"contracts/WVLTToken.sol\":19200:19323  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4047:4068   */\n      mstore\n        /* \"#utility.yul\":4104:4106   */\n      0x24\n        /* \"#utility.yul\":4084:4102   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4077:4107   */\n      mstore\n        /* \"#utility.yul\":4143:4177   */\n      0x57564c543a3a6d696e743a2063616e6e6f7420657863656564206d6178207375\n        /* \"#utility.yul\":4123:4141   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4116:4178   */\n      mstore\n      shl(0xe0, 0x70706c79)\n        /* \"#utility.yul\":4194:4212   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4187:4221   */\n      mstore\n        /* \"#utility.yul\":4238:4257   */\n      0x84\n      add\n        /* \"contracts/WVLTToken.sol\":19200:19323  require(\r... */\n      tag_103\n        /* \"#utility.yul\":3863:4263   */\n      jump\n        /* \"contracts/WVLTToken.sol\":19200:19323  require(\r... */\n    tag_123:\n        /* \"contracts/WVLTToken.sol\":19334:19353  _mint(_to, _amount) */\n      tag_126\n        /* \"contracts/WVLTToken.sol\":19340:19343  _to */\n      dup3\n        /* \"contracts/WVLTToken.sol\":19345:19352  _amount */\n      dup3\n        /* \"contracts/WVLTToken.sol\":19334:19339  _mint */\n      tag_127\n        /* \"contracts/WVLTToken.sol\":19334:19353  _mint(_to, _amount) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/WVLTToken.sol\":19128:19361  function mint(address _to, uint256 _amount) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WVLTToken.sol\":18193:18287  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_61:\n        /* \"contracts/WVLTToken.sol\":17615:17621  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"contracts/WVLTToken.sol\":4073:4083  msg.sender */\n      caller\n        /* \"contracts/WVLTToken.sol\":17762:17785  owner() == _msgSender() */\n      eq\n        /* \"contracts/WVLTToken.sol\":17754:17822  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_119\n      jump\t// in\n    tag_132:\n        /* \"contracts/WVLTToken.sol\":18258:18279  _setOwner(address(0)) */\n      tag_135\n        /* \"contracts/WVLTToken.sol\":18276:18277  0 */\n      0x00\n        /* \"contracts/WVLTToken.sol\":18258:18267  _setOwner */\n      tag_136\n        /* \"contracts/WVLTToken.sol\":18258:18279  _setOwner(address(0)) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/WVLTToken.sol\":18193:18287  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/WVLTToken.sol\":6431:6535  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_67:\n        /* \"contracts/WVLTToken.sol\":6487:6500  string memory */\n      0x60\n        /* \"contracts/WVLTToken.sol\":6520:6527  _symbol */\n      0x04\n        /* \"contracts/WVLTToken.sol\":6513:6527  return _symbol */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n        /* \"contracts/WVLTToken.sol\":10950:11432  function decreaseAllowance(address spender, uint256 subtractedValue)\r... */\n    tag_71:\n        /* \"contracts/WVLTToken.sol\":4073:4083  msg.sender */\n      caller\n        /* \"contracts/WVLTToken.sol\":11070:11074  bool */\n      0x00\n        /* \"contracts/WVLTToken.sol\":11119:11144  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WVLTToken.sol\":11119:11130  _allowances */\n      0x01\n        /* \"contracts/WVLTToken.sol\":11119:11144  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":11119:11153  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/WVLTToken.sol\":11186:11221  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/WVLTToken.sol\":11164:11286  require(\r... */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6051:6053   */\n      0x20\n        /* \"contracts/WVLTToken.sol\":11164:11286  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6033:6054   */\n      mstore\n        /* \"#utility.yul\":6090:6092   */\n      0x25\n        /* \"#utility.yul\":6070:6088   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6063:6093   */\n      mstore\n        /* \"#utility.yul\":6129:6163   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":6109:6127   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6102:6164   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":6180:6198   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6173:6208   */\n      mstore\n        /* \"#utility.yul\":6225:6244   */\n      0x84\n      add\n        /* \"contracts/WVLTToken.sol\":11164:11286  require(\r... */\n      tag_103\n        /* \"#utility.yul\":5849:6250   */\n      jump\n        /* \"contracts/WVLTToken.sol\":11164:11286  require(\r... */\n    tag_146:\n        /* \"contracts/WVLTToken.sol\":11322:11389  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_149\n        /* \"contracts/WVLTToken.sol\":4073:4083  msg.sender */\n      caller\n        /* \"contracts/WVLTToken.sol\":11345:11352  spender */\n      dup6\n        /* \"contracts/WVLTToken.sol\":11373:11388  subtractedValue */\n      dup6\n        /* \"contracts/WVLTToken.sol\":11354:11370  currentAllowance */\n      dup5\n        /* \"contracts/WVLTToken.sol\":11354:11388  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/WVLTToken.sol\":11322:11330  _approve */\n      tag_96\n        /* \"contracts/WVLTToken.sol\":11322:11389  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_149:\n      pop\n        /* \"contracts/WVLTToken.sol\":11420:11424  true */\n      0x01\n      swap4\n        /* \"contracts/WVLTToken.sol\":10950:11432  function decreaseAllowance(address spender, uint256 subtractedValue)\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WVLTToken.sol\":7893:8109  function transfer(address recipient, uint256 amount)\r... */\n    tag_75:\n        /* \"contracts/WVLTToken.sol\":8015:8019  bool */\n      0x00\n        /* \"contracts/WVLTToken.sol\":8037:8079  _transfer(_msgSender(), recipient, amount) */\n      tag_93\n        /* \"contracts/WVLTToken.sol\":4073:4083  msg.sender */\n      caller\n        /* \"contracts/WVLTToken.sol\":8061:8070  recipient */\n      dup5\n        /* \"contracts/WVLTToken.sol\":8072:8078  amount */\n      dup5\n        /* \"contracts/WVLTToken.sol\":8037:8046  _transfer */\n      tag_100\n        /* \"contracts/WVLTToken.sol\":8037:8079  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/WVLTToken.sol\":18442:18671  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_84:\n        /* \"contracts/WVLTToken.sol\":17615:17621  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"contracts/WVLTToken.sol\":4073:4083  msg.sender */\n      caller\n        /* \"contracts/WVLTToken.sol\":17762:17785  owner() == _msgSender() */\n      eq\n        /* \"contracts/WVLTToken.sol\":17754:17822  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_119\n      jump\t// in\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":18545:18567  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/WVLTToken.sol\":18523:18633  require(\r... */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2848:2850   */\n      0x20\n        /* \"contracts/WVLTToken.sol\":18523:18633  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2830:2851   */\n      mstore\n        /* \"#utility.yul\":2887:2889   */\n      0x26\n        /* \"#utility.yul\":2867:2885   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2860:2890   */\n      mstore\n        /* \"#utility.yul\":2926:2960   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2906:2924   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2899:2961   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":2977:2995   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2970:3006   */\n      mstore\n        /* \"#utility.yul\":3023:3042   */\n      0x84\n      add\n        /* \"contracts/WVLTToken.sol\":18523:18633  require(\r... */\n      tag_103\n        /* \"#utility.yul\":2646:3048   */\n      jump\n        /* \"contracts/WVLTToken.sol\":18523:18633  require(\r... */\n    tag_161:\n        /* \"contracts/WVLTToken.sol\":18644:18663  _setOwner(newOwner) */\n      tag_164\n        /* \"contracts/WVLTToken.sol\":18654:18662  newOwner */\n      dup2\n        /* \"contracts/WVLTToken.sol\":18644:18653  _setOwner */\n      tag_136\n        /* \"contracts/WVLTToken.sol\":18644:18663  _setOwner(newOwner) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/WVLTToken.sol\":18442:18671  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/WVLTToken.sol\":14740:15120  function _approve(\r... */\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":14876:14895  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/WVLTToken.sol\":14868:14936  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5646:5648   */\n      0x20\n        /* \"contracts/WVLTToken.sol\":14868:14936  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5628:5649   */\n      mstore\n        /* \"#utility.yul\":5685:5687   */\n      0x24\n        /* \"#utility.yul\":5665:5683   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5658:5688   */\n      mstore\n        /* \"#utility.yul\":5724:5758   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":5704:5722   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5697:5759   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":5775:5793   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5768:5802   */\n      mstore\n        /* \"#utility.yul\":5819:5838   */\n      0x84\n      add\n        /* \"contracts/WVLTToken.sol\":14868:14936  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_103\n        /* \"#utility.yul\":5444:5844   */\n      jump\n        /* \"contracts/WVLTToken.sol\":14868:14936  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":14955:14976  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/WVLTToken.sol\":14947:15015  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3255:3257   */\n      0x20\n        /* \"contracts/WVLTToken.sol\":14947:15015  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3237:3258   */\n      mstore\n        /* \"#utility.yul\":3294:3296   */\n      0x22\n        /* \"#utility.yul\":3274:3292   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3267:3297   */\n      mstore\n        /* \"#utility.yul\":3333:3367   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":3313:3331   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3306:3368   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":3384:3402   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3377:3409   */\n      mstore\n        /* \"#utility.yul\":3426:3445   */\n      0x84\n      add\n        /* \"contracts/WVLTToken.sol\":14947:15015  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_103\n        /* \"#utility.yul\":3053:3451   */\n      jump\n        /* \"contracts/WVLTToken.sol\":14947:15015  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":15028:15046  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/WVLTToken.sol\":15028:15039  _allowances */\n      0x01\n        /* \"contracts/WVLTToken.sol\":15028:15046  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/WVLTToken.sol\":15028:15055  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/WVLTToken.sol\":15028:15064  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/WVLTToken.sol\":15080:15112  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":6761:6786   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/WVLTToken.sol\":15080:15112  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":6734:6752   */\n      add\n        /* \"contracts/WVLTToken.sol\":15080:15112  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/WVLTToken.sol\":14740:15120  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WVLTToken.sol\":11922:12692  function _transfer(\r... */\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":12062:12082  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/WVLTToken.sol\":12054:12124  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5240:5242   */\n      0x20\n        /* \"contracts/WVLTToken.sol\":12054:12124  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5222:5243   */\n      mstore\n        /* \"#utility.yul\":5279:5281   */\n      0x25\n        /* \"#utility.yul\":5259:5277   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5252:5282   */\n      mstore\n        /* \"#utility.yul\":5318:5352   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5298:5316   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5291:5353   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5369:5387   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5362:5397   */\n      mstore\n        /* \"#utility.yul\":5414:5433   */\n      0x84\n      add\n        /* \"contracts/WVLTToken.sol\":12054:12124  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_103\n        /* \"#utility.yul\":5038:5439   */\n      jump\n        /* \"contracts/WVLTToken.sol\":12054:12124  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":12143:12166  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/WVLTToken.sol\":12135:12206  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2444:2446   */\n      0x20\n        /* \"contracts/WVLTToken.sol\":12135:12206  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2426:2447   */\n      mstore\n        /* \"#utility.yul\":2483:2485   */\n      0x23\n        /* \"#utility.yul\":2463:2481   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2456:2486   */\n      mstore\n        /* \"#utility.yul\":2522:2556   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2502:2520   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2495:2557   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2573:2591   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2566:2599   */\n      mstore\n        /* \"#utility.yul\":2616:2635   */\n      0x84\n      add\n        /* \"contracts/WVLTToken.sol\":12135:12206  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_103\n        /* \"#utility.yul\":2242:2641   */\n      jump\n        /* \"contracts/WVLTToken.sol\":12135:12206  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":12303:12320  _balances[sender] */\n      dup4\n      and\n        /* \"contracts/WVLTToken.sol\":12279:12300  uint256 senderBalance */\n      0x00\n        /* \"contracts/WVLTToken.sol\":12303:12320  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/WVLTToken.sol\":12353:12376  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/WVLTToken.sol\":12331:12442  require(\r... */\n      tag_183\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3658:3660   */\n      0x20\n        /* \"contracts/WVLTToken.sol\":12331:12442  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3640:3661   */\n      mstore\n        /* \"#utility.yul\":3697:3699   */\n      0x26\n        /* \"#utility.yul\":3677:3695   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3670:3700   */\n      mstore\n        /* \"#utility.yul\":3736:3770   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3716:3734   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3709:3771   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3787:3805   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3780:3816   */\n      mstore\n        /* \"#utility.yul\":3833:3852   */\n      0x84\n      add\n        /* \"contracts/WVLTToken.sol\":12331:12442  require(\r... */\n      tag_103\n        /* \"#utility.yul\":3456:3858   */\n      jump\n        /* \"contracts/WVLTToken.sol\":12331:12442  require(\r... */\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":12478:12495  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"contracts/WVLTToken.sol\":12478:12487  _balances */\n      0x00\n        /* \"contracts/WVLTToken.sol\":12478:12495  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/WVLTToken.sol\":12498:12520  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"contracts/WVLTToken.sol\":12478:12520  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/WVLTToken.sol\":12542:12562  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/WVLTToken.sol\":12542:12572  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"contracts/WVLTToken.sol\":12514:12520  amount */\n      dup5\n      swap3\n        /* \"contracts/WVLTToken.sol\":12478:12487  _balances */\n      swap1\n        /* \"contracts/WVLTToken.sol\":12542:12572  _balances[recipient] += amount */\n      tag_186\n      swap1\n        /* \"contracts/WVLTToken.sol\":12514:12520  amount */\n      dup5\n      swap1\n        /* \"contracts/WVLTToken.sol\":12542:12572  _balances[recipient] += amount */\n      tag_113\n      jump\t// in\n    tag_186:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/WVLTToken.sol\":12607:12616  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":12590:12625  Transfer(sender, recipient, amount) */\n      and\n        /* \"contracts/WVLTToken.sol\":12599:12605  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":12590:12625  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/WVLTToken.sol\":12618:12624  amount */\n      dup5\n        /* \"contracts/WVLTToken.sol\":12590:12625  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_187\n      swap2\n        /* \"#utility.yul\":6761:6786   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6749:6751   */\n      0x20\n        /* \"#utility.yul\":6734:6752   */\n      add\n      swap1\n        /* \"#utility.yul\":6615:6792   */\n      jump\n        /* \"contracts/WVLTToken.sol\":12590:12625  Transfer(sender, recipient, amount) */\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/WVLTToken.sol\":12043:12692  {\r... */\n      pop\n        /* \"contracts/WVLTToken.sol\":11922:12692  function _transfer(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WVLTToken.sol\":12979:13378  function _mint(address account, uint256 amount) internal virtual {\r... */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":13063:13084  account != address(0) */\n      dup3\n      and\n        /* \"contracts/WVLTToken.sol\":13055:13120  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6457:6459   */\n      0x20\n        /* \"contracts/WVLTToken.sol\":13055:13120  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6439:6460   */\n      mstore\n        /* \"#utility.yul\":6496:6498   */\n      0x1f\n        /* \"#utility.yul\":6476:6494   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6469:6499   */\n      mstore\n        /* \"#utility.yul\":6535:6568   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":6515:6533   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6508:6569   */\n      mstore\n        /* \"#utility.yul\":6586:6604   */\n      0x64\n      add\n        /* \"contracts/WVLTToken.sol\":13055:13120  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_103\n        /* \"#utility.yul\":6255:6610   */\n      jump\n        /* \"contracts/WVLTToken.sol\":13055:13120  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_191:\n        /* \"contracts/WVLTToken.sol\":13211:13217  amount */\n      dup1\n        /* \"contracts/WVLTToken.sol\":13195:13207  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/WVLTToken.sol\":13195:13217  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_195\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_195:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":13228:13246  _balances[account] */\n      dup3\n      and\n        /* \"contracts/WVLTToken.sol\":13228:13237  _balances */\n      0x00\n        /* \"contracts/WVLTToken.sol\":13228:13246  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/WVLTToken.sol\":13228:13256  _balances[account] += amount */\n      dup1\n      sload\n        /* \"contracts/WVLTToken.sol\":13250:13256  amount */\n      dup4\n      swap3\n        /* \"contracts/WVLTToken.sol\":13228:13237  _balances */\n      swap1\n        /* \"contracts/WVLTToken.sol\":13228:13256  _balances[account] += amount */\n      tag_196\n      swap1\n        /* \"contracts/WVLTToken.sol\":13250:13256  amount */\n      dup5\n      swap1\n        /* \"contracts/WVLTToken.sol\":13228:13256  _balances[account] += amount */\n      tag_113\n      jump\t// in\n    tag_196:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/WVLTToken.sol\":13272:13309  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":6761:6786   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":13272:13309  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"contracts/WVLTToken.sol\":13289:13290  0 */\n      0x00\n      swap1\n        /* \"contracts/WVLTToken.sol\":13272:13309  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":6749:6751   */\n      0x20\n        /* \"#utility.yul\":6734:6752   */\n      add\n        /* \"contracts/WVLTToken.sol\":13272:13309  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/WVLTToken.sol\":19128:19361  function mint(address _to, uint256 _amount) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WVLTToken.sol\":18679:18852  function _setOwner(address newOwner) private {\r... */\n    tag_136:\n        /* \"contracts/WVLTToken.sol\":18754:18760  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WVLTToken.sol\":18771:18788  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/WVLTToken.sol\":18804:18844  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/WVLTToken.sol\":18754:18760  _owner */\n      swap2\n      and\n      swap2\n        /* \"contracts/WVLTToken.sol\":18771:18788  _owner = newOwner */\n      swap1\n        /* \"contracts/WVLTToken.sol\":18754:18760  _owner */\n      dup3\n      swap1\n        /* \"contracts/WVLTToken.sol\":18804:18844  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/WVLTToken.sol\":18735:18751  address oldOwner */\n      0x00\n      swap1\n        /* \"contracts/WVLTToken.sol\":18804:18844  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/WVLTToken.sol\":18724:18852  {\r... */\n      pop\n        /* \"contracts/WVLTToken.sol\":18679:18852  function _setOwner(address newOwner) private {\r... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_203:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_205\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_205:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_57:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_207:\n        /* \"#utility.yul\":343:372   */\n      tag_208\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_203\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_79:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_210:\n        /* \"#utility.yul\":551:580   */\n      tag_211\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_203\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_212\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_203\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_38:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_214:\n        /* \"#utility.yul\":833:862   */\n      tag_215\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_203\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_216\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_203\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_28:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_218:\n        /* \"#utility.yul\":1149:1178   */\n      tag_219\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_203\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1640:2237   */\n    tag_25:\n        /* \"#utility.yul\":1752:1756   */\n      0x00\n        /* \"#utility.yul\":1781:1783   */\n      0x20\n        /* \"#utility.yul\":1810:1812   */\n      dup1\n        /* \"#utility.yul\":1799:1808   */\n      dup4\n        /* \"#utility.yul\":1792:1813   */\n      mstore\n        /* \"#utility.yul\":1842:1848   */\n      dup4\n        /* \"#utility.yul\":1836:1849   */\n      mload\n        /* \"#utility.yul\":1885:1891   */\n      dup1\n        /* \"#utility.yul\":1880:1882   */\n      dup3\n        /* \"#utility.yul\":1869:1878   */\n      dup6\n        /* \"#utility.yul\":1865:1883   */\n      add\n        /* \"#utility.yul\":1858:1892   */\n      mstore\n        /* \"#utility.yul\":1910:1911   */\n      0x00\n        /* \"#utility.yul\":1920:2060   */\n    tag_223:\n        /* \"#utility.yul\":1934:1940   */\n      dup2\n        /* \"#utility.yul\":1931:1932   */\n      dup2\n        /* \"#utility.yul\":1928:1941   */\n      lt\n        /* \"#utility.yul\":1920:2060   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":2029:2043   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":2025:2048   */\n      dup4\n      add\n        /* \"#utility.yul\":2019:2049   */\n      mload\n        /* \"#utility.yul\":1995:2012   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":2014:2016   */\n      0x40\n        /* \"#utility.yul\":1991:2017   */\n      add\n        /* \"#utility.yul\":1984:2050   */\n      mstore\n        /* \"#utility.yul\":1949:1959   */\n      dup3\n      add\n        /* \"#utility.yul\":1920:2060   */\n      jump(tag_223)\n    tag_225:\n        /* \"#utility.yul\":2078:2084   */\n      dup2\n        /* \"#utility.yul\":2075:2076   */\n      dup2\n        /* \"#utility.yul\":2072:2085   */\n      gt\n        /* \"#utility.yul\":2069:2160   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":2148:2149   */\n      0x00\n        /* \"#utility.yul\":2143:2145   */\n      0x40\n        /* \"#utility.yul\":2134:2140   */\n      dup4\n        /* \"#utility.yul\":2123:2132   */\n      dup8\n        /* \"#utility.yul\":2119:2141   */\n      add\n        /* \"#utility.yul\":2115:2146   */\n      add\n        /* \"#utility.yul\":2108:2150   */\n      mstore\n        /* \"#utility.yul\":2069:2160   */\n    tag_226:\n      pop\n        /* \"#utility.yul\":2221:2223   */\n      0x1f\n        /* \"#utility.yul\":2200:2215   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2196:2225   */\n      and\n        /* \"#utility.yul\":2181:2226   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2228:2230   */\n      0x40\n        /* \"#utility.yul\":2177:2231   */\n      add\n      swap4\n        /* \"#utility.yul\":1640:2237   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4677:5033   */\n    tag_119:\n        /* \"#utility.yul\":4879:4881   */\n      0x20\n        /* \"#utility.yul\":4861:4882   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4898:4916   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4891:4921   */\n      mstore\n        /* \"#utility.yul\":4957:4991   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4952:4954   */\n      0x40\n        /* \"#utility.yul\":4937:4955   */\n      dup3\n      add\n        /* \"#utility.yul\":4930:4992   */\n      mstore\n        /* \"#utility.yul\":5024:5026   */\n      0x60\n        /* \"#utility.yul\":5009:5027   */\n      add\n      swap1\n        /* \"#utility.yul\":4677:5033   */\n      jump\t// out\n        /* \"#utility.yul\":6986:7211   */\n    tag_113:\n        /* \"#utility.yul\":7026:7029   */\n      0x00\n        /* \"#utility.yul\":7057:7058   */\n      dup3\n        /* \"#utility.yul\":7053:7059   */\n      not\n        /* \"#utility.yul\":7050:7051   */\n      dup3\n        /* \"#utility.yul\":7047:7060   */\n      gt\n        /* \"#utility.yul\":7044:7180   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":7102:7112   */\n      0x4e487b71\n        /* \"#utility.yul\":7097:7100   */\n      0xe0\n        /* \"#utility.yul\":7093:7113   */\n      shl\n        /* \"#utility.yul\":7090:7091   */\n      0x00\n        /* \"#utility.yul\":7083:7114   */\n      mstore\n        /* \"#utility.yul\":7137:7141   */\n      0x11\n        /* \"#utility.yul\":7134:7135   */\n      0x04\n        /* \"#utility.yul\":7127:7142   */\n      mstore\n        /* \"#utility.yul\":7165:7169   */\n      0x24\n        /* \"#utility.yul\":7162:7163   */\n      0x00\n        /* \"#utility.yul\":7155:7170   */\n      revert\n        /* \"#utility.yul\":7044:7180   */\n    tag_241:\n      pop\n        /* \"#utility.yul\":7196:7205   */\n      add\n      swap1\n        /* \"#utility.yul\":6986:7211   */\n      jump\t// out\n        /* \"#utility.yul\":7216:7596   */\n    tag_87:\n        /* \"#utility.yul\":7295:7296   */\n      0x01\n        /* \"#utility.yul\":7291:7303   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7338:7350   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7359:7420   */\n      tag_243\n      jumpi\n        /* \"#utility.yul\":7413:7417   */\n      0x7f\n        /* \"#utility.yul\":7405:7411   */\n      dup3\n        /* \"#utility.yul\":7401:7418   */\n      and\n        /* \"#utility.yul\":7391:7418   */\n      swap2\n      pop\n        /* \"#utility.yul\":7359:7420   */\n    tag_243:\n        /* \"#utility.yul\":7466:7468   */\n      0x20\n        /* \"#utility.yul\":7458:7464   */\n      dup3\n        /* \"#utility.yul\":7455:7469   */\n      lt\n        /* \"#utility.yul\":7435:7453   */\n      dup2\n        /* \"#utility.yul\":7432:7470   */\n      eq\n        /* \"#utility.yul\":7429:7590   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":7512:7522   */\n      0x4e487b71\n        /* \"#utility.yul\":7507:7510   */\n      0xe0\n        /* \"#utility.yul\":7503:7523   */\n      shl\n        /* \"#utility.yul\":7500:7501   */\n      0x00\n        /* \"#utility.yul\":7493:7524   */\n      mstore\n        /* \"#utility.yul\":7547:7551   */\n      0x22\n        /* \"#utility.yul\":7544:7545   */\n      0x04\n        /* \"#utility.yul\":7537:7552   */\n      mstore\n        /* \"#utility.yul\":7575:7579   */\n      0x24\n        /* \"#utility.yul\":7572:7573   */\n      0x00\n        /* \"#utility.yul\":7565:7580   */\n      revert\n        /* \"#utility.yul\":7429:7590   */\n    tag_244:\n      pop\n        /* \"#utility.yul\":7216:7596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206f0d4ead56564f9a446013673affe383f05bfe1e18aa0e536b2adae5c27e71f464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_685": {
									"entryPoint": null,
									"id": 685,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": 152,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_764": {
									"entryPoint": 156,
									"id": 764,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:396:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "93:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "96:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "110:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "140:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "114:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "189:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "203:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "199:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "199:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "167:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:26:1"
															},
															"nodeType": "YulIf",
															"src": "157:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "305:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "310:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "301:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "301:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "345:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "233:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "253:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "230:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:38:1"
															},
															"nodeType": "YulIf",
															"src": "227:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "49:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:1",
														"type": ""
													}
												],
												"src": "14:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060408051808201825260098152682bab262a2a37b5b2b760b91b60208083019182528351808501909452600484526315d5931560e21b9084015281519192916200005f91600391620000ee565b50805162000075906004906020840190620000ee565b505050620000926200008c6200009860201b60201c565b6200009c565b620001d1565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000fc9062000194565b90600052602060002090601f0160209004810192826200012057600085556200016b565b82601f106200013b57805160ff19168380011785556200016b565b828001600101855582156200016b579182015b828111156200016b5782518255916020019190600101906200014e565b50620001799291506200017d565b5090565b5b808211156200017957600081556001016200017e565b600181811c90821680620001a957607f821691505b60208210811415620001cb57634e487b7160e01b600052602260045260246000fd5b50919050565b610c6180620001e16000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610208578063a9059cbb1461021b578063dd62ed3e1461022e578063f2fde38b1461026757600080fd5b806370a08231146101b4578063715018a6146101dd5780638da5cb5b146101e557806395d89b411461020057600080fd5b8063313ce567116100d3578063313ce5671461016b57806332cb6b0c1461017a578063395093511461018c57806340c10f191461019f57600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d61027a565b60405161011a9190610b40565b60405180910390f35b610136610131366004610b16565b61030c565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610ada565b610322565b6040516012815260200161011a565b61014a6a52b7d2dcc80cd2e400000081565b61013661019a366004610b16565b6103d1565b6101b26101ad366004610b16565b61040d565b005b61014a6101c2366004610a85565b6001600160a01b031660009081526020819052604090205490565b6101b26104bf565b6005546040516001600160a01b03909116815260200161011a565b61010d6104f5565b610136610216366004610b16565b610504565b610136610229366004610b16565b61059d565b61014a61023c366004610aa7565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101b2610275366004610a85565b6105aa565b60606003805461028990610bf0565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610bf0565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000610319338484610645565b50600192915050565b600061032f848484610769565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103b95760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103c68533858403610645565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610319918590610408908690610bca565b610645565b6005546001600160a01b031633146104375760405162461bcd60e51b81526004016103b090610b95565b6a52b7d2dcc80cd2e40000008161044d60025490565b6104579190610bca565b11156104b15760405162461bcd60e51b8152602060048201526024808201527f57564c543a3a6d696e743a2063616e6e6f7420657863656564206d617820737560448201526370706c7960e01b60648201526084016103b0565b6104bb8282610938565b5050565b6005546001600160a01b031633146104e95760405162461bcd60e51b81526004016103b090610b95565b6104f36000610a17565b565b60606004805461028990610bf0565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105865760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103b0565b6105933385858403610645565b5060019392505050565b6000610319338484610769565b6005546001600160a01b031633146105d45760405162461bcd60e51b81526004016103b090610b95565b6001600160a01b0381166106395760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b0565b61064281610a17565b50565b6001600160a01b0383166106a75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103b0565b6001600160a01b0382166107085760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103b0565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107cd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103b0565b6001600160a01b03821661082f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103b0565b6001600160a01b038316600090815260208190526040902054818110156108a75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103b0565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108de908490610bca565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161092a91815260200190565b60405180910390a350505050565b6001600160a01b03821661098e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103b0565b80600260008282546109a09190610bca565b90915550506001600160a01b038216600090815260208190526040812080548392906109cd908490610bca565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b0381168114610a8057600080fd5b919050565b600060208284031215610a9757600080fd5b610aa082610a69565b9392505050565b60008060408385031215610aba57600080fd5b610ac383610a69565b9150610ad160208401610a69565b90509250929050565b600080600060608486031215610aef57600080fd5b610af884610a69565b9250610b0660208501610a69565b9150604084013590509250925092565b60008060408385031215610b2957600080fd5b610b3283610a69565b946020939093013593505050565b600060208083528351808285015260005b81811015610b6d57858101830151858201604001528201610b51565b81811115610b7f576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610beb57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680610c0457607f821691505b60208210811415610c2557634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212206f0d4ead56564f9a446013673affe383f05bfe1e18aa0e536b2adae5c27e71f464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x2BAB262A2A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x4 DUP5 MSTORE PUSH4 0x15D59315 PUSH1 0xE2 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x5F SWAP2 PUSH1 0x3 SWAP2 PUSH3 0xEE JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x75 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xEE JUMP JUMPDEST POP POP POP PUSH3 0x92 PUSH3 0x8C PUSH3 0x98 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x9C JUMP JUMPDEST PUSH3 0x1D1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xFC SWAP1 PUSH3 0x194 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x120 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x16B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x13B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x16B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x16B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x16B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x14E JUMP JUMPDEST POP PUSH3 0x179 SWAP3 SWAP2 POP PUSH3 0x17D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x179 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x17E JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1A9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC61 DUP1 PUSH3 0x1E1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xADA JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x14A PUSH11 0x52B7D2DCC80CD2E4000000 DUP2 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14A PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x14A PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xBF0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xBF0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x319 CALLER DUP5 DUP5 PUSH2 0x645 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32F DUP5 DUP5 DUP5 PUSH2 0x769 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3C6 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x645 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x319 SWAP2 DUP6 SWAP1 PUSH2 0x408 SWAP1 DUP7 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x437 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 DUP2 PUSH2 0x44D PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x457 SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST GT ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x57564C543A3A6D696E743A2063616E6E6F7420657863656564206D6178207375 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x70706C79 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x4BB DUP3 DUP3 PUSH2 0x938 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH2 0x4F3 PUSH1 0x0 PUSH2 0xA17 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xBF0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x586 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x593 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x645 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x319 CALLER DUP5 DUP5 PUSH2 0x769 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x642 DUP2 PUSH2 0xA17 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8DE SWAP1 DUP5 SWAP1 PUSH2 0xBCA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x92A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x98E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9A0 SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9CD SWAP1 DUP5 SWAP1 PUSH2 0xBCA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA0 DUP3 PUSH2 0xA69 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC3 DUP4 PUSH2 0xA69 JUMP JUMPDEST SWAP2 POP PUSH2 0xAD1 PUSH1 0x20 DUP5 ADD PUSH2 0xA69 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAF8 DUP5 PUSH2 0xA69 JUMP JUMPDEST SWAP3 POP PUSH2 0xB06 PUSH1 0x20 DUP6 ADD PUSH2 0xA69 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB32 DUP4 PUSH2 0xA69 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB6D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB51 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB7F JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xBEB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC04 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC25 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xD4EAD56564F9A446013673AFFE383F0 JUMPDEST INVALID 0x1E XOR 0xAA 0xE MSTORE8 PUSH12 0x2ADAE5C27E71F464736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "18885:479:0:-:0;;;;;;;;;;;;-1:-1:-1;6026:116:0;;;;;;;;;;;-1:-1:-1;;;6026:116:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6026:116:0;;;;6093:13;;6026:116;;;6093:13;;:5;;:13;:::i;:::-;-1:-1:-1;6117:17:0;;;;:7;;:17;;;;;:::i;:::-;;6026:116;;17430:23;17440:12;:10;;;:12;;:::i;:::-;17430:9;:23::i;:::-;18885:479;;3993:98;4073:10;;3993:98::o;18679:173::-;18754:6;;;-1:-1:-1;;;;;18771:17:0;;;-1:-1:-1;;;;;;18771:17:0;;;;;;;18804:40;;18754:6;;;18771:17;18754:6;;18804:40;;18735:16;;18804:40;18724:128;18679:173;:::o;18885:479::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18885:479:0;;;-1:-1:-1;18885:479:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:1;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;18885:479:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_SUPPLY_775": {
									"entryPoint": null,
									"id": 775,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_662": {
									"entryPoint": null,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_640": {
									"entryPoint": 1605,
									"id": 640,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_651": {
									"entryPoint": null,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_523": {
									"entryPoint": 2360,
									"id": 523,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_764": {
									"entryPoint": 2583,
									"id": 764,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_467": {
									"entryPoint": 1897,
									"id": 467,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_255": {
									"entryPoint": null,
									"id": 255,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_276": {
									"entryPoint": 780,
									"id": 276,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_216": {
									"entryPoint": null,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_192": {
									"entryPoint": null,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_390": {
									"entryPoint": 1284,
									"id": 390,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_351": {
									"entryPoint": 977,
									"id": 351,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_801": {
									"entryPoint": 1037,
									"id": 801,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_172": {
									"entryPoint": 634,
									"id": 172,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_694": {
									"entryPoint": null,
									"id": 694,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_722": {
									"entryPoint": 1215,
									"id": 722,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_182": {
									"entryPoint": 1269,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_324": {
									"entryPoint": 802,
									"id": 324,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_745": {
									"entryPoint": 1450,
									"id": 745,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_237": {
									"entryPoint": 1437,
									"id": 237,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64e3dc9b46300a34b5e719bb4baafaedcf0d2f4e35eb6f2d9d47e7cdf6e06161__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7598:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:1"
															},
															"nodeType": "YulIf",
															"src": "480:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:1",
														"type": ""
													}
												],
												"src": "383:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:1"
															},
															"nodeType": "YulIf",
															"src": "762:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:1",
														"type": ""
													}
												],
												"src": "648:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:1"
															},
															"nodeType": "YulIf",
															"src": "1078:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:1",
														"type": ""
													}
												],
												"src": "981:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1351:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1363:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1374:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1359:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1359:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1351:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1393:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1408:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1424:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1429:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1420:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1420:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1433:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1416:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1416:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1404:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1404:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1386:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1386:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1310:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1321:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1332:4:1",
														"type": ""
													}
												],
												"src": "1240:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1543:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1553:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1565:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1576:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1561:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1561:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1553:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1595:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1620:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1613:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1613:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1606:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1606:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1588:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1588:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1512:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1523:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1534:4:1",
														"type": ""
													}
												],
												"src": "1448:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1761:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1771:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1781:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1775:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1799:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1810:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1792:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1792:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1792:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1822:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1842:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1836:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1826:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1869:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1880:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1865:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1865:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1885:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1858:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1858:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1858:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1901:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1910:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1905:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1970:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1999:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2010:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1995:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1995:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2014:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1991:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1991:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2033:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2041:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2029:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2029:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2045:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2025:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2025:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2019:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2019:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1984:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1984:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1984:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1931:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1934:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1928:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1928:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1942:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1944:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1953:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1956:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1949:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1949:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1944:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1924:3:1",
																"statements": []
															},
															"src": "1920:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2094:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2123:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "2134:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2119:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2119:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2143:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2115:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2115:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2148:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2108:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2108:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2108:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2075:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2078:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2072:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2072:13:1"
															},
															"nodeType": "YulIf",
															"src": "2069:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2169:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2185:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2204:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2212:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2200:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2200:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2221:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2217:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2217:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2196:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2196:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2181:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2181:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2228:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2177:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2177:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2169:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1730:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1741:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1752:4:1",
														"type": ""
													}
												],
												"src": "1640:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2416:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2433:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2444:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2426:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2426:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2426:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2467:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2478:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2463:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2463:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2456:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2456:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2506:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2517:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2502:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2502:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2522:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2495:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2495:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2495:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2577:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2588:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2573:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2573:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2593:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2566:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2566:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2608:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2620:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2631:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2616:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2608:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2393:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2407:4:1",
														"type": ""
													}
												],
												"src": "2242:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2820:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2837:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2830:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2830:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2830:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2871:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2882:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2867:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2867:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2887:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2860:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2860:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2910:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2921:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2906:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2906:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2926:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2899:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2899:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2981:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2992:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2977:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2977:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2997:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2970:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3015:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3027:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3038:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3023:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3023:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3015:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2797:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2811:4:1",
														"type": ""
													}
												],
												"src": "2646:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3227:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3244:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3255:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3237:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3237:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3278:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3289:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3274:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3294:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3267:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3267:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3317:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3328:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3313:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3333:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3306:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3306:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3306:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3388:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3399:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3384:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3384:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3404:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3377:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3377:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3377:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3418:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3430:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3441:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3426:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3418:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3204:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3218:4:1",
														"type": ""
													}
												],
												"src": "3053:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3630:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3647:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3658:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3681:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3692:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3677:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3677:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3697:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3670:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3670:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3670:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3720:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3731:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3716:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3736:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3709:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3709:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3709:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3791:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3802:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3787:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3787:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3807:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3780:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3780:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3780:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3825:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3837:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3848:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3833:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3833:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3825:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3607:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3621:4:1",
														"type": ""
													}
												],
												"src": "3456:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4037:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4054:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4065:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4047:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4047:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4047:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4088:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4099:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4084:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4084:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4104:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4077:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4077:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4077:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4127:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4138:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4123:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4123:18:1"
																	},
																	{
																		"hexValue": "57564c543a3a6d696e743a2063616e6e6f7420657863656564206d6178207375",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4143:34:1",
																		"type": "",
																		"value": "WVLT::mint: cannot exceed max su"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4116:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4116:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4198:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4209:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4194:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4194:18:1"
																	},
																	{
																		"hexValue": "70706c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4214:6:1",
																		"type": "",
																		"value": "pply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4187:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4230:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4242:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4253:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4238:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4230:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64e3dc9b46300a34b5e719bb4baafaedcf0d2f4e35eb6f2d9d47e7cdf6e06161__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4014:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4028:4:1",
														"type": ""
													}
												],
												"src": "3863:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4442:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4459:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4470:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4452:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4452:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4452:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4493:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4504:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4489:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4489:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4509:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4482:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4482:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4482:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4532:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4543:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4528:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4528:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4548:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4521:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4521:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4521:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4603:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4614:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4599:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4599:18:1"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4619:10:1",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4592:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4592:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4592:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4639:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4651:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4662:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4647:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4647:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4639:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4419:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4433:4:1",
														"type": ""
													}
												],
												"src": "4268:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4851:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4868:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4879:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4861:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4861:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4861:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4902:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4913:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4898:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4898:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4918:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4891:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4891:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4891:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4941:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4952:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4937:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4937:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4957:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4930:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4930:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4930:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5001:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5013:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5024:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5009:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5009:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5001:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4828:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4842:4:1",
														"type": ""
													}
												],
												"src": "4677:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5212:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5229:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5240:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5222:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5222:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5222:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5263:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5274:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5259:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5259:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5279:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5252:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5252:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5252:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5302:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5313:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5298:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5298:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5318:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5291:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5291:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5291:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5373:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5384:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5369:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5369:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5389:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5362:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5362:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5362:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5406:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5418:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5429:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5414:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5406:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5189:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5203:4:1",
														"type": ""
													}
												],
												"src": "5038:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5618:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5635:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5646:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5628:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5628:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5628:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5669:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5680:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5665:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5665:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5685:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5658:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5658:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5658:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5708:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5719:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5704:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5724:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5697:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5697:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5697:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5779:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5790:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5775:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5775:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5795:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5768:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5768:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5768:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5811:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5823:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5834:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5819:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5819:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5811:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5595:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5609:4:1",
														"type": ""
													}
												],
												"src": "5444:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6023:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6040:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6051:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6033:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6033:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6033:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6074:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6085:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6070:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6070:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6090:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6063:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6063:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6063:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6113:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6124:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6109:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6109:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6129:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6102:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6102:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6102:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6184:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6195:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6180:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6180:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6200:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6173:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6173:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6173:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6217:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6229:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6240:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6225:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6225:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6217:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6000:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6014:4:1",
														"type": ""
													}
												],
												"src": "5849:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6429:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6446:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6457:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6439:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6439:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6439:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6480:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6491:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6476:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6476:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6496:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6469:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6469:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6469:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6519:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6530:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6515:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6515:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6535:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6508:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6508:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6508:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6578:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6590:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6601:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6586:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6586:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6578:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6406:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6420:4:1",
														"type": ""
													}
												],
												"src": "6255:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6716:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6726:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6738:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6749:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6734:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6734:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6726:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6768:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6779:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6761:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6761:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6761:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6685:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6696:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6707:4:1",
														"type": ""
													}
												],
												"src": "6615:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6894:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6904:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6916:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6927:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6912:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6912:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6904:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6946:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6961:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6969:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6957:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6957:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6939:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6939:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6939:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6863:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6874:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6885:4:1",
														"type": ""
													}
												],
												"src": "6797:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7034:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7069:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7090:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7097:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7102:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7093:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7093:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7083:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7083:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7083:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7134:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7137:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7127:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7127:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7127:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7162:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7165:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7155:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7155:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7155:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7050:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7057:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7053:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7053:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7047:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7047:13:1"
															},
															"nodeType": "YulIf",
															"src": "7044:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7189:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7200:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7203:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7196:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7196:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7189:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7017:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7020:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7026:3:1",
														"type": ""
													}
												],
												"src": "6986:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7271:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7281:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7295:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7298:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7291:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7291:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7281:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7312:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7342:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7348:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7338:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7338:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7316:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7389:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7391:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7405:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7413:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7401:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7401:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7391:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7369:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7362:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7362:26:1"
															},
															"nodeType": "YulIf",
															"src": "7359:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7479:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7500:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7507:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7512:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7503:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7503:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7493:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7493:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7493:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7544:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7547:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7537:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7537:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7537:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7572:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7575:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7565:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7565:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7565:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7435:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7458:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7466:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7455:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7455:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7432:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7432:38:1"
															},
															"nodeType": "YulIf",
															"src": "7429:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7251:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7260:6:1",
														"type": ""
													}
												],
												"src": "7216:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_64e3dc9b46300a34b5e719bb4baafaedcf0d2f4e35eb6f2d9d47e7cdf6e06161__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"WVLT::mint: cannot exceed max su\")\n        mstore(add(headStart, 96), \"pply\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610208578063a9059cbb1461021b578063dd62ed3e1461022e578063f2fde38b1461026757600080fd5b806370a08231146101b4578063715018a6146101dd5780638da5cb5b146101e557806395d89b411461020057600080fd5b8063313ce567116100d3578063313ce5671461016b57806332cb6b0c1461017a578063395093511461018c57806340c10f191461019f57600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d61027a565b60405161011a9190610b40565b60405180910390f35b610136610131366004610b16565b61030c565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610ada565b610322565b6040516012815260200161011a565b61014a6a52b7d2dcc80cd2e400000081565b61013661019a366004610b16565b6103d1565b6101b26101ad366004610b16565b61040d565b005b61014a6101c2366004610a85565b6001600160a01b031660009081526020819052604090205490565b6101b26104bf565b6005546040516001600160a01b03909116815260200161011a565b61010d6104f5565b610136610216366004610b16565b610504565b610136610229366004610b16565b61059d565b61014a61023c366004610aa7565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101b2610275366004610a85565b6105aa565b60606003805461028990610bf0565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610bf0565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000610319338484610645565b50600192915050565b600061032f848484610769565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103b95760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103c68533858403610645565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610319918590610408908690610bca565b610645565b6005546001600160a01b031633146104375760405162461bcd60e51b81526004016103b090610b95565b6a52b7d2dcc80cd2e40000008161044d60025490565b6104579190610bca565b11156104b15760405162461bcd60e51b8152602060048201526024808201527f57564c543a3a6d696e743a2063616e6e6f7420657863656564206d617820737560448201526370706c7960e01b60648201526084016103b0565b6104bb8282610938565b5050565b6005546001600160a01b031633146104e95760405162461bcd60e51b81526004016103b090610b95565b6104f36000610a17565b565b60606004805461028990610bf0565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105865760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103b0565b6105933385858403610645565b5060019392505050565b6000610319338484610769565b6005546001600160a01b031633146105d45760405162461bcd60e51b81526004016103b090610b95565b6001600160a01b0381166106395760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b0565b61064281610a17565b50565b6001600160a01b0383166106a75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103b0565b6001600160a01b0382166107085760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103b0565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107cd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103b0565b6001600160a01b03821661082f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103b0565b6001600160a01b038316600090815260208190526040902054818110156108a75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103b0565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108de908490610bca565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161092a91815260200190565b60405180910390a350505050565b6001600160a01b03821661098e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103b0565b80600260008282546109a09190610bca565b90915550506001600160a01b038216600090815260208190526040812080548392906109cd908490610bca565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b0381168114610a8057600080fd5b919050565b600060208284031215610a9757600080fd5b610aa082610a69565b9392505050565b60008060408385031215610aba57600080fd5b610ac383610a69565b9150610ad160208401610a69565b90509250929050565b600080600060608486031215610aef57600080fd5b610af884610a69565b9250610b0660208501610a69565b9150604084013590509250925092565b60008060408385031215610b2957600080fd5b610b3283610a69565b946020939093013593505050565b600060208083528351808285015260005b81811015610b6d57858101830151858201604001528201610b51565b81811115610b7f576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610beb57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680610c0457607f821691505b60208210811415610c2557634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212206f0d4ead56564f9a446013673affe383f05bfe1e18aa0e536b2adae5c27e71f464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xADA JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x14A PUSH11 0x52B7D2DCC80CD2E4000000 DUP2 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x40D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14A PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0xB16 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x14A PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0xA85 JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xBF0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xBF0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x319 CALLER DUP5 DUP5 PUSH2 0x645 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32F DUP5 DUP5 DUP5 PUSH2 0x769 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3C6 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x645 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x319 SWAP2 DUP6 SWAP1 PUSH2 0x408 SWAP1 DUP7 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x437 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH11 0x52B7D2DCC80CD2E4000000 DUP2 PUSH2 0x44D PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x457 SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST GT ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x57564C543A3A6D696E743A2063616E6E6F7420657863656564206D6178207375 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x70706C79 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x4BB DUP3 DUP3 PUSH2 0x938 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH2 0x4F3 PUSH1 0x0 PUSH2 0xA17 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xBF0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x586 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x593 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x645 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x319 CALLER DUP5 DUP5 PUSH2 0x769 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x642 DUP2 PUSH2 0xA17 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8DE SWAP1 DUP5 SWAP1 PUSH2 0xBCA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x92A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x98E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B0 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9A0 SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9CD SWAP1 DUP5 SWAP1 PUSH2 0xBCA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA0 DUP3 PUSH2 0xA69 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC3 DUP4 PUSH2 0xA69 JUMP JUMPDEST SWAP2 POP PUSH2 0xAD1 PUSH1 0x20 DUP5 ADD PUSH2 0xA69 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAF8 DUP5 PUSH2 0xA69 JUMP JUMPDEST SWAP3 POP PUSH2 0xB06 PUSH1 0x20 DUP6 ADD PUSH2 0xA69 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB32 DUP4 PUSH2 0xA69 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB6D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB51 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB7F JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xBEB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC04 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC25 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xD4EAD56564F9A446013673AFFE383F0 JUMPDEST INVALID 0x1E XOR 0xAA 0xE MSTORE8 PUSH12 0x2ADAE5C27E71F464736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "18885:479:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6212:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8520:210;;;;;;:::i;:::-;;:::i;:::-;;;1613:14:1;;1606:22;1588:41;;1576:2;1561:18;8520:210:0;1448:187:1;7332:108:0;7420:12;;7332:108;;;6761:25:1;;;6749:2;6734:18;7332:108:0;6615:177:1;9212:529:0;;;;;;:::i;:::-;;:::i;7174:93::-;;;7257:2;6939:36:1;;6927:2;6912:18;7174:93:0;6797:184:1;18950:51:0;;18987:14;18950:51;;10150:297;;;;;;:::i;:::-;;:::i;19128:233::-;;;;;;:::i;:::-;;:::i;:::-;;7503:177;;;;;;:::i;:::-;-1:-1:-1;;;;;7654:18:0;7622:7;7654:18;;;;;;;;;;;;7503:177;18193:94;;;:::i;17542:87::-;17615:6;;17542:87;;-1:-1:-1;;;;;17615:6:0;;;1386:51:1;;1374:2;1359:18;17542:87:0;1240:203:1;6431:104:0;;;:::i;10950:482::-;;;;;;:::i;:::-;;:::i;7893:216::-;;;;;;:::i;:::-;;:::i;8172:201::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8338:18:0;;;8306:7;8338:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8172:201;18442:229;;;;;;:::i;:::-;;:::i;6212:100::-;6266:13;6299:5;6292:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6212:100;:::o;8520:210::-;8639:4;8661:39;4073:10;8684:7;8693:6;8661:8;:39::i;:::-;-1:-1:-1;8718:4:0;8520:210;;;;:::o;9212:529::-;9352:4;9369:36;9379:6;9387:9;9398:6;9369:9;:36::i;:::-;-1:-1:-1;;;;;9445:19:0;;9418:24;9445:19;;;:11;:19;;;;;;;;4073:10;9445:33;;;;;;;;9511:26;;;;9489:116;;;;-1:-1:-1;;;9489:116:0;;4470:2:1;9489:116:0;;;4452:21:1;4509:2;4489:18;;;4482:30;4548:34;4528:18;;;4521:62;-1:-1:-1;;;4599:18:1;;;4592:38;4647:19;;9489:116:0;;;;;;;;;9641:57;9650:6;4073:10;9691:6;9672:16;:25;9641:8;:57::i;:::-;-1:-1:-1;9729:4:0;;9212:529;-1:-1:-1;;;;9212:529:0:o;10150:297::-;4073:10;10265:4;10359:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10359:34:0;;;;;;;;;;10265:4;;10287:130;;10337:7;;10359:47;;10396:10;;10359:47;:::i;:::-;10287:8;:130::i;19128:233::-;17615:6;;-1:-1:-1;;;;;17615:6:0;4073:10;17762:23;17754:68;;;;-1:-1:-1;;;17754:68:0;;;;;;;:::i;:::-;18987:14:::1;19238:7;19222:13;7420:12:::0;;;7332:108;19222:13:::1;:23;;;;:::i;:::-;:37;;19200:123;;;::::0;-1:-1:-1;;;19200:123:0;;4065:2:1;19200:123:0::1;::::0;::::1;4047:21:1::0;4104:2;4084:18;;;4077:30;4143:34;4123:18;;;4116:62;-1:-1:-1;;;4194:18:1;;;4187:34;4238:19;;19200:123:0::1;3863:400:1::0;19200:123:0::1;19334:19;19340:3;19345:7;19334:5;:19::i;:::-;19128:233:::0;;:::o;18193:94::-;17615:6;;-1:-1:-1;;;;;17615:6:0;4073:10;17762:23;17754:68;;;;-1:-1:-1;;;17754:68:0;;;;;;;:::i;:::-;18258:21:::1;18276:1;18258:9;:21::i;:::-;18193:94::o:0;6431:104::-;6487:13;6520:7;6513:14;;;;;:::i;10950:482::-;4073:10;11070:4;11119:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;11119:34:0;;;;;;;;;;11186:35;;;;11164:122;;;;-1:-1:-1;;;11164:122:0;;6051:2:1;11164:122:0;;;6033:21:1;6090:2;6070:18;;;6063:30;6129:34;6109:18;;;6102:62;-1:-1:-1;;;6180:18:1;;;6173:35;6225:19;;11164:122:0;5849:401:1;11164:122:0;11322:67;4073:10;11345:7;11373:15;11354:16;:34;11322:8;:67::i;:::-;-1:-1:-1;11420:4:0;;10950:482;-1:-1:-1;;;10950:482:0:o;7893:216::-;8015:4;8037:42;4073:10;8061:9;8072:6;8037:9;:42::i;18442:229::-;17615:6;;-1:-1:-1;;;;;17615:6:0;4073:10;17762:23;17754:68;;;;-1:-1:-1;;;17754:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;18545:22:0;::::1;18523:110;;;::::0;-1:-1:-1;;;18523:110:0;;2848:2:1;18523:110:0::1;::::0;::::1;2830:21:1::0;2887:2;2867:18;;;2860:30;2926:34;2906:18;;;2899:62;-1:-1:-1;;;2977:18:1;;;2970:36;3023:19;;18523:110:0::1;2646:402:1::0;18523:110:0::1;18644:19;18654:8;18644:9;:19::i;:::-;18442:229:::0;:::o;14740:380::-;-1:-1:-1;;;;;14876:19:0;;14868:68;;;;-1:-1:-1;;;14868:68:0;;5646:2:1;14868:68:0;;;5628:21:1;5685:2;5665:18;;;5658:30;5724:34;5704:18;;;5697:62;-1:-1:-1;;;5775:18:1;;;5768:34;5819:19;;14868:68:0;5444:400:1;14868:68:0;-1:-1:-1;;;;;14955:21:0;;14947:68;;;;-1:-1:-1;;;14947:68:0;;3255:2:1;14947:68:0;;;3237:21:1;3294:2;3274:18;;;3267:30;3333:34;3313:18;;;3306:62;-1:-1:-1;;;3384:18:1;;;3377:32;3426:19;;14947:68:0;3053:398:1;14947:68:0;-1:-1:-1;;;;;15028:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15080:32;;6761:25:1;;;15080:32:0;;6734:18:1;15080:32:0;;;;;;;14740:380;;;:::o;11922:770::-;-1:-1:-1;;;;;12062:20:0;;12054:70;;;;-1:-1:-1;;;12054:70:0;;5240:2:1;12054:70:0;;;5222:21:1;5279:2;5259:18;;;5252:30;5318:34;5298:18;;;5291:62;-1:-1:-1;;;5369:18:1;;;5362:35;5414:19;;12054:70:0;5038:401:1;12054:70:0;-1:-1:-1;;;;;12143:23:0;;12135:71;;;;-1:-1:-1;;;12135:71:0;;2444:2:1;12135:71:0;;;2426:21:1;2483:2;2463:18;;;2456:30;2522:34;2502:18;;;2495:62;-1:-1:-1;;;2573:18:1;;;2566:33;2616:19;;12135:71:0;2242:399:1;12135:71:0;-1:-1:-1;;;;;12303:17:0;;12279:21;12303:17;;;;;;;;;;;12353:23;;;;12331:111;;;;-1:-1:-1;;;12331:111:0;;3658:2:1;12331:111:0;;;3640:21:1;3697:2;3677:18;;;3670:30;3736:34;3716:18;;;3709:62;-1:-1:-1;;;3787:18:1;;;3780:36;3833:19;;12331:111:0;3456:402:1;12331:111:0;-1:-1:-1;;;;;12478:17:0;;;:9;:17;;;;;;;;;;;12498:22;;;12478:42;;12542:20;;;;;;;;:30;;12514:6;;12478:9;12542:30;;12514:6;;12542:30;:::i;:::-;;;;;;;;12607:9;-1:-1:-1;;;;;12590:35:0;12599:6;-1:-1:-1;;;;;12590:35:0;;12618:6;12590:35;;;;6761:25:1;;6749:2;6734:18;;6615:177;12590:35:0;;;;;;;;12043:649;11922:770;;;:::o;12979:399::-;-1:-1:-1;;;;;13063:21:0;;13055:65;;;;-1:-1:-1;;;13055:65:0;;6457:2:1;13055:65:0;;;6439:21:1;6496:2;6476:18;;;6469:30;6535:33;6515:18;;;6508:61;6586:18;;13055:65:0;6255:355:1;13055:65:0;13211:6;13195:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;13228:18:0;;:9;:18;;;;;;;;;;:28;;13250:6;;13228:9;:28;;13250:6;;13228:28;:::i;:::-;;;;-1:-1:-1;;13272:37:0;;6761:25:1;;;-1:-1:-1;;;;;13272:37:0;;;13289:1;;13272:37;;6749:2:1;6734:18;13272:37:0;;;;;;;19128:233;;:::o;18679:173::-;18754:6;;;-1:-1:-1;;;;;18771:17:0;;;-1:-1:-1;;;;;;18771:17:0;;;;;;;18804:40;;18754:6;;;18771:17;18754:6;;18804:40;;18735:16;;18804:40;18724:128;18679:173;:::o;14::1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:1:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:1:o;1640:597::-;1752:4;1781:2;1810;1799:9;1792:21;1842:6;1836:13;1885:6;1880:2;1869:9;1865:18;1858:34;1910:1;1920:140;1934:6;1931:1;1928:13;1920:140;;;2029:14;;;2025:23;;2019:30;1995:17;;;2014:2;1991:26;1984:66;1949:10;;1920:140;;;2078:6;2075:1;2072:13;2069:91;;;2148:1;2143:2;2134:6;2123:9;2119:22;2115:31;2108:42;2069:91;-1:-1:-1;2221:2:1;2200:15;-1:-1:-1;;2196:29:1;2181:45;;;;2228:2;2177:54;;1640:597;-1:-1:-1;;;1640:597:1:o;4677:356::-;4879:2;4861:21;;;4898:18;;;4891:30;4957:34;4952:2;4937:18;;4930:62;5024:2;5009:18;;4677:356::o;6986:225::-;7026:3;7057:1;7053:6;7050:1;7047:13;7044:136;;;7102:10;7097:3;7093:20;7090:1;7083:31;7137:4;7134:1;7127:15;7165:4;7162:1;7155:15;7044:136;-1:-1:-1;7196:9:1;;6986:225::o;7216:380::-;7295:1;7291:12;;;;7338;;;7359:61;;7413:4;7405:6;7401:17;7391:27;;7359:61;7466:2;7458:6;7455:14;7435:18;7432:38;7429:161;;;7512:10;7507:3;7503:20;7500:1;7493:31;7547:4;7544:1;7537:15;7575:4;7572:1;7565:15;7429:161;;7216:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "633800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_SUPPLY()": "240",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24642",
								"balanceOf(address)": "2563",
								"decimals()": "200",
								"decreaseAllowance(address,uint256)": "26910",
								"increaseAllowance(address,uint256)": "27001",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2368",
								"renounceOwnership()": "28162",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "51209",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28400"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2BAB262A2A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "15D59315"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6093,
									"end": 6106,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6093,
									"end": 6106,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6093,
									"end": 6106,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6093,
									"end": 6106,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6093,
									"end": 6098,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6093,
									"end": 6098,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6093,
									"end": 6106,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6093,
									"end": 6106,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6093,
									"end": 6106,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6093,
									"end": 6106,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6117,
									"end": 6124,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6117,
									"end": 6124,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6117,
									"end": 6134,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6026,
									"end": 6142,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17430,
									"end": 17453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 17440,
									"end": 17452,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 17440,
									"end": 17450,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 17440,
									"end": 17450,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17440,
									"end": 17450,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 17440,
									"end": 17452,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17440,
									"end": 17452,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 17440,
									"end": 17452,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 17440,
									"end": 17452,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 17440,
									"end": 17452,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17430,
									"end": 17439,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 17430,
									"end": 17453,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 17430,
									"end": 17453,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 17430,
									"end": 17453,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3993,
									"end": 4091,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3993,
									"end": 4091,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4073,
									"end": 4083,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 4073,
									"end": 4083,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3993,
									"end": 4091,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 18679,
									"end": 18852,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 18679,
									"end": 18852,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18754,
									"end": 18760,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 18754,
									"end": 18760,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18754,
									"end": 18760,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18771,
									"end": 18788,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18771,
									"end": 18788,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18771,
									"end": 18788,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 18771,
									"end": 18788,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18771,
									"end": 18788,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18771,
									"end": 18788,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18771,
									"end": 18788,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 18771,
									"end": 18788,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18771,
									"end": 18788,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 18771,
									"end": 18788,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18804,
									"end": 18844,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18804,
									"end": 18844,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18754,
									"end": 18760,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18754,
									"end": 18760,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18754,
									"end": 18760,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18771,
									"end": 18788,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18754,
									"end": 18760,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18754,
									"end": 18760,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18804,
									"end": 18844,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 18804,
									"end": 18844,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18735,
									"end": 18751,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18735,
									"end": 18751,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18804,
									"end": 18844,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 18724,
									"end": 18852,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18679,
									"end": 18852,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18679,
									"end": 18852,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 94,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 136,
									"end": 148,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 157,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 211,
									"end": 215,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 203,
									"end": 209,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 199,
									"end": 216,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 189,
									"end": 216,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 189,
									"end": 216,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 157,
									"end": 218,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 262,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 253,
									"end": 267,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 233,
									"end": 251,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 230,
									"end": 268,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 227,
									"end": 388,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 227,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 310,
									"end": 320,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 301,
									"end": 321,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 322,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 345,
									"end": 349,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 335,
									"end": 350,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 373,
									"end": 377,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 378,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 227,
									"end": 388,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 227,
									"end": 388,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18885,
									"end": 19364,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206f0d4ead56564f9a446013673affe383f05bfe1e18aa0e536b2adae5c27e71f464736f6c63430008070033",
									".code": [
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "32CB6B0C"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18885,
											"end": 19364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1613,
											"end": 1627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1627,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1578,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1561,
											"end": 1579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1448,
											"end": 1635,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7332,
											"end": 7440,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7332,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7432,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7420,
											"end": 7432,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7440,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7332,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7332,
											"end": 7440,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7332,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6615,
											"end": 6792,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7174,
											"end": 7267,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7174,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7174,
											"end": 7267,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7257,
											"end": 7259,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6939,
											"end": 6975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6939,
											"end": 6975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 6929,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6912,
											"end": 6930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7174,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6797,
											"end": 6981,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18950,
											"end": 19001,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 18950,
											"end": 19001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18950,
											"end": 19001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 18987,
											"end": 19001,
											"name": "PUSH",
											"source": 0,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 18950,
											"end": 19001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18950,
											"end": 19001,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7503,
											"end": 7680,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18193,
											"end": 18287,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 18193,
											"end": 18287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18193,
											"end": 18287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 18193,
											"end": 18287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 18193,
											"end": 18287,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17542,
											"end": 17629,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 17542,
											"end": 17629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17621,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17615,
											"end": 17621,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17542,
											"end": 17629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17542,
											"end": 17629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17615,
											"end": 17621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 1437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17542,
											"end": 17629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1240,
											"end": 1443,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6535,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6431,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6431,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6431,
											"end": 6535,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8306,
											"end": 8313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8349,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 8365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8172,
											"end": 8373,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18442,
											"end": 18671,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 18442,
											"end": 18671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18442,
											"end": 18671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 18442,
											"end": 18671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 18442,
											"end": 18671,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18442,
											"end": 18671,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18442,
											"end": 18671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 18442,
											"end": 18671,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18442,
											"end": 18671,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 18442,
											"end": 18671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18442,
											"end": 18671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 18442,
											"end": 18671,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6279,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6299,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6292,
											"end": 6304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6212,
											"end": 6312,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8661,
											"end": 8700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4073,
											"end": 4083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8691,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8693,
											"end": 8699,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8661,
											"end": 8669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 8661,
											"end": 8700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8661,
											"end": 8700,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 8661,
											"end": 8700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8718,
											"end": 8722,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8520,
											"end": 8730,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9369,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 9379,
											"end": 9385,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9369,
											"end": 9405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9369,
											"end": 9405,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 9369,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9418,
											"end": 9442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9456,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4073,
											"end": 4083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9478,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9478,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9478,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9537,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9537,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4452,
											"end": 4473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4511,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4489,
											"end": 4507,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4489,
											"end": 4507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4489,
											"end": 4507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4482,
											"end": 4512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4582,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4521,
											"end": 4583,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4630,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 4666,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4647,
											"end": 4666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 9489,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9641,
											"end": 9698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 9650,
											"end": 9656,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4073,
											"end": 4083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9691,
											"end": 9697,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9672,
											"end": 9688,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9672,
											"end": 9697,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9641,
											"end": 9649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 9641,
											"end": 9698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9641,
											"end": 9698,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 9641,
											"end": 9698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9729,
											"end": 9733,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9729,
											"end": 9733,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9212,
											"end": 9741,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10150,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4073,
											"end": 4083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10265,
											"end": 10269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10370,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10384,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10359,
											"end": 10393,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10393,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10393,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10265,
											"end": 10269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10265,
											"end": 10269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10287,
											"end": 10417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 10287,
											"end": 10417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10337,
											"end": 10344,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10337,
											"end": 10344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10359,
											"end": 10406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10396,
											"end": 10406,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10396,
											"end": 10406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10359,
											"end": 10406,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10359,
											"end": 10406,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10359,
											"end": 10406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10287,
											"end": 10295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 10287,
											"end": 10417,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17621,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17615,
											"end": 17621,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17615,
											"end": 17621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4073,
											"end": 4083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17762,
											"end": 17785,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18987,
											"end": 19001,
											"name": "PUSH",
											"source": 0,
											"value": "52B7D2DCC80CD2E4000000"
										},
										{
											"begin": 19238,
											"end": 19245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19222,
											"end": 19235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 7420,
											"end": 7432,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7420,
											"end": 7432,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7332,
											"end": 7440,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19222,
											"end": 19235,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 19222,
											"end": 19235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19222,
											"end": 19245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 19222,
											"end": 19245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19222,
											"end": 19245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19222,
											"end": 19245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 19222,
											"end": 19245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19222,
											"end": 19245,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 19222,
											"end": 19245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19222,
											"end": 19259,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19222,
											"end": 19259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 19200,
											"end": 19323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19200,
											"end": 19323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19200,
											"end": 19323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19200,
											"end": 19323,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19200,
											"end": 19323,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4068,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4104,
											"end": 4106,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4084,
											"end": 4102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4077,
											"end": 4107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4177,
											"name": "PUSH",
											"source": 1,
											"value": "57564C543A3A6D696E743A2063616E6E6F7420657863656564206D6178207375"
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4123,
											"end": 4141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70706C79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4194,
											"end": 4212,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4194,
											"end": 4212,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4212,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4187,
											"end": 4221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4257,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4238,
											"end": 4257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19200,
											"end": 19323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3863,
											"end": 4263,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19200,
											"end": 19323,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 19200,
											"end": 19323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19334,
											"end": 19353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 19340,
											"end": 19343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19345,
											"end": 19352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19334,
											"end": 19339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 19334,
											"end": 19353,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19334,
											"end": 19353,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 19334,
											"end": 19353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18193,
											"end": 18287,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 18193,
											"end": 18287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17621,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17615,
											"end": 17621,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17615,
											"end": 17621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4073,
											"end": 4083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17762,
											"end": 17785,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18258,
											"end": 18279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 18276,
											"end": 18277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18258,
											"end": 18267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 18258,
											"end": 18279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18258,
											"end": 18279,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 18258,
											"end": 18279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18193,
											"end": 18287,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6431,
											"end": 6535,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6431,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6487,
											"end": 6500,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6520,
											"end": 6527,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6513,
											"end": 6527,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4073,
											"end": 4083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11070,
											"end": 11074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11130,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11144,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11119,
											"end": 11153,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11153,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11153,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11153,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11186,
											"end": 11221,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11186,
											"end": 11221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11186,
											"end": 11221,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11186,
											"end": 11221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6051,
											"end": 6053,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6033,
											"end": 6054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6090,
											"end": 6092,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6070,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6070,
											"end": 6088,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6129,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6102,
											"end": 6164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6173,
											"end": 6208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6244,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6225,
											"end": 6244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5849,
											"end": 6250,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 11164,
											"end": 11286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11322,
											"end": 11389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 4073,
											"end": 4083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11345,
											"end": 11352,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11373,
											"end": 11388,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11354,
											"end": 11370,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11354,
											"end": 11388,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11322,
											"end": 11330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 11322,
											"end": 11389,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11322,
											"end": 11389,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 11322,
											"end": 11389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11420,
											"end": 11424,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11420,
											"end": 11424,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10950,
											"end": 11432,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7893,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8015,
											"end": 8019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8037,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4073,
											"end": 4083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8061,
											"end": 8070,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8037,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8037,
											"end": 8079,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18442,
											"end": 18671,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 18442,
											"end": 18671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17615,
											"end": 17621,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17615,
											"end": 17621,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17615,
											"end": 17621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4073,
											"end": 4083,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17762,
											"end": 17785,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 17754,
											"end": 17822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18545,
											"end": 18567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18545,
											"end": 18567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18523,
											"end": 18633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 18523,
											"end": 18633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18523,
											"end": 18633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18523,
											"end": 18633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18523,
											"end": 18633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18523,
											"end": 18633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 2850,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18523,
											"end": 18633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18523,
											"end": 18633,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18523,
											"end": 18633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3006,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3023,
											"end": 3042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18523,
											"end": 18633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2646,
											"end": 3048,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18523,
											"end": 18633,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 18523,
											"end": 18633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18644,
											"end": 18663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 18654,
											"end": 18662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18644,
											"end": 18653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 18644,
											"end": 18663,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18644,
											"end": 18663,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 18644,
											"end": 18663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18442,
											"end": 18671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18442,
											"end": 18671,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14740,
											"end": 15120,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14740,
											"end": 15120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14876,
											"end": 14895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14876,
											"end": 14895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5646,
											"end": 5648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5628,
											"end": 5649,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5687,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5688,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5724,
											"end": 5758,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 5704,
											"end": 5722,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5704,
											"end": 5722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5704,
											"end": 5722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5775,
											"end": 5793,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5775,
											"end": 5793,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5802,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5838,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5819,
											"end": 5838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5444,
											"end": 5844,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 14868,
											"end": 14936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14955,
											"end": 14976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3257,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3237,
											"end": 3258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3296,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3274,
											"end": 3292,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3274,
											"end": 3292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3333,
											"end": 3367,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3306,
											"end": 3368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3445,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3426,
											"end": 3445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3053,
											"end": 3451,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 14947,
											"end": 15015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15039,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15046,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15055,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15064,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15028,
											"end": 15064,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6786,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15112,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 15120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 15120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 15120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 15120,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11922,
											"end": 12692,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11922,
											"end": 12692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12062,
											"end": 12082,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12062,
											"end": 12082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5240,
											"end": 5242,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5222,
											"end": 5243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5281,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5259,
											"end": 5277,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5259,
											"end": 5277,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5259,
											"end": 5277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5252,
											"end": 5282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5318,
											"end": 5352,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5298,
											"end": 5316,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5298,
											"end": 5316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5298,
											"end": 5316,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5369,
											"end": 5387,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5369,
											"end": 5387,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5369,
											"end": 5387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5362,
											"end": 5397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5414,
											"end": 5433,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5414,
											"end": 5433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5038,
											"end": 5439,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 12054,
											"end": 12124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12143,
											"end": 12166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12143,
											"end": 12166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2485,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2486,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2556,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2502,
											"end": 2520,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2502,
											"end": 2520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2616,
											"end": 2635,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2616,
											"end": 2635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2242,
											"end": 2641,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 12135,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12279,
											"end": 12300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12303,
											"end": 12320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 12376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 12376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 12376,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 12376,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3658,
											"end": 3660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3697,
											"end": 3699,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3677,
											"end": 3695,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3677,
											"end": 3695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3677,
											"end": 3695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3700,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3770,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3709,
											"end": 3771,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3456,
											"end": 3858,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 12331,
											"end": 12442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12495,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12498,
											"end": 12520,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12498,
											"end": 12520,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12498,
											"end": 12520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12520,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12562,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12562,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12514,
											"end": 12520,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12514,
											"end": 12520,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12478,
											"end": 12487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12514,
											"end": 12520,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12514,
											"end": 12520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12542,
											"end": 12572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12607,
											"end": 12616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12599,
											"end": 12605,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12618,
											"end": 12624,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6615,
											"end": 6792,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12590,
											"end": 12625,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12043,
											"end": 12692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11922,
											"end": 12692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11922,
											"end": 12692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11922,
											"end": 12692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11922,
											"end": 12692,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12979,
											"end": 13378,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 12979,
											"end": 13378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13063,
											"end": 13084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13063,
											"end": 13084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13055,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 13055,
											"end": 13120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13055,
											"end": 13120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13055,
											"end": 13120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13055,
											"end": 13120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13055,
											"end": 13120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6457,
											"end": 6459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13055,
											"end": 13120,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13055,
											"end": 13120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13055,
											"end": 13120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6498,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6476,
											"end": 6494,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6476,
											"end": 6494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6568,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 6515,
											"end": 6533,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6515,
											"end": 6533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6508,
											"end": 6569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6586,
											"end": 6604,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6586,
											"end": 6604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13055,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6255,
											"end": 6610,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13055,
											"end": 13120,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 13055,
											"end": 13120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13207,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13195,
											"end": 13207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13195,
											"end": 13217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 13195,
											"end": 13217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 13195,
											"end": 13217,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13195,
											"end": 13217,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 13195,
											"end": 13217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13195,
											"end": 13217,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13228,
											"end": 13237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13228,
											"end": 13246,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13228,
											"end": 13256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13228,
											"end": 13256,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13250,
											"end": 13256,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13250,
											"end": 13256,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13228,
											"end": 13237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13228,
											"end": 13256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 13228,
											"end": 13256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13250,
											"end": 13256,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13250,
											"end": 13256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13228,
											"end": 13256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 13228,
											"end": 13256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13228,
											"end": 13256,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 13228,
											"end": 13256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13228,
											"end": 13256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13228,
											"end": 13256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13228,
											"end": 13256,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13272,
											"end": 13309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13272,
											"end": 13309,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6761,
											"end": 6786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13272,
											"end": 13309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13272,
											"end": 13309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13272,
											"end": 13309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13289,
											"end": 13290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13272,
											"end": 13309,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13272,
											"end": 13309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6749,
											"end": 6751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13272,
											"end": 13309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13272,
											"end": 13309,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13272,
											"end": 13309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13272,
											"end": 13309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13272,
											"end": 13309,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13272,
											"end": 13309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13272,
											"end": 13309,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19128,
											"end": 19361,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18679,
											"end": 18852,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 18679,
											"end": 18852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18754,
											"end": 18760,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 18754,
											"end": 18760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18754,
											"end": 18760,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18771,
											"end": 18788,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18788,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18771,
											"end": 18788,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18788,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18788,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18788,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18788,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18804,
											"end": 18844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18804,
											"end": 18844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18754,
											"end": 18760,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18754,
											"end": 18760,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18754,
											"end": 18760,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18754,
											"end": 18760,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18754,
											"end": 18760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18804,
											"end": 18844,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 18804,
											"end": 18844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18735,
											"end": 18751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18735,
											"end": 18751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18804,
											"end": 18844,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 18724,
											"end": 18852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18679,
											"end": 18852,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1640,
											"end": 2237,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1640,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1810,
											"end": 1812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1799,
											"end": 1808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1885,
											"end": 1891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 1882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1878,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1934,
											"end": 1940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1941,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2043,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2049,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2012,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1984,
											"end": 2050,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 1920,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2085,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2160,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2069,
											"end": 2160,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2132,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2115,
											"end": 2146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2160,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2069,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2221,
											"end": 2223,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2200,
											"end": 2215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2196,
											"end": 2225,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2230,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2177,
											"end": 2231,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 2237,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1640,
											"end": 2237,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4677,
											"end": 5033,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4677,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4881,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4861,
											"end": 4882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 4882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 4882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4898,
											"end": 4916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4898,
											"end": 4916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4898,
											"end": 4916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4957,
											"end": 4991,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4952,
											"end": 4954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4937,
											"end": 4955,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4937,
											"end": 4955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 4992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5026,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5009,
											"end": 5027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5009,
											"end": 5027,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4677,
											"end": 5033,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6986,
											"end": 7211,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6986,
											"end": 7211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7026,
											"end": 7029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7057,
											"end": 7058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7053,
											"end": 7059,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7050,
											"end": 7051,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7047,
											"end": 7060,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7180,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 7044,
											"end": 7180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7102,
											"end": 7112,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 7097,
											"end": 7100,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7093,
											"end": 7113,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7090,
											"end": 7091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7083,
											"end": 7114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7141,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7134,
											"end": 7135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7127,
											"end": 7142,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7165,
											"end": 7169,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7162,
											"end": 7163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7155,
											"end": 7170,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7180,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 7044,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7196,
											"end": 7205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7196,
											"end": 7205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6986,
											"end": 7211,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7216,
											"end": 7596,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 7216,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7295,
											"end": 7296,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7291,
											"end": 7303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7303,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7338,
											"end": 7350,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7338,
											"end": 7350,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7338,
											"end": 7350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7359,
											"end": 7420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 7359,
											"end": 7420,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7413,
											"end": 7417,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 7405,
											"end": 7411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7401,
											"end": 7418,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7391,
											"end": 7418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7391,
											"end": 7418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7359,
											"end": 7420,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 7359,
											"end": 7420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7466,
											"end": 7468,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7458,
											"end": 7464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7469,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 7453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7432,
											"end": 7470,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7429,
											"end": 7590,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7429,
											"end": 7590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 7429,
											"end": 7590,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7512,
											"end": 7522,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 7507,
											"end": 7510,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7503,
											"end": 7523,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7493,
											"end": 7524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7547,
											"end": 7551,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7544,
											"end": 7545,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7537,
											"end": 7552,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7575,
											"end": 7579,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7572,
											"end": 7573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7565,
											"end": 7580,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7429,
											"end": 7590,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 7429,
											"end": 7590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7429,
											"end": 7590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7216,
											"end": 7596,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7216,
											"end": 7596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7216,
											"end": 7596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7216,
											"end": 7596,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"MAX_SUPPLY()": "32cb6b0c",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mint(address,uint256)\":{\"notice\":\"Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WVLTToken.sol\":\"WVLTToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/WVLTToken.sol\":{\"keccak256\":\"0xa7822fe14f3fe2de91ec7d733038c03e5ca55dcea2ade270dbe9a3f897952682\",\"urls\":[\"bzz-raw://5faaf328033f1035a990367640b0dd20a9cfc4f1ffc62834edfc97e9f22b0002\",\"dweb:/ipfs/QmewABb842VBUrEvKq3aCDbmqVh5hcgyA1bG3oJqvr3pGk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 133,
								"contract": "contracts/WVLTToken.sol:WVLTToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "contracts/WVLTToken.sol:WVLTToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "contracts/WVLTToken.sol:WVLTToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "contracts/WVLTToken.sol:WVLTToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "contracts/WVLTToken.sol:WVLTToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 669,
								"contract": "contracts/WVLTToken.sol:WVLTToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"mint(address,uint256)": {
								"notice": "Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/WVLTToken.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/WVLTToken.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/WVLTToken.sol": {
				"ast": {
					"absolutePath": "contracts/WVLTToken.sol",
					"exportedSymbols": {
						"Context": [
							121
						],
						"ERC20": [
							663
						],
						"IERC20": [
							77
						],
						"IERC20Metadata": [
							100
						],
						"Ownable": [
							765
						],
						"WVLTToken": [
							802
						]
					},
					"id": 803,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "27:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "111:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "125:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "208:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "219:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "245:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "244:9:0"
									},
									"scope": 77,
									"src": "199:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "262:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "351:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "369:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "361:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "401:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "400:9:0"
									},
									"scope": 77,
									"src": "342:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "418:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "648:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "665:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "657:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "684:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "676:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "728:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:6:0"
									},
									"scope": 77,
									"src": "639:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "742:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1027:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1045:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1037:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1037:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1060:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1052:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1036:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1119:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:9:0"
									},
									"scope": 77,
									"src": "1018:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1136:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1806:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1822:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1814:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1839:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1831:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1865:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1865:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1864:6:0"
									},
									"scope": 77,
									"src": "1797:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1879:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2198:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2229:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2221:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2254:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2246:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2282:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2274:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2210:85:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2314:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2314:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2313:6:0"
									},
									"scope": 77,
									"src": "2189:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2328:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nameLocation": "2503:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2528:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2512:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2550:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2534:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2562:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2554:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2511:57:0"
									},
									"src": "2497:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2577:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nameLocation": "2740:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2775:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2759:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2759:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2807:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2791:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2833:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2825:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2825:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2748:97:0"
									},
									"src": "2734:112:0"
								}
							],
							"scope": 803,
							"src": "101:2748:0",
							"usedErrors": []
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2853:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3030:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3030:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "2880:120:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3012:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3044:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3115:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3119:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3145:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3145:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3144:15:0"
									},
									"scope": 100,
									"src": "3106:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3168:58:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3241:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3247:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3273:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3272:15:0"
									},
									"scope": 100,
									"src": "3232:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3296:67:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3378:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3386:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3412:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3412:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:7:0"
									},
									"scope": 100,
									"src": "3369:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 803,
							"src": "3002:420:0",
							"usedErrors": []
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3426:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3453:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "Context",
							"nameLocation": "3978:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4055:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4073:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4073:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4066:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4002:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4012:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4046:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4046:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4045:9:0"
									},
									"scope": 121,
									"src": "3993:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4166:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4184:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4184:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4177:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4108:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4150:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4150:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4149:16:0"
									},
									"scope": 121,
									"src": "4099:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 803,
							"src": "3960:243:0",
							"usedErrors": []
						},
						{
							"id": 122,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4207:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 124,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "5450:7:0"
									},
									"id": 125,
									"nodeType": "InheritanceSpecifier",
									"src": "5450:7:0"
								},
								{
									"baseName": {
										"id": 126,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "5459:6:0"
									},
									"id": 127,
									"nodeType": "InheritanceSpecifier",
									"src": "5459:6:0"
								},
								{
									"baseName": {
										"id": 128,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "5467:14:0"
									},
									"id": 129,
									"nodeType": "InheritanceSpecifier",
									"src": "5467:14:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 123,
								"nodeType": "StructuredDocumentation",
								"src": "4234:1196:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 663,
							"linearizedBaseContracts": [
								663,
								100,
								77,
								121
							],
							"name": "ERC20",
							"nameLocation": "5441:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 133,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "5525:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5489:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 132,
										"keyType": {
											"id": 130,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5497:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5489:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 131,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5508:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 139,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "5599:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5543:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 138,
										"keyType": {
											"id": 134,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5551:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5543:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 137,
											"keyType": {
												"id": 135,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5570:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "5562:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 136,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5581:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 141,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "5635:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5619:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5619:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 143,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "5671:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5656:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 142,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5656:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 145,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "5698:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5683:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 144,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5683:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6082:60:0",
										"statements": [
											{
												"expression": {
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 153,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "6093:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 154,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "6101:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6093:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "6093:13:0"
											},
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 157,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "6117:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 158,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "6127:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6117:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "6117:17:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5714:306:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 162,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "6052:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "6038:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 147,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6038:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "6073:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "6059:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6059:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6037:44:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6082:0:0"
									},
									"scope": 663,
									"src": "6026:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "6281:31:0",
										"statements": [
											{
												"expression": {
													"id": 169,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 143,
													"src": "6299:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 168,
												"id": 170,
												"nodeType": "Return",
												"src": "6292:12:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6150:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "6221:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 165,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6248:8:0"
									},
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6225:2:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "6266:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6266:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6265:15:0"
									},
									"scope": 663,
									"src": "6212:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "6502:33:0",
										"statements": [
											{
												"expression": {
													"id": 179,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "6520:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 178,
												"id": 180,
												"nodeType": "Return",
												"src": "6513:14:0"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "6320:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "6440:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6469:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6446:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6487:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6487:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6486:15:0"
									},
									"scope": 663,
									"src": "6431:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "7239:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7257:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 188,
												"id": 190,
												"nodeType": "Return",
												"src": "7250:9:0"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "6543:625:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "7183:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 185,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7214:8:0"
									},
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7191:2:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "7232:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 186,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7232:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7231:7:0"
									},
									"scope": 663,
									"src": "7174:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										8
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "7402:38:0",
										"statements": [
											{
												"expression": {
													"id": 199,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 141,
													"src": "7420:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 198,
												"id": 200,
												"nodeType": "Return",
												"src": "7413:19:0"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "7275:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "7341:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 195,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7375:8:0"
									},
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7352:2:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "7393:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7392:9:0"
									},
									"scope": 663,
									"src": "7332:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										16
									],
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "7636:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 211,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "7654:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 213,
													"indexExpression": {
														"id": 212,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "7664:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7654:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 210,
												"id": 214,
												"nodeType": "Return",
												"src": "7647:25:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "7448:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7512:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 207,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7595:8:0"
									},
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7530:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "7522:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7522:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7521:17:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "7622:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7621:9:0"
									},
									"scope": 663,
									"src": "7503:177:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "8026:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 228,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "8047:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8047:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 230,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "8061:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 231,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "8072:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 227,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "8037:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8037:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "8037:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8097:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 226,
												"id": 235,
												"nodeType": "Return",
												"src": "8090:11:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "7688:199:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "7902:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 223,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7988:8:0"
									},
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7919:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "7911:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7911:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7938:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "7930:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7930:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7910:35:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "8015:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8015:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8014:6:0"
									},
									"scope": 663,
									"src": "7893:216:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										36
									],
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "8320:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 248,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "8338:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 250,
														"indexExpression": {
															"id": 249,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "8350:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8338:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 252,
													"indexExpression": {
														"id": 251,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "8357:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8338:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 253,
												"nodeType": "Return",
												"src": "8331:34:0"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "8117:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "8181:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 244,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8279:8:0"
									},
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8199:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "8191:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8191:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8214:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "8206:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8190:32:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "8306:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8305:9:0"
									},
									"scope": 663,
									"src": "8172:201:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										46
									],
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "8650:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 267,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "8670:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8670:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 269,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "8684:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 270,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8693:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 266,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "8661:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8661:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "8661:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8718:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 265,
												"id": 274,
												"nodeType": "Return",
												"src": "8711:11:0"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "8381:133:0",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "8529:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 262,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8612:8:0"
									},
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8545:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "8537:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8537:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8562:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "8554:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:33:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "8639:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8639:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8638:6:0"
									},
									"scope": 663,
									"src": "8520:210:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										58
									],
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "9358:383:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 290,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "9379:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 291,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "9387:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 292,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "9398:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 289,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "9369:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9369:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "9369:36:0"
											},
											{
												"assignments": [
													296
												],
												"declarations": [
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "9426:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 323,
														"src": "9418:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 295,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9418:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 303,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 297,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "9445:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 299,
														"indexExpression": {
															"id": 298,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "9457:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9445:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 302,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 300,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "9465:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9465:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9445:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9418:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 305,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "9511:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 306,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "9531:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9511:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9552:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9489:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9489:116:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "9489:116:0"
											},
											{
												"id": 320,
												"nodeType": "UncheckedBlock",
												"src": "9616:94:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 312,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "9650:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 313,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "9658:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9658:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 315,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "9672:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 316,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 283,
																		"src": "9691:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9672:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 311,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "9641:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9641:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 319,
														"nodeType": "ExpressionStatement",
														"src": "9641:57:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9729:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 288,
												"id": 322,
												"nodeType": "Return",
												"src": "9722:11:0"
											}
										]
									},
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "8738:468:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "9221:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 285,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9334:8:0"
									},
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9252:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9244:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9244:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "9277:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9269:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9269:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9305:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9297:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9297:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9233:85:0"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9352:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9352:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9351:6:0"
									},
									"scope": 663,
									"src": "9212:529:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "10276:171:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 335,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "10310:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10310:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "10337:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 338,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 139,
																		"src": "10359:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 341,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 339,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "10371:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10371:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10359:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 343,
																"indexExpression": {
																	"id": 342,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "10385:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10359:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 344,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "10396:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10359:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 334,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "10287:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10287:130:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "10287:130:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10435:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 333,
												"id": 349,
												"nodeType": "Return",
												"src": "10428:11:0"
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "9749:395:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "10159:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10185:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "10177:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10177:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "10202:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "10194:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10176:37:0"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "10265:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10265:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10264:6:0"
									},
									"scope": 663,
									"src": "10150:297:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "11081:351:0",
										"statements": [
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11100:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "11092:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 369,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 363,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "11119:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 366,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 364,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "11131:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11131:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11119:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 368,
													"indexExpression": {
														"id": 367,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "11145:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11119:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11092:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 371,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "11186:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 372,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "11206:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11186:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11236:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11164:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11164:122:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "11164:122:0"
											},
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "11297:104:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 378,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "11331:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11331:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 380,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "11345:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 381,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "11354:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 382,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 356,
																		"src": "11373:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11354:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 377,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "11322:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11322:67:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 385,
														"nodeType": "ExpressionStatement",
														"src": "11322:67:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11420:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 360,
												"id": 388,
												"nodeType": "Return",
												"src": "11413:11:0"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "10455:489:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "10959:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10985:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "10977:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10977:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "11002:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "10994:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10976:42:0"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "11070:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11070:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11069:6:0"
									},
									"scope": 663,
									"src": "10950:482:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "12043:649:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 401,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "12062:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12080:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12072:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12072:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12072:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12062:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12084:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12054:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12054:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "12054:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "12143:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12164:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12156:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 412,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12156:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12156:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12143:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12168:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12135:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12135:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "12135:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "12240:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 422,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "12248:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 423,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "12259:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "12219:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12219:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "12219:47:0"
											},
											{
												"assignments": [
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "12287:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "12279:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 426,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12279:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 431,
												"initialValue": {
													"baseExpression": {
														"id": 428,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "12303:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 430,
													"indexExpression": {
														"id": 429,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "12313:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12303:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12279:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 433,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "12353:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 434,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "12370:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12353:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12391:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12331:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12331:111:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "12331:111:0"
											},
											{
												"id": 447,
												"nodeType": "UncheckedBlock",
												"src": "12453:79:0",
												"statements": [
													{
														"expression": {
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 439,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "12478:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 441,
																"indexExpression": {
																	"id": 440,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "12488:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12478:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 442,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "12498:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 443,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "12514:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12498:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12478:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 446,
														"nodeType": "ExpressionStatement",
														"src": "12478:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 448,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "12542:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 450,
														"indexExpression": {
															"id": 449,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "12552:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12542:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 451,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "12566:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12542:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "12542:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 455,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "12599:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 456,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "12607:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 457,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "12618:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 454,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "12590:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12590:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "EmitStatement",
												"src": "12585:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "12658:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "12666:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "12677:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 460,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "12638:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12638:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "12638:46:0"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "11440:476:0",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11931:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "11959:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "11951:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "11984:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "11976:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11976:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12012:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "12004:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11940:85:0"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12043:0:0"
									},
									"scope": 663,
									"src": "11922:770:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "13044:334:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 476,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "13063:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13082:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13074:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 477,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13074:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13074:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13063:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13086:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13055:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13055:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "13055:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13162:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13154:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 486,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13154:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13154:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "13166:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "13175:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 485,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "13133:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13133:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "13133:49:0"
											},
											{
												"expression": {
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 494,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "13195:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 495,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "13211:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13195:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "13195:22:0"
											},
											{
												"expression": {
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 498,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "13228:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 500,
														"indexExpression": {
															"id": 499,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "13238:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13228:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 501,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "13250:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13228:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "13228:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13289:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13281:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 505,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13281:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13281:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "13293:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "13302:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 504,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "13272:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13272:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "EmitStatement",
												"src": "13267:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13350:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13342:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 514,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13342:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13342:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "13354:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "13363:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "13322:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13322:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "13322:48:0"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "12700:273:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "12988:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13002:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "12994:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13019:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "13011:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12993:33:0"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13044:0:0"
									},
									"scope": 663,
									"src": "12979:399:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "13776:526:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "13795:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13814:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13806:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 533,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13806:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13806:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13795:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13818:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13787:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13787:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "13787:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 542,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "13888:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13905:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13897:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 543,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13897:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13897:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 547,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "13909:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 541,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "13867:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13867:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "13867:49:0"
											},
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "13937:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 594,
														"src": "13929:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 550,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13929:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 555,
												"initialValue": {
													"baseExpression": {
														"id": 552,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "13954:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 554,
													"indexExpression": {
														"id": 553,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "13964:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13954:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13929:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 557,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "13991:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 558,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "14009:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13991:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14017:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 556,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13983:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13983:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "13983:71:0"
											},
											{
												"id": 571,
												"nodeType": "UncheckedBlock",
												"src": "14065:81:0",
												"statements": [
													{
														"expression": {
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 563,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "14090:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 565,
																"indexExpression": {
																	"id": 564,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "14100:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "14090:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 566,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "14111:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 567,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "14128:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14111:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14090:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 570,
														"nodeType": "ExpressionStatement",
														"src": "14090:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 572,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "14156:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 573,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "14172:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14156:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "14156:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 577,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "14205:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14222:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14214:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 578,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14214:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14214:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 582,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "14226:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 576,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "14196:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14196:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 584,
												"nodeType": "EmitStatement",
												"src": "14191:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 586,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "14266:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14283:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14275:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 587,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14275:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14275:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "14287:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 585,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "14246:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14246:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "14246:48:0"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "13386:319:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "13720:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13734:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "13726:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13751:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "13743:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13725:33:0"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13776:0:0"
									},
									"scope": 663,
									"src": "13711:591:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "14857:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 606,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "14876:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14893:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14885:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 607,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14885:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14885:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14876:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14897:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 605,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14868:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14868:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "14868:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 616,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "14955:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14974:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14966:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 617,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14966:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14966:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14955:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14978:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14947:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14947:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "14947:68:0"
											},
											{
												"expression": {
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 625,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "15028:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 628,
															"indexExpression": {
																"id": 626,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "15040:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15028:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 629,
														"indexExpression": {
															"id": 627,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "15047:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15028:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 630,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "15058:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15028:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "15028:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 634,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "15089:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "15096:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 636,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "15105:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 633,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "15080:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15080:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "EmitStatement",
												"src": "15075:37:0"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "14310:424:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14749:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14776:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "14768:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14768:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14800:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "14792:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14792:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14826:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "14818:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14757:82:0"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14857:0:0"
									},
									"scope": 663,
									"src": "14740:380:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "15843:2:0",
										"statements": []
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "15128:586:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15729:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15768:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "15760:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15791:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "15783:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15783:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15812:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "15804:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15804:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15749:76:0"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15843:0:0"
									},
									"scope": 663,
									"src": "15720:125:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "16571:2:0",
										"statements": []
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "15853:590:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "16458:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16496:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "16488:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16488:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16519:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "16511:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16540:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "16532:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16477:76:0"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16571:0:0"
									},
									"scope": 663,
									"src": "16449:124:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 803,
							"src": "5432:11144:0",
							"usedErrors": []
						},
						{
							"id": 664,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "16580:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 666,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "17143:7:0"
									},
									"id": 667,
									"nodeType": "InheritanceSpecifier",
									"src": "17143:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 665,
								"nodeType": "StructuredDocumentation",
								"src": "16607:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 765,
							"linearizedBaseContracts": [
								765,
								121
							],
							"name": "Ownable",
							"nameLocation": "17132:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 669,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "17174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 765,
									"src": "17158:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 668,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "17158:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 675,
									"name": "OwnershipTransferred",
									"nameLocation": "17195:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "17242:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "17226:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17226:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "17282:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "17266:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17266:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17215:82:0"
									},
									"src": "17189:109:0"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "17419:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 680,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "17440:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17440:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 679,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "17430:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17430:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "17430:23:0"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "17306:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 685,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17416:2:0"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17419:0:0"
									},
									"scope": 765,
									"src": "17405:56:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "17597:32:0",
										"statements": [
											{
												"expression": {
													"id": 691,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 669,
													"src": "17615:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 690,
												"id": 692,
												"nodeType": "Return",
												"src": "17608:13:0"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "17469:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "17551:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17556:2:0"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "17588:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17588:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17587:9:0"
									},
									"scope": 765,
									"src": "17542:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "17743:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 698,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "17762:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17762:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 700,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "17773:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17773:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17762:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17787:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 697,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17754:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17754:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "17754:68:0"
											},
											{
												"id": 706,
												"nodeType": "PlaceholderStatement",
												"src": "17833:1:0"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "17637:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 708,
									"name": "onlyOwner",
									"nameLocation": "17731:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17740:2:0"
									},
									"src": "17722:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "18247:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18276:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18268:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 715,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18268:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18268:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 714,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "18258:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18258:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "18258:21:0"
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "17850:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 712,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 711,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 708,
												"src": "18237:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "18237:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "18202:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18219:2:0"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18247:0:0"
									},
									"scope": 765,
									"src": "18193:94:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "18512:159:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 731,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "18545:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18565:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18557:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 732,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18557:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18557:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18545:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18582:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 730,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18523:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18523:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "18523:110:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 741,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "18654:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 740,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "18644:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18644:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "18644:19:0"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "18295:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 728,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 727,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 708,
												"src": "18502:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "18502:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "18451:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "18477:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "18469:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18468:18:0"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18512:0:0"
									},
									"scope": 765,
									"src": "18442:229:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "18724:128:0",
										"statements": [
											{
												"assignments": [
													751
												],
												"declarations": [
													{
														"constant": false,
														"id": 751,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "18743:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 763,
														"src": "18735:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 750,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "18735:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"initialValue": {
													"id": 752,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 669,
													"src": "18754:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18735:25:0"
											},
											{
												"expression": {
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 754,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "18771:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 755,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "18780:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18771:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "18771:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 759,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "18825:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 760,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "18835:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 758,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "18804:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18804:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "EmitStatement",
												"src": "18799:45:0"
											}
										]
									},
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "18688:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "18706:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "18698:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18697:18:0"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18724:0:0"
									},
									"scope": 765,
									"src": "18679:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 803,
							"src": "17114:1741:0",
							"usedErrors": []
						},
						{
							"id": 766,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "18859:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"hexValue": "57564c54546f6b656e",
											"id": 768,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "18913:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_6ba495207c6d8a3d513204c419acdcadac4704b9afd1a06eb46acd37a0d77c8b",
												"typeString": "literal_string \"WVLTToken\""
											},
											"value": "WVLTToken"
										},
										{
											"hexValue": "57564c54",
											"id": 769,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "18926:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_0f0e60ae7c35c78dfdbc0a5352cc8cdcea55ea8a4002742fe12d2bbd3d3b7eaa",
												"typeString": "literal_string \"WVLT\""
											},
											"value": "WVLT"
										}
									],
									"baseName": {
										"id": 767,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "18907:5:0"
									},
									"id": 770,
									"nodeType": "InheritanceSpecifier",
									"src": "18907:26:0"
								},
								{
									"baseName": {
										"id": 771,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 765,
										"src": "18935:7:0"
									},
									"id": 772,
									"nodeType": "InheritanceSpecifier",
									"src": "18935:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 802,
							"linearizedBaseContracts": [
								802,
								765,
								663,
								100,
								77,
								121
							],
							"name": "WVLTToken",
							"nameLocation": "18894:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "32cb6b0c",
									"id": 775,
									"mutability": "constant",
									"name": "MAX_SUPPLY",
									"nameLocation": "18974:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 802,
									"src": "18950:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 773,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18950:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130305f3030305f303030653138",
										"id": 774,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "18987:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000000"
										},
										"value": "100_000_000e18"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "19189:172:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 786,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "19222:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19222:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 788,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "19238:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19222:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 790,
																"name": "MAX_SUPPLY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "19249:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19222:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57564c543a3a6d696e743a2063616e6e6f7420657863656564206d617820737570706c79",
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19274:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64e3dc9b46300a34b5e719bb4baafaedcf0d2f4e35eb6f2d9d47e7cdf6e06161",
																"typeString": "literal_string \"WVLT::mint: cannot exceed max supply\""
															},
															"value": "WVLT::mint: cannot exceed max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64e3dc9b46300a34b5e719bb4baafaedcf0d2f4e35eb6f2d9d47e7cdf6e06161",
																"typeString": "literal_string \"WVLT::mint: cannot exceed max supply\""
															}
														],
														"id": 785,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19200:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19200:123:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "19200:123:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 796,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "19340:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 797,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "19345:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 795,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "19334:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19334:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "19334:19:0"
											}
										]
									},
									"documentation": {
										"id": 776,
										"nodeType": "StructuredDocumentation",
										"src": "19030:92:0",
										"text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
									},
									"functionSelector": "40c10f19",
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 783,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 782,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 708,
												"src": "19179:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "19179:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "19137:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "19150:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "19142:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19142:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "19163:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "19155:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19141:30:0"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19189:0:0"
									},
									"scope": 802,
									"src": "19128:233:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 803,
							"src": "18885:479:0",
							"usedErrors": []
						}
					],
					"src": "0:19364:0"
				},
				"id": 0
			}
		}
	}
}