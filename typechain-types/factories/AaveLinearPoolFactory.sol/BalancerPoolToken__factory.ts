/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BalancerPoolToken,
  BalancerPoolTokenInterface,
} from "../../AaveLinearPoolFactory.sol/BalancerPoolToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "contract IVault",
        name: "vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960e0523480156200003657600080fd5b5060405162000e8d38038062000e8d833981016040819052620000599162000250565b8280604051806040016040528060018152602001603160f81b815250858581600390805190602001906200008f92919062000109565b508051620000a590600490602084019062000109565b505060058054601260ff19909116179055508151602092830120608052805191012060a052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60c05260601b6001600160601b0319166101005250620002d99050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200014157600085556200018c565b82601f106200015c57805160ff19168380011785556200018c565b828001600101855582156200018c579182015b828111156200018c5782518255916020019190600101906200016f565b506200019a9291506200019e565b5090565b5b808211156200019a57600081556001016200019f565b600082601f830112620001c6578081fd5b81516001600160401b0380821115620001db57fe5b6040516020601f8401601f1916820181018381118382101715620001fb57fe5b604052838252858401810187101562000212578485fd5b8492505b8383101562000235578583018101518284018201529182019162000216565b838311156200024657848185840101525b5095945050505050565b60008060006060848603121562000265578283fd5b83516001600160401b03808211156200027c578485fd5b6200028a87838801620001b5565b94506020860151915080821115620002a0578384fd5b50620002af86828701620001b5565b604086015190935090506001600160a01b0381168114620002ce578182fd5b809150509250925092565b60805160a05160c05160e0516101005160601c610b716200031c600039806103a75250806104aa52508061075952508061079b52508061077a5250610b716000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c806306fdde03146100ca578063095ea7b3146100e857806318160ddd1461010857806323b872dd1461011d578063313ce567146101305780633644e51514610145578063395093511461014d57806370a08231146101605780637ecebe00146101735780638d928af81461018657806395d89b411461019b578063a457c2d7146101a3578063a9059cbb146101b6578063d505accf146101c9578063dd62ed3e146101de575b600080fd5b6100d26101f1565b6040516100df9190610ada565b60405180910390f35b6100fb6100f63660046109f0565b610287565b6040516100df9190610a34565b61011061029e565b6040516100df9190610a3f565b6100fb61012b366004610944565b6102a4565b610138610318565b6040516100df9190610b2d565b610110610321565b6100fb61015b3660046109f0565b610330565b61011061016e3660046108f8565b61036b565b6101106101813660046108f8565b61038a565b61018e6103a5565b6040516100df9190610ac6565b6100d26103c9565b6100fb6101b13660046109f0565b61042a565b6100fb6101c43660046109f0565b610468565b6101dc6101d736600461097f565b610475565b005b6101106101ec366004610912565b6105be565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561027d5780601f106102525761010080835404028352916020019161027d565b820191906000526020600020905b81548152906001019060200180831161026057829003601f168201915b5050505050905090565b60006102943384846105fb565b5060015b92915050565b60025490565b6000806102b185336105be565b90506102d5336001600160a01b03871614806102cd5750838210155b61019e610663565b6102e0858585610675565b336001600160a01b038616148015906102fb57506000198114155b1561030d5761030d85338584036105fb565b506001949350505050565b60055460ff1690565b600061032b610755565b905090565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161029491859061036690866107f2565b6105fb565b6001600160a01b0381166000908152602081905260409020545b919050565b6001600160a01b031660009081526006602052604090205490565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561027d5780601f106102525761010080835404028352916020019161027d565b60008061043733856105be565b90508083106104515761044c338560006105fb565b61045e565b61045e33858584036105fb565b5060019392505050565b6000610294338484610675565b6104838442111560d1610663565b6001600160a01b03871660009081526006602090815260408083205490519092916104da917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d9101610a48565b60405160208183030381529060405280519060200120905060006104fd8261080b565b90506000600182888888604051600081526020016040526040516105249493929190610aa8565b6020604051602081039080840390855afa158015610546573d6000803e3d6000fd5b5050604051601f190151915061058890506001600160a01b0382161580159061058057508b6001600160a01b0316826001600160a01b0316145b6101f8610663565b6001600160a01b038b1660009081526006602052604090206001850190556105b18b8b8b6105fb565b5050505050505050505050565b60006105c86103a5565b6001600160a01b0316826001600160a01b031614156105ea5750600019610298565b6105f48383610844565b9050610298565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610656908590610a3f565b60405180910390a3505050565b81610671576106718161086f565b5050565b61068c6001600160a01b0384161515610198610663565b6106a36001600160a01b0383161515610199610663565b6106ae8383836108c2565b6001600160a01b0383166000908152602081905260409020546106d490826101a06108c7565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461070390826107f2565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610656908590610a3f565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006107c26108dd565b306040516020016107d7959493929190610a7c565b60405160208183030381529060405280519060200120905090565b60008282016108048482101583610663565b9392505050565b6000610815610755565b82604051602001610827929190610a19565b604051602081830303815290604052805190602001209050919050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b505050565b60006108d68484111583610663565b5050900390565b4690565b80356001600160a01b038116811461038557600080fd5b600060208284031215610909578081fd5b610804826108e1565b60008060408385031215610924578081fd5b61092d836108e1565b915061093b602084016108e1565b90509250929050565b600080600060608486031215610958578081fd5b610961846108e1565b925061096f602085016108e1565b9150604084013590509250925092565b600080600080600080600060e0888a031215610999578283fd5b6109a2886108e1565b96506109b0602089016108e1565b95506040880135945060608801359350608088013560ff811681146109d3578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610a02578182fd5b610a0b836108e1565b946020939093013593505050565b61190160f01b81526002810192909252602282015260420190565b901515815260200190565b90815260200190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b81811015610b0657858101830151858201604001528201610aea565b81811115610b175783604083870101525b50601f01601f1916929092016040019392505050565b60ff9190911681526020019056fea2646970667358221220b98a09cb76515cd5e83bc0bae020072cf93c0e77795ed81bfb00d5bb37b4be2e64736f6c63430007060033";

type BalancerPoolTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancerPoolTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalancerPoolToken__factory extends ContractFactory {
  constructor(...args: BalancerPoolTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    tokenName: PromiseOrValue<string>,
    tokenSymbol: PromiseOrValue<string>,
    vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BalancerPoolToken> {
    return super.deploy(
      tokenName,
      tokenSymbol,
      vault,
      overrides || {}
    ) as Promise<BalancerPoolToken>;
  }
  override getDeployTransaction(
    tokenName: PromiseOrValue<string>,
    tokenSymbol: PromiseOrValue<string>,
    vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      tokenName,
      tokenSymbol,
      vault,
      overrides || {}
    );
  }
  override attach(address: string): BalancerPoolToken {
    return super.attach(address) as BalancerPoolToken;
  }
  override connect(signer: Signer): BalancerPoolToken__factory {
    return super.connect(signer) as BalancerPoolToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerPoolTokenInterface {
    return new utils.Interface(_abi) as BalancerPoolTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalancerPoolToken {
    return new Contract(address, _abi, signerOrProvider) as BalancerPoolToken;
  }
}
