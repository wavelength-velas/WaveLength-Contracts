/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  WAVEToken,
  WAVETokenInterface,
} from "../../../Audit_Contracts/WAVEToken.sol/WAVEToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600981526020017f57415645546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f5741564500000000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620001a6565b508060049080519060200190620000af929190620001a6565b505050620000d2620000c6620000d860201b60201c565b620000e060201b60201c565b620002bb565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001b49062000256565b90600052602060002090601f016020900481019282620001d8576000855562000224565b82601f10620001f357805160ff191683800117855562000224565b8280016001018555821562000224579182015b828111156200022357825182559160200191906001019062000206565b5b50905062000233919062000237565b5090565b5b808211156200025257600081600090555060010162000238565b5090565b600060028204905060018216806200026f57607f821691505b602082108114156200028657620002856200028c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b611b6e80620002cb6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d71461029f578063a9059cbb146102cf578063dd62ed3e146102ff578063f2fde38b1461032f57610100565b806370a0823114610229578063715018a6146102595780638da5cb5b1461026357806395d89b411461028157610100565b8063313ce567116100d3578063313ce567146101a157806332cb6b0c146101bf57806339509351146101dd57806340c10f191461020d57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61034b565b60405161011a9190611499565b60405180910390f35b61013d6004803603810190610138919061122d565b6103dd565b60405161014a919061147e565b60405180910390f35b61015b6103fb565b604051610168919061161b565b60405180910390f35b61018b600480360381019061018691906111da565b610405565b604051610198919061147e565b60405180910390f35b6101a96104fd565b6040516101b69190611636565b60405180910390f35b6101c7610506565b6040516101d4919061161b565b60405180910390f35b6101f760048036038101906101f2919061122d565b610515565b604051610204919061147e565b60405180910390f35b6102276004803603810190610222919061122d565b6105c1565b005b610243600480360381019061023e919061116d565b6106ab565b604051610250919061161b565b60405180910390f35b6102616106f3565b005b61026b61077b565b6040516102789190611463565b60405180910390f35b6102896107a5565b6040516102969190611499565b60405180910390f35b6102b960048036038101906102b4919061122d565b610837565b6040516102c6919061147e565b60405180910390f35b6102e960048036038101906102e4919061122d565b610922565b6040516102f6919061147e565b60405180910390f35b6103196004803603810190610314919061119a565b610940565b604051610326919061161b565b60405180910390f35b6103496004803603810190610344919061116d565b6109c7565b005b60606003805461035a9061174b565b80601f01602080910402602001604051908101604052809291908181526020018280546103869061174b565b80156103d35780601f106103a8576101008083540402835291602001916103d3565b820191906000526020600020905b8154815290600101906020018083116103b657829003601f168201915b5050505050905090565b60006103f16103ea610abf565b8484610ac7565b6001905092915050565b6000600254905090565b6000610412848484610c92565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061045d610abf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d49061153b565b60405180910390fd5b6104f1856104e9610abf565b858403610ac7565b60019150509392505050565b60006012905090565b6a084595161401484a00000081565b60006105b7610522610abf565b848460016000610530610abf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105b2919061166d565b610ac7565b6001905092915050565b6105c9610abf565b73ffffffffffffffffffffffffffffffffffffffff166105e761077b565b73ffffffffffffffffffffffffffffffffffffffff161461063d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106349061155b565b60405180910390fd5b6a084595161401484a000000816106526103fb565b61065c919061166d565b111561069d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610694906115bb565b60405180910390fd5b6106a78282610f13565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106fb610abf565b73ffffffffffffffffffffffffffffffffffffffff1661071961077b565b73ffffffffffffffffffffffffffffffffffffffff161461076f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107669061155b565b60405180910390fd5b6107796000611073565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546107b49061174b565b80601f01602080910402602001604051908101604052809291908181526020018280546107e09061174b565b801561082d5780601f106108025761010080835404028352916020019161082d565b820191906000526020600020905b81548152906001019060200180831161081057829003601f168201915b5050505050905090565b60008060016000610846610abf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610903576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fa906115db565b60405180910390fd5b61091761090e610abf565b85858403610ac7565b600191505092915050565b600061093661092f610abf565b8484610c92565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6109cf610abf565b73ffffffffffffffffffffffffffffffffffffffff166109ed61077b565b73ffffffffffffffffffffffffffffffffffffffff1614610a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3a9061155b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ab3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aaa906114db565b60405180910390fd5b610abc81611073565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2e9061159b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ba7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9e906114fb565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610c85919061161b565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf99061157b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d69906114bb565b60405180910390fd5b610d7d838383611139565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfa9061151b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e96919061166d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610efa919061161b565b60405180910390a3610f0d84848461113e565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7a906115fb565b60405180910390fd5b610f8f60008383611139565b8060026000828254610fa1919061166d565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ff6919061166d565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161105b919061161b565b60405180910390a361106f6000838361113e565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b60008135905061115281611b0a565b92915050565b60008135905061116781611b21565b92915050565b600060208284031215611183576111826117db565b5b600061119184828501611143565b91505092915050565b600080604083850312156111b1576111b06117db565b5b60006111bf85828601611143565b92505060206111d085828601611143565b9150509250929050565b6000806000606084860312156111f3576111f26117db565b5b600061120186828701611143565b935050602061121286828701611143565b925050604061122386828701611158565b9150509250925092565b60008060408385031215611244576112436117db565b5b600061125285828601611143565b925050602061126385828601611158565b9150509250929050565b611276816116c3565b82525050565b611285816116d5565b82525050565b600061129682611651565b6112a0818561165c565b93506112b0818560208601611718565b6112b9816117e0565b840191505092915050565b60006112d160238361165c565b91506112dc826117f1565b604082019050919050565b60006112f460268361165c565b91506112ff82611840565b604082019050919050565b600061131760228361165c565b91506113228261188f565b604082019050919050565b600061133a60268361165c565b9150611345826118de565b604082019050919050565b600061135d60288361165c565b91506113688261192d565b604082019050919050565b600061138060208361165c565b915061138b8261197c565b602082019050919050565b60006113a360258361165c565b91506113ae826119a5565b604082019050919050565b60006113c660248361165c565b91506113d1826119f4565b604082019050919050565b60006113e960248361165c565b91506113f482611a43565b604082019050919050565b600061140c60258361165c565b915061141782611a92565b604082019050919050565b600061142f601f8361165c565b915061143a82611ae1565b602082019050919050565b61144e81611701565b82525050565b61145d8161170b565b82525050565b6000602082019050611478600083018461126d565b92915050565b6000602082019050611493600083018461127c565b92915050565b600060208201905081810360008301526114b3818461128b565b905092915050565b600060208201905081810360008301526114d4816112c4565b9050919050565b600060208201905081810360008301526114f4816112e7565b9050919050565b600060208201905081810360008301526115148161130a565b9050919050565b600060208201905081810360008301526115348161132d565b9050919050565b6000602082019050818103600083015261155481611350565b9050919050565b6000602082019050818103600083015261157481611373565b9050919050565b6000602082019050818103600083015261159481611396565b9050919050565b600060208201905081810360008301526115b4816113b9565b9050919050565b600060208201905081810360008301526115d4816113dc565b9050919050565b600060208201905081810360008301526115f4816113ff565b9050919050565b6000602082019050818103600083015261161481611422565b9050919050565b60006020820190506116306000830184611445565b92915050565b600060208201905061164b6000830184611454565b92915050565b600081519050919050565b600082825260208201905092915050565b600061167882611701565b915061168383611701565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116b8576116b761177d565b5b828201905092915050565b60006116ce826116e1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561173657808201518184015260208101905061171b565b83811115611745576000848401525b50505050565b6000600282049050600182168061176357607f821691505b60208210811415611777576117766117ac565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f574156453a3a6d696e743a2063616e6e6f7420657863656564206d617820737560008201527f70706c7900000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611b13816116c3565b8114611b1e57600080fd5b50565b611b2a81611701565b8114611b3557600080fd5b5056fea264697066735822122095b25d466e5f90d6e459f9f908296ca8f36d20dcbedb854db6928ca77eb310d464736f6c63430008070033";

type WAVETokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WAVETokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WAVEToken__factory extends ContractFactory {
  constructor(...args: WAVETokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WAVEToken> {
    return super.deploy(overrides || {}) as Promise<WAVEToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WAVEToken {
    return super.attach(address) as WAVEToken;
  }
  override connect(signer: Signer): WAVEToken__factory {
    return super.connect(signer) as WAVEToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WAVETokenInterface {
    return new utils.Interface(_abi) as WAVETokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WAVEToken {
    return new Contract(address, _abi, signerOrProvider) as WAVEToken;
  }
}
