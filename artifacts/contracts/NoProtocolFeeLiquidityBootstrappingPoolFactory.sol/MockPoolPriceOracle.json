{
  "_format": "hh-sol-artifact-1",
  "contractName": "MockPoolPriceOracle",
  "sourceName": "contracts/NoProtocolFeeLiquidityBootstrappingPoolFactory.sol",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "newSample",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sampleIndex",
          "type": "uint256"
        }
      ],
      "name": "PriceDataProcessed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "sample",
          "type": "bytes32"
        }
      ],
      "name": "decode",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int256",
              "name": "logPairPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogPairPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "logBptPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogBptPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "logInvariant",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogInvariant",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct MockSamples.Sample",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "int256",
              "name": "logPairPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogPairPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "logBptPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogBptPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "logInvariant",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogInvariant",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct MockSamples.Sample",
          "name": "sample",
          "type": "tuple"
        }
      ],
      "name": "encode",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "dates",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "findNearestSamplesTimestamp",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "prev",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "next",
              "type": "uint256"
            }
          ],
          "internalType": "struct MockPoolPriceOracle.BinarySearchResult[]",
          "name": "results",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPriceOracle.Variable",
          "name": "variable",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "currentIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "getPastAccumulator",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getSample",
      "outputs": [
        {
          "internalType": "int256",
          "name": "logPairPrice",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "accLogPairPrice",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "logBptPrice",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "accLogBptPrice",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "logInvariant",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "accLogInvariant",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalSamples",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "int256",
              "name": "logPairPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogPairPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "logBptPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogBptPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "logInvariant",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogInvariant",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct MockSamples.Sample",
          "name": "sample",
          "type": "tuple"
        }
      ],
      "name": "mockSample",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "indexes",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "int256",
              "name": "logPairPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogPairPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "logBptPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogBptPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "logInvariant",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogInvariant",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct MockSamples.Sample[]",
          "name": "samples",
          "type": "tuple[]"
        }
      ],
      "name": "mockSamples",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "elapsed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentIndex",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "logPairPrice",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "logBptPrice",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "logInvariant",
          "type": "int256"
        }
      ],
      "name": "processPriceData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "sample",
          "type": "bytes32"
        },
        {
          "internalType": "int256",
          "name": "logPairPrice",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "logBptPrice",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "logInvariant",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "update",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int256",
              "name": "logPairPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogPairPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "logBptPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogBptPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "logInvariant",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogInvariant",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct MockSamples.Sample",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610e75806100206000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c8063259efd1614610093578063264959fb146100a85780633d48f8c1146100d157806360d1507c146100e4578063b48b5b401461010a578063c3748ef114610112578063d437680414610132578063d5125db614610152578063e5fe5f3c14610165578063ff7b6f1e14610178575b600080fd5b6100a66100a1366004610cec565b61018b565b005b6100bb6100b6366004610c9a565b6101aa565b6040516100c89190610d78565b60405180910390f35b6100bb6100df366004610cd1565b6101c3565b6100f76100f2366004610c48565b6101f6565b6040516100c89796959493929190610d81565b6100bb61023f565b610125610120366004610c48565b610245565b6040516100c89190610db1565b610145610140366004610c06565b6102ca565b6040516100c89190610d19565b6100a6610160366004610c60565b61039d565b6100a6610173366004610b42565b6103f7565b610125610186366004610c60565b610440565b610194816101c3565b6000928352602083905260409092209190915550565b60006101b9848484420361046d565b90505b9392505050565b60006101f0826000015183602001518460400151856060015186608001518760a001518860c001516105b3565b92915050565b6000806000806000806000610211610400891061013b610613565b600061021c89610625565b905061022781610637565b959f949e50929c50909a509850965090945092505050565b61040090565b61024d610a03565b6040805160e081019091528061026484600061069a565b81526020016102748460006106e5565b815260200161028484600161069a565b81526020016102948460016106e5565b81526020016102a484600261069a565b81526020016102b48460026106e5565b81526020016102c284610729565b905292915050565b606082516001600160401b03811180156102e357600080fd5b5060405190808252806020026020018201604052801561031d57816020015b61030a610a40565b8152602001906001900390816103025790505b50905060005b83518110156103965760008061034c86848151811061033e57fe5b602002602001015186610735565b91509150604051806040016040528061036484610729565b815260200161037283610729565b81525084848151811061038157fe5b60209081029190910101525050600101610323565b5092915050565b4285900360006103b082878787876107e8565b90507fa7f3e984c65d79d0fa58244dddb6522f661c9dea23fe4940801cbfe08810750686821415826040516103e6929190610d68565b60405180910390a150505050505050565b60005b825181101561043b5761043383828151811061041257fe5b602002602001015183838151811061042657fe5b602002602001015161018b565b6001016103fa565b505050565b610448610a03565b6000610457878787878761083f565b905061046281610245565b979650505050505050565b600061047e82421015610138610613565b42829003600061048d85610625565b9050600061049a82610729565b90506104ab60008211610139610613565b8281116104d757808303806104c0848a61069a565b026104cb848a6106e5565b019450505050506101bc565b60006104e28761089f565b905060006104ef82610625565b905060006104fc82610729565b905061050d60008211610139610613565b61051c8682111561013a610613565b505060008061052b8684610735565b91509150600061053a83610729565b61054383610729565b039050801561059b576000610558848d6106e5565b610562848e6106e5565b039050600061057085610729565b89039050828183028161057f57fe5b0561058a868f6106e5565b0199505050505050505050506101bc565b6105a5838c6106e5565b9750505050505050506101bc565b60006105bf82826108ac565b6105ca84601f6108b0565b6105d58660546108c1565b6105e088606a6108b0565b6105eb8a609f6108c1565b6105f68c60b56108b0565b6106018e60ea6108c1565b17171717171798975050505050505050565b8161062157610621816108ce565b5050565b60009081526020819052604090205490565b600080600080600080600061064b88610921565b96506106568861092e565b95506106618861093b565b945061066c88610948565b935061067788610955565b925061068288610962565b915061068d88610729565b9050919395979092949650565b6000808260028111156106a957fe5b14156106bf576106b883610921565b90506101f0565b60018260028111156106cd57fe5b14156106dc576106b88361093b565b6106b883610955565b6000808260028111156106f457fe5b1415610703576106b88361092e565b600182600281111561071157fe5b1415610720576106b883610948565b6106b883610962565b60006101f0828261096f565b600080806103ff8180805b8385116107ac57600285850104610757818a610979565b935061076284610625565b925061076d83610729565b915089821015610782578060010195506107a6565b89821115610795576001810394506107a6565b8283975097505050505050506107e1565b50610740565b8881106107ca576107c46107bf8461098a565b610625565b826107d7565b816107d76107bf8561089f565b9650965050505050505b9250929050565b600080610804858585426107fb8b610625565b9392919061083f565b90506078428890031015806108195786610822565b6108228761089f565b600081815260208190526040902092909255509695505050505050565b60008061084b87610729565b83039050600081870261085d8961092e565b019050600082870261086e8a610948565b019050600083870261087f8b610962565b01905061089189848a858b868c6105b3565b9a9950505050505050505050565b60006101f0826001610979565b1b90565b661fffffffffffff91909116901b90565b623fffff91909116901b90565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60006101f08260ea610997565b60006101f08260b56109c1565b60006101f082609f610997565b60006101f082606a6109c1565b60006101f0826054610997565b60006101f082601f6109c1565b1c637fffffff1690565b60006104008383015b069392505050565b60006101f08260016109f4565b600082821c623fffff16621fffff81136109b157806109b9565b623fffff1981175b949350505050565b600082821c661fffffffffffff16660fffffffffffff81136109e357806109b9565b661fffffffffffff19179392505050565b60006104008284038101610982565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b600082601f830112610a6a578081fd5b81356020610a7f610a7a83610e22565b610dff565b8281528181019085830183850287018401881015610a9b578586fd5b855b85811015610ab957813584529284019290840190600101610a9d565b5090979650505050505050565b600060e08284031215610ad7578081fd5b60405160e081018181106001600160401b0382111715610af357fe5b8060405250809150823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201525092915050565b60008060408385031215610b54578182fd5b82356001600160401b0380821115610b6a578384fd5b610b7686838701610a5a565b9350602091508185013581811115610b8c578384fd5b85019050601f81018613610b9e578283fd5b8035610bac610a7a82610e22565b8181528381019083850160e0808502860187018b1015610bca578788fd5b8795505b84861015610bf657610be08b83610ac6565b8452600195909501949286019290810190610bce565b5096999098509650505050505050565b60008060408385031215610c18578182fd5b82356001600160401b03811115610c2d578283fd5b610c3985828601610a5a565b95602094909401359450505050565b600060208284031215610c59578081fd5b5035919050565b600080600080600060a08688031215610c77578081fd5b505083359560208501359550604085013594606081013594506080013592509050565b600080600060608486031215610cae578283fd5b833560038110610cbc578384fd5b95602085013595506040909401359392505050565b600060e08284031215610ce2578081fd5b6101bc8383610ac6565b6000806101008385031215610cff578182fd5b82359150610d108460208501610ac6565b90509250929050565b602080825282518282018190526000919060409081850190868401855b82811015610d5b57815180518552860151868501529284019290850190600101610d36565b5091979650505050505050565b9115158252602082015260400190565b90815260200190565b968752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b6040518181016001600160401b0381118282101715610e1a57fe5b604052919050565b60006001600160401b03821115610e3557fe5b506020908102019056fea264697066735822122035df4fd1486303a978556f6bf326ab540dd986464cdec612171183c2258ed82264736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061008e5760003560e01c8063259efd1614610093578063264959fb146100a85780633d48f8c1146100d157806360d1507c146100e4578063b48b5b401461010a578063c3748ef114610112578063d437680414610132578063d5125db614610152578063e5fe5f3c14610165578063ff7b6f1e14610178575b600080fd5b6100a66100a1366004610cec565b61018b565b005b6100bb6100b6366004610c9a565b6101aa565b6040516100c89190610d78565b60405180910390f35b6100bb6100df366004610cd1565b6101c3565b6100f76100f2366004610c48565b6101f6565b6040516100c89796959493929190610d81565b6100bb61023f565b610125610120366004610c48565b610245565b6040516100c89190610db1565b610145610140366004610c06565b6102ca565b6040516100c89190610d19565b6100a6610160366004610c60565b61039d565b6100a6610173366004610b42565b6103f7565b610125610186366004610c60565b610440565b610194816101c3565b6000928352602083905260409092209190915550565b60006101b9848484420361046d565b90505b9392505050565b60006101f0826000015183602001518460400151856060015186608001518760a001518860c001516105b3565b92915050565b6000806000806000806000610211610400891061013b610613565b600061021c89610625565b905061022781610637565b959f949e50929c50909a509850965090945092505050565b61040090565b61024d610a03565b6040805160e081019091528061026484600061069a565b81526020016102748460006106e5565b815260200161028484600161069a565b81526020016102948460016106e5565b81526020016102a484600261069a565b81526020016102b48460026106e5565b81526020016102c284610729565b905292915050565b606082516001600160401b03811180156102e357600080fd5b5060405190808252806020026020018201604052801561031d57816020015b61030a610a40565b8152602001906001900390816103025790505b50905060005b83518110156103965760008061034c86848151811061033e57fe5b602002602001015186610735565b91509150604051806040016040528061036484610729565b815260200161037283610729565b81525084848151811061038157fe5b60209081029190910101525050600101610323565b5092915050565b4285900360006103b082878787876107e8565b90507fa7f3e984c65d79d0fa58244dddb6522f661c9dea23fe4940801cbfe08810750686821415826040516103e6929190610d68565b60405180910390a150505050505050565b60005b825181101561043b5761043383828151811061041257fe5b602002602001015183838151811061042657fe5b602002602001015161018b565b6001016103fa565b505050565b610448610a03565b6000610457878787878761083f565b905061046281610245565b979650505050505050565b600061047e82421015610138610613565b42829003600061048d85610625565b9050600061049a82610729565b90506104ab60008211610139610613565b8281116104d757808303806104c0848a61069a565b026104cb848a6106e5565b019450505050506101bc565b60006104e28761089f565b905060006104ef82610625565b905060006104fc82610729565b905061050d60008211610139610613565b61051c8682111561013a610613565b505060008061052b8684610735565b91509150600061053a83610729565b61054383610729565b039050801561059b576000610558848d6106e5565b610562848e6106e5565b039050600061057085610729565b89039050828183028161057f57fe5b0561058a868f6106e5565b0199505050505050505050506101bc565b6105a5838c6106e5565b9750505050505050506101bc565b60006105bf82826108ac565b6105ca84601f6108b0565b6105d58660546108c1565b6105e088606a6108b0565b6105eb8a609f6108c1565b6105f68c60b56108b0565b6106018e60ea6108c1565b17171717171798975050505050505050565b8161062157610621816108ce565b5050565b60009081526020819052604090205490565b600080600080600080600061064b88610921565b96506106568861092e565b95506106618861093b565b945061066c88610948565b935061067788610955565b925061068288610962565b915061068d88610729565b9050919395979092949650565b6000808260028111156106a957fe5b14156106bf576106b883610921565b90506101f0565b60018260028111156106cd57fe5b14156106dc576106b88361093b565b6106b883610955565b6000808260028111156106f457fe5b1415610703576106b88361092e565b600182600281111561071157fe5b1415610720576106b883610948565b6106b883610962565b60006101f0828261096f565b600080806103ff8180805b8385116107ac57600285850104610757818a610979565b935061076284610625565b925061076d83610729565b915089821015610782578060010195506107a6565b89821115610795576001810394506107a6565b8283975097505050505050506107e1565b50610740565b8881106107ca576107c46107bf8461098a565b610625565b826107d7565b816107d76107bf8561089f565b9650965050505050505b9250929050565b600080610804858585426107fb8b610625565b9392919061083f565b90506078428890031015806108195786610822565b6108228761089f565b600081815260208190526040902092909255509695505050505050565b60008061084b87610729565b83039050600081870261085d8961092e565b019050600082870261086e8a610948565b019050600083870261087f8b610962565b01905061089189848a858b868c6105b3565b9a9950505050505050505050565b60006101f0826001610979565b1b90565b661fffffffffffff91909116901b90565b623fffff91909116901b90565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60006101f08260ea610997565b60006101f08260b56109c1565b60006101f082609f610997565b60006101f082606a6109c1565b60006101f0826054610997565b60006101f082601f6109c1565b1c637fffffff1690565b60006104008383015b069392505050565b60006101f08260016109f4565b600082821c623fffff16621fffff81136109b157806109b9565b623fffff1981175b949350505050565b600082821c661fffffffffffff16660fffffffffffff81136109e357806109b9565b661fffffffffffff19179392505050565b60006104008284038101610982565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b600082601f830112610a6a578081fd5b81356020610a7f610a7a83610e22565b610dff565b8281528181019085830183850287018401881015610a9b578586fd5b855b85811015610ab957813584529284019290840190600101610a9d565b5090979650505050505050565b600060e08284031215610ad7578081fd5b60405160e081018181106001600160401b0382111715610af357fe5b8060405250809150823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201525092915050565b60008060408385031215610b54578182fd5b82356001600160401b0380821115610b6a578384fd5b610b7686838701610a5a565b9350602091508185013581811115610b8c578384fd5b85019050601f81018613610b9e578283fd5b8035610bac610a7a82610e22565b8181528381019083850160e0808502860187018b1015610bca578788fd5b8795505b84861015610bf657610be08b83610ac6565b8452600195909501949286019290810190610bce565b5096999098509650505050505050565b60008060408385031215610c18578182fd5b82356001600160401b03811115610c2d578283fd5b610c3985828601610a5a565b95602094909401359450505050565b600060208284031215610c59578081fd5b5035919050565b600080600080600060a08688031215610c77578081fd5b505083359560208501359550604085013594606081013594506080013592509050565b600080600060608486031215610cae578283fd5b833560038110610cbc578384fd5b95602085013595506040909401359392505050565b600060e08284031215610ce2578081fd5b6101bc8383610ac6565b6000806101008385031215610cff578182fd5b82359150610d108460208501610ac6565b90509250929050565b602080825282518282018190526000919060409081850190868401855b82811015610d5b57815180518552860151868501529284019290850190600101610d36565b5091979650505050505050565b9115158252602082015260400190565b90815260200190565b968752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b6040518181016001600160401b0381118282101715610e1a57fe5b604052919050565b60006001600160401b03821115610e3557fe5b506020908102019056fea264697066735822122035df4fd1486303a978556f6bf326ab540dd986464cdec612171183c2258ed82264736f6c63430007060033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
