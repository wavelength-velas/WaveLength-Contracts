/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BatchRelayerLibrary,
  BatchRelayerLibraryInterface,
} from "../../BalancerHelpers.sol/BatchRelayerLibrary";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "enum IVault.SwapKind",
        name: "kind",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "assetInIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "assetOutIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IVault.BatchSwapStep[]",
        name: "swaps",
        type: "tuple[]",
      },
      {
        internalType: "contract IAsset[]",
        name: "assets",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bool",
            name: "fromInternalBalance",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bool",
            name: "toInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.FundManagement",
        name: "funds",
        type: "tuple",
      },
      {
        internalType: "int256[]",
        name: "limits",
        type: "int256[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "key",
            type: "uint256",
          },
        ],
        internalType: "struct VaultActions.OutputReference[]",
        name: "outputReferences",
        type: "tuple[]",
      },
    ],
    name: "batchSwap",
    outputs: [
      {
        internalType: "int256[]",
        name: "",
        type: "int256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "enum VaultActions.PoolKind",
        name: "kind",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IAsset[]",
            name: "assets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "minAmountsOut",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "toInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.ExitPoolRequest",
        name: "request",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "key",
            type: "uint256",
          },
        ],
        internalType: "struct VaultActions.OutputReference[]",
        name: "outputReferences",
        type: "tuple[]",
      },
    ],
    name: "exitPool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntrypoint",
    outputs: [
      {
        internalType: "contract IBalancerRelayer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "enum VaultActions.PoolKind",
        name: "kind",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IAsset[]",
            name: "assets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "maxAmountsIn",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "fromInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.JoinPoolRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputReference",
        type: "uint256",
      },
    ],
    name: "joinPool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.UserBalanceOpKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IAsset",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct IVault.UserBalanceOp[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "manageUserBalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "authorisation",
        type: "bytes",
      },
    ],
    name: "setRelayerApproval",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IAsset",
            name: "assetIn",
            type: "address",
          },
          {
            internalType: "contract IAsset",
            name: "assetOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IVault.SingleSwap",
        name: "singleSwap",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bool",
            name: "fromInternalBalance",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bool",
            name: "toInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.FundManagement",
        name: "funds",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputReference",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Permit",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "vaultPermit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20PermitDAI",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "vaultPermitDAI",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040527fae1dc54057af8e8e5ce068cdd4383149c7efcb30e8fb95b592ee1594367fb50960e0523480156200003657600080fd5b5060405162002e2a38038062002e2a83398101604081905262000059916200014e565b80806001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156200009457600080fd5b505afa158015620000a9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000cf91906200014e565b6001600160601b0319606091821b81166080529082901b1660a05260405181903090620000fc9062000140565b6200010992919062000174565b604051809103906000f08015801562000126573d6000803e3d6000fd5b5060601b6001600160601b03191660c05250620001a79050565b61065080620027da83390190565b60006020828403121562000160578081fd5b81516200016d816200018e565b9392505050565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0381168114620001a457600080fd5b50565b60805160601c60a05160601c60c05160601c60e0516125f4620001e66000398061103852508061048852508061055b52806106055250506125f46000f3fe6080604052600436106100915760003560e01c80638d928af8116100595780638d928af8146101295780638fe4624f1461013e578063959fc17a14610151578063d80952d514610164578063ecc026371461017757610091565b806318369446146100965780632e6272ea146100bf5780637fd0e5d5146100df57806380db15bd146101015780638d64cfbc14610116575b600080fd5b6100a96100a4366004611c31565b61018a565b6040516100b69190612184565b60405180910390f35b6100d26100cd366004611d2b565b610378565b6040516100b69190612516565b3480156100eb57600080fd5b506100f4610486565b6040516100b69190612066565b61011461010f366004611775565b6104aa565b005b610114610124366004611aee565b610589565b34801561013557600080fd5b506100f4610603565b61011461014c3660046119e3565b610627565b61011461015f366004611a70565b610819565b61011461017236600461193d565b610896565b61011461018536600461188e565b610e0e565b60603361019a60208a018a611759565b6001600160a01b0316146101c95760405162461bcd60e51b81526004016101c0906123f3565b60405180910390fd5b60005b8b5181101561022e5760008c82815181106101e357fe5b60200260200101516060015190506101fa81610eda565b156102255761020881610ef2565b8d838151811061021457fe5b602002602001015160600181815250505b506001016101cc565b506000610239610603565b6001600160a01b031663945bcec9868f8f8f8f8f8f8f8f6040518a63ffffffff1660e01b8152600401610273989796959493929190612309565b6000604051808303818588803b15801561028c57600080fd5b505af11580156102a0573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526102c991908101906117ff565b905060005b83811015610367576102f48585838181106102e557fe5b90506040020160200135610eda565b6103105760405162461bcd60e51b81526004016101c090612454565b61035f85858381811061031f57fe5b9050604002016020013561035a8488888681811061033957fe5b905060400201600001358151811061034d57fe5b6020026020010151610f0c565b610f26565b6001016102ce565b509c9b505050505050505050505050565b6000336103886020880188611759565b6001600160a01b0316146103ae5760405162461bcd60e51b81526004016101c0906123f3565b6103bb8760800151610eda565b156103d3576103cd8760800151610ef2565b60808801525b60006103dd610603565b6001600160a01b03166352bbbe29858a8a8a8a6040518663ffffffff1660e01b815260040161040f949392919061248b565b6020604051808303818588803b15801561042857600080fd5b505af115801561043c573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906104619190611e22565b905061046c83610eda565b1561047b5761047b8382610f26565b979650505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b0384163014806104bf575082155b6104db5760405162461bcd60e51b81526004016101c09061241d565b600063fa6e671d60e01b3386866040516024016104fa9392919061207a565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b0319909516949094179093525161053c928691869101612033565b60408051601f1981840301815291905290506105816001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001682610f39565b505050505050565b866001600160a01b031663d505accf876105a1610603565b88888888886040518863ffffffff1660e01b81526004016105c89796959493929190612143565b600060405180830381600087803b1580156105e257600080fd5b505af11580156105f6573d6000803e3d6000fd5b5050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b038516331461064f5760405162461bcd60e51b81526004016101c0906123f3565b600061065a88610fb0565b9050600061066783610eda565b6106725760006106ee565b6040516370a0823160e01b81526001600160a01b038316906370a082319061069e908990600401612066565b60206040518083038186803b1580156106b657600080fd5b505afa1580156106ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ee9190611e22565b90506106fe888660400151610fb6565b604086015261070b610603565b6001600160a01b031663b95cac28858b8a8a8a6040518663ffffffff1660e01b815260040161073d9493929190612263565b6000604051808303818588803b15801561075657600080fd5b505af115801561076a573d6000803e3d6000fd5b505050505061077883610eda565b1561080e576040516370a0823160e01b81526000906001600160a01b038416906370a08231906107ac908a90600401612066565b60206040518083038186803b1580156107c457600080fd5b505afa1580156107d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fc9190611e22565b905061080c8461035a8385610fe4565b505b505050505050505050565b876001600160a01b0316638fcbaf0c88610831610603565b8989898989896040518963ffffffff1660e01b815260040161085a9897969594939291906120fa565b600060405180830381600087803b15801561087457600080fd5b505af1158015610888573d6000803e3d6000fd5b505050505050505050505050565b6001600160a01b03851633146108be5760405162461bcd60e51b81526004016101c0906123f3565b6000816001600160401b03811180156108d657600080fd5b50604051908082528060200260200182016040528015610900578160200160208202803683370190505b5090506000826001600160401b038111801561091b57600080fd5b50604051908082528060200260200182016040528015610945578160200160208202803683370190505b50905060005b83811015610ab5576109628585838181106102e557fe5b61097e5760405162461bcd60e51b81526004016101c090612454565b855160009086868481811061098f57fe5b90506040020160000135815181106109a357fe5b602002602001015190508660600151156109f1576109c081610ffa565b8483815181106109cc57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050610aac565b6109fa81610ffd565b610a8757610a0781610ffa565b6001600160a01b03166370a08231896040518263ffffffff1660e01b8152600401610a329190612066565b60206040518083038186803b158015610a4a57600080fd5b505afa158015610a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a829190611e22565b610a93565b876001600160a01b0316315b838381518110610a9f57fe5b6020026020010181815250505b5060010161094b565b50846060015115610b4c57610ac8610603565b6001600160a01b0316630f5a6efa87846040518363ffffffff1660e01b8152600401610af592919061209e565b60006040518083038186803b158015610b0d57600080fd5b505afa158015610b21573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b499190810190611903565b90505b610b5a88866040015161100a565b6040860152610b67610603565b6001600160a01b0316638bdb39138a8989896040518563ffffffff1660e01b8152600401610b989493929190612263565b600060405180830381600087803b158015610bb257600080fd5b505af1158015610bc6573d6000803e3d6000fd5b5060009250859150506001600160401b0381118015610be457600080fd5b50604051908082528060200260200182016040528015610c0e578160200160208202803683370190505b509050856060015115610cab57610c23610603565b6001600160a01b0316630f5a6efa88856040518363ffffffff1660e01b8152600401610c5092919061209e565b60006040518083038186803b158015610c6857600080fd5b505afa158015610c7c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ca49190810190611903565b9050610da9565b60005b84811015610da7578651600090878784818110610cc757fe5b9050604002016000013581518110610cdb57fe5b60200260200101519050610cee81610ffd565b610d7b57610cfb81610ffa565b6001600160a01b03166370a082318a6040518263ffffffff1660e01b8152600401610d269190612066565b60206040518083038186803b158015610d3e57600080fd5b505afa158015610d52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d769190611e22565b610d87565b886001600160a01b0316315b838381518110610d9357fe5b602090810291909101015250600101610cae565b505b60005b848110156105f657610e06868683818110610dc357fe5b9050604002016020013561035a858481518110610ddc57fe5b6020026020010151858581518110610df057fe5b6020026020010151610fe490919063ffffffff16565b600101610dac565b60005b82811015610e6c5733848483818110610e2657fe5b905060a002016060016020810190610e3e9190611759565b6001600160a01b031614610e645760405162461bcd60e51b81526004016101c0906123f3565b600101610e11565b50610e75610603565b6001600160a01b0316630e8e3e848285856040518463ffffffff1660e01b8152600401610ea39291906121c8565b6000604051808303818588803b158015610ebc57600080fd5b505af1158015610ed0573d6000803e3d6000fd5b5050505050505050565b610ba160f41b6001600160f01b03198216145b919050565b600080610efe83611031565b805460009091559392505050565b6000808213610f1e5781600003610f20565b815b92915050565b6000610f3183611031565b919091555050565b6060600080846001600160a01b031684604051610f569190612017565b6000604051808303816000865af19150503d8060008114610f93576040519150601f19603f3d011682016040523d82523d6000602084013e610f98565b606091505b5091509150610fa78282611087565b95945050505050565b60601c90565b60606000838015610fc357fe5b1415610fd957610fd2826110b1565b9050610f20565b610f206101366110ee565b6000610ff4838311156001611141565b50900390565b90565b6001600160a01b03161590565b6060600083801561101757fe5b141561102657610fd282611153565b610f206101506110ee565b60006001827f0000000000000000000000000000000000000000000000000000000000000000604051602001611068929190612058565b60408051808303601f1901815291905280516020909101200392915050565b60608215611096575080610f20565b8151156110a65781518083602001fd5b610f206101ae6110ee565b606060006110be8361119c565b905060018160038111156110ce57fe5b14156110e5576110dd836111b2565b915050610eed565b82915050610eed565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b8161114f5761114f816110ee565b5050565b606060006111608361119c565b9050600081600381111561117057fe5b141561117f576110dd83611260565b600181600381111561118d57fe5b14156110e5576110dd836112c3565b600081806020019051810190610f209190611b5b565b60606000806111c084611316565b915091506000805b83518110156112265760008482815181106111df57fe5b602002602001015190506111f281610eda565b1561121d5761120081610ef2565b85838151811061120c57fe5b602002602001018181525050600192505b506001016111c8565b50806112325784610fa7565b60018383604051602001611248939291906122d7565b60405160208183030381529060405295945050505050565b606060008061126e84611339565b9150915061127b82610eda565b156112b95761128982610ef2565b9150600082826040516020016112a1939291906122b6565b60405160208183030381529060405292505050610eed565b8392505050610eed565b606060006112d083611350565b90506112db81610eda565b156110e5576112e981610ef2565b90506001816040516020016112ff92919061229f565b604051602081830303815290604052915050610eed565b606060008280602001905181019061132e9190611bda565b909590945092505050565b6000808280602001905181019061132e9190611ba4565b6000818060200190518101906113669190611b77565b9392505050565b8035610eed8161259c565b60008083601f840112611389578182fd5b5081356001600160401b0381111561139f578182fd5b60208301915083602080830285010111156113b957600080fd5b9250929050565b600082601f8301126113d0578081fd5b813560206113e56113e083612542565b61251f565b8281528181019085830183850287018401881015611401578586fd5b855b858110156114285781356114168161259c565b84529284019290840190600101611403565b5090979650505050505050565b600082601f830112611445578081fd5b813560206114556113e083612542565b82815281810190858301855b85811015611428578135880160a080601f19838d03011215611481578889fd5b604080518281016001600160401b03828210818311171561149e57fe5b8184528a8601358352838601358b840152606091508186013584840152608093508386013582840152848601359450808511156114d9578c8dfd5b50506114e98d8a8587010161160a565b91810191909152865250509284019290840190600101611461565b60008083601f840112611515578182fd5b5081356001600160401b0381111561152b578182fd5b6020830191508360206040830285010111156113b957600080fd5b600082601f830112611556578081fd5b813560206115666113e083612542565b8281528181019085830183850287018401881015611582578586fd5b855b8581101561142857813584529284019290840190600101611584565b600082601f8301126115b0578081fd5b815160206115c06113e083612542565b82815281810190858301838502870184018810156115dc578586fd5b855b85811015611428578151845292840192908401906001016115de565b80358015158114610eed57600080fd5b600082601f83011261161a578081fd5b81356001600160401b0381111561162d57fe5b611640601f8201601f191660200161251f565b818152846020838601011115611654578283fd5b816020850160208301379081016020019190915292915050565b803560018110610eed57600080fd5b803560028110610eed57600080fd5b60006080828403121561169d578081fd5b6116a7608061251f565b905081356001600160401b03808211156116c057600080fd5b6116cc858386016113c0565b835260208401359150808211156116e257600080fd5b6116ee85838601611546565b6020840152604084013591508082111561170757600080fd5b506117148482850161160a565b604083015250611726606083016115fa565b606082015292915050565b600060808284031215611742578081fd5b50919050565b803560ff81168114610eed57600080fd5b60006020828403121561176a578081fd5b81356113668161259c565b6000806000806060858703121561178a578283fd5b84356117958161259c565b93506117a3602086016115fa565b925060408501356001600160401b03808211156117be578384fd5b818701915087601f8301126117d1578384fd5b8135818111156117df578485fd5b8860208285010111156117f0578485fd5b95989497505060200194505050565b60006020808385031215611811578182fd5b82516001600160401b03811115611826578283fd5b8301601f81018513611836578283fd5b80516118446113e082612542565b8181528381019083850185840285018601891015611860578687fd5b8694505b83851015611882578051835260019490940193918501918501611864565b50979650505050505050565b6000806000604084860312156118a2578081fd5b83356001600160401b03808211156118b8578283fd5b818601915086601f8301126118cb578283fd5b8135818111156118d9578384fd5b87602060a0830285010111156118ed578384fd5b6020928301989097509590910135949350505050565b600060208284031215611914578081fd5b81516001600160401b03811115611929578182fd5b611935848285016115a0565b949350505050565b600080600080600080600060c0888a031215611957578485fd5b873596506119676020890161166e565b955060408801356119778161259c565b945060608801356119878161259c565b935060808801356001600160401b03808211156119a2578485fd5b6119ae8b838c0161168c565b945060a08a01359150808211156119c3578384fd5b506119d08a828b01611504565b989b979a50959850939692959293505050565b600080600080600080600060e0888a0312156119fd578081fd5b87359650611a0d6020890161166e565b95506040880135611a1d8161259c565b94506060880135611a2d8161259c565b935060808801356001600160401b03811115611a47578182fd5b611a538a828b0161168c565b93505060a0880135915060c0880135905092959891949750929550565b600080600080600080600080610100898b031215611a8c578182fd5b8835611a978161259c565b97506020890135611aa78161259c565b96506040890135955060608901359450611ac360808a016115fa565b9350611ad160a08a01611748565b925060c0890135915060e089013590509295985092959890939650565b600080600080600080600060e0888a031215611b08578081fd5b8735611b138161259c565b96506020880135611b238161259c565b95506040880135945060608801359350611b3f60808901611748565b925060a0880135915060c0880135905092959891949750929550565b600060208284031215611b6c578081fd5b8151611366816125b1565b60008060408385031215611b89578182fd5b8251611b94816125b1565b6020939093015192949293505050565b600080600060608486031215611bb8578081fd5b8351611bc3816125b1565b602085015160409095015190969495509392505050565b600080600060608486031215611bee578081fd5b8351611bf9816125b1565b60208501519093506001600160401b03811115611c14578182fd5b611c20868287016115a0565b925050604084015190509250925092565b60008060008060008060008060008060006101608c8e031215611c52578485fd5b611c5b8c61167d565b9a506001600160401b038060208e01351115611c75578586fd5b611c858e60208f01358f01611435565b9a508060408e01351115611c97578586fd5b611ca78e60408f01358f01611378565b909a509850611cb98e60608f01611731565b97508060e08e01351115611ccb578586fd5b611cdb8e60e08f01358f01611378565b90975095506101008d013594506101208d013593506101408d0135811015611d01578283fd5b50611d138d6101408e01358e01611504565b81935080925050509295989b509295989b9093969950565b6000806000806000806101208789031215611d44578384fd5b86356001600160401b0380821115611d5a578586fd5b9088019060c0828b031215611d6d578586fd5b60405160c081018181108382111715611d8257fe5b60405282358152611d956020840161167d565b6020820152611da66040840161136d565b6040820152611db76060840161136d565b60608201526080830135608082015260a083013582811115611dd7578788fd5b611de38c82860161160a565b60a083015250809850505050611dfc8860208901611731565b959895975050505060a08401359360c08101359360e08201359350610100909101359150565b600060208284031215611e33578081fd5b5051919050565b6001600160a01b03169052565b60008284526020808501945082825b85811015611e84578135611e698161259c565b6001600160a01b031687529582019590820190600101611e56565b509495945050505050565b60008284526020808501945082825b85811015611e8457813587529582019590820190600101611e9e565b6000815180845260208085019450808401835b83811015611e8457815187529582019590820190600101611ecd565b15159052565b60008151808452611f0781602086016020860161255f565b601f01601f19169290920160200192915050565b60028110611f2557fe5b9052565b8051608080845281519084018190526000916020919082019060a0860190845b81811015611f6e5783516001600160a01b031683529284019291840191600101611f49565b505082850151915085810383870152611f878183611eba565b9250505060408301518482036040860152611fa28282611eef565b9150506060830151611fb76060860182611ee9565b509392505050565b8035611fca8161259c565b6001600160a01b038181168452611fe3602084016115fa565b1515602085015260408301359150611ffa8261259c565b16604083015261200c606082016115fa565b151560608301525050565b6000825161202981846020870161255f565b9190910192915050565b6000845161204581846020890161255f565b8201838582379092019182525092915050565b918252602082015260400190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152901515604082015260600190565b6001600160a01b038381168252604060208084018290528451918401829052600092858201929091906060860190855b818110156120ec5785518516835294830194918301916001016120ce565b509098975050505050505050565b6001600160a01b039889168152969097166020870152604086019490945260608501929092521515608084015260ff1660a083015260c082015260e08101919091526101000190565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6020808252825182820181905260009190848201906040850190845b818110156121bc578351835292840192918401916001016121a0565b50909695505050505050565b6020808252818101839052600090604080840186845b878110156114285781356121f1816125b1565b6121fa8161258f565b8352818501356122098161259c565b6001600160a01b03908116848701528285013585850152606090818401356122308161259c565b1690840152608061224283820161136d565b61224e82860182611e3a565b505060a09283019291909101906001016121de565b8481526001600160a01b0384811660208301528316604082015260806060820181905260009061229590830184611f29565b9695505050505050565b604081016122ac8461258f565b9281526020015290565b606081016122c38561258f565b938152602081019290925260409091015290565b60006122e28561258f565b848252606060208301526122f96060830185611eba565b9050826040830152949350505050565b600061012080830161231b848d611f1b565b6020848101929092528a5190819052610140808501928281028601909101918c8201855b828110156123a25787850361013f190186528151805186528481015185870152604080820151908701526060808201519087015260809081015160a09187018290529061238e81880183611eef565b97860197965050509083019060010161233f565b5050505083810360408501526123b9818a8c611e47565b9150506123c96060840188611fbf565b82810360e08401526123dc818688611e8f565b915050826101008301529998505050505050505050565b60208082526010908201526f24b731b7b93932b1ba1039b2b73232b960811b604082015260600190565b6020808252601f908201527f52656c617965722063616e206f6e6c7920617070726f766520697473656c6600604082015260600190565b60208082526019908201527f696e76616c696420636861696e6564207265666572656e636500000000000000604082015260600190565b600060e08252855160e083015260208601516124ab610100840182611f1b565b5060408601516001600160a01b03908116610120840152606087015116610140830152608086015161016083015260a086015160c06101808401526124f46101a0840182611eef565b9150506125046020830186611fbf565b60a082019390935260c0015292915050565b90815260200190565b6040518181016001600160401b038111828210171561253a57fe5b604052919050565b60006001600160401b0382111561255557fe5b5060209081020190565b60005b8381101561257a578181015183820152602001612562565b83811115612589576000848401525b50505050565b6004811061259957fe5b50565b6001600160a01b038116811461259957600080fd5b6004811061259957600080fdfea2646970667358221220fe9c5b2a8686b8e234c24d89d177deec6d4bfedf44ff8b040c2806fcd0b1041d64736f6c6343000706003360c060405234801561001057600080fd5b5060405161065038038061065083398101604081905261002f91610052565b60016000556001600160601b0319606092831b8116608052911b1660a0526100a3565b60008060408385031215610064578182fd5b825161006f8161008b565b60208401519092506100808161008b565b809150509250929050565b6001600160a01b03811681146100a057600080fd5b50565b60805160601c60a05160601c6105816100cf6000398060cf52806101b1525080604052506105816000f3fe60806040526004361061002d5760003560e01c80637678922e14610070578063ac9650d81461009b5761006b565b3661006b57610069336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102066100bb565b005b600080fd5b34801561007c57600080fd5b506100856100cd565b6040516100929190610443565b60405180910390f35b6100ae6100a93660046103b5565b6100f1565b6040516100929190610457565b816100c9576100c981610210565b5050565b7f000000000000000000000000000000000000000000000000000000000000000090565b60606100fb610263565b8167ffffffffffffffff8111801561011257600080fd5b5060405190808252806020026020018201604052801561014657816020015b60608152602001906001900390816101315790505b50905060005b828110156101f9576101da84848381811061016357fe5b905060200281019061017591906104cf565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169291505061027c565b8282815181106101e657fe5b602090810291909101015260010161014c565b506102026102f1565b61020a610305565b92915050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b610275600260005414156101906100bb565b6002600055565b6060600080846001600160a01b0316846040516102999190610424565b600060405180830381855af49150503d80600081146102d4576040519150601f19603f3d011682016040523d82523d6000602084013e6102d9565b606091505b50915091506102e8828261030c565b95945050505050565b478015610302576103023382610336565b50565b6001600055565b6060821561031b57508061020a565b81511561032b5781518083602001fd5b61020a6101ae610210565b610345814710156101a36100bb565b6000826001600160a01b03168260405161035e90610440565b60006040518083038185875af1925050503d806000811461039b576040519150601f19603f3d011682016040523d82523d6000602084013e6103a0565b606091505b505090506103b0816101a46100bb565b505050565b600080602083850312156103c7578182fd5b823567ffffffffffffffff808211156103de578384fd5b818501915085601f8301126103f1578384fd5b8135818111156103ff578485fd5b8660208083028501011115610412578485fd5b60209290920196919550909350505050565b6000825161043681846020870161051b565b9190910192915050565b90565b6001600160a01b0391909116815260200190565b6000602080830181845280855180835260408601915060408482028701019250838701855b828110156104c257878503603f19018452815180518087526104a3818989018a850161051b565b601f01601f19169590950186019450928501929085019060010161047c565b5092979650505050505050565b6000808335601e198436030181126104e5578283fd5b83018035915067ffffffffffffffff8211156104ff578283fd5b60200191503681900382131561051457600080fd5b9250929050565b60005b8381101561053657818101518382015260200161051e565b83811115610545576000848401525b5050505056fea26469706673582212205aa049a5499b2171d0cc62b35f8719518fee4634799422501cb98a88964bca0264736f6c63430007060033";

type BatchRelayerLibraryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchRelayerLibraryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchRelayerLibrary__factory extends ContractFactory {
  constructor(...args: BatchRelayerLibraryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BatchRelayerLibrary> {
    return super.deploy(vault, overrides || {}) as Promise<BatchRelayerLibrary>;
  }
  override getDeployTransaction(
    vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(vault, overrides || {});
  }
  override attach(address: string): BatchRelayerLibrary {
    return super.attach(address) as BatchRelayerLibrary;
  }
  override connect(signer: Signer): BatchRelayerLibrary__factory {
    return super.connect(signer) as BatchRelayerLibrary__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchRelayerLibraryInterface {
    return new utils.Interface(_abi) as BatchRelayerLibraryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchRelayerLibrary {
    return new Contract(address, _abi, signerOrProvider) as BatchRelayerLibrary;
  }
}
