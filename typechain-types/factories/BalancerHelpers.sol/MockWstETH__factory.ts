/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MockWstETH,
  MockWstETHInterface,
} from "../../BalancerHelpers.sol/MockWstETH";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_wstETHAmount",
        type: "uint256",
      },
    ],
    name: "getStETHByWstETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stETHAmount",
        type: "uint256",
      },
    ],
    name: "getWstETHByStETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stEthPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensPerStEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_wstETHAmount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stETHAmount",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526714d1120d7b1600006006553480156200001d57600080fd5b5060405162000ddb38038062000ddb83398101604081905262000040916200019f565b604080518082018252601481527f57726170706564205374616b65642045746865720000000000000000000000006020808301918252835180850190945260068452650eee6e88aa8960d31b908401528151919291620000a391600391620000f3565b508051620000b9906004906020840190620000f3565b5050600580546001600160a01b0390931661010002610100600160a81b031960ff19909416601217939093169290921790915550620001cf565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200012b576000855562000176565b82601f106200014657805160ff191683800117855562000176565b8280016001018555821562000176579182015b828111156200017657825182559160200191906001019062000159565b506200018492915062000188565b5090565b5b8082111562000184576000815560010162000189565b600060208284031215620001b1578081fd5b81516001600160a01b0381168114620001c8578182fd5b9392505050565b610bfc80620001df6000396000f3fe608060405234801561001057600080fd5b50600436106101015760003560e01c80639576a0c81161009d5780639576a0c8146101b757806395d89b41146101bf578063a457c2d7146101c7578063a9059cbb146101da578063b0e38900146101ed578063bb2952fc14610200578063c1fe3e4814610213578063dd62ed3e14610228578063de0e9a3e1461023b578063ea598cb01461024e57610101565b8063035faf821461010657806306fdde0314610124578063095ea7b31461013957806318160ddd1461015957806323b872dd146101615780632c4e722e14610174578063313ce5671461017c578063395093511461019157806370a08231146101a4575b600080fd5b61010e610261565b60405161011b9190610b8f565b60405180910390f35b61012c610279565b60405161011b9190610b3c565b61014c610147366004610a7f565b61030f565b60405161011b9190610b1d565b61010e610326565b61014c61016f366004610a44565b61032c565b61010e610380565b610184610386565b60405161011b9190610b98565b61014c61019f366004610a7f565b61038f565b61010e6101b23660046109f8565b6103c5565b61010e6103e4565b61012c6103f7565b61014c6101d5366004610a7f565b610458565b61014c6101e8366004610a7f565b610491565b61010e6101fb366004610ac8565b61049e565b61010e61020e366004610ac8565b6104b5565b61021b6104cc565b60405161011b9190610b28565b61010e610236366004610a12565b6104e0565b61010e610249366004610ac8565b61050b565b61010e61025c366004610ac8565b6105b3565b6000610274670de0b6b3a76400006104b5565b905090565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103055780601f106102da57610100808354040283529160200191610305565b820191906000526020600020905b8154815290600101906020018083116102e857829003601f168201915b5050505050905090565b600061031c338484610657565b5060015b92915050565b60025490565b60006103398484846106bf565b6001600160a01b038416600090815260016020908152604080832033808552925290912054610376918691610371908661019e61078d565b610657565b5060019392505050565b60065481565b60055460ff1690565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161031c91859061037190866107a3565b6001600160a01b0381166000908152602081905260409020545b919050565b6000610274670de0b6b3a764000061049e565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103055780601f106102da57610100808354040283529160200191610305565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161031c918590610371908661019f61078d565b600061031c3384846106bf565b6000610320600654836107bc90919063ffffffff16565b60006103206006548361080d90919063ffffffff16565b60055461010090046001600160a01b031681565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006105173383610843565b6000610522836104b5565b60055460405163a9059cbb60e01b815291925061010090046001600160a01b03169063a9059cbb9061055a9033908590600401610b04565b602060405180830381600087803b15801561057457600080fd5b505af1158015610588573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ac9190610aa8565b5092915050565b6005546040516323b872dd60e01b815260009161010090046001600160a01b0316906323b872dd906105ed90339030908790600401610ae0565b602060405180830381600087803b15801561060757600080fd5b505af115801561061b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063f9190610aa8565b50600061064b8361049e565b905061032033826108ed565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106b2908590610b8f565b60405180910390a3505050565b6106d66001600160a01b0384161515610198610969565b6106ed6001600160a01b0383161515610199610969565b6106f883838361097b565b6001600160a01b03831660009081526020819052604090205461071e90826101a061078d565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461074d90826107a3565b6001600160a01b038084166000818152602081905260409081902093909355915190851690600080516020610ba7833981519152906106b2908590610b8f565b600061079c8484111583610969565b5050900390565b60008282016107b58482101583610969565b9392505050565b60006107cb8215156004610969565b826107d857506000610320565b670de0b6b3a7640000838102906107fb908583816107f257fe5b04146005610969565b82818161080457fe5b04915050610320565b600082820261083184158061082a57508385838161082757fe5b04145b6003610969565b670de0b6b3a764000090049392505050565b61085a6001600160a01b038316151561019b610969565b6108668260008361097b565b6001600160a01b03821660009081526020819052604090205461088c90826101a161078d565b6001600160a01b0383166000908152602081905260409020556002546108b29082610980565b6002556040516000906001600160a01b03841690600080516020610ba7833981519152906108e1908590610b8f565b60405180910390a35050565b6108f96000838361097b565b60025461090690826107a3565b6002556001600160a01b03821660009081526020819052604090205461092c90826107a3565b6001600160a01b038316600081815260208190526040808220939093559151909190600080516020610ba7833981519152906108e1908590610b8f565b81610977576109778161098e565b5050565b505050565b60006107b58383600161078d565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b80356001600160a01b03811681146103df57600080fd5b600060208284031215610a09578081fd5b6107b5826109e1565b60008060408385031215610a24578081fd5b610a2d836109e1565b9150610a3b602084016109e1565b90509250929050565b600080600060608486031215610a58578081fd5b610a61846109e1565b9250610a6f602085016109e1565b9150604084013590509250925092565b60008060408385031215610a91578182fd5b610a9a836109e1565b946020939093013593505050565b600060208284031215610ab9578081fd5b815180151581146107b5578182fd5b600060208284031215610ad9578081fd5b5035919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b81811015610b6857858101830151858201604001528201610b4c565b81811115610b795783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b60ff9190911681526020019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212200d7e7cc1f2e51708fe97df0fed30c6bb75fa9de0b3f23e4145078c37cc14556864736f6c63430007060033";

type MockWstETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockWstETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockWstETH__factory extends ContractFactory {
  constructor(...args: MockWstETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockWstETH> {
    return super.deploy(token, overrides || {}) as Promise<MockWstETH>;
  }
  override getDeployTransaction(
    token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token, overrides || {});
  }
  override attach(address: string): MockWstETH {
    return super.attach(address) as MockWstETH;
  }
  override connect(signer: Signer): MockWstETH__factory {
    return super.connect(signer) as MockWstETH__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockWstETHInterface {
    return new utils.Interface(_abi) as MockWstETHInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockWstETH {
    return new Contract(address, _abi, signerOrProvider) as MockWstETH;
  }
}
