/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PoolPriceOracle,
  PoolPriceOracleInterface,
} from "../../NoProtocolFeeLiquidityBootstrappingPoolFactory.sol/PoolPriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getSample",
    outputs: [
      {
        internalType: "int256",
        name: "logPairPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "accLogPairPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "logBptPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "accLogBptPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "logInvariant",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "accLogInvariant",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSamples",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102f6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806360d1507c1461003b578063b48b5b401461006a575b600080fd5b61004e61004936600461026f565b61007f565b6040516100619796959493929190610287565b60405180910390f35b6100726100c8565b60405161006191906102b7565b600080600080600080600061009a610400891061013b6100ce565b60006100a5896100e0565b90506100b0816100f2565b959f949e50929c50909a509850965090945092505050565b61040090565b816100dc576100dc81610155565b5050565b60009081526020819052604090205490565b6000806000806000806000610106886101a8565b9650610111886101bb565b955061011c886101c8565b9450610127886101d5565b9350610132886101e2565b925061013d886101ef565b9150610148886101fc565b9050919395979092949650565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60006101b58260ea610208565b92915050565b60006101b58260b5610232565b60006101b582609f610208565b60006101b582606a610232565b60006101b5826054610208565b60006101b582601f610232565b60006101b58282610265565b600082821c623fffff16621fffff8113610222578061022a565b623fffff1981175b949350505050565b600082821c661fffffffffffff16660fffffffffffff8113610254578061022a565b661fffffffffffff19179392505050565b1c637fffffff1690565b600060208284031215610280578081fd5b5035919050565b968752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b9081526020019056fea264697066735822122018df1b7517aa1f7043a3c46dd60ef80445b4a8d9a3a1dbdbe739dd554dfbb1bf64736f6c63430007060033";

type PoolPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolPriceOracle__factory extends ContractFactory {
  constructor(...args: PoolPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolPriceOracle> {
    return super.deploy(overrides || {}) as Promise<PoolPriceOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolPriceOracle {
    return super.attach(address) as PoolPriceOracle;
  }
  override connect(signer: Signer): PoolPriceOracle__factory {
    return super.connect(signer) as PoolPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolPriceOracleInterface {
    return new utils.Interface(_abi) as PoolPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as PoolPriceOracle;
  }
}
