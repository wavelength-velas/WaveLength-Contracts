{"id":"9d9c6a2cf7d488d92e5ad922efca5200","_format":"hh-sol-build-info-1","solcVersion":"0.7.6","solcLongVersion":"0.7.6+commit.7338295f","input":{"language":"Solidity","sources":{"contracts/AaveLinearPoolFactory.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-or-later\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\npragma solidity ^0.7.0;\r\npragma experimental ABIEncoderV2;\r\n\r\n\r\n\r\ninterface IRateProvider {\r\n\r\n    /**\r\n     * @dev Returns an 18 decimal fixed point number that is the exchange rate of the token to some other underlying\r\n     * token. The meaning of this rate depends on the context.\r\n     */\r\n    function getRate() external view returns (uint256);\r\n}\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n\r\ninterface IPoolSwapStructs {\r\n    // This is not really an interface - it just defines common structs used by other interfaces: IGeneralPool and\r\n    // IMinimalSwapInfoPool.\r\n    //\r\n    // This data structure represents a request for a token swap, where `kind` indicates the swap type ('given in' or\r\n    // 'given out') which indicates whether or not the amount sent by the pool is known.\r\n    //\r\n    // The pool receives `tokenIn` and sends `tokenOut`. `amount` is the number of `tokenIn` tokens the pool will take\r\n    // in, or the number of `tokenOut` tokens the Pool will send out, depending on the given swap `kind`.\r\n    //\r\n    // All other fields are not strictly necessary for most swaps, but are provided to support advanced scenarios in\r\n    // some Pools.\r\n    //\r\n    // `poolId` is the ID of the Pool involved in the swap - this is useful for Pool contracts that implement more than\r\n    // one Pool.\r\n    //\r\n    // The meaning of `lastChangeBlock` depends on the Pool specialization:\r\n    //  - Two Token or Minimal Swap Info: the last block in which either `tokenIn` or `tokenOut` changed its total\r\n    //    balance.\r\n    //  - General: the last block in which *any* of the Pool's registered tokens changed its total balance.\r\n    //\r\n    // `from` is the origin address for the funds the Pool receives, and `to` is the destination address\r\n    // where the Pool sends the outgoing tokens.\r\n    //\r\n    // `userData` is extra data provided by the caller - typically a signature from a trusted party.\r\n    struct SwapRequest {\r\n        IVault.SwapKind kind;\r\n        IERC20 tokenIn;\r\n        IERC20 tokenOut;\r\n        uint256 amount;\r\n        // Misc data\r\n        bytes32 poolId;\r\n        uint256 lastChangeBlock;\r\n        address from;\r\n        address to;\r\n        bytes userData;\r\n    }\r\n}\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Interface for adding and removing liquidity that all Pool contracts should implement. Note that this is not\r\n * the complete Pool contract interface, as it is missing the swap hooks. Pool contracts should also inherit from\r\n * either IGeneralPool or IMinimalSwapInfoPool\r\n */\r\ninterface IBasePool is IPoolSwapStructs {\r\n    /**\r\n     * @dev Called by the Vault when a user calls `IVault.joinPool` to add liquidity to this Pool. Returns how many of\r\n     * each registered token the user should provide, as well as the amount of protocol fees the Pool owes to the Vault.\r\n     * The Vault will then take tokens from `sender` and add them to the Pool's balances, as well as collect\r\n     * the reported amount in protocol fees, which the pool should calculate based on `protocolSwapFeePercentage`.\r\n     *\r\n     * Protocol fees are reported and charged on join events so that the Pool is free of debt whenever new users join.\r\n     *\r\n     * `sender` is the account performing the join (from which tokens will be withdrawn), and `recipient` is the account\r\n     * designated to receive any benefits (typically pool shares). `balances` contains the total balances\r\n     * for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return.\r\n     *\r\n     * `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total\r\n     * balance.\r\n     *\r\n     * `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of\r\n     * join (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.)\r\n     *\r\n     * Contracts implementing this function should check that the caller is indeed the Vault before performing any\r\n     * state-changing operations, such as minting pool shares.\r\n     */\r\n    function onJoinPool(\r\n        bytes32 poolId,\r\n        address sender,\r\n        address recipient,\r\n        uint256[] memory balances,\r\n        uint256 lastChangeBlock,\r\n        uint256 protocolSwapFeePercentage,\r\n        bytes memory userData\r\n    ) external returns (uint256[] memory amountsIn, uint256[] memory dueProtocolFeeAmounts);\r\n\r\n    /**\r\n     * @dev Called by the Vault when a user calls `IVault.exitPool` to remove liquidity from this Pool. Returns how many\r\n     * tokens the Vault should deduct from the Pool's balances, as well as the amount of protocol fees the Pool owes\r\n     * to the Vault. The Vault will then take tokens from the Pool's balances and send them to `recipient`,\r\n     * as well as collect the reported amount in protocol fees, which the Pool should calculate based on\r\n     * `protocolSwapFeePercentage`.\r\n     *\r\n     * Protocol fees are charged on exit events to guarantee that users exiting the Pool have paid their share.\r\n     *\r\n     * `sender` is the account performing the exit (typically the pool shareholder), and `recipient` is the account\r\n     * to which the Vault will send the proceeds. `balances` contains the total token balances for each token\r\n     * the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return.\r\n     *\r\n     * `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total\r\n     * balance.\r\n     *\r\n     * `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of\r\n     * exit (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.)\r\n     *\r\n     * Contracts implementing this function should check that the caller is indeed the Vault before performing any\r\n     * state-changing operations, such as burning pool shares.\r\n     */\r\n    function onExitPool(\r\n        bytes32 poolId,\r\n        address sender,\r\n        address recipient,\r\n        uint256[] memory balances,\r\n        uint256 lastChangeBlock,\r\n        uint256 protocolSwapFeePercentage,\r\n        bytes memory userData\r\n    ) external returns (uint256[] memory amountsOut, uint256[] memory dueProtocolFeeAmounts);\r\n\r\n    function getPoolId() external view returns (bytes32);\r\n}\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n\r\n/**\r\n * @dev IPools with the General specialization setting should implement this interface.\r\n *\r\n * This is called by the Vault when a user calls `IVault.swap` or `IVault.batchSwap` to swap with this Pool.\r\n * Returns the number of tokens the Pool will grant to the user in a 'given in' swap, or that the user will\r\n * grant to the pool in a 'given out' swap.\r\n *\r\n * This can often be implemented by a `view` function, since many pricing algorithms don't need to track state\r\n * changes in swaps. However, contracts implementing this in non-view functions should check that the caller is\r\n * indeed the Vault.\r\n */\r\ninterface IGeneralPool is IBasePool {\r\n    function onSwap(\r\n        SwapRequest memory swapRequest,\r\n        uint256[] memory balances,\r\n        uint256 indexIn,\r\n        uint256 indexOut\r\n    ) external returns (uint256 amount);\r\n}\r\n\r\npragma solidity ^0.7.0;\r\n\r\ninterface IAuthentication {\r\n    /**\r\n     * @dev Returns the action identifier associated with the external function described by `selector`.\r\n     */\r\n    function getActionId(bytes4 selector) external view returns (bytes32);\r\n}\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n/**\r\n * @dev Building block for performing access control on external functions.\r\n *\r\n * This contract is used via the `authenticate` modifier (or the `_authenticateCaller` function), which can be applied\r\n * to external functions to only make them callable by authorized accounts.\r\n *\r\n * Derived contracts must implement the `_canPerform` function, which holds the actual access control logic.\r\n */\r\nabstract contract Authentication is IAuthentication {\r\n    bytes32 private immutable _actionIdDisambiguator;\r\n\r\n    /**\r\n     * @dev The main purpose of the `actionIdDisambiguator` is to prevent accidental function selector collisions in\r\n     * multi contract systems.\r\n     *\r\n     * There are two main uses for it:\r\n     *  - if the contract is a singleton, any unique identifier can be used to make the associated action identifiers\r\n     *    unique. The contract's own address is a good option.\r\n     *  - if the contract belongs to a family that shares action identifiers for the same functions, an identifier\r\n     *    shared by the entire family (and no other contract) should be used instead.\r\n     */\r\n    constructor(bytes32 actionIdDisambiguator) {\r\n        _actionIdDisambiguator = actionIdDisambiguator;\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts unless the caller is allowed to call this function. Should only be applied to external functions.\r\n     */\r\n    modifier authenticate() {\r\n        _authenticateCaller();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts unless the caller is allowed to call the entry point function.\r\n     */\r\n    function _authenticateCaller() internal view {\r\n        bytes32 actionId = getActionId(msg.sig);\r\n        _require(_canPerform(actionId, msg.sender), Errors.SENDER_NOT_ALLOWED);\r\n    }\r\n\r\n    function getActionId(bytes4 selector) public view override returns (bytes32) {\r\n        // Each external function is dynamically assigned an action identifier as the hash of the disambiguator and the\r\n        // function selector. Disambiguation is necessary to avoid potential collisions in the function selectors of\r\n        // multiple contracts.\r\n        return keccak256(abi.encodePacked(_actionIdDisambiguator, selector));\r\n    }\r\n\r\n    function _canPerform(bytes32 actionId, address user) internal view virtual returns (bool);\r\n}\r\n\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Base authorization layer implementation for Pools.\r\n *\r\n * The owner account can call some of the permissioned functions - access control of the rest is delegated to the\r\n * Authorizer. Note that this owner is immutable: more sophisticated permission schemes, such as multiple ownership,\r\n * granular roles, etc., could be built on top of this by making the owner a smart contract.\r\n *\r\n * Access control of all other permissioned functions is delegated to an Authorizer. It is also possible to delegate\r\n * control of *all* permissioned functions to the Authorizer by setting the owner address to `_DELEGATE_OWNER`.\r\n */\r\nabstract contract BasePoolAuthorization is Authentication {\r\n    address private immutable _owner;\r\n\r\n    address private constant _DELEGATE_OWNER = 0xBA1BA1ba1BA1bA1bA1Ba1BA1ba1BA1bA1ba1ba1B;\r\n\r\n    constructor(address owner) {\r\n        _owner = owner;\r\n    }\r\n\r\n    function getOwner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    function getAuthorizer() external view returns (IAuthorizer) {\r\n        return _getAuthorizer();\r\n    }\r\n\r\n    function _canPerform(bytes32 actionId, address account) internal view override returns (bool) {\r\n        if ((getOwner() != _DELEGATE_OWNER) && _isOwnerOnlyAction(actionId)) {\r\n            // Only the owner can perform \"owner only\" actions, unless the owner is delegated.\r\n            return msg.sender == getOwner();\r\n        } else {\r\n            // Non-owner actions are always processed via the Authorizer, as \"owner only\" ones are when delegated.\r\n            return _getAuthorizer().canPerform(actionId, account, address(this));\r\n        }\r\n    }\r\n\r\n    function _isOwnerOnlyAction(bytes32 actionId) internal view virtual returns (bool);\r\n\r\n    function _getAuthorizer() internal view virtual returns (IAuthorizer);\r\n}\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n */\r\ninterface IERC20Permit {\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over `owner`'s tokens,\r\n     * given `owner`'s signed approval.\r\n     *\r\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\r\n     * ordering also apply here.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `deadline` must be a timestamp in the future.\r\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\r\n     * over the EIP712-formatted function arguments.\r\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\r\n     *\r\n     * For more information on the signature format, see the\r\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\r\n     * section].\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Returns the current nonce for `owner`. This value must be\r\n     * included whenever a signature is generated for {permit}.\r\n     *\r\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\r\n     * prevents a signature from being used multiple times.\r\n     */\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n}\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\r\n *\r\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\r\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\r\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\r\n *\r\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\r\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\r\n * ({_hashTypedDataV4}).\r\n *\r\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\r\n * the chain id to protect against replay attacks on an eventual fork of the chain.\r\n *\r\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\r\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\r\n *\r\n * _Available since v3.4._\r\n */\r\nabstract contract EIP712 {\r\n    /* solhint-disable var-name-mixedcase */\r\n    bytes32 private immutable _HASHED_NAME;\r\n    bytes32 private immutable _HASHED_VERSION;\r\n    bytes32 private immutable _TYPE_HASH;\r\n\r\n    /* solhint-enable var-name-mixedcase */\r\n\r\n    /**\r\n     * @dev Initializes the domain separator and parameter caches.\r\n     *\r\n     * The meaning of `name` and `version` is specified in\r\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\r\n     *\r\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\r\n     * - `version`: the current major version of the signing domain.\r\n     *\r\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\r\n     * contract upgrade].\r\n     */\r\n    constructor(string memory name, string memory version) {\r\n        _HASHED_NAME = keccak256(bytes(name));\r\n        _HASHED_VERSION = keccak256(bytes(version));\r\n        _TYPE_HASH = keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the domain separator for the current chain.\r\n     */\r\n    function _domainSeparatorV4() internal view virtual returns (bytes32) {\r\n        return keccak256(abi.encode(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION, _getChainId(), address(this)));\r\n    }\r\n\r\n    /**\r\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\r\n     * function returns the hash of the fully encoded EIP712 message for this domain.\r\n     *\r\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\r\n     *\r\n     * ```solidity\r\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\r\n     *     keccak256(\"Mail(address to,string contents)\"),\r\n     *     mailTo,\r\n     *     keccak256(bytes(mailContents))\r\n     * )));\r\n     * address signer = ECDSA.recover(digest, signature);\r\n     * ```\r\n     */\r\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\r\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", _domainSeparatorV4(), structHash));\r\n    }\r\n\r\n    function _getChainId() private view returns (uint256 chainId) {\r\n        // Silence state mutability warning without generating bytecode.\r\n        // See https://github.com/ethereum/solidity/issues/10090#issuecomment-741789128 and\r\n        // https://github.com/ethereum/solidity/issues/2691\r\n        this;\r\n\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            chainId := chainid()\r\n        }\r\n    }\r\n}\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin guidelines: functions revert instead\r\n * of returning `false` on failure. This behavior is nonetheless conventional\r\n * and does not conflict with the expectations of ERC20 applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is IERC20 {\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\r\n     * a default value of 18.\r\n     *\r\n     * To select a different value for {decimals}, use {_setupDecimals}.\r\n     *\r\n     * All three of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _decimals = 18;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\r\n     * called.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``sender``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(\r\n            sender,\r\n            msg.sender,\r\n            _allowances[sender][msg.sender].sub(amount, Errors.ERC20_TRANSFER_EXCEEDS_ALLOWANCE)\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        _approve(\r\n            msg.sender,\r\n            spender,\r\n            _allowances[msg.sender][spender].sub(subtractedValue, Errors.ERC20_DECREASED_ALLOWANCE_BELOW_ZERO)\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        _require(sender != address(0), Errors.ERC20_TRANSFER_FROM_ZERO_ADDRESS);\r\n        _require(recipient != address(0), Errors.ERC20_TRANSFER_TO_ZERO_ADDRESS);\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        _balances[sender] = _balances[sender].sub(amount, Errors.ERC20_TRANSFER_EXCEEDS_BALANCE);\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        _require(account != address(0), Errors.ERC20_BURN_FROM_ZERO_ADDRESS);\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        _balances[account] = _balances[account].sub(amount, Errors.ERC20_BURN_EXCEEDS_ALLOWANCE);\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets {decimals} to a value other than the default one of 18.\r\n     *\r\n     * WARNING: This function should only be called from the constructor. Most\r\n     * applications that interact with token contracts will not expect\r\n     * {decimals} to ever change, and may work incorrectly if it does.\r\n     */\r\n    function _setupDecimals(uint8 decimals_) internal {\r\n        _decimals = decimals_;\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be to transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n *\r\n * _Available since v3.4._\r\n */\r\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\r\n    mapping(address => uint256) private _nonces;\r\n\r\n    // solhint-disable-next-line var-name-mixedcase\r\n    bytes32 private immutable _PERMIT_TYPEHASH =\r\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\r\n\r\n    /**\r\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\r\n     *\r\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\r\n     */\r\n    constructor(string memory name) EIP712(name, \"1\") {}\r\n\r\n    /**\r\n     * @dev See {IERC20Permit-permit}.\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) public virtual override {\r\n        // solhint-disable-next-line not-rely-on-time\r\n        _require(block.timestamp <= deadline, Errors.EXPIRED_PERMIT);\r\n\r\n        uint256 nonce = _nonces[owner];\r\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, nonce, deadline));\r\n\r\n        bytes32 hash = _hashTypedDataV4(structHash);\r\n\r\n        address signer = ecrecover(hash, v, r, s);\r\n        _require((signer != address(0)) && (signer == owner), Errors.INVALID_SIGNATURE);\r\n\r\n        _nonces[owner] = nonce + 1;\r\n        _approve(owner, spender, value);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20Permit-nonces}.\r\n     */\r\n    function nonces(address owner) public view override returns (uint256) {\r\n        return _nonces[owner];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\r\n        return _domainSeparatorV4();\r\n    }\r\n}\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @title Highly opinionated token implementation\r\n * @author Balancer Labs\r\n * @dev\r\n * - Includes functions to increase and decrease allowance as a workaround\r\n *   for the well-known issue with `approve`:\r\n *   https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n * - Allows for 'infinite allowance', where an allowance of 0xff..ff is not\r\n *   decreased by calls to transferFrom\r\n * - Lets a token holder use `transferFrom` to send their own tokens,\r\n *   without first setting allowance\r\n * - Emits 'Approval' events whenever allowance is changed by `transferFrom`\r\n * - Assigns infinite allowance for all token holders to the Vault\r\n */\r\ncontract BalancerPoolToken is ERC20Permit {\r\n    IVault private immutable _vault;\r\n\r\n    constructor(\r\n        string memory tokenName,\r\n        string memory tokenSymbol,\r\n        IVault vault\r\n    ) ERC20(tokenName, tokenSymbol) ERC20Permit(tokenName) {\r\n        _vault = vault;\r\n    }\r\n\r\n    function getVault() public view returns (IVault) {\r\n        return _vault;\r\n    }\r\n\r\n    // Overrides\r\n\r\n    /**\r\n     * @dev Override to grant the Vault infinite allowance, causing for Pool Tokens to not require approval.\r\n     *\r\n     * This is sound as the Vault already provides authorization mechanisms when initiation token transfers, which this\r\n     * contract inherits.\r\n     */\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        if (spender == address(getVault())) {\r\n            return uint256(-1);\r\n        } else {\r\n            return super.allowance(owner, spender);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Override to allow for 'infinite allowance' and let the token owner use `transferFrom` with no self-allowance\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public override returns (bool) {\r\n        uint256 currentAllowance = allowance(sender, msg.sender);\r\n        _require(msg.sender == sender || currentAllowance >= amount, Errors.ERC20_TRANSFER_EXCEEDS_ALLOWANCE);\r\n\r\n        _transfer(sender, recipient, amount);\r\n\r\n        if (msg.sender != sender && currentAllowance != uint256(-1)) {\r\n            // Because of the previous require, we know that if msg.sender != sender then currentAllowance >= amount\r\n            _approve(sender, msg.sender, currentAllowance - amount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Override to allow decreasing allowance by more than the current amount (setting it to zero)\r\n     */\r\n    function decreaseAllowance(address spender, uint256 amount) public override returns (bool) {\r\n        uint256 currentAllowance = allowance(msg.sender, spender);\r\n\r\n        if (amount >= currentAllowance) {\r\n            _approve(msg.sender, spender, 0);\r\n        } else {\r\n            // No risk of underflow due to if condition\r\n            _approve(msg.sender, spender, currentAllowance - amount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    // Internal functions\r\n\r\n    function _mintPoolTokens(address recipient, uint256 amount) internal {\r\n        _mint(recipient, amount);\r\n    }\r\n\r\n    function _burnPoolTokens(address sender, uint256 amount) internal {\r\n        _burn(sender, amount);\r\n    }\r\n}\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Interface for the TemporarilyPausable helper.\r\n */\r\ninterface ITemporarilyPausable {\r\n    /**\r\n     * @dev Emitted every time the pause state changes by `_setPaused`.\r\n     */\r\n    event PausedStateChanged(bool paused);\r\n\r\n    /**\r\n     * @dev Returns the current paused state.\r\n     */\r\n    function getPausedState()\r\n        external\r\n        view\r\n        returns (\r\n            bool paused,\r\n            uint256 pauseWindowEndTime,\r\n            uint256 bufferPeriodEndTime\r\n        );\r\n}\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Allows for a contract to be paused during an initial period after deployment, disabling functionality. Can be\r\n * used as an emergency switch in case a security vulnerability or threat is identified.\r\n *\r\n * The contract can only be paused during the Pause Window, a period that starts at deployment. It can also be\r\n * unpaused and repaused any number of times during this period. This is intended to serve as a safety measure: it lets\r\n * system managers react quickly to potentially dangerous situations, knowing that this action is reversible if careful\r\n * analysis later determines there was a false alarm.\r\n *\r\n * If the contract is paused when the Pause Window finishes, it will remain in the paused state through an additional\r\n * Buffer Period, after which it will be automatically unpaused forever. This is to ensure there is always enough time\r\n * to react to an emergency, even if the threat is discovered shortly before the Pause Window expires.\r\n *\r\n * Note that since the contract can only be paused within the Pause Window, unpausing during the Buffer Period is\r\n * irreversible.\r\n */\r\nabstract contract TemporarilyPausable is ITemporarilyPausable {\r\n    // The Pause Window and Buffer Period are timestamp-based: they should not be relied upon for sub-minute accuracy.\r\n    // solhint-disable not-rely-on-time\r\n\r\n    uint256 private constant _MAX_PAUSE_WINDOW_DURATION = 90 days;\r\n    uint256 private constant _MAX_BUFFER_PERIOD_DURATION = 30 days;\r\n\r\n    uint256 private immutable _pauseWindowEndTime;\r\n    uint256 private immutable _bufferPeriodEndTime;\r\n\r\n    bool private _paused;\r\n\r\n    constructor(uint256 pauseWindowDuration, uint256 bufferPeriodDuration) {\r\n        _require(pauseWindowDuration <= _MAX_PAUSE_WINDOW_DURATION, Errors.MAX_PAUSE_WINDOW_DURATION);\r\n        _require(bufferPeriodDuration <= _MAX_BUFFER_PERIOD_DURATION, Errors.MAX_BUFFER_PERIOD_DURATION);\r\n\r\n        uint256 pauseWindowEndTime = block.timestamp + pauseWindowDuration;\r\n\r\n        _pauseWindowEndTime = pauseWindowEndTime;\r\n        _bufferPeriodEndTime = pauseWindowEndTime + bufferPeriodDuration;\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if the contract is paused.\r\n     */\r\n    modifier whenNotPaused() {\r\n        _ensureNotPaused();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current contract pause status, as well as the end times of the Pause Window and Buffer\r\n     * Period.\r\n     */\r\n    function getPausedState()\r\n        external\r\n        view\r\n        override\r\n        returns (\r\n            bool paused,\r\n            uint256 pauseWindowEndTime,\r\n            uint256 bufferPeriodEndTime\r\n        )\r\n    {\r\n        paused = !_isNotPaused();\r\n        pauseWindowEndTime = _getPauseWindowEndTime();\r\n        bufferPeriodEndTime = _getBufferPeriodEndTime();\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the pause state to `paused`. The contract can only be paused until the end of the Pause Window, and\r\n     * unpaused until the end of the Buffer Period.\r\n     *\r\n     * Once the Buffer Period expires, this function reverts unconditionally.\r\n     */\r\n    function _setPaused(bool paused) internal {\r\n        if (paused) {\r\n            _require(block.timestamp < _getPauseWindowEndTime(), Errors.PAUSE_WINDOW_EXPIRED);\r\n        } else {\r\n            _require(block.timestamp < _getBufferPeriodEndTime(), Errors.BUFFER_PERIOD_EXPIRED);\r\n        }\r\n\r\n        _paused = paused;\r\n        emit PausedStateChanged(paused);\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if the contract is paused.\r\n     */\r\n    function _ensureNotPaused() internal view {\r\n        _require(_isNotPaused(), Errors.PAUSED);\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if the contract is not paused.\r\n     */\r\n    function _ensurePaused() internal view {\r\n        _require(!_isNotPaused(), Errors.NOT_PAUSED);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the contract is unpaused.\r\n     *\r\n     * Once the Buffer Period expires, the gas cost of calling this function is reduced dramatically, as storage is no\r\n     * longer accessed.\r\n     */\r\n    function _isNotPaused() internal view returns (bool) {\r\n        // After the Buffer Period, the (inexpensive) timestamp check short-circuits the storage access.\r\n        return block.timestamp > _getBufferPeriodEndTime() || !_paused;\r\n    }\r\n\r\n    // These getters lead to reduced bytecode size by inlining the immutable variables in a single place.\r\n\r\n    function _getPauseWindowEndTime() private view returns (uint256) {\r\n        return _pauseWindowEndTime;\r\n    }\r\n\r\n    function _getBufferPeriodEndTime() private view returns (uint256) {\r\n        return _bufferPeriodEndTime;\r\n    }\r\n}\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n// solhint-disable max-states-count\r\n\r\n/**\r\n * @dev Reference implementation for the base layer of a Pool contract that manages a single Pool with optional\r\n * Asset Managers, an admin-controlled swap fee percentage, and an emergency pause mechanism.\r\n *\r\n * Note that neither swap fees nor the pause mechanism are used by this contract. They are passed through so that\r\n * derived contracts can use them via the `_addSwapFeeAmount` and `_subtractSwapFeeAmount` functions, and the\r\n * `whenNotPaused` modifier.\r\n *\r\n * No admin permissions are checked here: instead, this contract delegates that to the Vault's own Authorizer.\r\n *\r\n * Because this contract doesn't implement the swap hooks, derived contracts should generally inherit from\r\n * BaseGeneralPool or BaseMinimalSwapInfoPool. Otherwise, subclasses must inherit from the corresponding interfaces\r\n * and implement the swap callbacks themselves.\r\n */\r\nabstract contract BasePool is IBasePool, BasePoolAuthorization, BalancerPoolToken, TemporarilyPausable {\r\n    using WordCodec for bytes32;\r\n    using FixedPoint for uint256;\r\n\r\n    uint256 private constant _MIN_TOKENS = 2;\r\n\r\n    uint256 private constant _DEFAULT_MINIMUM_BPT = 1e6;\r\n\r\n    // 1e18 corresponds to 1.0, or a 100% fee\r\n    uint256 private constant _MIN_SWAP_FEE_PERCENTAGE = 1e12; // 0.0001%\r\n    uint256 private constant _MAX_SWAP_FEE_PERCENTAGE = 1e17; // 10% - this fits in 64 bits\r\n\r\n    // Storage slot that can be used to store unrelated pieces of information. In particular, by default is used\r\n    // to store only the swap fee percentage of a pool. But it can be extended to store some more pieces of information.\r\n    // The swap fee percentage is stored in the most-significant 64 bits, therefore the remaining 192 bits can be\r\n    // used to store any other piece of information.\r\n    bytes32 private _miscData;\r\n    uint256 private constant _SWAP_FEE_PERCENTAGE_OFFSET = 192;\r\n\r\n    bytes32 private immutable _poolId;\r\n\r\n    event SwapFeePercentageChanged(uint256 swapFeePercentage);\r\n\r\n    constructor(\r\n        IVault vault,\r\n        IVault.PoolSpecialization specialization,\r\n        string memory name,\r\n        string memory symbol,\r\n        IERC20[] memory tokens,\r\n        address[] memory assetManagers,\r\n        uint256 swapFeePercentage,\r\n        uint256 pauseWindowDuration,\r\n        uint256 bufferPeriodDuration,\r\n        address owner\r\n    )\r\n        // Base Pools are expected to be deployed using factories. By using the factory address as the action\r\n        // disambiguator, we make all Pools deployed by the same factory share action identifiers. This allows for\r\n        // simpler management of permissions (such as being able to manage granting the 'set fee percentage' action in\r\n        // any Pool created by the same factory), while still making action identifiers unique among different factories\r\n        // if the selectors match, preventing accidental errors.\r\n        Authentication(bytes32(uint256(msg.sender)))\r\n        BalancerPoolToken(name, symbol, vault)\r\n        BasePoolAuthorization(owner)\r\n        TemporarilyPausable(pauseWindowDuration, bufferPeriodDuration)\r\n    {\r\n        _require(tokens.length >= _MIN_TOKENS, Errors.MIN_TOKENS);\r\n        _require(tokens.length <= _getMaxTokens(), Errors.MAX_TOKENS);\r\n\r\n        // The Vault only requires the token list to be ordered for the Two Token Pools specialization. However,\r\n        // to make the developer experience consistent, we are requiring this condition for all the native pools.\r\n        // Also, since these Pools will register tokens only once, we can ensure the Pool tokens will follow the same\r\n        // order. We rely on this property to make Pools simpler to write, as it lets us assume that the\r\n        // order of token-specific parameters (such as token weights) will not change.\r\n        InputHelpers.ensureArrayIsSorted(tokens);\r\n\r\n        _setSwapFeePercentage(swapFeePercentage);\r\n\r\n        bytes32 poolId = vault.registerPool(specialization);\r\n\r\n        vault.registerTokens(poolId, tokens, assetManagers);\r\n\r\n        // Set immutable state variables - these cannot be read from during construction\r\n        _poolId = poolId;\r\n    }\r\n\r\n    // Getters / Setters\r\n\r\n    function getPoolId() public view override returns (bytes32) {\r\n        return _poolId;\r\n    }\r\n\r\n    function _getTotalTokens() internal view virtual returns (uint256);\r\n\r\n    function _getMaxTokens() internal pure virtual returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the minimum BPT supply. This amount is minted to the zero address during initialization, effectively\r\n     * locking it.\r\n     *\r\n     * This is useful to make sure Pool initialization happens only once, but derived Pools can change this value (even\r\n     * to zero) by overriding this function.\r\n     */\r\n    function _getMinimumBpt() internal pure virtual returns (uint256) {\r\n        return _DEFAULT_MINIMUM_BPT;\r\n    }\r\n\r\n    function getSwapFeePercentage() public view returns (uint256) {\r\n        return _miscData.decodeUint64(_SWAP_FEE_PERCENTAGE_OFFSET);\r\n    }\r\n\r\n    function setSwapFeePercentage(uint256 swapFeePercentage) public virtual authenticate whenNotPaused {\r\n        _setSwapFeePercentage(swapFeePercentage);\r\n    }\r\n\r\n    function _setSwapFeePercentage(uint256 swapFeePercentage) private {\r\n        _require(swapFeePercentage >= _MIN_SWAP_FEE_PERCENTAGE, Errors.MIN_SWAP_FEE_PERCENTAGE);\r\n        _require(swapFeePercentage <= _MAX_SWAP_FEE_PERCENTAGE, Errors.MAX_SWAP_FEE_PERCENTAGE);\r\n\r\n        _miscData = _miscData.insertUint64(swapFeePercentage, _SWAP_FEE_PERCENTAGE_OFFSET);\r\n        emit SwapFeePercentageChanged(swapFeePercentage);\r\n    }\r\n\r\n    function setAssetManagerPoolConfig(IERC20 token, bytes memory poolConfig)\r\n        public\r\n        virtual\r\n        authenticate\r\n        whenNotPaused\r\n    {\r\n        _setAssetManagerPoolConfig(token, poolConfig);\r\n    }\r\n\r\n    function _setAssetManagerPoolConfig(IERC20 token, bytes memory poolConfig) private {\r\n        bytes32 poolId = getPoolId();\r\n        (, , , address assetManager) = getVault().getPoolTokenInfo(poolId, token);\r\n\r\n        IAssetManager(assetManager).setConfig(poolId, poolConfig);\r\n    }\r\n\r\n    function setPaused(bool paused) external authenticate {\r\n        _setPaused(paused);\r\n    }\r\n\r\n    function _isOwnerOnlyAction(bytes32 actionId) internal view virtual override returns (bool) {\r\n        return\r\n            (actionId == getActionId(this.setSwapFeePercentage.selector)) ||\r\n            (actionId == getActionId(this.setAssetManagerPoolConfig.selector));\r\n    }\r\n\r\n    function _getMiscData() internal view returns (bytes32) {\r\n        return _miscData;\r\n    }\r\n\r\n    /**\r\n     * Inserts data into the least-significant 192 bits of the misc data storage slot.\r\n     * Note that the remaining 64 bits are used for the swap fee percentage and cannot be overloaded.\r\n     */\r\n    function _setMiscData(bytes32 newData) internal {\r\n        _miscData = _miscData.insertBits192(newData, 0);\r\n    }\r\n\r\n    // Join / Exit Hooks\r\n\r\n    modifier onlyVault(bytes32 poolId) {\r\n        _require(msg.sender == address(getVault()), Errors.CALLER_NOT_VAULT);\r\n        _require(poolId == getPoolId(), Errors.INVALID_POOL_ID);\r\n        _;\r\n    }\r\n\r\n    function onJoinPool(\r\n        bytes32 poolId,\r\n        address sender,\r\n        address recipient,\r\n        uint256[] memory balances,\r\n        uint256 lastChangeBlock,\r\n        uint256 protocolSwapFeePercentage,\r\n        bytes memory userData\r\n    ) public virtual override onlyVault(poolId) returns (uint256[] memory, uint256[] memory) {\r\n        uint256[] memory scalingFactors = _scalingFactors();\r\n\r\n        if (totalSupply() == 0) {\r\n            (uint256 bptAmountOut, uint256[] memory amountsIn) = _onInitializePool(\r\n                poolId,\r\n                sender,\r\n                recipient,\r\n                scalingFactors,\r\n                userData\r\n            );\r\n\r\n            // On initialization, we lock _getMinimumBpt() by minting it for the zero address. This BPT acts as a\r\n            // minimum as it will never be burned, which reduces potential issues with rounding, and also prevents the\r\n            // Pool from ever being fully drained.\r\n            _require(bptAmountOut >= _getMinimumBpt(), Errors.MINIMUM_BPT);\r\n            _mintPoolTokens(address(0), _getMinimumBpt());\r\n            _mintPoolTokens(recipient, bptAmountOut - _getMinimumBpt());\r\n\r\n            // amountsIn are amounts entering the Pool, so we round up.\r\n            _downscaleUpArray(amountsIn, scalingFactors);\r\n\r\n            return (amountsIn, new uint256[](_getTotalTokens()));\r\n        } else {\r\n            _upscaleArray(balances, scalingFactors);\r\n            (uint256 bptAmountOut, uint256[] memory amountsIn, uint256[] memory dueProtocolFeeAmounts) = _onJoinPool(\r\n                poolId,\r\n                sender,\r\n                recipient,\r\n                balances,\r\n                lastChangeBlock,\r\n                protocolSwapFeePercentage,\r\n                scalingFactors,\r\n                userData\r\n            );\r\n\r\n            // Note we no longer use `balances` after calling `_onJoinPool`, which may mutate it.\r\n\r\n            _mintPoolTokens(recipient, bptAmountOut);\r\n\r\n            // amountsIn are amounts entering the Pool, so we round up.\r\n            _downscaleUpArray(amountsIn, scalingFactors);\r\n            // dueProtocolFeeAmounts are amounts exiting the Pool, so we round down.\r\n            _downscaleDownArray(dueProtocolFeeAmounts, scalingFactors);\r\n\r\n            return (amountsIn, dueProtocolFeeAmounts);\r\n        }\r\n    }\r\n\r\n    function onExitPool(\r\n        bytes32 poolId,\r\n        address sender,\r\n        address recipient,\r\n        uint256[] memory balances,\r\n        uint256 lastChangeBlock,\r\n        uint256 protocolSwapFeePercentage,\r\n        bytes memory userData\r\n    ) public virtual override onlyVault(poolId) returns (uint256[] memory, uint256[] memory) {\r\n        uint256[] memory scalingFactors = _scalingFactors();\r\n        _upscaleArray(balances, scalingFactors);\r\n\r\n        (uint256 bptAmountIn, uint256[] memory amountsOut, uint256[] memory dueProtocolFeeAmounts) = _onExitPool(\r\n            poolId,\r\n            sender,\r\n            recipient,\r\n            balances,\r\n            lastChangeBlock,\r\n            protocolSwapFeePercentage,\r\n            scalingFactors,\r\n            userData\r\n        );\r\n\r\n        // Note we no longer use `balances` after calling `_onExitPool`, which may mutate it.\r\n\r\n        _burnPoolTokens(sender, bptAmountIn);\r\n\r\n        // Both amountsOut and dueProtocolFeeAmounts are amounts exiting the Pool, so we round down.\r\n        _downscaleDownArray(amountsOut, scalingFactors);\r\n        _downscaleDownArray(dueProtocolFeeAmounts, scalingFactors);\r\n\r\n        return (amountsOut, dueProtocolFeeAmounts);\r\n    }\r\n\r\n    // Query functions\r\n\r\n    /**\r\n     * @dev Returns the amount of BPT that would be granted to `recipient` if the `onJoinPool` hook were called by the\r\n     * Vault with the same arguments, along with the number of tokens `sender` would have to supply.\r\n     *\r\n     * This function is not meant to be called directly, but rather from a helper contract that fetches current Vault\r\n     * data, such as the protocol swap fee percentage and Pool balances.\r\n     *\r\n     * Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must\r\n     * explicitly use eth_call instead of eth_sendTransaction.\r\n     */\r\n    function queryJoin(\r\n        bytes32 poolId,\r\n        address sender,\r\n        address recipient,\r\n        uint256[] memory balances,\r\n        uint256 lastChangeBlock,\r\n        uint256 protocolSwapFeePercentage,\r\n        bytes memory userData\r\n    ) external returns (uint256 bptOut, uint256[] memory amountsIn) {\r\n        InputHelpers.ensureInputLengthMatch(balances.length, _getTotalTokens());\r\n\r\n        _queryAction(\r\n            poolId,\r\n            sender,\r\n            recipient,\r\n            balances,\r\n            lastChangeBlock,\r\n            protocolSwapFeePercentage,\r\n            userData,\r\n            _onJoinPool,\r\n            _downscaleUpArray\r\n        );\r\n\r\n        // The `return` opcode is executed directly inside `_queryAction`, so execution never reaches this statement,\r\n        // and we don't need to return anything here - it just silences compiler warnings.\r\n        return (bptOut, amountsIn);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the amount of BPT that would be burned from `sender` if the `onExitPool` hook were called by the\r\n     * Vault with the same arguments, along with the number of tokens `recipient` would receive.\r\n     *\r\n     * This function is not meant to be called directly, but rather from a helper contract that fetches current Vault\r\n     * data, such as the protocol swap fee percentage and Pool balances.\r\n     *\r\n     * Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must\r\n     * explicitly use eth_call instead of eth_sendTransaction.\r\n     */\r\n    function queryExit(\r\n        bytes32 poolId,\r\n        address sender,\r\n        address recipient,\r\n        uint256[] memory balances,\r\n        uint256 lastChangeBlock,\r\n        uint256 protocolSwapFeePercentage,\r\n        bytes memory userData\r\n    ) external returns (uint256 bptIn, uint256[] memory amountsOut) {\r\n        InputHelpers.ensureInputLengthMatch(balances.length, _getTotalTokens());\r\n\r\n        _queryAction(\r\n            poolId,\r\n            sender,\r\n            recipient,\r\n            balances,\r\n            lastChangeBlock,\r\n            protocolSwapFeePercentage,\r\n            userData,\r\n            _onExitPool,\r\n            _downscaleDownArray\r\n        );\r\n\r\n        // The `return` opcode is executed directly inside `_queryAction`, so execution never reaches this statement,\r\n        // and we don't need to return anything here - it just silences compiler warnings.\r\n        return (bptIn, amountsOut);\r\n    }\r\n\r\n    // Internal hooks to be overridden by derived contracts - all token amounts (except BPT) in these interfaces are\r\n    // upscaled.\r\n\r\n    /**\r\n     * @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\r\n     *\r\n     * Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\r\n     *\r\n     * Minted BPT will be sent to `recipient`, except for _getMinimumBpt(), which will be deducted from this amount and\r\n     * sent to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BTP\r\n     * from ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire\r\n     * Pool's lifetime.\r\n     *\r\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\r\n     * be downscaled (rounding up) before being returned to the Vault.\r\n     */\r\n    function _onInitializePool(\r\n        bytes32 poolId,\r\n        address sender,\r\n        address recipient,\r\n        uint256[] memory scalingFactors,\r\n        bytes memory userData\r\n    ) internal virtual returns (uint256 bptAmountOut, uint256[] memory amountsIn);\r\n\r\n    /**\r\n     * @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\r\n     *\r\n     * Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\r\n     * tokens to pay in protocol swap fees.\r\n     *\r\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\r\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\r\n     *\r\n     * Minted BPT will be sent to `recipient`.\r\n     *\r\n     * The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\r\n     * be downscaled (rounding up) before being returned to the Vault.\r\n     *\r\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\r\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\r\n     */\r\n    function _onJoinPool(\r\n        bytes32 poolId,\r\n        address sender,\r\n        address recipient,\r\n        uint256[] memory balances,\r\n        uint256 lastChangeBlock,\r\n        uint256 protocolSwapFeePercentage,\r\n        uint256[] memory scalingFactors,\r\n        bytes memory userData\r\n    )\r\n        internal\r\n        virtual\r\n        returns (\r\n            uint256 bptAmountOut,\r\n            uint256[] memory amountsIn,\r\n            uint256[] memory dueProtocolFeeAmounts\r\n        );\r\n\r\n    /**\r\n     * @dev Called whenever the Pool is exited.\r\n     *\r\n     * Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\r\n     * the number of tokens to pay in protocol swap fees.\r\n     *\r\n     * Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\r\n     * performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\r\n     *\r\n     * BPT will be burnt from `sender`.\r\n     *\r\n     * The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\r\n     * (rounding down) before being returned to the Vault.\r\n     *\r\n     * Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\r\n     * amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault.\r\n     */\r\n    function _onExitPool(\r\n        bytes32 poolId,\r\n        address sender,\r\n        address recipient,\r\n        uint256[] memory balances,\r\n        uint256 lastChangeBlock,\r\n        uint256 protocolSwapFeePercentage,\r\n        uint256[] memory scalingFactors,\r\n        bytes memory userData\r\n    )\r\n        internal\r\n        virtual\r\n        returns (\r\n            uint256 bptAmountIn,\r\n            uint256[] memory amountsOut,\r\n            uint256[] memory dueProtocolFeeAmounts\r\n        );\r\n\r\n    // Internal functions\r\n\r\n    /**\r\n     * @dev Adds swap fee amount to `amount`, returning a higher value.\r\n     */\r\n    function _addSwapFeeAmount(uint256 amount) internal view returns (uint256) {\r\n        // This returns amount + fee amount, so we round up (favoring a higher fee amount).\r\n        return amount.divUp(FixedPoint.ONE.sub(getSwapFeePercentage()));\r\n    }\r\n\r\n    /**\r\n     * @dev Subtracts swap fee amount from `amount`, returning a lower value.\r\n     */\r\n    function _subtractSwapFeeAmount(uint256 amount) internal view returns (uint256) {\r\n        // This returns amount - fee amount, so we round up (favoring a higher fee amount).\r\n        uint256 feeAmount = amount.mulUp(getSwapFeePercentage());\r\n        return amount.sub(feeAmount);\r\n    }\r\n\r\n    // Scaling\r\n\r\n    /**\r\n     * @dev Returns a scaling factor that, when multiplied to a token amount for `token`, normalizes its balance as if\r\n     * it had 18 decimals.\r\n     */\r\n    function _computeScalingFactor(IERC20 token) internal view returns (uint256) {\r\n        if (address(token) == address(this)) {\r\n            return FixedPoint.ONE;\r\n        }\r\n\r\n        // Tokens that don't implement the `decimals` method are not supported.\r\n        uint256 tokenDecimals = ERC20(address(token)).decimals();\r\n\r\n        // Tokens with more than 18 decimals are not supported.\r\n        uint256 decimalsDifference = Math.sub(18, tokenDecimals);\r\n        return FixedPoint.ONE * 10**decimalsDifference;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the scaling factor for one of the Pool's tokens. Reverts if `token` is not a token registered by the\r\n     * Pool.\r\n     *\r\n     * All scaling factors are fixed-point values with 18 decimals, to allow for this function to be overridden by\r\n     * derived contracts that need to apply further scaling, making these factors potentially non-integer.\r\n     *\r\n     * The largest 'base' scaling factor (i.e. in tokens with less than 18 decimals) is 10**18, which in fixed-point is\r\n     * 10**36. This value can be multiplied with a 112 bit Vault balance with no overflow by a factor of ~1e7, making\r\n     * even relatively 'large' factors safe to use.\r\n     *\r\n     * The 1e7 figure is the result of 2**256 / (1e18 * 1e18 * 2**112).\r\n     */\r\n    function _scalingFactor(IERC20 token) internal view virtual returns (uint256);\r\n\r\n    /**\r\n     * @dev Same as `_scalingFactor()`, except for all registered tokens (in the same order as registered). The Vault\r\n     * will always pass balances in this order when calling any of the Pool hooks.\r\n     */\r\n    function _scalingFactors() internal view virtual returns (uint256[] memory);\r\n\r\n    function getScalingFactors() external view returns (uint256[] memory) {\r\n        return _scalingFactors();\r\n    }\r\n\r\n    /**\r\n     * @dev Applies `scalingFactor` to `amount`, resulting in a larger or equal value depending on whether it needed\r\n     * scaling or not.\r\n     */\r\n    function _upscale(uint256 amount, uint256 scalingFactor) internal pure returns (uint256) {\r\n        // Upscale rounding wouldn't necessarily always go in the same direction: in a swap for example the balance of\r\n        // token in should be rounded up, and that of token out rounded down. This is the only place where we round in\r\n        // the same direction for all amounts, as the impact of this rounding is expected to be minimal (and there's no\r\n        // rounding error unless `_scalingFactor()` is overriden).\r\n        return FixedPoint.mulDown(amount, scalingFactor);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as `_upscale`, but for an entire array. This function does not return anything, but instead *mutates*\r\n     * the `amounts` array.\r\n     */\r\n    function _upscaleArray(uint256[] memory amounts, uint256[] memory scalingFactors) internal view {\r\n        for (uint256 i = 0; i < _getTotalTokens(); ++i) {\r\n            amounts[i] = FixedPoint.mulDown(amounts[i], scalingFactors[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Reverses the `scalingFactor` applied to `amount`, resulting in a smaller or equal value depending on\r\n     * whether it needed scaling or not. The result is rounded down.\r\n     */\r\n    function _downscaleDown(uint256 amount, uint256 scalingFactor) internal pure returns (uint256) {\r\n        return FixedPoint.divDown(amount, scalingFactor);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as `_downscaleDown`, but for an entire array. This function does not return anything, but instead\r\n     * *mutates* the `amounts` array.\r\n     */\r\n    function _downscaleDownArray(uint256[] memory amounts, uint256[] memory scalingFactors) internal view {\r\n        for (uint256 i = 0; i < _getTotalTokens(); ++i) {\r\n            amounts[i] = FixedPoint.divDown(amounts[i], scalingFactors[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Reverses the `scalingFactor` applied to `amount`, resulting in a smaller or equal value depending on\r\n     * whether it needed scaling or not. The result is rounded up.\r\n     */\r\n    function _downscaleUp(uint256 amount, uint256 scalingFactor) internal pure returns (uint256) {\r\n        return FixedPoint.divUp(amount, scalingFactor);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as `_downscaleUp`, but for an entire array. This function does not return anything, but instead\r\n     * *mutates* the `amounts` array.\r\n     */\r\n    function _downscaleUpArray(uint256[] memory amounts, uint256[] memory scalingFactors) internal view {\r\n        for (uint256 i = 0; i < _getTotalTokens(); ++i) {\r\n            amounts[i] = FixedPoint.divUp(amounts[i], scalingFactors[i]);\r\n        }\r\n    }\r\n\r\n    function _getAuthorizer() internal view override returns (IAuthorizer) {\r\n        // Access control management is delegated to the Vault's Authorizer. This lets Balancer Governance manage which\r\n        // accounts can call permissioned functions: for example, to perform emergency pauses.\r\n        // If the owner is delegated, then *all* permissioned functions, including `setSwapFeePercentage`, will be under\r\n        // Governance control.\r\n        return getVault().getAuthorizer();\r\n    }\r\n\r\n    function _queryAction(\r\n        bytes32 poolId,\r\n        address sender,\r\n        address recipient,\r\n        uint256[] memory balances,\r\n        uint256 lastChangeBlock,\r\n        uint256 protocolSwapFeePercentage,\r\n        bytes memory userData,\r\n        function(bytes32, address, address, uint256[] memory, uint256, uint256, uint256[] memory, bytes memory)\r\n            internal\r\n            returns (uint256, uint256[] memory, uint256[] memory) _action,\r\n        function(uint256[] memory, uint256[] memory) internal view _downscaleArray\r\n    ) private {\r\n        // This uses the same technique used by the Vault in queryBatchSwap. Refer to that function for a detailed\r\n        // explanation.\r\n\r\n        if (msg.sender != address(this)) {\r\n            // We perform an external call to ourselves, forwarding the same calldata. In this call, the else clause of\r\n            // the preceding if statement will be executed instead.\r\n\r\n            // solhint-disable-next-line avoid-low-level-calls\r\n            (bool success, ) = address(this).call(msg.data);\r\n\r\n            // solhint-disable-next-line no-inline-assembly\r\n            assembly {\r\n                // This call should always revert to decode the bpt and token amounts from the revert reason\r\n                switch success\r\n                    case 0 {\r\n                        // Note we are manually writing the memory slot 0. We can safely overwrite whatever is\r\n                        // stored there as we take full control of the execution and then immediately return.\r\n\r\n                        // We copy the first 4 bytes to check if it matches with the expected signature, otherwise\r\n                        // there was another revert reason and we should forward it.\r\n                        returndatacopy(0, 0, 0x04)\r\n                        let error := and(mload(0), 0xffffffff00000000000000000000000000000000000000000000000000000000)\r\n\r\n                        // If the first 4 bytes don't match with the expected signature, we forward the revert reason.\r\n                        if eq(eq(error, 0x43adbafb00000000000000000000000000000000000000000000000000000000), 0) {\r\n                            returndatacopy(0, 0, returndatasize())\r\n                            revert(0, returndatasize())\r\n                        }\r\n\r\n                        // The returndata contains the signature, followed by the raw memory representation of the\r\n                        // `bptAmount` and `tokenAmounts` (array: length + data). We need to return an ABI-encoded\r\n                        // representation of these.\r\n                        // An ABI-encoded response will include one additional field to indicate the starting offset of\r\n                        // the `tokenAmounts` array. The `bptAmount` will be laid out in the first word of the\r\n                        // returndata.\r\n                        //\r\n                        // In returndata:\r\n                        // [ signature ][ bptAmount ][ tokenAmounts length ][ tokenAmounts values ]\r\n                        // [  4 bytes  ][  32 bytes ][       32 bytes      ][ (32 * length) bytes ]\r\n                        //\r\n                        // We now need to return (ABI-encoded values):\r\n                        // [ bptAmount ][ tokeAmounts offset ][ tokenAmounts length ][ tokenAmounts values ]\r\n                        // [  32 bytes ][       32 bytes     ][       32 bytes      ][ (32 * length) bytes ]\r\n\r\n                        // We copy 32 bytes for the `bptAmount` from returndata into memory.\r\n                        // Note that we skip the first 4 bytes for the error signature\r\n                        returndatacopy(0, 0x04, 32)\r\n\r\n                        // The offsets are 32-bytes long, so the array of `tokenAmounts` will start after\r\n                        // the initial 64 bytes.\r\n                        mstore(0x20, 64)\r\n\r\n                        // We now copy the raw memory array for the `tokenAmounts` from returndata into memory.\r\n                        // Since bpt amount and offset take up 64 bytes, we start copying at address 0x40. We also\r\n                        // skip the first 36 bytes from returndata, which correspond to the signature plus bpt amount.\r\n                        returndatacopy(0x40, 0x24, sub(returndatasize(), 36))\r\n\r\n                        // We finally return the ABI-encoded uint256 and the array, which has a total length equal to\r\n                        // the size of returndata, plus the 32 bytes of the offset but without the 4 bytes of the\r\n                        // error signature.\r\n                        return(0, add(returndatasize(), 28))\r\n                    }\r\n                    default {\r\n                        // This call should always revert, but we fail nonetheless if that didn't happen\r\n                        invalid()\r\n                    }\r\n            }\r\n        } else {\r\n            uint256[] memory scalingFactors = _scalingFactors();\r\n            _upscaleArray(balances, scalingFactors);\r\n\r\n            (uint256 bptAmount, uint256[] memory tokenAmounts, ) = _action(\r\n                poolId,\r\n                sender,\r\n                recipient,\r\n                balances,\r\n                lastChangeBlock,\r\n                protocolSwapFeePercentage,\r\n                scalingFactors,\r\n                userData\r\n            );\r\n\r\n            _downscaleArray(tokenAmounts, scalingFactors);\r\n\r\n            // solhint-disable-next-line no-inline-assembly\r\n            assembly {\r\n                // We will return a raw representation of `bptAmount` and `tokenAmounts` in memory, which is composed of\r\n                // a 32-byte uint256, followed by a 32-byte for the array length, and finally the 32-byte uint256 values\r\n                // Because revert expects a size in bytes, we multiply the array length (stored at `tokenAmounts`) by 32\r\n                let size := mul(mload(tokenAmounts), 32)\r\n\r\n                // We store the `bptAmount` in the previous slot to the `tokenAmounts` array. We can make sure there\r\n                // will be at least one available slot due to how the memory scratch space works.\r\n                // We can safely overwrite whatever is stored in this slot as we will revert immediately after that.\r\n                let start := sub(tokenAmounts, 0x20)\r\n                mstore(start, bptAmount)\r\n\r\n                // We send one extra value for the error signature \"QueryError(uint256,uint256[])\" which is 0x43adbafb\r\n                // We use the previous slot to `bptAmount`.\r\n                mstore(sub(start, 0x20), 0x0000000000000000000000000000000000000000000000000000000043adbafb)\r\n                start := sub(start, 0x04)\r\n\r\n                // When copying from `tokenAmounts` into returndata, we copy the additional 68 bytes to also return\r\n                // the `bptAmount`, the array 's length, and the error signature.\r\n                revert(start, add(size, 68))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Linear Pools are designed to hold two assets: \"main\" and \"wrapped\" tokens that have an equal value underlying\r\n * token (e.g., DAI and waDAI). There must be an external feed available to provide an exact, non-manipulable exchange\r\n * rate between the tokens. In particular, any reversible manipulation (e.g. causing the rate to increase and then\r\n * decrease) can lead to severe issues and loss of funds.\r\n *\r\n * The Pool will register three tokens in the Vault however: the two assets and the BPT itself,\r\n * so that BPT can be exchanged (effectively joining and exiting) via swaps.\r\n *\r\n * Despite inheriting from BasePool, much of the basic behavior changes. This Pool does not support regular joins and\r\n * exits, as the entire BPT supply is 'preminted' during initialization.\r\n *\r\n * Unlike most other Pools, this one does not attempt to create revenue by charging fees: value is derived by holding\r\n * the wrapped, yield-bearing asset. However, the 'swap fee percentage' value is still used, albeit with a different\r\n * meaning. This Pool attempts to hold a certain amount of \"main\" tokens, between a lower and upper target value.\r\n * The pool charges fees on trades that move the balance outside that range, which are then paid back as incentives to\r\n * traders whose swaps return the balance to the desired region.\r\n * The net revenue via fees is expected to be zero: all collected fees are used to pay for this 'rebalancing'.\r\n */\r\nabstract contract LinearPool is BasePool, IGeneralPool, IRateProvider {\r\n    using WordCodec for bytes32;\r\n    using FixedPoint for uint256;\r\n    using PriceRateCache for bytes32;\r\n    using LinearPoolUserData for bytes;\r\n\r\n    uint256 private constant _TOTAL_TOKENS = 3; // Main token, wrapped token, BPT\r\n\r\n    // This is the maximum token amount the Vault can hold. In regular operation, the total BPT supply remains constant\r\n    // and equal to _INITIAL_BPT_SUPPLY, but most of it remains in the Pool, waiting to be exchanged for tokens. The\r\n    // actual amount of BPT in circulation is the total supply minus the amount held by the Pool, and is known as the\r\n    // 'virtual supply'.\r\n    // The total supply can only change if the emergency pause is activated by governance, enabling an\r\n    // alternative proportional exit that burns BPT. As this is not expected to happen, we optimize for\r\n    // success by using _INITIAL_BPT_SUPPLY instead of totalSupply(), saving a storage read. This optimization is only\r\n    // valid if the Pool is never paused: in case of an emergency that leads to burned tokens, the Pool should not\r\n    // be used after the buffer period expires and it automatically 'unpauses'.\r\n    uint256 private constant _INITIAL_BPT_SUPPLY = 2**(112) - 1;\r\n\r\n    IERC20 private immutable _mainToken;\r\n    IERC20 private immutable _wrappedToken;\r\n\r\n    // The indices of each token when registered, which can then be used to access the balances array.\r\n    uint256 private immutable _bptIndex;\r\n    uint256 private immutable _mainIndex;\r\n    uint256 private immutable _wrappedIndex;\r\n\r\n    // Both BPT and the main token have a regular, constant scaling factor (equal to FixedPoint.ONE for BPT, and\r\n    // dependent on the number of decimals for the main token). However, the wrapped token's scaling factor has two\r\n    // components: the usual token decimal scaling factor, and an externally provided rate used to convert wrapped\r\n    // tokens to an equivalent main token amount. This external rate is expected to be ever increasing, reflecting the\r\n    // fact that the wrapped token appreciates in value over time (e.g. because it is accruing interest).\r\n    uint256 private immutable _scalingFactorMainToken;\r\n    uint256 private immutable _scalingFactorWrappedToken;\r\n\r\n    // The lower and upper target are in BasePool's misc data field, which has 192 bits available (as it shares the same\r\n    // storage slot as the swap fee percentage, which is 64 bits). These are already scaled by the main token's scaling\r\n    // factor, which means that the maximum upper target is ~80 billion in the main token units if the token were to\r\n    // have 18 decimals (2^(192/2) / 10^18), which is more than enough.\r\n    // [        64 bits       |    96 bits   |    96 bits    ]\r\n    // [       reserved       | upper target |  lower target ]\r\n    // [  base pool swap fee  |         misc data            ]\r\n    // [ MSB                                             LSB ]\r\n\r\n    uint256 private constant _LOWER_TARGET_OFFSET = 0;\r\n    uint256 private constant _UPPER_TARGET_OFFSET = 96;\r\n\r\n    uint256 private constant _MAX_UPPER_TARGET = 2**(96) - 1;\r\n\r\n    event TargetsSet(IERC20 indexed token, uint256 lowerTarget, uint256 upperTarget);\r\n\r\n    constructor(\r\n        IVault vault,\r\n        string memory name,\r\n        string memory symbol,\r\n        IERC20 mainToken,\r\n        IERC20 wrappedToken,\r\n        uint256 upperTarget,\r\n        uint256 swapFeePercentage,\r\n        uint256 pauseWindowDuration,\r\n        uint256 bufferPeriodDuration,\r\n        address owner\r\n    )\r\n        BasePool(\r\n            vault,\r\n            IVault.PoolSpecialization.GENERAL,\r\n            name,\r\n            symbol,\r\n            _sortTokens(mainToken, wrappedToken, this),\r\n            new address[](_TOTAL_TOKENS),\r\n            swapFeePercentage,\r\n            pauseWindowDuration,\r\n            bufferPeriodDuration,\r\n            owner\r\n        )\r\n    {\r\n        // Set tokens\r\n        _mainToken = mainToken;\r\n        _wrappedToken = wrappedToken;\r\n\r\n        // Set token indexes\r\n        (uint256 mainIndex, uint256 wrappedIndex, uint256 bptIndex) = _getSortedTokenIndexes(\r\n            mainToken,\r\n            wrappedToken,\r\n            this\r\n        );\r\n        _bptIndex = bptIndex;\r\n        _mainIndex = mainIndex;\r\n        _wrappedIndex = wrappedIndex;\r\n\r\n        // Set scaling factors\r\n        _scalingFactorMainToken = _computeScalingFactor(mainToken);\r\n        _scalingFactorWrappedToken = _computeScalingFactor(wrappedToken);\r\n\r\n        // Set initial targets. Lower target must be set to zero because initially there are no fees accumulated.\r\n        // Otherwise the pool will owe fees at start which results in a manipulable rate.\r\n        uint256 lowerTarget = 0;\r\n        _setTargets(mainToken, lowerTarget, upperTarget);\r\n    }\r\n\r\n    function getMainToken() public view returns (address) {\r\n        return address(_mainToken);\r\n    }\r\n\r\n    function getWrappedToken() external view returns (address) {\r\n        return address(_wrappedToken);\r\n    }\r\n\r\n    function getBptIndex() external view returns (uint256) {\r\n        return _bptIndex;\r\n    }\r\n\r\n    function getMainIndex() external view returns (uint256) {\r\n        return _mainIndex;\r\n    }\r\n\r\n    function getWrappedIndex() external view returns (uint256) {\r\n        return _wrappedIndex;\r\n    }\r\n\r\n    /**\r\n     * @dev Finishes initialization of the Linear Pool: it is unusable before calling this function as no BPT will have\r\n     * been minted.\r\n     *\r\n     * Since Linear Pools have preminted BPT stored in the Vault, they require an initial join to deposit said BPT as\r\n     * their balance. Unfortunately, this cannot be performed during construction, as a join involves calling the\r\n     * `onJoinPool` function on the Pool, and the Pool will not have any code until construction finishes. Therefore,\r\n     * this must happen in a separate call.\r\n     *\r\n     * It is highly recommended to create Linear pools using the LinearPoolFactory, which calls `initialize`\r\n     * automatically.\r\n     */\r\n    function initialize() external {\r\n        bytes32 poolId = getPoolId();\r\n        (IERC20[] memory tokens, , ) = getVault().getPoolTokens(poolId);\r\n\r\n        // Joins typically involve the Pool receiving tokens in exchange for newly-minted BPT. In this case however, the\r\n        // Pool will mint the entire BPT supply to itself, and join itself with it.\r\n        uint256[] memory maxAmountsIn = new uint256[](_TOTAL_TOKENS);\r\n        maxAmountsIn[_bptIndex] = _INITIAL_BPT_SUPPLY;\r\n\r\n        // The first time this executes, it will call `_onInitializePool` (as the BPT supply will be zero). Future calls\r\n        // will be routed to `_onJoinPool`, which always reverts, meaning `initialize` will only execute once.\r\n        IVault.JoinPoolRequest memory request = IVault.JoinPoolRequest({\r\n            assets: _asIAsset(tokens),\r\n            maxAmountsIn: maxAmountsIn,\r\n            userData: \"\",\r\n            fromInternalBalance: false\r\n        });\r\n\r\n        getVault().joinPool(poolId, address(this), address(this), request);\r\n    }\r\n\r\n    /**\r\n     * @dev Implementation of onSwap, from IGeneralPool.\r\n     */\r\n    function onSwap(\r\n        SwapRequest memory request,\r\n        uint256[] memory balances,\r\n        uint256 indexIn,\r\n        uint256 indexOut\r\n    ) public view override onlyVault(request.poolId) whenNotPaused returns (uint256) {\r\n        // In most Pools, swaps involve exchanging one token held by the Pool for another. In this case however, since\r\n        // one of the three tokens is the BPT itself, a swap might also be a join (main/wrapped for BPT) or an exit\r\n        // (BPT for main/wrapped).\r\n        // All three swap types (swaps, joins and exits) are fully disabled if the emergency pause is enabled. Under\r\n        // these circumstances, the Pool should be exited using the regular Vault.exitPool function.\r\n\r\n        // Sanity check: this is not entirely necessary as the Vault's interface enforces the indices to be valid, but\r\n        // the check is cheap to perform.\r\n        _require(indexIn < _TOTAL_TOKENS && indexOut < _TOTAL_TOKENS, Errors.OUT_OF_BOUNDS);\r\n\r\n        // Note that we already know the indices of the main token, wrapped token and BPT, so there is no need to pass\r\n        // these indices to the inner functions.\r\n\r\n        // Upscale balances by the scaling factors (taking into account the wrapped token rate)\r\n        uint256[] memory scalingFactors = _scalingFactors();\r\n        _upscaleArray(balances, scalingFactors);\r\n\r\n        (uint256 lowerTarget, uint256 upperTarget) = getTargets();\r\n        LinearMath.Params memory params = LinearMath.Params({\r\n            fee: getSwapFeePercentage(),\r\n            lowerTarget: lowerTarget,\r\n            upperTarget: upperTarget\r\n        });\r\n\r\n        if (request.kind == IVault.SwapKind.GIVEN_IN) {\r\n            // The amount given is for token in, the amount calculated is for token out\r\n            request.amount = _upscale(request.amount, scalingFactors[indexIn]);\r\n            uint256 amountOut = _onSwapGivenIn(request, balances, params);\r\n\r\n            // amountOut tokens are exiting the Pool, so we round down.\r\n            return _downscaleDown(amountOut, scalingFactors[indexOut]);\r\n        } else {\r\n            // The amount given is for token out, the amount calculated is for token in\r\n            request.amount = _upscale(request.amount, scalingFactors[indexOut]);\r\n            uint256 amountIn = _onSwapGivenOut(request, balances, params);\r\n\r\n            // amountIn tokens are entering the Pool, so we round up.\r\n            return _downscaleUp(amountIn, scalingFactors[indexIn]);\r\n        }\r\n    }\r\n\r\n    function _onSwapGivenIn(\r\n        SwapRequest memory request,\r\n        uint256[] memory balances,\r\n        LinearMath.Params memory params\r\n    ) internal view returns (uint256) {\r\n        if (request.tokenIn == this) {\r\n            return _swapGivenBptIn(request, balances, params);\r\n        } else if (request.tokenIn == _mainToken) {\r\n            return _swapGivenMainIn(request, balances, params);\r\n        } else if (request.tokenIn == _wrappedToken) {\r\n            return _swapGivenWrappedIn(request, balances, params);\r\n        } else {\r\n            _revert(Errors.INVALID_TOKEN);\r\n        }\r\n    }\r\n\r\n    function _swapGivenBptIn(\r\n        SwapRequest memory request,\r\n        uint256[] memory balances,\r\n        LinearMath.Params memory params\r\n    ) internal view returns (uint256) {\r\n        _require(request.tokenOut == _mainToken || request.tokenOut == _wrappedToken, Errors.INVALID_TOKEN);\r\n        return\r\n            (request.tokenOut == _mainToken ? LinearMath._calcMainOutPerBptIn : LinearMath._calcWrappedOutPerBptIn)(\r\n                request.amount,\r\n                balances[_mainIndex],\r\n                balances[_wrappedIndex],\r\n                _getApproximateVirtualSupply(balances[_bptIndex]),\r\n                params\r\n            );\r\n    }\r\n\r\n    function _swapGivenMainIn(\r\n        SwapRequest memory request,\r\n        uint256[] memory balances,\r\n        LinearMath.Params memory params\r\n    ) internal view returns (uint256) {\r\n        _require(request.tokenOut == _wrappedToken || request.tokenOut == this, Errors.INVALID_TOKEN);\r\n        return\r\n            request.tokenOut == this\r\n                ? LinearMath._calcBptOutPerMainIn(\r\n                    request.amount,\r\n                    balances[_mainIndex],\r\n                    balances[_wrappedIndex],\r\n                    _getApproximateVirtualSupply(balances[_bptIndex]),\r\n                    params\r\n                )\r\n                : LinearMath._calcWrappedOutPerMainIn(request.amount, balances[_mainIndex], params);\r\n    }\r\n\r\n    function _swapGivenWrappedIn(\r\n        SwapRequest memory request,\r\n        uint256[] memory balances,\r\n        LinearMath.Params memory params\r\n    ) internal view returns (uint256) {\r\n        _require(request.tokenOut == _mainToken || request.tokenOut == this, Errors.INVALID_TOKEN);\r\n        return\r\n            request.tokenOut == this\r\n                ? LinearMath._calcBptOutPerWrappedIn(\r\n                    request.amount,\r\n                    balances[_mainIndex],\r\n                    balances[_wrappedIndex],\r\n                    _getApproximateVirtualSupply(balances[_bptIndex]),\r\n                    params\r\n                )\r\n                : LinearMath._calcMainOutPerWrappedIn(request.amount, balances[_mainIndex], params);\r\n    }\r\n\r\n    function _onSwapGivenOut(\r\n        SwapRequest memory request,\r\n        uint256[] memory balances,\r\n        LinearMath.Params memory params\r\n    ) internal view returns (uint256) {\r\n        if (request.tokenOut == this) {\r\n            return _swapGivenBptOut(request, balances, params);\r\n        } else if (request.tokenOut == _mainToken) {\r\n            return _swapGivenMainOut(request, balances, params);\r\n        } else if (request.tokenOut == _wrappedToken) {\r\n            return _swapGivenWrappedOut(request, balances, params);\r\n        } else {\r\n            _revert(Errors.INVALID_TOKEN);\r\n        }\r\n    }\r\n\r\n    function _swapGivenBptOut(\r\n        SwapRequest memory request,\r\n        uint256[] memory balances,\r\n        LinearMath.Params memory params\r\n    ) internal view returns (uint256) {\r\n        _require(request.tokenIn == _mainToken || request.tokenIn == _wrappedToken, Errors.INVALID_TOKEN);\r\n        return\r\n            (request.tokenIn == _mainToken ? LinearMath._calcMainInPerBptOut : LinearMath._calcWrappedInPerBptOut)(\r\n                request.amount,\r\n                balances[_mainIndex],\r\n                balances[_wrappedIndex],\r\n                _getApproximateVirtualSupply(balances[_bptIndex]),\r\n                params\r\n            );\r\n    }\r\n\r\n    function _swapGivenMainOut(\r\n        SwapRequest memory request,\r\n        uint256[] memory balances,\r\n        LinearMath.Params memory params\r\n    ) internal view returns (uint256) {\r\n        _require(request.tokenIn == _wrappedToken || request.tokenIn == this, Errors.INVALID_TOKEN);\r\n        return\r\n            request.tokenIn == this\r\n                ? LinearMath._calcBptInPerMainOut(\r\n                    request.amount,\r\n                    balances[_mainIndex],\r\n                    balances[_wrappedIndex],\r\n                    _getApproximateVirtualSupply(balances[_bptIndex]),\r\n                    params\r\n                )\r\n                : LinearMath._calcWrappedInPerMainOut(request.amount, balances[_mainIndex], params);\r\n    }\r\n\r\n    function _swapGivenWrappedOut(\r\n        SwapRequest memory request,\r\n        uint256[] memory balances,\r\n        LinearMath.Params memory params\r\n    ) internal view returns (uint256) {\r\n        _require(request.tokenIn == _mainToken || request.tokenIn == this, Errors.INVALID_TOKEN);\r\n        return\r\n            request.tokenIn == this\r\n                ? LinearMath._calcBptInPerWrappedOut(\r\n                    request.amount,\r\n                    balances[_mainIndex],\r\n                    balances[_wrappedIndex],\r\n                    _getApproximateVirtualSupply(balances[_bptIndex]),\r\n                    params\r\n                )\r\n                : LinearMath._calcMainInPerWrappedOut(request.amount, balances[_mainIndex], params);\r\n    }\r\n\r\n    function _onInitializePool(\r\n        bytes32,\r\n        address sender,\r\n        address recipient,\r\n        uint256[] memory,\r\n        bytes memory\r\n    ) internal view override whenNotPaused returns (uint256, uint256[] memory) {\r\n        // Linear Pools can only be initialized by the Pool performing the initial join via the `initialize` function.\r\n        _require(sender == address(this), Errors.INVALID_INITIALIZATION);\r\n        _require(recipient == address(this), Errors.INVALID_INITIALIZATION);\r\n\r\n        // The full BPT supply will be minted and deposited in the Pool. Note that there is no need to approve the Vault\r\n        // as it already has infinite BPT allowance.\r\n        uint256 bptAmountOut = _INITIAL_BPT_SUPPLY;\r\n\r\n        uint256[] memory amountsIn = new uint256[](_TOTAL_TOKENS);\r\n        amountsIn[_bptIndex] = _INITIAL_BPT_SUPPLY;\r\n\r\n        return (bptAmountOut, amountsIn);\r\n    }\r\n\r\n    function _onJoinPool(\r\n        bytes32,\r\n        address,\r\n        address,\r\n        uint256[] memory,\r\n        uint256,\r\n        uint256,\r\n        uint256[] memory,\r\n        bytes memory\r\n    )\r\n        internal\r\n        pure\r\n        override\r\n        returns (\r\n            uint256,\r\n            uint256[] memory,\r\n            uint256[] memory\r\n        )\r\n    {\r\n        _revert(Errors.UNHANDLED_BY_LINEAR_POOL);\r\n    }\r\n\r\n    function _onExitPool(\r\n        bytes32,\r\n        address,\r\n        address,\r\n        uint256[] memory balances,\r\n        uint256,\r\n        uint256,\r\n        uint256[] memory,\r\n        bytes memory userData\r\n    )\r\n        internal\r\n        view\r\n        override\r\n        returns (\r\n            uint256 bptAmountIn,\r\n            uint256[] memory amountsOut,\r\n            uint256[] memory dueProtocolFeeAmounts\r\n        )\r\n    {\r\n        // Exits typically revert, except for the proportional exit when the emergency pause mechanism has been\r\n        // triggered. This allows for a simple and safe way to exit the Pool.\r\n\r\n        // Note that the rate cache will not be automatically updated in such a scenario (though this can be still done\r\n        // manually). This however should not lead to any issues as the rate is not important during the emergency exit.\r\n        // On the contrary, decoupling the rate provider from the emergency exit might be useful under these\r\n        // circumstances.\r\n\r\n        LinearPoolUserData.ExitKind kind = userData.exitKind();\r\n        if (kind != LinearPoolUserData.ExitKind.EMERGENCY_EXACT_BPT_IN_FOR_TOKENS_OUT) {\r\n            _revert(Errors.UNHANDLED_BY_LINEAR_POOL);\r\n        } else {\r\n            _ensurePaused();\r\n            // Note that this will cause the user's BPT to be burned, which is not something that happens during\r\n            // regular operation of this Pool, and may lead to accounting errors. Because of this, it is highly\r\n            // advisable to stop using a Pool after it is paused and the pause window expires.\r\n\r\n            (bptAmountIn, amountsOut) = _emergencyProportionalExit(balances, userData);\r\n\r\n            // Due protocol fees are set to zero as this Pool accrues no fees and pays no protocol fees.\r\n            dueProtocolFeeAmounts = new uint256[](_getTotalTokens());\r\n        }\r\n    }\r\n\r\n    function _emergencyProportionalExit(uint256[] memory balances, bytes memory userData)\r\n        private\r\n        view\r\n        returns (uint256, uint256[] memory)\r\n    {\r\n        // This proportional exit function is only enabled if the contract is paused, to provide users a way to\r\n        // retrieve their tokens in case of an emergency.\r\n        //\r\n        // This particular exit function is the only one available because it is the simplest, and therefore least\r\n        // likely to be incorrect, or revert and lock funds.\r\n\r\n        uint256 bptAmountIn = userData.exactBptInForTokensOut();\r\n        // Note that there is no minimum amountOut parameter: this is handled by `IVault.exitPool`.\r\n\r\n        // This process burns BPT, rendering `_getApproximateVirtualSupply` inaccurate, so we use the real method here\r\n        uint256[] memory amountsOut = LinearMath._calcTokensOutGivenExactBptIn(\r\n            balances,\r\n            bptAmountIn,\r\n            _getVirtualSupply(balances[_bptIndex]),\r\n            _bptIndex\r\n        );\r\n\r\n        return (bptAmountIn, amountsOut);\r\n    }\r\n\r\n    function _getMaxTokens() internal pure override returns (uint256) {\r\n        return _TOTAL_TOKENS;\r\n    }\r\n\r\n    function _getMinimumBpt() internal pure override returns (uint256) {\r\n        // Linear Pools don't lock any BPT, as the total supply will already be forever non-zero due to the preminting\r\n        // mechanism, ensuring initialization only occurs once.\r\n        return 0;\r\n    }\r\n\r\n    function _getTotalTokens() internal view virtual override returns (uint256) {\r\n        return _TOTAL_TOKENS;\r\n    }\r\n\r\n    function _scalingFactor(IERC20 token) internal view virtual override returns (uint256) {\r\n        if (token == _mainToken) {\r\n            return _scalingFactorMainToken;\r\n        } else if (token == _wrappedToken) {\r\n            // The wrapped token's scaling factor is not constant, but increases over time as the wrapped token\r\n            // increases in value.\r\n            return _scalingFactorWrappedToken.mulDown(_getWrappedTokenRate());\r\n        } else if (token == this) {\r\n            return FixedPoint.ONE;\r\n        } else {\r\n            _revert(Errors.INVALID_TOKEN);\r\n        }\r\n    }\r\n\r\n    function _scalingFactors() internal view virtual override returns (uint256[] memory) {\r\n        uint256[] memory scalingFactors = new uint256[](_TOTAL_TOKENS);\r\n\r\n        // The wrapped token's scaling factor is not constant, but increases over time as the wrapped token increases in\r\n        // value.\r\n        scalingFactors[_mainIndex] = _scalingFactorMainToken;\r\n        scalingFactors[_wrappedIndex] = _scalingFactorWrappedToken.mulDown(_getWrappedTokenRate());\r\n        scalingFactors[_bptIndex] = FixedPoint.ONE;\r\n\r\n        return scalingFactors;\r\n    }\r\n\r\n    // Price rates\r\n\r\n    /**\r\n     * @dev For a Linear Pool, the rate represents the appreciation of BPT with respect to the underlying tokens. This\r\n     * rate increases slowly as the wrapped token appreciates in value.\r\n     */\r\n    function getRate() external view override returns (uint256) {\r\n        bytes32 poolId = getPoolId();\r\n        (, uint256[] memory balances, ) = getVault().getPoolTokens(poolId);\r\n        _upscaleArray(balances, _scalingFactors());\r\n\r\n        (uint256 lowerTarget, uint256 upperTarget) = getTargets();\r\n        LinearMath.Params memory params = LinearMath.Params({\r\n            fee: getSwapFeePercentage(),\r\n            lowerTarget: lowerTarget,\r\n            upperTarget: upperTarget\r\n        });\r\n\r\n        uint256 totalBalance = LinearMath._calcInvariant(\r\n            LinearMath._toNominal(balances[_mainIndex], params),\r\n            balances[_wrappedIndex]\r\n        );\r\n\r\n        // Note that we're dividing by the virtual supply, which may be zero (causing this call to revert). However, the\r\n        // only way for that to happen would be for all LPs to exit the Pool, and nothing prevents new LPs from\r\n        // joining it later on.\r\n        return totalBalance.divUp(_getApproximateVirtualSupply(balances[_bptIndex]));\r\n    }\r\n\r\n    function getWrappedTokenRate() external view returns (uint256) {\r\n        return _getWrappedTokenRate();\r\n    }\r\n\r\n    function _getWrappedTokenRate() internal view virtual returns (uint256);\r\n\r\n    function getTargets() public view returns (uint256 lowerTarget, uint256 upperTarget) {\r\n        bytes32 miscData = _getMiscData();\r\n        lowerTarget = miscData.decodeUint96(_LOWER_TARGET_OFFSET);\r\n        upperTarget = miscData.decodeUint96(_UPPER_TARGET_OFFSET);\r\n    }\r\n\r\n    function _setTargets(\r\n        IERC20 mainToken,\r\n        uint256 lowerTarget,\r\n        uint256 upperTarget\r\n    ) private {\r\n        _require(lowerTarget <= upperTarget, Errors.LOWER_GREATER_THAN_UPPER_TARGET);\r\n        _require(upperTarget <= _MAX_UPPER_TARGET, Errors.UPPER_TARGET_TOO_HIGH);\r\n\r\n        // Pack targets as two uint96 values into a single storage slot. This results in targets being capped to 96\r\n        // bits, but that should be more than enough.\r\n        _setMiscData(\r\n            WordCodec.encodeUint(lowerTarget, _LOWER_TARGET_OFFSET) |\r\n                WordCodec.encodeUint(upperTarget, _UPPER_TARGET_OFFSET)\r\n        );\r\n\r\n        emit TargetsSet(mainToken, lowerTarget, upperTarget);\r\n    }\r\n\r\n    function setTargets(uint256 newLowerTarget, uint256 newUpperTarget) external authenticate {\r\n        // For a new target range to be valid:\r\n        //  - the pool must currently be between the current targets (meaning no fees are currently pending)\r\n        //  - the pool must currently be between the new targets (meaning setting them does not cause for fees to be\r\n        //    pending)\r\n        //\r\n        // The first requirement could be relaxed, as the LPs actually benefit from the pending fees not being paid out,\r\n        // but being stricter makes analysis easier at little expense.\r\n\r\n        (uint256 currentLowerTarget, uint256 currentUpperTarget) = getTargets();\r\n        _require(_isMainBalanceWithinTargets(currentLowerTarget, currentUpperTarget), Errors.OUT_OF_TARGET_RANGE);\r\n        _require(_isMainBalanceWithinTargets(newLowerTarget, newUpperTarget), Errors.OUT_OF_NEW_TARGET_RANGE);\r\n\r\n        _setTargets(_mainToken, newLowerTarget, newUpperTarget);\r\n    }\r\n\r\n    function setSwapFeePercentage(uint256 swapFeePercentage) public override {\r\n        // For the swap fee percentage to be changeable:\r\n        //  - the pool must currently be between the current targets (meaning no fees are currently pending)\r\n        //\r\n        // As the amount of accrued fees is not explicitly stored but rather derived from the main token balance and the\r\n        // current swap fee percentage, requiring for no fees to be pending prevents the fee setter from changing the\r\n        // amount of pending fees, which they could use to e.g. drain Pool funds in the form of inflated fees.\r\n\r\n        (uint256 lowerTarget, uint256 upperTarget) = getTargets();\r\n        _require(_isMainBalanceWithinTargets(lowerTarget, upperTarget), Errors.OUT_OF_TARGET_RANGE);\r\n\r\n        super.setSwapFeePercentage(swapFeePercentage);\r\n    }\r\n\r\n    function _isMainBalanceWithinTargets(uint256 lowerTarget, uint256 upperTarget) private view returns (bool) {\r\n        bytes32 poolId = getPoolId();\r\n        (, uint256[] memory balances, ) = getVault().getPoolTokens(poolId);\r\n        uint256 mainTokenBalance = _upscale(balances[_mainIndex], _scalingFactor(_mainToken));\r\n\r\n        return mainTokenBalance >= lowerTarget && mainTokenBalance <= upperTarget;\r\n    }\r\n\r\n    function _isOwnerOnlyAction(bytes32 actionId) internal view virtual override returns (bool) {\r\n        return actionId == getActionId(this.setTargets.selector) || super._isOwnerOnlyAction(actionId);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in circulation.\r\n     *\r\n     * In other pools, this would be the same as `totalSupply`, but since this pool pre-mints all BPT, `totalSupply`\r\n     * remains constant, whereas `virtualSupply` increases as users join the pool and decreases as they exit it.\r\n     */\r\n    function getVirtualSupply() external view returns (uint256) {\r\n        (, uint256[] memory balances, ) = getVault().getPoolTokens(getPoolId());\r\n        // We technically don't need to upscale the BPT balance as its scaling factor is equal to one (since BPT has\r\n        // 18 decimals), but we do it for completeness.\r\n        uint256 bptBalance = _upscale(balances[_bptIndex], _scalingFactor(this));\r\n\r\n        return _getVirtualSupply(bptBalance);\r\n    }\r\n\r\n    function _getVirtualSupply(uint256 bptBalance) internal view returns (uint256) {\r\n        return totalSupply().sub(bptBalance);\r\n    }\r\n\r\n    /**\r\n     * @dev Computes an approximation of virtual supply, which costs less gas than `_getVirtualSupply` and returns the\r\n     * same value in all cases except when the emergency pause has been enabled and BPT burned as part of the emergency\r\n     * exit process.\r\n     */\r\n    function _getApproximateVirtualSupply(uint256 bptBalance) internal pure returns (uint256) {\r\n        // No need for checked arithmetic as _INITIAL_BPT_SUPPLY is always greater than any valid Vault BPT balance.\r\n        return _INITIAL_BPT_SUPPLY - bptBalance;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\ncontract AaveLinearPool is LinearPool {\r\n    ILendingPool private immutable _lendingPool;\r\n\r\n    constructor(\r\n        IVault vault,\r\n        string memory name,\r\n        string memory symbol,\r\n        IERC20 mainToken,\r\n        IERC20 wrappedToken,\r\n        uint256 upperTarget,\r\n        uint256 swapFeePercentage,\r\n        uint256 pauseWindowDuration,\r\n        uint256 bufferPeriodDuration,\r\n        address owner\r\n    )\r\n        LinearPool(\r\n            vault,\r\n            name,\r\n            symbol,\r\n            mainToken,\r\n            wrappedToken,\r\n            upperTarget,\r\n            swapFeePercentage,\r\n            pauseWindowDuration,\r\n            bufferPeriodDuration,\r\n            owner\r\n        )\r\n    {\r\n        _lendingPool = IStaticAToken(address(wrappedToken)).LENDING_POOL();\r\n        _require(address(mainToken) == IStaticAToken(address(wrappedToken)).ASSET(), Errors.TOKENS_MISMATCH);\r\n    }\r\n\r\n    function _getWrappedTokenRate() internal view override returns (uint256) {\r\n        // This pulls in the implementation of `rate` used in the StaticAToken contract\r\n        // except avoiding storing relevant variables in storage for gas reasons.\r\n        // solhint-disable-next-line max-line-length\r\n        // see: https://github.com/aave/protocol-v2/blob/ac58fea62bb8afee23f66197e8bce6d79ecda292/contracts/protocol/tokenization/StaticATokenLM.sol#L255-L257\r\n        uint256 rate = _lendingPool.getReserveNormalizedIncome(getMainToken());\r\n\r\n        // This function returns a 18 decimal fixed point number, but `rate` has 27 decimals (i.e. a 'ray' value)\r\n        // so we need to convert it.\r\n        return rate / 10**9;\r\n    }\r\n}\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n\r\ninterface IStaticAToken {\r\n    /**\r\n     * @dev returns the address of the staticAToken's underlying asset\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function ASSET() external view returns (address);\r\n\r\n    /**\r\n     * @dev returns the address of the staticAToken's lending pool\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function LENDING_POOL() external view returns (ILendingPool);\r\n\r\n    /**\r\n     * @dev returns a 27 decimal fixed point 'ray' value so a rate of 1 is represented as 1e27\r\n     */\r\n    function rate() external view returns (uint256);\r\n}\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\ninterface ILendingPool {\r\n    /**\r\n     * @dev returns a 27 decimal fixed point 'ray' value so a rate of 1 is represented as 1e27\r\n     */\r\n    function getReserveNormalizedIncome(address asset) external view returns (uint256);\r\n}\r\n\r\npragma solidity ^0.7.0;\r\n\r\n// solhint-disable\r\n\r\n/**\r\n * @dev Reverts if `condition` is false, with a revert reason containing `errorCode`. Only codes up to 999 are\r\n * supported.\r\n */\r\nfunction _require(bool condition, uint256 errorCode) pure {\r\n    if (!condition) _revert(errorCode);\r\n}\r\n\r\n/**\r\n * @dev Reverts with a revert reason containing `errorCode`. Only codes up to 999 are supported.\r\n */\r\nfunction _revert(uint256 errorCode) pure {\r\n    // We're going to dynamically create a revert string based on the error code, with the following format:\r\n    // 'BAL#{errorCode}'\r\n    // where the code is left-padded with zeroes to three digits (so they range from 000 to 999).\r\n    //\r\n    // We don't have revert strings embedded in the contract to save bytecode size: it takes much less space to store a\r\n    // number (8 to 16 bits) than the individual string characters.\r\n    //\r\n    // The dynamic string creation algorithm that follows could be implemented in Solidity, but assembly allows for a\r\n    // much denser implementation, again saving bytecode size. Given this function unconditionally reverts, this is a\r\n    // safe place to rely on it without worrying about how its usage might affect e.g. memory contents.\r\n    assembly {\r\n        // First, we need to compute the ASCII representation of the error code. We assume that it is in the 0-999\r\n        // range, so we only need to convert three digits. To convert the digits to ASCII, we add 0x30, the value for\r\n        // the '0' character.\r\n\r\n        let units := add(mod(errorCode, 10), 0x30)\r\n\r\n        errorCode := div(errorCode, 10)\r\n        let tenths := add(mod(errorCode, 10), 0x30)\r\n\r\n        errorCode := div(errorCode, 10)\r\n        let hundreds := add(mod(errorCode, 10), 0x30)\r\n\r\n        // With the individual characters, we can now construct the full string. The \"BAL#\" part is a known constant\r\n        // (0x42414c23): we simply shift this by 24 (to provide space for the 3 bytes of the error code), and add the\r\n        // characters to it, each shifted by a multiple of 8.\r\n        // The revert reason is then shifted left by 200 bits (256 minus the length of the string, 7 characters * 8 bits\r\n        // per character = 56) to locate it in the most significant part of the 256 slot (the beginning of a byte\r\n        // array).\r\n\r\n        let revertReason := shl(200, add(0x42414c23000000, add(add(units, shl(8, tenths)), shl(16, hundreds))))\r\n\r\n        // We can now encode the reason in memory, which can be safely overwritten as we're about to revert. The encoded\r\n        // message will have the following layout:\r\n        // [ revert reason identifier ] [ string location offset ] [ string length ] [ string contents ]\r\n\r\n        // The Solidity revert reason identifier is 0x08c739a0, the function selector of the Error(string) function. We\r\n        // also write zeroes to the next 28 bytes of memory, but those are about to be overwritten.\r\n        mstore(0x0, 0x08c379a000000000000000000000000000000000000000000000000000000000)\r\n        // Next is the offset to the location of the string, which will be placed immediately after (20 bytes away).\r\n        mstore(0x04, 0x0000000000000000000000000000000000000000000000000000000000000020)\r\n        // The string length is fixed: 7 characters.\r\n        mstore(0x24, 7)\r\n        // Finally, the string itself is stored.\r\n        mstore(0x44, revertReason)\r\n\r\n        // Even if the string is only 7 bytes long, we need to return a full 32 byte slot containing it. The length of\r\n        // the encoded message is therefore 4 + 32 + 32 + 32 = 100.\r\n        revert(0, 100)\r\n    }\r\n}\r\n\r\nlibrary Errors {\r\n    // Math\r\n    uint256 internal constant ADD_OVERFLOW = 0;\r\n    uint256 internal constant SUB_OVERFLOW = 1;\r\n    uint256 internal constant SUB_UNDERFLOW = 2;\r\n    uint256 internal constant MUL_OVERFLOW = 3;\r\n    uint256 internal constant ZERO_DIVISION = 4;\r\n    uint256 internal constant DIV_INTERNAL = 5;\r\n    uint256 internal constant X_OUT_OF_BOUNDS = 6;\r\n    uint256 internal constant Y_OUT_OF_BOUNDS = 7;\r\n    uint256 internal constant PRODUCT_OUT_OF_BOUNDS = 8;\r\n    uint256 internal constant INVALID_EXPONENT = 9;\r\n\r\n    // Input\r\n    uint256 internal constant OUT_OF_BOUNDS = 100;\r\n    uint256 internal constant UNSORTED_ARRAY = 101;\r\n    uint256 internal constant UNSORTED_TOKENS = 102;\r\n    uint256 internal constant INPUT_LENGTH_MISMATCH = 103;\r\n    uint256 internal constant ZERO_TOKEN = 104;\r\n\r\n    // Shared pools\r\n    uint256 internal constant MIN_TOKENS = 200;\r\n    uint256 internal constant MAX_TOKENS = 201;\r\n    uint256 internal constant MAX_SWAP_FEE_PERCENTAGE = 202;\r\n    uint256 internal constant MIN_SWAP_FEE_PERCENTAGE = 203;\r\n    uint256 internal constant MINIMUM_BPT = 204;\r\n    uint256 internal constant CALLER_NOT_VAULT = 205;\r\n    uint256 internal constant UNINITIALIZED = 206;\r\n    uint256 internal constant BPT_IN_MAX_AMOUNT = 207;\r\n    uint256 internal constant BPT_OUT_MIN_AMOUNT = 208;\r\n    uint256 internal constant EXPIRED_PERMIT = 209;\r\n    uint256 internal constant NOT_TWO_TOKENS = 210;\r\n\r\n    // Pools\r\n    uint256 internal constant MIN_AMP = 300;\r\n    uint256 internal constant MAX_AMP = 301;\r\n    uint256 internal constant MIN_WEIGHT = 302;\r\n    uint256 internal constant MAX_STABLE_TOKENS = 303;\r\n    uint256 internal constant MAX_IN_RATIO = 304;\r\n    uint256 internal constant MAX_OUT_RATIO = 305;\r\n    uint256 internal constant MIN_BPT_IN_FOR_TOKEN_OUT = 306;\r\n    uint256 internal constant MAX_OUT_BPT_FOR_TOKEN_IN = 307;\r\n    uint256 internal constant NORMALIZED_WEIGHT_INVARIANT = 308;\r\n    uint256 internal constant INVALID_TOKEN = 309;\r\n    uint256 internal constant UNHANDLED_JOIN_KIND = 310;\r\n    uint256 internal constant ZERO_INVARIANT = 311;\r\n    uint256 internal constant ORACLE_INVALID_SECONDS_QUERY = 312;\r\n    uint256 internal constant ORACLE_NOT_INITIALIZED = 313;\r\n    uint256 internal constant ORACLE_QUERY_TOO_OLD = 314;\r\n    uint256 internal constant ORACLE_INVALID_INDEX = 315;\r\n    uint256 internal constant ORACLE_BAD_SECS = 316;\r\n    uint256 internal constant AMP_END_TIME_TOO_CLOSE = 317;\r\n    uint256 internal constant AMP_ONGOING_UPDATE = 318;\r\n    uint256 internal constant AMP_RATE_TOO_HIGH = 319;\r\n    uint256 internal constant AMP_NO_ONGOING_UPDATE = 320;\r\n    uint256 internal constant STABLE_INVARIANT_DIDNT_CONVERGE = 321;\r\n    uint256 internal constant STABLE_GET_BALANCE_DIDNT_CONVERGE = 322;\r\n    uint256 internal constant RELAYER_NOT_CONTRACT = 323;\r\n    uint256 internal constant BASE_POOL_RELAYER_NOT_CALLED = 324;\r\n    uint256 internal constant REBALANCING_RELAYER_REENTERED = 325;\r\n    uint256 internal constant GRADUAL_UPDATE_TIME_TRAVEL = 326;\r\n    uint256 internal constant SWAPS_DISABLED = 327;\r\n    uint256 internal constant CALLER_IS_NOT_LBP_OWNER = 328;\r\n    uint256 internal constant PRICE_RATE_OVERFLOW = 329;\r\n    uint256 internal constant INVALID_JOIN_EXIT_KIND_WHILE_SWAPS_DISABLED = 330;\r\n    uint256 internal constant WEIGHT_CHANGE_TOO_FAST = 331;\r\n    uint256 internal constant LOWER_GREATER_THAN_UPPER_TARGET = 332;\r\n    uint256 internal constant UPPER_TARGET_TOO_HIGH = 333;\r\n    uint256 internal constant UNHANDLED_BY_LINEAR_POOL = 334;\r\n    uint256 internal constant OUT_OF_TARGET_RANGE = 335;\r\n    uint256 internal constant UNHANDLED_EXIT_KIND = 336;\r\n    uint256 internal constant UNAUTHORIZED_EXIT = 337;\r\n    uint256 internal constant MAX_MANAGEMENT_SWAP_FEE_PERCENTAGE = 338;\r\n    uint256 internal constant UNHANDLED_BY_MANAGED_POOL = 339;\r\n    uint256 internal constant UNHANDLED_BY_PHANTOM_POOL = 340;\r\n    uint256 internal constant TOKEN_DOES_NOT_HAVE_RATE_PROVIDER = 341;\r\n    uint256 internal constant INVALID_INITIALIZATION = 342;\r\n    uint256 internal constant OUT_OF_NEW_TARGET_RANGE = 343;\r\n    uint256 internal constant UNAUTHORIZED_OPERATION = 344;\r\n    uint256 internal constant UNINITIALIZED_POOL_CONTROLLER = 345;\r\n\r\n    // Lib\r\n    uint256 internal constant REENTRANCY = 400;\r\n    uint256 internal constant SENDER_NOT_ALLOWED = 401;\r\n    uint256 internal constant PAUSED = 402;\r\n    uint256 internal constant PAUSE_WINDOW_EXPIRED = 403;\r\n    uint256 internal constant MAX_PAUSE_WINDOW_DURATION = 404;\r\n    uint256 internal constant MAX_BUFFER_PERIOD_DURATION = 405;\r\n    uint256 internal constant INSUFFICIENT_BALANCE = 406;\r\n    uint256 internal constant INSUFFICIENT_ALLOWANCE = 407;\r\n    uint256 internal constant ERC20_TRANSFER_FROM_ZERO_ADDRESS = 408;\r\n    uint256 internal constant ERC20_TRANSFER_TO_ZERO_ADDRESS = 409;\r\n    uint256 internal constant ERC20_MINT_TO_ZERO_ADDRESS = 410;\r\n    uint256 internal constant ERC20_BURN_FROM_ZERO_ADDRESS = 411;\r\n    uint256 internal constant ERC20_APPROVE_FROM_ZERO_ADDRESS = 412;\r\n    uint256 internal constant ERC20_APPROVE_TO_ZERO_ADDRESS = 413;\r\n    uint256 internal constant ERC20_TRANSFER_EXCEEDS_ALLOWANCE = 414;\r\n    uint256 internal constant ERC20_DECREASED_ALLOWANCE_BELOW_ZERO = 415;\r\n    uint256 internal constant ERC20_TRANSFER_EXCEEDS_BALANCE = 416;\r\n    uint256 internal constant ERC20_BURN_EXCEEDS_ALLOWANCE = 417;\r\n    uint256 internal constant SAFE_ERC20_CALL_FAILED = 418;\r\n    uint256 internal constant ADDRESS_INSUFFICIENT_BALANCE = 419;\r\n    uint256 internal constant ADDRESS_CANNOT_SEND_VALUE = 420;\r\n    uint256 internal constant SAFE_CAST_VALUE_CANT_FIT_INT256 = 421;\r\n    uint256 internal constant GRANT_SENDER_NOT_ADMIN = 422;\r\n    uint256 internal constant REVOKE_SENDER_NOT_ADMIN = 423;\r\n    uint256 internal constant RENOUNCE_SENDER_NOT_ALLOWED = 424;\r\n    uint256 internal constant BUFFER_PERIOD_EXPIRED = 425;\r\n    uint256 internal constant CALLER_IS_NOT_OWNER = 426;\r\n    uint256 internal constant NEW_OWNER_IS_ZERO = 427;\r\n    uint256 internal constant CODE_DEPLOYMENT_FAILED = 428;\r\n    uint256 internal constant CALL_TO_NON_CONTRACT = 429;\r\n    uint256 internal constant LOW_LEVEL_CALL_FAILED = 430;\r\n    uint256 internal constant NOT_PAUSED = 431;\r\n    uint256 internal constant ADDRESS_ALREADY_ALLOWLISTED = 432;\r\n    uint256 internal constant ADDRESS_NOT_ALLOWLISTED = 433;\r\n\r\n    // Vault\r\n    uint256 internal constant INVALID_POOL_ID = 500;\r\n    uint256 internal constant CALLER_NOT_POOL = 501;\r\n    uint256 internal constant SENDER_NOT_ASSET_MANAGER = 502;\r\n    uint256 internal constant USER_DOESNT_ALLOW_RELAYER = 503;\r\n    uint256 internal constant INVALID_SIGNATURE = 504;\r\n    uint256 internal constant EXIT_BELOW_MIN = 505;\r\n    uint256 internal constant JOIN_ABOVE_MAX = 506;\r\n    uint256 internal constant SWAP_LIMIT = 507;\r\n    uint256 internal constant SWAP_DEADLINE = 508;\r\n    uint256 internal constant CANNOT_SWAP_SAME_TOKEN = 509;\r\n    uint256 internal constant UNKNOWN_AMOUNT_IN_FIRST_SWAP = 510;\r\n    uint256 internal constant MALCONSTRUCTED_MULTIHOP_SWAP = 511;\r\n    uint256 internal constant INTERNAL_BALANCE_OVERFLOW = 512;\r\n    uint256 internal constant INSUFFICIENT_INTERNAL_BALANCE = 513;\r\n    uint256 internal constant INVALID_ETH_INTERNAL_BALANCE = 514;\r\n    uint256 internal constant INVALID_POST_LOAN_BALANCE = 515;\r\n    uint256 internal constant INSUFFICIENT_ETH = 516;\r\n    uint256 internal constant UNALLOCATED_ETH = 517;\r\n    uint256 internal constant ETH_TRANSFER = 518;\r\n    uint256 internal constant CANNOT_USE_ETH_SENTINEL = 519;\r\n    uint256 internal constant TOKENS_MISMATCH = 520;\r\n    uint256 internal constant TOKEN_NOT_REGISTERED = 521;\r\n    uint256 internal constant TOKEN_ALREADY_REGISTERED = 522;\r\n    uint256 internal constant TOKENS_ALREADY_SET = 523;\r\n    uint256 internal constant TOKENS_LENGTH_MUST_BE_2 = 524;\r\n    uint256 internal constant NONZERO_TOKEN_BALANCE = 525;\r\n    uint256 internal constant BALANCE_TOTAL_OVERFLOW = 526;\r\n    uint256 internal constant POOL_NO_TOKENS = 527;\r\n    uint256 internal constant INSUFFICIENT_FLASH_LOAN_BALANCE = 528;\r\n\r\n    // Fees\r\n    uint256 internal constant SWAP_FEE_PERCENTAGE_TOO_HIGH = 600;\r\n    uint256 internal constant FLASH_LOAN_FEE_PERCENTAGE_TOO_HIGH = 601;\r\n    uint256 internal constant INSUFFICIENT_FLASH_LOAN_FEE_AMOUNT = 602;\r\n}\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n\r\n\r\n// solhint-disable\r\n\r\nfunction _asIAsset(IERC20[] memory tokens) pure returns (IAsset[] memory assets) {\r\n    // solhint-disable-next-line no-inline-assembly\r\n    assembly {\r\n        assets := tokens\r\n    }\r\n}\r\n\r\nfunction _sortTokens(\r\n    IERC20 tokenA,\r\n    IERC20 tokenB,\r\n    IERC20 tokenC\r\n) pure returns (IERC20[] memory tokens) {\r\n    (uint256 indexTokenA, uint256 indexTokenB, uint256 indexTokenC) = _getSortedTokenIndexes(tokenA, tokenB, tokenC);\r\n    tokens = new IERC20[](3);\r\n    tokens[indexTokenA] = tokenA;\r\n    tokens[indexTokenB] = tokenB;\r\n    tokens[indexTokenC] = tokenC;\r\n}\r\n\r\nfunction _insertSorted(IERC20[] memory tokens, IERC20 token) pure returns (IERC20[] memory sorted) {\r\n    sorted = new IERC20[](tokens.length + 1);\r\n\r\n    if (tokens.length == 0) {\r\n        sorted[0] = token;\r\n        return sorted;\r\n    }\r\n\r\n    uint256 i;\r\n    for (i = tokens.length; i > 0 && tokens[i - 1] > token; i--) sorted[i] = tokens[i - 1];\r\n    for (uint256 j = 0; j < i; j++) sorted[j] = tokens[j];\r\n    sorted[i] = token;\r\n}\r\n\r\nfunction _getSortedTokenIndexes(\r\n    IERC20 tokenA,\r\n    IERC20 tokenB,\r\n    IERC20 tokenC\r\n)\r\n    pure\r\n    returns (\r\n        uint256 indexTokenA,\r\n        uint256 indexTokenB,\r\n        uint256 indexTokenC\r\n    )\r\n{\r\n    if (tokenA < tokenB) {\r\n        if (tokenB < tokenC) {\r\n            // (tokenA, tokenB, tokenC)\r\n            return (0, 1, 2);\r\n        } else if (tokenA < tokenC) {\r\n            // (tokenA, tokenC, tokenB)\r\n            return (0, 2, 1);\r\n        } else {\r\n            // (tokenC, tokenA, tokenB)\r\n            return (1, 2, 0);\r\n        }\r\n    } else {\r\n        // tokenB < tokenA\r\n        if (tokenC < tokenB) {\r\n            // (tokenC, tokenB, tokenA)\r\n            return (2, 1, 0);\r\n        } else if (tokenC < tokenA) {\r\n            // (tokenB, tokenC, tokenA)\r\n            return (2, 0, 1);\r\n        } else {\r\n            // (tokenB, tokenA, tokenC)\r\n            return (1, 0, 2);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n\r\n/* solhint-disable private-vars-leading-underscore */\r\n\r\nlibrary FixedPoint {\r\n    uint256 internal constant ONE = 1e18; // 18 decimal places\r\n    uint256 internal constant MAX_POW_RELATIVE_ERROR = 10000; // 10^(-14)\r\n\r\n    // Minimum base for the power function when the exponent is 'free' (larger than ONE).\r\n    uint256 internal constant MIN_POW_BASE_FREE_EXPONENT = 0.7e18;\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Fixed Point addition is the same as regular checked addition\r\n\r\n        uint256 c = a + b;\r\n        _require(c >= a, Errors.ADD_OVERFLOW);\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Fixed Point addition is the same as regular checked addition\r\n\r\n        _require(b <= a, Errors.SUB_OVERFLOW);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mulDown(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 product = a * b;\r\n        _require(a == 0 || product / a == b, Errors.MUL_OVERFLOW);\r\n\r\n        return product / ONE;\r\n    }\r\n\r\n    function mulUp(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 product = a * b;\r\n        _require(a == 0 || product / a == b, Errors.MUL_OVERFLOW);\r\n\r\n        if (product == 0) {\r\n            return 0;\r\n        } else {\r\n            // The traditional divUp formula is:\r\n            // divUp(x, y) := (x + y - 1) / y\r\n            // To avoid intermediate overflow in the addition, we distribute the division and get:\r\n            // divUp(x, y) := (x - 1) / y + 1\r\n            // Note that this requires x != 0, which we already tested for.\r\n\r\n            return ((product - 1) / ONE) + 1;\r\n        }\r\n    }\r\n\r\n    function divDown(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        _require(b != 0, Errors.ZERO_DIVISION);\r\n\r\n        if (a == 0) {\r\n            return 0;\r\n        } else {\r\n            uint256 aInflated = a * ONE;\r\n            _require(aInflated / a == ONE, Errors.DIV_INTERNAL); // mul overflow\r\n\r\n            return aInflated / b;\r\n        }\r\n    }\r\n\r\n    function divUp(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        _require(b != 0, Errors.ZERO_DIVISION);\r\n\r\n        if (a == 0) {\r\n            return 0;\r\n        } else {\r\n            uint256 aInflated = a * ONE;\r\n            _require(aInflated / a == ONE, Errors.DIV_INTERNAL); // mul overflow\r\n\r\n            // The traditional divUp formula is:\r\n            // divUp(x, y) := (x + y - 1) / y\r\n            // To avoid intermediate overflow in the addition, we distribute the division and get:\r\n            // divUp(x, y) := (x - 1) / y + 1\r\n            // Note that this requires x != 0, which we already tested for.\r\n\r\n            return ((aInflated - 1) / b) + 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns x^y, assuming both are fixed point numbers, rounding down. The result is guaranteed to not be above\r\n     * the true value (that is, the error function expected - actual is always positive).\r\n     */\r\n    function powDown(uint256 x, uint256 y) internal pure returns (uint256) {\r\n        uint256 raw = LogExpMath.pow(x, y);\r\n        uint256 maxError = add(mulUp(raw, MAX_POW_RELATIVE_ERROR), 1);\r\n\r\n        if (raw < maxError) {\r\n            return 0;\r\n        } else {\r\n            return sub(raw, maxError);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns x^y, assuming both are fixed point numbers, rounding up. The result is guaranteed to not be below\r\n     * the true value (that is, the error function expected - actual is always negative).\r\n     */\r\n    function powUp(uint256 x, uint256 y) internal pure returns (uint256) {\r\n        uint256 raw = LogExpMath.pow(x, y);\r\n        uint256 maxError = add(mulUp(raw, MAX_POW_RELATIVE_ERROR), 1);\r\n\r\n        return add(raw, maxError);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the complement of a value (1 - x), capped to 0 if x is larger than 1.\r\n     *\r\n     * Useful when computing the complement for values with some level of relative error, as it strips this error and\r\n     * prevents intermediate negative values.\r\n     */\r\n    function complement(uint256 x) internal pure returns (uint256) {\r\n        return (x < ONE) ? (ONE - x) : 0;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n\r\n/**\r\n * Price rate caches are used to avoid querying the price rate for a token every time we need to work with it. It is\r\n * useful for slow changing rates, such as those that arise from interest-bearing tokens (e.g. waDAI into DAI).\r\n *\r\n * The cache data is packed into a single bytes32 value with the following structure:\r\n * [   expires   | duration | price rate value ]\r\n * [   uint64    |  uint64  |      uint128     ]\r\n * [ MSB                                   LSB ]\r\n *\r\n *\r\n * 'rate' is an 18 decimal fixed point number, supporting rates of up to ~3e20. 'expires' is a Unix timestamp, and\r\n * 'duration' is expressed in seconds.\r\n */\r\nlibrary PriceRateCache {\r\n    using WordCodec for bytes32;\r\n\r\n    uint256 private constant _PRICE_RATE_CACHE_VALUE_OFFSET = 0;\r\n    uint256 private constant _PRICE_RATE_CACHE_DURATION_OFFSET = 128;\r\n    uint256 private constant _PRICE_RATE_CACHE_EXPIRES_OFFSET = 128 + 64;\r\n\r\n    /**\r\n     * @dev Returns the rate of a price rate cache.\r\n     */\r\n    function getRate(bytes32 cache) internal pure returns (uint256) {\r\n        return cache.decodeUint128(_PRICE_RATE_CACHE_VALUE_OFFSET);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the duration of a price rate cache.\r\n     */\r\n    function getDuration(bytes32 cache) internal pure returns (uint256) {\r\n        return cache.decodeUint64(_PRICE_RATE_CACHE_DURATION_OFFSET);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the duration and expiration time of a price rate cache.\r\n     */\r\n    function getTimestamps(bytes32 cache) internal pure returns (uint256 duration, uint256 expires) {\r\n        duration = getDuration(cache);\r\n        expires = cache.decodeUint64(_PRICE_RATE_CACHE_EXPIRES_OFFSET);\r\n    }\r\n\r\n    /**\r\n     * @dev Encodes rate and duration into a price rate cache. The expiration time is computed automatically, counting\r\n     * from the current time.\r\n     */\r\n    function encode(uint256 rate, uint256 duration) internal view returns (bytes32) {\r\n        _require(rate < 2**128, Errors.PRICE_RATE_OVERFLOW);\r\n\r\n        // solhint-disable not-rely-on-time\r\n        return\r\n            WordCodec.encodeUint(uint128(rate), _PRICE_RATE_CACHE_VALUE_OFFSET) |\r\n            WordCodec.encodeUint(uint64(duration), _PRICE_RATE_CACHE_DURATION_OFFSET) |\r\n            WordCodec.encodeUint(uint64(block.timestamp + duration), _PRICE_RATE_CACHE_EXPIRES_OFFSET);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns rate, duration and expiration time of a price rate cache.\r\n     */\r\n    function decode(bytes32 cache)\r\n        internal\r\n        pure\r\n        returns (\r\n            uint256 rate,\r\n            uint256 duration,\r\n            uint256 expires\r\n        )\r\n    {\r\n        rate = getRate(cache);\r\n        (duration, expires) = getTimestamps(cache);\r\n    }\r\n}\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n\r\n// These functions start with an underscore, as if they were part of a contract and not a library. At some point this\r\n// should be fixed.\r\n// solhint-disable private-vars-leading-underscore\r\n\r\nlibrary LinearMath {\r\n    using FixedPoint for uint256;\r\n\r\n    // A thorough derivation of the formulas and derivations found here exceeds the scope of this file, so only\r\n    // introductory notions will be presented.\r\n\r\n    // A Linear Pool holds three tokens: the main token, the wrapped token, and the Pool share token (BPT). It is\r\n    // possible to exchange any of these tokens for any of the other two (so we have three trading pairs) in both\r\n    // directions (the first token of each pair can be bought or sold for the second) and by specifying either the input\r\n    // or output amount (typically referred to as 'given in' or 'given out'). A full description thus requires\r\n    // 3*2*2 = 12 functions.\r\n    // Wrapped tokens have a known, trusted exchange rate to main tokens. All functions here assume such a rate has\r\n    // already been applied, meaning main and wrapped balances can be compared as they are both expressed in the same\r\n    // units (those of main token).\r\n    // Additionally, Linear Pools feature a lower and upper target that represent the desired range of values for the\r\n    // main token balance. Any action that moves the main balance away from this range is charged a proportional fee,\r\n    // and any action that moves it towards this range is incentivized by paying the actor using these collected fees.\r\n    // The collected fees are not stored in a separate data structure: they are a function of the current main balance,\r\n    // targets and fee percentage. The main balance sans fees is known as the 'nominal balance', which is always smaller\r\n    // than the real balance except when the real balance is within the targets.\r\n    // The rule under which Linear Pools conduct trades between main and wrapped tokens is by keeping the sum of nominal\r\n    // main balance and wrapped balance constant: this value is known as the 'invariant'. BPT is backed by nominal\r\n    // reserves, meaning its supply is proportional to the invariant. As the wrapped token appreciates in value and its\r\n    // exchange rate to the main token increases, so does the invariant and thus the value of BPT (in main token units).\r\n\r\n    struct Params {\r\n        uint256 fee;\r\n        uint256 lowerTarget;\r\n        uint256 upperTarget;\r\n    }\r\n\r\n    function _calcBptOutPerMainIn(\r\n        uint256 mainIn,\r\n        uint256 mainBalance,\r\n        uint256 wrappedBalance,\r\n        uint256 bptSupply,\r\n        Params memory params\r\n    ) internal pure returns (uint256) {\r\n        // Amount out, so we round down overall.\r\n\r\n        if (bptSupply == 0) {\r\n            // BPT typically grows in the same ratio the invariant does. The first time liquidity is added however, the\r\n            // BPT supply is initialized to equal the invariant (which in this case is just the nominal main balance as\r\n            // there is no wrapped balance).\r\n            return _toNominal(mainIn, params);\r\n        }\r\n\r\n        uint256 previousNominalMain = _toNominal(mainBalance, params);\r\n        uint256 afterNominalMain = _toNominal(mainBalance.add(mainIn), params);\r\n        uint256 deltaNominalMain = afterNominalMain.sub(previousNominalMain);\r\n        uint256 invariant = _calcInvariant(previousNominalMain, wrappedBalance);\r\n        return Math.divDown(Math.mul(bptSupply, deltaNominalMain), invariant);\r\n    }\r\n\r\n    function _calcBptInPerMainOut(\r\n        uint256 mainOut,\r\n        uint256 mainBalance,\r\n        uint256 wrappedBalance,\r\n        uint256 bptSupply,\r\n        Params memory params\r\n    ) internal pure returns (uint256) {\r\n        // Amount in, so we round up overall.\r\n\r\n        uint256 previousNominalMain = _toNominal(mainBalance, params);\r\n        uint256 afterNominalMain = _toNominal(mainBalance.sub(mainOut), params);\r\n        uint256 deltaNominalMain = previousNominalMain.sub(afterNominalMain);\r\n        uint256 invariant = _calcInvariant(previousNominalMain, wrappedBalance);\r\n        return Math.divUp(Math.mul(bptSupply, deltaNominalMain), invariant);\r\n    }\r\n\r\n    function _calcWrappedOutPerMainIn(\r\n        uint256 mainIn,\r\n        uint256 mainBalance,\r\n        Params memory params\r\n    ) internal pure returns (uint256) {\r\n        // Amount out, so we round down overall.\r\n\r\n        uint256 previousNominalMain = _toNominal(mainBalance, params);\r\n        uint256 afterNominalMain = _toNominal(mainBalance.add(mainIn), params);\r\n        return afterNominalMain.sub(previousNominalMain);\r\n    }\r\n\r\n    function _calcWrappedInPerMainOut(\r\n        uint256 mainOut,\r\n        uint256 mainBalance,\r\n        Params memory params\r\n    ) internal pure returns (uint256) {\r\n        // Amount in, so we round up overall.\r\n\r\n        uint256 previousNominalMain = _toNominal(mainBalance, params);\r\n        uint256 afterNominalMain = _toNominal(mainBalance.sub(mainOut), params);\r\n        return previousNominalMain.sub(afterNominalMain);\r\n    }\r\n\r\n    function _calcMainInPerBptOut(\r\n        uint256 bptOut,\r\n        uint256 mainBalance,\r\n        uint256 wrappedBalance,\r\n        uint256 bptSupply,\r\n        Params memory params\r\n    ) internal pure returns (uint256) {\r\n        // Amount in, so we round up overall.\r\n\r\n        if (bptSupply == 0) {\r\n            // BPT typically grows in the same ratio the invariant does. The first time liquidity is added however, the\r\n            // BPT supply is initialized to equal the invariant (which in this case is just the nominal main balance as\r\n            // there is no wrapped balance).\r\n            return _fromNominal(bptOut, params);\r\n        }\r\n\r\n        uint256 previousNominalMain = _toNominal(mainBalance, params);\r\n        uint256 invariant = _calcInvariant(previousNominalMain, wrappedBalance);\r\n        uint256 deltaNominalMain = Math.divUp(Math.mul(invariant, bptOut), bptSupply);\r\n        uint256 afterNominalMain = previousNominalMain.add(deltaNominalMain);\r\n        uint256 newMainBalance = _fromNominal(afterNominalMain, params);\r\n        return newMainBalance.sub(mainBalance);\r\n    }\r\n\r\n    function _calcMainOutPerBptIn(\r\n        uint256 bptIn,\r\n        uint256 mainBalance,\r\n        uint256 wrappedBalance,\r\n        uint256 bptSupply,\r\n        Params memory params\r\n    ) internal pure returns (uint256) {\r\n        // Amount out, so we round down overall.\r\n\r\n        uint256 previousNominalMain = _toNominal(mainBalance, params);\r\n        uint256 invariant = _calcInvariant(previousNominalMain, wrappedBalance);\r\n        uint256 deltaNominalMain = Math.divDown(Math.mul(invariant, bptIn), bptSupply);\r\n        uint256 afterNominalMain = previousNominalMain.sub(deltaNominalMain);\r\n        uint256 newMainBalance = _fromNominal(afterNominalMain, params);\r\n        return mainBalance.sub(newMainBalance);\r\n    }\r\n\r\n    function _calcMainOutPerWrappedIn(\r\n        uint256 wrappedIn,\r\n        uint256 mainBalance,\r\n        Params memory params\r\n    ) internal pure returns (uint256) {\r\n        // Amount out, so we round down overall.\r\n\r\n        uint256 previousNominalMain = _toNominal(mainBalance, params);\r\n        uint256 afterNominalMain = previousNominalMain.sub(wrappedIn);\r\n        uint256 newMainBalance = _fromNominal(afterNominalMain, params);\r\n        return mainBalance.sub(newMainBalance);\r\n    }\r\n\r\n    function _calcMainInPerWrappedOut(\r\n        uint256 wrappedOut,\r\n        uint256 mainBalance,\r\n        Params memory params\r\n    ) internal pure returns (uint256) {\r\n        // Amount in, so we round up overall.\r\n\r\n        uint256 previousNominalMain = _toNominal(mainBalance, params);\r\n        uint256 afterNominalMain = previousNominalMain.add(wrappedOut);\r\n        uint256 newMainBalance = _fromNominal(afterNominalMain, params);\r\n        return newMainBalance.sub(mainBalance);\r\n    }\r\n\r\n    function _calcBptOutPerWrappedIn(\r\n        uint256 wrappedIn,\r\n        uint256 mainBalance,\r\n        uint256 wrappedBalance,\r\n        uint256 bptSupply,\r\n        Params memory params\r\n    ) internal pure returns (uint256) {\r\n        // Amount out, so we round down overall.\r\n\r\n        if (bptSupply == 0) {\r\n            // BPT typically grows in the same ratio the invariant does. The first time liquidity is added however, the\r\n            // BPT supply is initialized to equal the invariant (which in this case is just the wrapped balance as\r\n            // there is no main balance).\r\n            return wrappedIn;\r\n        }\r\n\r\n        uint256 nominalMain = _toNominal(mainBalance, params);\r\n        uint256 previousInvariant = _calcInvariant(nominalMain, wrappedBalance);\r\n\r\n        uint256 newWrappedBalance = wrappedBalance.add(wrappedIn);\r\n        uint256 newInvariant = _calcInvariant(nominalMain, newWrappedBalance);\r\n\r\n        uint256 newBptBalance = Math.divDown(Math.mul(bptSupply, newInvariant), previousInvariant);\r\n\r\n        return newBptBalance.sub(bptSupply);\r\n    }\r\n\r\n    function _calcBptInPerWrappedOut(\r\n        uint256 wrappedOut,\r\n        uint256 mainBalance,\r\n        uint256 wrappedBalance,\r\n        uint256 bptSupply,\r\n        Params memory params\r\n    ) internal pure returns (uint256) {\r\n        // Amount in, so we round up overall.\r\n\r\n        uint256 nominalMain = _toNominal(mainBalance, params);\r\n        uint256 previousInvariant = _calcInvariant(nominalMain, wrappedBalance);\r\n\r\n        uint256 newWrappedBalance = wrappedBalance.sub(wrappedOut);\r\n        uint256 newInvariant = _calcInvariant(nominalMain, newWrappedBalance);\r\n\r\n        uint256 newBptBalance = Math.divDown(Math.mul(bptSupply, newInvariant), previousInvariant);\r\n\r\n        return bptSupply.sub(newBptBalance);\r\n    }\r\n\r\n    function _calcWrappedInPerBptOut(\r\n        uint256 bptOut,\r\n        uint256 mainBalance,\r\n        uint256 wrappedBalance,\r\n        uint256 bptSupply,\r\n        Params memory params\r\n    ) internal pure returns (uint256) {\r\n        // Amount in, so we round up overall.\r\n\r\n        if (bptSupply == 0) {\r\n            // BPT typically grows in the same ratio the invariant does. The first time liquidity is added however, the\r\n            // BPT supply is initialized to equal the invariant (which in this case is just the wrapped balance as\r\n            // there is no main balance).\r\n            return bptOut;\r\n        }\r\n\r\n        uint256 nominalMain = _toNominal(mainBalance, params);\r\n        uint256 previousInvariant = _calcInvariant(nominalMain, wrappedBalance);\r\n\r\n        uint256 newBptBalance = bptSupply.add(bptOut);\r\n        uint256 newWrappedBalance = Math.divUp(Math.mul(newBptBalance, previousInvariant), bptSupply).sub(nominalMain);\r\n\r\n        return newWrappedBalance.sub(wrappedBalance);\r\n    }\r\n\r\n    function _calcWrappedOutPerBptIn(\r\n        uint256 bptIn,\r\n        uint256 mainBalance,\r\n        uint256 wrappedBalance,\r\n        uint256 bptSupply,\r\n        Params memory params\r\n    ) internal pure returns (uint256) {\r\n        // Amount out, so we round down overall.\r\n\r\n        uint256 nominalMain = _toNominal(mainBalance, params);\r\n        uint256 previousInvariant = _calcInvariant(nominalMain, wrappedBalance);\r\n\r\n        uint256 newBptBalance = bptSupply.sub(bptIn);\r\n        uint256 newWrappedBalance = Math.divUp(Math.mul(newBptBalance, previousInvariant), bptSupply).sub(nominalMain);\r\n\r\n        return wrappedBalance.sub(newWrappedBalance);\r\n    }\r\n\r\n    function _calcInvariant(uint256 nominalMainBalance, uint256 wrappedBalance) internal pure returns (uint256) {\r\n        return nominalMainBalance.add(wrappedBalance);\r\n    }\r\n\r\n    function _toNominal(uint256 real, Params memory params) internal pure returns (uint256) {\r\n        // Fees are always rounded down: either direction would work but we need to be consistent, and rounding down\r\n        // uses less gas.\r\n\r\n        if (real < params.lowerTarget) {\r\n            uint256 fees = (params.lowerTarget - real).mulDown(params.fee);\r\n            return real.sub(fees);\r\n        } else if (real <= params.upperTarget) {\r\n            return real;\r\n        } else {\r\n            uint256 fees = (real - params.upperTarget).mulDown(params.fee);\r\n            return real.sub(fees);\r\n        }\r\n    }\r\n\r\n    function _fromNominal(uint256 nominal, Params memory params) internal pure returns (uint256) {\r\n        // Since real = nominal + fees, rounding down fees is equivalent to rounding down real.\r\n\r\n        if (nominal < params.lowerTarget) {\r\n            return (nominal.add(params.fee.mulDown(params.lowerTarget))).divDown(FixedPoint.ONE.add(params.fee));\r\n        } else if (nominal <= params.upperTarget) {\r\n            return nominal;\r\n        } else {\r\n            return (nominal.sub(params.fee.mulDown(params.upperTarget)).divDown(FixedPoint.ONE.sub(params.fee)));\r\n        }\r\n    }\r\n\r\n    function _calcTokensOutGivenExactBptIn(\r\n        uint256[] memory balances,\r\n        uint256 bptAmountIn,\r\n        uint256 bptTotalSupply,\r\n        uint256 bptIndex\r\n    ) internal pure returns (uint256[] memory) {\r\n        /**********************************************************************************************\r\n        // exactBPTInForTokensOut                                                                    //\r\n        // (per token)                                                                               //\r\n        // aO = tokenAmountOut             /        bptIn         \\                                  //\r\n        // b = tokenBalance      a0 = b * | ---------------------  |                                 //\r\n        // bptIn = bptAmountIn             \\     bptTotalSupply    /                                 //\r\n        // bpt = bptTotalSupply                                                                      //\r\n        **********************************************************************************************/\r\n\r\n        // Since we're computing an amount out, we round down overall. This means rounding down on both the\r\n        // multiplication and division.\r\n\r\n        uint256 bptRatio = bptAmountIn.divDown(bptTotalSupply);\r\n\r\n        uint256[] memory amountsOut = new uint256[](balances.length);\r\n        for (uint256 i = 0; i < balances.length; i++) {\r\n            // BPT is skipped as those tokens are not the LPs, but rather the preminted and undistributed amount.\r\n            if (i != bptIndex) {\r\n                amountsOut[i] = balances[i].mulDown(bptRatio);\r\n            }\r\n        }\r\n\r\n        return amountsOut;\r\n    }\r\n}\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n\r\nlibrary LinearPoolUserData {\r\n    enum ExitKind { EMERGENCY_EXACT_BPT_IN_FOR_TOKENS_OUT }\r\n\r\n    function exitKind(bytes memory self) internal pure returns (ExitKind) {\r\n        return abi.decode(self, (ExitKind));\r\n    }\r\n\r\n    function exactBptInForTokensOut(bytes memory self) internal pure returns (uint256 bptAmountIn) {\r\n        (, bptAmountIn) = abi.decode(self, (ExitKind, uint256));\r\n    }\r\n}\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\r\n * address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\r\n * types.\r\n *\r\n * This concept is unrelated to a Pool's Asset Managers.\r\n */\r\ninterface IAsset {\r\n    // solhint-disable-previous-line no-empty-blocks\r\n}\r\n\r\n\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n\r\n/* solhint-disable */\r\n\r\n/**\r\n * @dev Exponentiation and logarithm functions for 18 decimal fixed point numbers (both base and exponent/argument).\r\n *\r\n * Exponentiation and logarithm with arbitrary bases (x^y and log_x(y)) are implemented by conversion to natural\r\n * exponentiation and logarithm (where the base is Euler's number).\r\n *\r\n * @author Fernando Martinelli - @fernandomartinelli\r\n * @author Sergio Yuhjtman - @sergioyuhjtman\r\n * @author Daniel Fernandez - @dmf7z\r\n */\r\nlibrary LogExpMath {\r\n    // All fixed point multiplications and divisions are inlined. This means we need to divide by ONE when multiplying\r\n    // two numbers, and multiply by ONE when dividing them.\r\n\r\n    // All arguments and return values are 18 decimal fixed point numbers.\r\n    int256 constant ONE_18 = 1e18;\r\n\r\n    // Internally, intermediate values are computed with higher precision as 20 decimal fixed point numbers, and in the\r\n    // case of ln36, 36 decimals.\r\n    int256 constant ONE_20 = 1e20;\r\n    int256 constant ONE_36 = 1e36;\r\n\r\n    // The domain of natural exponentiation is bound by the word size and number of decimals used.\r\n    //\r\n    // Because internally the result will be stored using 20 decimals, the largest possible result is\r\n    // (2^255 - 1) / 10^20, which makes the largest exponent ln((2^255 - 1) / 10^20) = 130.700829182905140221.\r\n    // The smallest possible result is 10^(-18), which makes largest negative argument\r\n    // ln(10^(-18)) = -41.446531673892822312.\r\n    // We use 130.0 and -41.0 to have some safety margin.\r\n    int256 constant MAX_NATURAL_EXPONENT = 130e18;\r\n    int256 constant MIN_NATURAL_EXPONENT = -41e18;\r\n\r\n    // Bounds for ln_36's argument. Both ln(0.9) and ln(1.1) can be represented with 36 decimal places in a fixed point\r\n    // 256 bit integer.\r\n    int256 constant LN_36_LOWER_BOUND = ONE_18 - 1e17;\r\n    int256 constant LN_36_UPPER_BOUND = ONE_18 + 1e17;\r\n\r\n    uint256 constant MILD_EXPONENT_BOUND = 2**254 / uint256(ONE_20);\r\n\r\n    // 18 decimal constants\r\n    int256 constant x0 = 128000000000000000000; // 2ˆ7\r\n    int256 constant a0 = 38877084059945950922200000000000000000000000000000000000; // eˆ(x0) (no decimals)\r\n    int256 constant x1 = 64000000000000000000; // 2ˆ6\r\n    int256 constant a1 = 6235149080811616882910000000; // eˆ(x1) (no decimals)\r\n\r\n    // 20 decimal constants\r\n    int256 constant x2 = 3200000000000000000000; // 2ˆ5\r\n    int256 constant a2 = 7896296018268069516100000000000000; // eˆ(x2)\r\n    int256 constant x3 = 1600000000000000000000; // 2ˆ4\r\n    int256 constant a3 = 888611052050787263676000000; // eˆ(x3)\r\n    int256 constant x4 = 800000000000000000000; // 2ˆ3\r\n    int256 constant a4 = 298095798704172827474000; // eˆ(x4)\r\n    int256 constant x5 = 400000000000000000000; // 2ˆ2\r\n    int256 constant a5 = 5459815003314423907810; // eˆ(x5)\r\n    int256 constant x6 = 200000000000000000000; // 2ˆ1\r\n    int256 constant a6 = 738905609893065022723; // eˆ(x6)\r\n    int256 constant x7 = 100000000000000000000; // 2ˆ0\r\n    int256 constant a7 = 271828182845904523536; // eˆ(x7)\r\n    int256 constant x8 = 50000000000000000000; // 2ˆ-1\r\n    int256 constant a8 = 164872127070012814685; // eˆ(x8)\r\n    int256 constant x9 = 25000000000000000000; // 2ˆ-2\r\n    int256 constant a9 = 128402541668774148407; // eˆ(x9)\r\n    int256 constant x10 = 12500000000000000000; // 2ˆ-3\r\n    int256 constant a10 = 113314845306682631683; // eˆ(x10)\r\n    int256 constant x11 = 6250000000000000000; // 2ˆ-4\r\n    int256 constant a11 = 106449445891785942956; // eˆ(x11)\r\n\r\n    /**\r\n     * @dev Exponentiation (x^y) with unsigned 18 decimal fixed point base and exponent.\r\n     *\r\n     * Reverts if ln(x) * y is smaller than `MIN_NATURAL_EXPONENT`, or larger than `MAX_NATURAL_EXPONENT`.\r\n     */\r\n    function pow(uint256 x, uint256 y) internal pure returns (uint256) {\r\n        if (y == 0) {\r\n            // We solve the 0^0 indetermination by making it equal one.\r\n            return uint256(ONE_18);\r\n        }\r\n\r\n        if (x == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // Instead of computing x^y directly, we instead rely on the properties of logarithms and exponentiation to\r\n        // arrive at that result. In particular, exp(ln(x)) = x, and ln(x^y) = y * ln(x). This means\r\n        // x^y = exp(y * ln(x)).\r\n\r\n        // The ln function takes a signed value, so we need to make sure x fits in the signed 256 bit range.\r\n        _require(x < 2**255, Errors.X_OUT_OF_BOUNDS);\r\n        int256 x_int256 = int256(x);\r\n\r\n        // We will compute y * ln(x) in a single step. Depending on the value of x, we can either use ln or ln_36. In\r\n        // both cases, we leave the division by ONE_18 (due to fixed point multiplication) to the end.\r\n\r\n        // This prevents y * ln(x) from overflowing, and at the same time guarantees y fits in the signed 256 bit range.\r\n        _require(y < MILD_EXPONENT_BOUND, Errors.Y_OUT_OF_BOUNDS);\r\n        int256 y_int256 = int256(y);\r\n\r\n        int256 logx_times_y;\r\n        if (LN_36_LOWER_BOUND < x_int256 && x_int256 < LN_36_UPPER_BOUND) {\r\n            int256 ln_36_x = _ln_36(x_int256);\r\n\r\n            // ln_36_x has 36 decimal places, so multiplying by y_int256 isn't as straightforward, since we can't just\r\n            // bring y_int256 to 36 decimal places, as it might overflow. Instead, we perform two 18 decimal\r\n            // multiplications and add the results: one with the first 18 decimals of ln_36_x, and one with the\r\n            // (downscaled) last 18 decimals.\r\n            logx_times_y = ((ln_36_x / ONE_18) * y_int256 + ((ln_36_x % ONE_18) * y_int256) / ONE_18);\r\n        } else {\r\n            logx_times_y = _ln(x_int256) * y_int256;\r\n        }\r\n        logx_times_y /= ONE_18;\r\n\r\n        // Finally, we compute exp(y * ln(x)) to arrive at x^y\r\n        _require(\r\n            MIN_NATURAL_EXPONENT <= logx_times_y && logx_times_y <= MAX_NATURAL_EXPONENT,\r\n            Errors.PRODUCT_OUT_OF_BOUNDS\r\n        );\r\n\r\n        return uint256(exp(logx_times_y));\r\n    }\r\n\r\n    /**\r\n     * @dev Natural exponentiation (e^x) with signed 18 decimal fixed point exponent.\r\n     *\r\n     * Reverts if `x` is smaller than MIN_NATURAL_EXPONENT, or larger than `MAX_NATURAL_EXPONENT`.\r\n     */\r\n    function exp(int256 x) internal pure returns (int256) {\r\n        _require(x >= MIN_NATURAL_EXPONENT && x <= MAX_NATURAL_EXPONENT, Errors.INVALID_EXPONENT);\r\n\r\n        if (x < 0) {\r\n            // We only handle positive exponents: e^(-x) is computed as 1 / e^x. We can safely make x positive since it\r\n            // fits in the signed 256 bit range (as it is larger than MIN_NATURAL_EXPONENT).\r\n            // Fixed point division requires multiplying by ONE_18.\r\n            return ((ONE_18 * ONE_18) / exp(-x));\r\n        }\r\n\r\n        // First, we use the fact that e^(x+y) = e^x * e^y to decompose x into a sum of powers of two, which we call x_n,\r\n        // where x_n == 2^(7 - n), and e^x_n = a_n has been precomputed. We choose the first x_n, x0, to equal 2^7\r\n        // because all larger powers are larger than MAX_NATURAL_EXPONENT, and therefore not present in the\r\n        // decomposition.\r\n        // At the end of this process we will have the product of all e^x_n = a_n that apply, and the remainder of this\r\n        // decomposition, which will be lower than the smallest x_n.\r\n        // exp(x) = k_0 * a_0 * k_1 * a_1 * ... + k_n * a_n * exp(remainder), where each k_n equals either 0 or 1.\r\n        // We mutate x by subtracting x_n, making it the remainder of the decomposition.\r\n\r\n        // The first two a_n (e^(2^7) and e^(2^6)) are too large if stored as 18 decimal numbers, and could cause\r\n        // intermediate overflows. Instead we store them as plain integers, with 0 decimals.\r\n        // Additionally, x0 + x1 is larger than MAX_NATURAL_EXPONENT, which means they will not both be present in the\r\n        // decomposition.\r\n\r\n        // For each x_n, we test if that term is present in the decomposition (if x is larger than it), and if so deduct\r\n        // it and compute the accumulated product.\r\n\r\n        int256 firstAN;\r\n        if (x >= x0) {\r\n            x -= x0;\r\n            firstAN = a0;\r\n        } else if (x >= x1) {\r\n            x -= x1;\r\n            firstAN = a1;\r\n        } else {\r\n            firstAN = 1; // One with no decimal places\r\n        }\r\n\r\n        // We now transform x into a 20 decimal fixed point number, to have enhanced precision when computing the\r\n        // smaller terms.\r\n        x *= 100;\r\n\r\n        // `product` is the accumulated product of all a_n (except a0 and a1), which starts at 20 decimal fixed point\r\n        // one. Recall that fixed point multiplication requires dividing by ONE_20.\r\n        int256 product = ONE_20;\r\n\r\n        if (x >= x2) {\r\n            x -= x2;\r\n            product = (product * a2) / ONE_20;\r\n        }\r\n        if (x >= x3) {\r\n            x -= x3;\r\n            product = (product * a3) / ONE_20;\r\n        }\r\n        if (x >= x4) {\r\n            x -= x4;\r\n            product = (product * a4) / ONE_20;\r\n        }\r\n        if (x >= x5) {\r\n            x -= x5;\r\n            product = (product * a5) / ONE_20;\r\n        }\r\n        if (x >= x6) {\r\n            x -= x6;\r\n            product = (product * a6) / ONE_20;\r\n        }\r\n        if (x >= x7) {\r\n            x -= x7;\r\n            product = (product * a7) / ONE_20;\r\n        }\r\n        if (x >= x8) {\r\n            x -= x8;\r\n            product = (product * a8) / ONE_20;\r\n        }\r\n        if (x >= x9) {\r\n            x -= x9;\r\n            product = (product * a9) / ONE_20;\r\n        }\r\n\r\n        // x10 and x11 are unnecessary here since we have high enough precision already.\r\n\r\n        // Now we need to compute e^x, where x is small (in particular, it is smaller than x9). We use the Taylor series\r\n        // expansion for e^x: 1 + x + (x^2 / 2!) + (x^3 / 3!) + ... + (x^n / n!).\r\n\r\n        int256 seriesSum = ONE_20; // The initial one in the sum, with 20 decimal places.\r\n        int256 term; // Each term in the sum, where the nth term is (x^n / n!).\r\n\r\n        // The first term is simply x.\r\n        term = x;\r\n        seriesSum += term;\r\n\r\n        // Each term (x^n / n!) equals the previous one times x, divided by n. Since x is a fixed point number,\r\n        // multiplying by it requires dividing by ONE_20, but dividing by the non-fixed point n values does not.\r\n\r\n        term = ((term * x) / ONE_20) / 2;\r\n        seriesSum += term;\r\n\r\n        term = ((term * x) / ONE_20) / 3;\r\n        seriesSum += term;\r\n\r\n        term = ((term * x) / ONE_20) / 4;\r\n        seriesSum += term;\r\n\r\n        term = ((term * x) / ONE_20) / 5;\r\n        seriesSum += term;\r\n\r\n        term = ((term * x) / ONE_20) / 6;\r\n        seriesSum += term;\r\n\r\n        term = ((term * x) / ONE_20) / 7;\r\n        seriesSum += term;\r\n\r\n        term = ((term * x) / ONE_20) / 8;\r\n        seriesSum += term;\r\n\r\n        term = ((term * x) / ONE_20) / 9;\r\n        seriesSum += term;\r\n\r\n        term = ((term * x) / ONE_20) / 10;\r\n        seriesSum += term;\r\n\r\n        term = ((term * x) / ONE_20) / 11;\r\n        seriesSum += term;\r\n\r\n        term = ((term * x) / ONE_20) / 12;\r\n        seriesSum += term;\r\n\r\n        // 12 Taylor terms are sufficient for 18 decimal precision.\r\n\r\n        // We now have the first a_n (with no decimals), and the product of all other a_n present, and the Taylor\r\n        // approximation of the exponentiation of the remainder (both with 20 decimals). All that remains is to multiply\r\n        // all three (one 20 decimal fixed point multiplication, dividing by ONE_20, and one integer multiplication),\r\n        // and then drop two digits to return an 18 decimal value.\r\n\r\n        return (((product * seriesSum) / ONE_20) * firstAN) / 100;\r\n    }\r\n\r\n    /**\r\n     * @dev Logarithm (log(arg, base), with signed 18 decimal fixed point base and argument.\r\n     */\r\n    function log(int256 arg, int256 base) internal pure returns (int256) {\r\n        // This performs a simple base change: log(arg, base) = ln(arg) / ln(base).\r\n\r\n        // Both logBase and logArg are computed as 36 decimal fixed point numbers, either by using ln_36, or by\r\n        // upscaling.\r\n\r\n        int256 logBase;\r\n        if (LN_36_LOWER_BOUND < base && base < LN_36_UPPER_BOUND) {\r\n            logBase = _ln_36(base);\r\n        } else {\r\n            logBase = _ln(base) * ONE_18;\r\n        }\r\n\r\n        int256 logArg;\r\n        if (LN_36_LOWER_BOUND < arg && arg < LN_36_UPPER_BOUND) {\r\n            logArg = _ln_36(arg);\r\n        } else {\r\n            logArg = _ln(arg) * ONE_18;\r\n        }\r\n\r\n        // When dividing, we multiply by ONE_18 to arrive at a result with 18 decimal places\r\n        return (logArg * ONE_18) / logBase;\r\n    }\r\n\r\n    /**\r\n     * @dev Natural logarithm (ln(a)) with signed 18 decimal fixed point argument.\r\n     */\r\n    function ln(int256 a) internal pure returns (int256) {\r\n        // The real natural logarithm is not defined for negative numbers or zero.\r\n        _require(a > 0, Errors.OUT_OF_BOUNDS);\r\n        if (LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND) {\r\n            return _ln_36(a) / ONE_18;\r\n        } else {\r\n            return _ln(a);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Internal natural logarithm (ln(a)) with signed 18 decimal fixed point argument.\r\n     */\r\n    function _ln(int256 a) private pure returns (int256) {\r\n        if (a < ONE_18) {\r\n            // Since ln(a^k) = k * ln(a), we can compute ln(a) as ln(a) = ln((1/a)^(-1)) = - ln((1/a)). If a is less\r\n            // than one, 1/a will be greater than one, and this if statement will not be entered in the recursive call.\r\n            // Fixed point division requires multiplying by ONE_18.\r\n            return (-_ln((ONE_18 * ONE_18) / a));\r\n        }\r\n\r\n        // First, we use the fact that ln^(a * b) = ln(a) + ln(b) to decompose ln(a) into a sum of powers of two, which\r\n        // we call x_n, where x_n == 2^(7 - n), which are the natural logarithm of precomputed quantities a_n (that is,\r\n        // ln(a_n) = x_n). We choose the first x_n, x0, to equal 2^7 because the exponential of all larger powers cannot\r\n        // be represented as 18 fixed point decimal numbers in 256 bits, and are therefore larger than a.\r\n        // At the end of this process we will have the sum of all x_n = ln(a_n) that apply, and the remainder of this\r\n        // decomposition, which will be lower than the smallest a_n.\r\n        // ln(a) = k_0 * x_0 + k_1 * x_1 + ... + k_n * x_n + ln(remainder), where each k_n equals either 0 or 1.\r\n        // We mutate a by subtracting a_n, making it the remainder of the decomposition.\r\n\r\n        // For reasons related to how `exp` works, the first two a_n (e^(2^7) and e^(2^6)) are not stored as fixed point\r\n        // numbers with 18 decimals, but instead as plain integers with 0 decimals, so we need to multiply them by\r\n        // ONE_18 to convert them to fixed point.\r\n        // For each a_n, we test if that term is present in the decomposition (if a is larger than it), and if so divide\r\n        // by it and compute the accumulated sum.\r\n\r\n        int256 sum = 0;\r\n        if (a >= a0 * ONE_18) {\r\n            a /= a0; // Integer, not fixed point division\r\n            sum += x0;\r\n        }\r\n\r\n        if (a >= a1 * ONE_18) {\r\n            a /= a1; // Integer, not fixed point division\r\n            sum += x1;\r\n        }\r\n\r\n        // All other a_n and x_n are stored as 20 digit fixed point numbers, so we convert the sum and a to this format.\r\n        sum *= 100;\r\n        a *= 100;\r\n\r\n        // Because further a_n are  20 digit fixed point numbers, we multiply by ONE_20 when dividing by them.\r\n\r\n        if (a >= a2) {\r\n            a = (a * ONE_20) / a2;\r\n            sum += x2;\r\n        }\r\n\r\n        if (a >= a3) {\r\n            a = (a * ONE_20) / a3;\r\n            sum += x3;\r\n        }\r\n\r\n        if (a >= a4) {\r\n            a = (a * ONE_20) / a4;\r\n            sum += x4;\r\n        }\r\n\r\n        if (a >= a5) {\r\n            a = (a * ONE_20) / a5;\r\n            sum += x5;\r\n        }\r\n\r\n        if (a >= a6) {\r\n            a = (a * ONE_20) / a6;\r\n            sum += x6;\r\n        }\r\n\r\n        if (a >= a7) {\r\n            a = (a * ONE_20) / a7;\r\n            sum += x7;\r\n        }\r\n\r\n        if (a >= a8) {\r\n            a = (a * ONE_20) / a8;\r\n            sum += x8;\r\n        }\r\n\r\n        if (a >= a9) {\r\n            a = (a * ONE_20) / a9;\r\n            sum += x9;\r\n        }\r\n\r\n        if (a >= a10) {\r\n            a = (a * ONE_20) / a10;\r\n            sum += x10;\r\n        }\r\n\r\n        if (a >= a11) {\r\n            a = (a * ONE_20) / a11;\r\n            sum += x11;\r\n        }\r\n\r\n        // a is now a small number (smaller than a_11, which roughly equals 1.06). This means we can use a Taylor series\r\n        // that converges rapidly for values of `a` close to one - the same one used in ln_36.\r\n        // Let z = (a - 1) / (a + 1).\r\n        // ln(a) = 2 * (z + z^3 / 3 + z^5 / 5 + z^7 / 7 + ... + z^(2 * n + 1) / (2 * n + 1))\r\n\r\n        // Recall that 20 digit fixed point division requires multiplying by ONE_20, and multiplication requires\r\n        // division by ONE_20.\r\n        int256 z = ((a - ONE_20) * ONE_20) / (a + ONE_20);\r\n        int256 z_squared = (z * z) / ONE_20;\r\n\r\n        // num is the numerator of the series: the z^(2 * n + 1) term\r\n        int256 num = z;\r\n\r\n        // seriesSum holds the accumulated sum of each term in the series, starting with the initial z\r\n        int256 seriesSum = num;\r\n\r\n        // In each step, the numerator is multiplied by z^2\r\n        num = (num * z_squared) / ONE_20;\r\n        seriesSum += num / 3;\r\n\r\n        num = (num * z_squared) / ONE_20;\r\n        seriesSum += num / 5;\r\n\r\n        num = (num * z_squared) / ONE_20;\r\n        seriesSum += num / 7;\r\n\r\n        num = (num * z_squared) / ONE_20;\r\n        seriesSum += num / 9;\r\n\r\n        num = (num * z_squared) / ONE_20;\r\n        seriesSum += num / 11;\r\n\r\n        // 6 Taylor terms are sufficient for 36 decimal precision.\r\n\r\n        // Finally, we multiply by 2 (non fixed point) to compute ln(remainder)\r\n        seriesSum *= 2;\r\n\r\n        // We now have the sum of all x_n present, and the Taylor approximation of the logarithm of the remainder (both\r\n        // with 20 decimals). All that remains is to sum these two, and then drop two digits to return a 18 decimal\r\n        // value.\r\n\r\n        return (sum + seriesSum) / 100;\r\n    }\r\n\r\n    /**\r\n     * @dev Intrnal high precision (36 decimal places) natural logarithm (ln(x)) with signed 18 decimal fixed point argument,\r\n     * for x close to one.\r\n     *\r\n     * Should only be used if x is between LN_36_LOWER_BOUND and LN_36_UPPER_BOUND.\r\n     */\r\n    function _ln_36(int256 x) private pure returns (int256) {\r\n        // Since ln(1) = 0, a value of x close to one will yield a very small result, which makes using 36 digits\r\n        // worthwhile.\r\n\r\n        // First, we transform x to a 36 digit fixed point value.\r\n        x *= ONE_18;\r\n\r\n        // We will use the following Taylor expansion, which converges very rapidly. Let z = (x - 1) / (x + 1).\r\n        // ln(x) = 2 * (z + z^3 / 3 + z^5 / 5 + z^7 / 7 + ... + z^(2 * n + 1) / (2 * n + 1))\r\n\r\n        // Recall that 36 digit fixed point division requires multiplying by ONE_36, and multiplication requires\r\n        // division by ONE_36.\r\n        int256 z = ((x - ONE_36) * ONE_36) / (x + ONE_36);\r\n        int256 z_squared = (z * z) / ONE_36;\r\n\r\n        // num is the numerator of the series: the z^(2 * n + 1) term\r\n        int256 num = z;\r\n\r\n        // seriesSum holds the accumulated sum of each term in the series, starting with the initial z\r\n        int256 seriesSum = num;\r\n\r\n        // In each step, the numerator is multiplied by z^2\r\n        num = (num * z_squared) / ONE_36;\r\n        seriesSum += num / 3;\r\n\r\n        num = (num * z_squared) / ONE_36;\r\n        seriesSum += num / 5;\r\n\r\n        num = (num * z_squared) / ONE_36;\r\n        seriesSum += num / 7;\r\n\r\n        num = (num * z_squared) / ONE_36;\r\n        seriesSum += num / 9;\r\n\r\n        num = (num * z_squared) / ONE_36;\r\n        seriesSum += num / 11;\r\n\r\n        num = (num * z_squared) / ONE_36;\r\n        seriesSum += num / 13;\r\n\r\n        num = (num * z_squared) / ONE_36;\r\n        seriesSum += num / 15;\r\n\r\n        // 8 Taylor terms are sufficient for 36 decimal precision.\r\n\r\n        // All that remains is multiplying by 2 (non fixed point).\r\n        return seriesSum * 2;\r\n    }\r\n}\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow checks.\r\n * Adapted from OpenZeppelin's SafeMath library.\r\n */\r\nlibrary Math {\r\n    /**\r\n     * @dev Returns the absolute value of a signed integer.\r\n     */\r\n    function abs(int256 a) internal pure returns (uint256) {\r\n        return a > 0 ? uint256(a) : uint256(-a);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers of 256 bits, reverting on overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        _require(c >= a, Errors.ADD_OVERFLOW);\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two signed integers, reverting on overflow.\r\n     */\r\n    function add(int256 a, int256 b) internal pure returns (int256) {\r\n        int256 c = a + b;\r\n        _require((b >= 0 && c >= a) || (b < 0 && c < a), Errors.ADD_OVERFLOW);\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers of 256 bits, reverting on overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        _require(b <= a, Errors.SUB_OVERFLOW);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two signed integers, reverting on overflow.\r\n     */\r\n    function sub(int256 a, int256 b) internal pure returns (int256) {\r\n        int256 c = a - b;\r\n        _require((b >= 0 && c <= a) || (b < 0 && c > a), Errors.SUB_OVERFLOW);\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers of 256 bits.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers of 256 bits.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a * b;\r\n        _require(a == 0 || c / a == b, Errors.MUL_OVERFLOW);\r\n        return c;\r\n    }\r\n\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        bool roundUp\r\n    ) internal pure returns (uint256) {\r\n        return roundUp ? divUp(a, b) : divDown(a, b);\r\n    }\r\n\r\n    function divDown(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        _require(b != 0, Errors.ZERO_DIVISION);\r\n        return a / b;\r\n    }\r\n\r\n    function divUp(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        _require(b != 0, Errors.ZERO_DIVISION);\r\n\r\n        if (a == 0) {\r\n            return 0;\r\n        } else {\r\n            return 1 + (a - 1) / b;\r\n        }\r\n    }\r\n}\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n\r\nlibrary InputHelpers {\r\n    function ensureInputLengthMatch(uint256 a, uint256 b) internal pure {\r\n        _require(a == b, Errors.INPUT_LENGTH_MISMATCH);\r\n    }\r\n\r\n    function ensureInputLengthMatch(\r\n        uint256 a,\r\n        uint256 b,\r\n        uint256 c\r\n    ) internal pure {\r\n        _require(a == b && b == c, Errors.INPUT_LENGTH_MISMATCH);\r\n    }\r\n\r\n    function ensureArrayIsSorted(IERC20[] memory array) internal pure {\r\n        address[] memory addressArray;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            addressArray := array\r\n        }\r\n        ensureArrayIsSorted(addressArray);\r\n    }\r\n\r\n    function ensureArrayIsSorted(address[] memory array) internal pure {\r\n        if (array.length < 2) {\r\n            return;\r\n        }\r\n\r\n        address previous = array[0];\r\n        for (uint256 i = 1; i < array.length; ++i) {\r\n            address current = array[i];\r\n            _require(previous < current, Errors.UNSORTED_ARRAY);\r\n            previous = current;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Library for encoding and decoding values stored inside a 256 bit word. Typically used to pack multiple values in\r\n * a single storage slot, saving gas by performing less storage accesses.\r\n *\r\n * Each value is defined by its size and the least significant bit in the word, also known as offset. For example, two\r\n * 128 bit values may be encoded in a word by assigning one an offset of 0, and the other an offset of 128.\r\n *\r\n * We could use Solidity structs to pack values together in a single storage slot instead of relying on a custom and\r\n * error-prone library, but unfortunately Solidity only allows for structs to live in either storage, calldata or\r\n * memory. Because a memory struct uses not just memory but also a slot in the stack (to store its memory location),\r\n * using memory for word-sized values (i.e. of 256 bits or less) is strictly less gas performant, and doesn't even\r\n * prevent stack-too-deep issues. This is compounded by the fact that Balancer contracts typically are memory-intensive,\r\n * and the cost of accesing memory increases quadratically with the number of allocated words. Manual packing and\r\n * unpacking is therefore the preferred approach.\r\n */\r\nlibrary WordCodec {\r\n    // Masks are values with the least significant N bits set. They can be used to extract an encoded value from a word,\r\n    // or to insert a new one replacing the old.\r\n    uint256 private constant _MASK_1 = 2**(1) - 1;\r\n    uint256 private constant _MASK_5 = 2**(5) - 1;\r\n    uint256 private constant _MASK_7 = 2**(7) - 1;\r\n    uint256 private constant _MASK_10 = 2**(10) - 1;\r\n    uint256 private constant _MASK_16 = 2**(16) - 1;\r\n    uint256 private constant _MASK_22 = 2**(22) - 1;\r\n    uint256 private constant _MASK_31 = 2**(31) - 1;\r\n    uint256 private constant _MASK_32 = 2**(32) - 1;\r\n    uint256 private constant _MASK_53 = 2**(53) - 1;\r\n    uint256 private constant _MASK_64 = 2**(64) - 1;\r\n    uint256 private constant _MASK_96 = 2**(96) - 1;\r\n    uint256 private constant _MASK_128 = 2**(128) - 1;\r\n    uint256 private constant _MASK_192 = 2**(192) - 1;\r\n\r\n    // Largest positive values that can be represented as N bits signed integers.\r\n    int256 private constant _MAX_INT_22 = 2**(21) - 1;\r\n    int256 private constant _MAX_INT_53 = 2**(52) - 1;\r\n\r\n    // In-place insertion\r\n\r\n    /**\r\n     * @dev Inserts a boolean value shifted by an offset into a 256 bit word, replacing the old value. Returns the new\r\n     * word.\r\n     */\r\n    function insertBool(\r\n        bytes32 word,\r\n        bool value,\r\n        uint256 offset\r\n    ) internal pure returns (bytes32) {\r\n        bytes32 clearedWord = bytes32(uint256(word) & ~(_MASK_1 << offset));\r\n        return clearedWord | bytes32(uint256(value ? 1 : 0) << offset);\r\n    }\r\n\r\n    // Unsigned\r\n\r\n    /**\r\n     * @dev Inserts a 5 bit unsigned integer shifted by an offset into a 256 bit word, replacing the old value. Returns\r\n     * the new word.\r\n     *\r\n     * Assumes `value` only uses its least significant 5 bits, otherwise it may overwrite sibling bytes.\r\n     */\r\n    function insertUint5(\r\n        bytes32 word,\r\n        uint256 value,\r\n        uint256 offset\r\n    ) internal pure returns (bytes32) {\r\n        bytes32 clearedWord = bytes32(uint256(word) & ~(_MASK_5 << offset));\r\n        return clearedWord | bytes32(value << offset);\r\n    }\r\n\r\n    /**\r\n     * @dev Inserts a 7 bit unsigned integer shifted by an offset into a 256 bit word, replacing the old value. Returns\r\n     * the new word.\r\n     *\r\n     * Assumes `value` only uses its least significant 7 bits, otherwise it may overwrite sibling bytes.\r\n     */\r\n    function insertUint7(\r\n        bytes32 word,\r\n        uint256 value,\r\n        uint256 offset\r\n    ) internal pure returns (bytes32) {\r\n        bytes32 clearedWord = bytes32(uint256(word) & ~(_MASK_7 << offset));\r\n        return clearedWord | bytes32(value << offset);\r\n    }\r\n\r\n    /**\r\n     * @dev Inserts a 10 bit unsigned integer shifted by an offset into a 256 bit word, replacing the old value. Returns\r\n     * the new word.\r\n     *\r\n     * Assumes `value` only uses its least significant 10 bits, otherwise it may overwrite sibling bytes.\r\n     */\r\n    function insertUint10(\r\n        bytes32 word,\r\n        uint256 value,\r\n        uint256 offset\r\n    ) internal pure returns (bytes32) {\r\n        bytes32 clearedWord = bytes32(uint256(word) & ~(_MASK_10 << offset));\r\n        return clearedWord | bytes32(value << offset);\r\n    }\r\n\r\n    /**\r\n     * @dev Inserts a 16 bit unsigned integer shifted by an offset into a 256 bit word, replacing the old value.\r\n     * Returns the new word.\r\n     *\r\n     * Assumes `value` only uses its least significant 16 bits, otherwise it may overwrite sibling bytes.\r\n     */\r\n    function insertUint16(\r\n        bytes32 word,\r\n        uint256 value,\r\n        uint256 offset\r\n    ) internal pure returns (bytes32) {\r\n        bytes32 clearedWord = bytes32(uint256(word) & ~(_MASK_16 << offset));\r\n        return clearedWord | bytes32(value << offset);\r\n    }\r\n\r\n    /**\r\n     * @dev Inserts a 31 bit unsigned integer shifted by an offset into a 256 bit word, replacing the old value. Returns\r\n     * the new word.\r\n     *\r\n     * Assumes `value` can be represented using 31 bits.\r\n     */\r\n    function insertUint31(\r\n        bytes32 word,\r\n        uint256 value,\r\n        uint256 offset\r\n    ) internal pure returns (bytes32) {\r\n        bytes32 clearedWord = bytes32(uint256(word) & ~(_MASK_31 << offset));\r\n        return clearedWord | bytes32(value << offset);\r\n    }\r\n\r\n    /**\r\n     * @dev Inserts a 32 bit unsigned integer shifted by an offset into a 256 bit word, replacing the old value. Returns\r\n     * the new word.\r\n     *\r\n     * Assumes `value` only uses its least significant 32 bits, otherwise it may overwrite sibling bytes.\r\n     */\r\n    function insertUint32(\r\n        bytes32 word,\r\n        uint256 value,\r\n        uint256 offset\r\n    ) internal pure returns (bytes32) {\r\n        bytes32 clearedWord = bytes32(uint256(word) & ~(_MASK_32 << offset));\r\n        return clearedWord | bytes32(value << offset);\r\n    }\r\n\r\n    /**\r\n     * @dev Inserts a 64 bit unsigned integer shifted by an offset into a 256 bit word, replacing the old value. Returns\r\n     * the new word.\r\n     *\r\n     * Assumes `value` only uses its least significant 64 bits, otherwise it may overwrite sibling bytes.\r\n     */\r\n    function insertUint64(\r\n        bytes32 word,\r\n        uint256 value,\r\n        uint256 offset\r\n    ) internal pure returns (bytes32) {\r\n        bytes32 clearedWord = bytes32(uint256(word) & ~(_MASK_64 << offset));\r\n        return clearedWord | bytes32(value << offset);\r\n    }\r\n\r\n    // Signed\r\n\r\n    /**\r\n     * @dev Inserts a 22 bits signed integer shifted by an offset into a 256 bit word, replacing the old value. Returns\r\n     * the new word.\r\n     *\r\n     * Assumes `value` can be represented using 22 bits.\r\n     */\r\n    function insertInt22(\r\n        bytes32 word,\r\n        int256 value,\r\n        uint256 offset\r\n    ) internal pure returns (bytes32) {\r\n        bytes32 clearedWord = bytes32(uint256(word) & ~(_MASK_22 << offset));\r\n        // Integer values need masking to remove the upper bits of negative values.\r\n        return clearedWord | bytes32((uint256(value) & _MASK_22) << offset);\r\n    }\r\n\r\n    // Bytes\r\n\r\n    /**\r\n     * @dev Inserts 192 bit shifted by an offset into a 256 bit word, replacing the old value. Returns the new word.\r\n     *\r\n     * Assumes `value` can be represented using 192 bits.\r\n     */\r\n    function insertBits192(\r\n        bytes32 word,\r\n        bytes32 value,\r\n        uint256 offset\r\n    ) internal pure returns (bytes32) {\r\n        bytes32 clearedWord = bytes32(uint256(word) & ~(_MASK_192 << offset));\r\n        return clearedWord | bytes32((uint256(value) & _MASK_192) << offset);\r\n    }\r\n\r\n    // Encoding\r\n\r\n    // Unsigned\r\n\r\n    /**\r\n     * @dev Encodes an unsigned integer shifted by an offset. This performs no size checks: it is up to the caller to\r\n     * ensure that the values are bounded.\r\n     *\r\n     * The return value can be logically ORed with other encoded values to form a 256 bit word.\r\n     */\r\n    function encodeUint(uint256 value, uint256 offset) internal pure returns (bytes32) {\r\n        return bytes32(value << offset);\r\n    }\r\n\r\n    // Signed\r\n\r\n    /**\r\n     * @dev Encodes a 22 bits signed integer shifted by an offset.\r\n     *\r\n     * The return value can be logically ORed with other encoded values to form a 256 bit word.\r\n     */\r\n    function encodeInt22(int256 value, uint256 offset) internal pure returns (bytes32) {\r\n        // Integer values need masking to remove the upper bits of negative values.\r\n        return bytes32((uint256(value) & _MASK_22) << offset);\r\n    }\r\n\r\n    /**\r\n     * @dev Encodes a 53 bits signed integer shifted by an offset.\r\n     *\r\n     * The return value can be logically ORed with other encoded values to form a 256 bit word.\r\n     */\r\n    function encodeInt53(int256 value, uint256 offset) internal pure returns (bytes32) {\r\n        // Integer values need masking to remove the upper bits of negative values.\r\n        return bytes32((uint256(value) & _MASK_53) << offset);\r\n    }\r\n\r\n    // Decoding\r\n\r\n    /**\r\n     * @dev Decodes and returns a boolean shifted by an offset from a 256 bit word.\r\n     */\r\n    function decodeBool(bytes32 word, uint256 offset) internal pure returns (bool) {\r\n        return (uint256(word >> offset) & _MASK_1) == 1;\r\n    }\r\n\r\n    // Unsigned\r\n\r\n    /**\r\n     * @dev Decodes and returns a 5 bit unsigned integer shifted by an offset from a 256 bit word.\r\n     */\r\n    function decodeUint5(bytes32 word, uint256 offset) internal pure returns (uint256) {\r\n        return uint256(word >> offset) & _MASK_5;\r\n    }\r\n\r\n    /**\r\n     * @dev Decodes and returns a 7 bit unsigned integer shifted by an offset from a 256 bit word.\r\n     */\r\n    function decodeUint7(bytes32 word, uint256 offset) internal pure returns (uint256) {\r\n        return uint256(word >> offset) & _MASK_7;\r\n    }\r\n\r\n    /**\r\n     * @dev Decodes and returns a 10 bit unsigned integer shifted by an offset from a 256 bit word.\r\n     */\r\n    function decodeUint10(bytes32 word, uint256 offset) internal pure returns (uint256) {\r\n        return uint256(word >> offset) & _MASK_10;\r\n    }\r\n\r\n    /**\r\n     * @dev Decodes and returns a 16 bit unsigned integer shifted by an offset from a 256 bit word.\r\n     */\r\n    function decodeUint16(bytes32 word, uint256 offset) internal pure returns (uint256) {\r\n        return uint256(word >> offset) & _MASK_16;\r\n    }\r\n\r\n    /**\r\n     * @dev Decodes and returns a 31 bit unsigned integer shifted by an offset from a 256 bit word.\r\n     */\r\n    function decodeUint31(bytes32 word, uint256 offset) internal pure returns (uint256) {\r\n        return uint256(word >> offset) & _MASK_31;\r\n    }\r\n\r\n    /**\r\n     * @dev Decodes and returns a 32 bit unsigned integer shifted by an offset from a 256 bit word.\r\n     */\r\n    function decodeUint32(bytes32 word, uint256 offset) internal pure returns (uint256) {\r\n        return uint256(word >> offset) & _MASK_32;\r\n    }\r\n\r\n    /**\r\n     * @dev Decodes and returns a 64 bit unsigned integer shifted by an offset from a 256 bit word.\r\n     */\r\n    function decodeUint64(bytes32 word, uint256 offset) internal pure returns (uint256) {\r\n        return uint256(word >> offset) & _MASK_64;\r\n    }\r\n\r\n    /**\r\n     * @dev Decodes and returns a 96 bit unsigned integer shifted by an offset from a 256 bit word.\r\n     */\r\n    function decodeUint96(bytes32 word, uint256 offset) internal pure returns (uint256) {\r\n        return uint256(word >> offset) & _MASK_96;\r\n    }\r\n\r\n    /**\r\n     * @dev Decodes and returns a 128 bit unsigned integer shifted by an offset from a 256 bit word.\r\n     */\r\n    function decodeUint128(bytes32 word, uint256 offset) internal pure returns (uint256) {\r\n        return uint256(word >> offset) & _MASK_128;\r\n    }\r\n\r\n    // Signed\r\n\r\n    /**\r\n     * @dev Decodes and returns a 22 bits signed integer shifted by an offset from a 256 bit word.\r\n     */\r\n    function decodeInt22(bytes32 word, uint256 offset) internal pure returns (int256) {\r\n        int256 value = int256(uint256(word >> offset) & _MASK_22);\r\n        // In case the decoded value is greater than the max positive integer that can be represented with 22 bits,\r\n        // we know it was originally a negative integer. Therefore, we mask it to restore the sign in the 256 bit\r\n        // representation.\r\n        return value > _MAX_INT_22 ? (value | int256(~_MASK_22)) : value;\r\n    }\r\n\r\n    /**\r\n     * @dev Decodes and returns a 53 bits signed integer shifted by an offset from a 256 bit word.\r\n     */\r\n    function decodeInt53(bytes32 word, uint256 offset) internal pure returns (int256) {\r\n        int256 value = int256(uint256(word >> offset) & _MASK_53);\r\n        // In case the decoded value is greater than the max positive integer that can be represented with 53 bits,\r\n        // we know it was originally a negative integer. Therefore, we mask it to restore the sign in the 256 bit\r\n        // representation.\r\n\r\n        return value > _MAX_INT_53 ? (value | int256(~_MASK_53)) : value;\r\n    }\r\n}\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Interface for the SignatureValidator helper, used to support meta-transactions.\r\n */\r\ninterface ISignaturesValidator {\r\n    /**\r\n     * @dev Returns the EIP712 domain separator.\r\n     */\r\n    function getDomainSeparator() external view returns (bytes32);\r\n\r\n    /**\r\n     * @dev Returns the next nonce used by an address to sign messages.\r\n     */\r\n    function getNextNonce(address user) external view returns (uint256);\r\n}\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Full external interface for the Vault core contract - no external or public methods exist in the contract that\r\n * don't override one of these declarations.\r\n */\r\ninterface IVault is ISignaturesValidator, ITemporarilyPausable {\r\n    // Generalities about the Vault:\r\n    //\r\n    // - Whenever documentation refers to 'tokens', it strictly refers to ERC20-compliant token contracts. Tokens are\r\n    // transferred out of the Vault by calling the `IERC20.transfer` function, and transferred in by calling\r\n    // `IERC20.transferFrom`. In these cases, the sender must have previously allowed the Vault to use their tokens by\r\n    // calling `IERC20.approve`. The only deviation from the ERC20 standard that is supported is functions not returning\r\n    // a boolean value: in these scenarios, a non-reverting call is assumed to be successful.\r\n    //\r\n    // - All non-view functions in the Vault are non-reentrant: calling them while another one is mid-execution (e.g.\r\n    // while execution control is transferred to a token contract during a swap) will result in a revert. View\r\n    // functions can be called in a re-reentrant way, but doing so might cause them to return inconsistent results.\r\n    // Contracts calling view functions in the Vault must make sure the Vault has not already been entered.\r\n    //\r\n    // - View functions revert if referring to either unregistered Pools, or unregistered tokens for registered Pools.\r\n\r\n    // Authorizer\r\n    //\r\n    // Some system actions are permissioned, like setting and collecting protocol fees. This permissioning system exists\r\n    // outside of the Vault in the Authorizer contract: the Vault simply calls the Authorizer to check if the caller\r\n    // can perform a given action.\r\n\r\n    /**\r\n     * @dev Returns the Vault's Authorizer.\r\n     */\r\n    function getAuthorizer() external view returns (IAuthorizer);\r\n\r\n    /**\r\n     * @dev Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this.\r\n     *\r\n     * Emits an `AuthorizerChanged` event.\r\n     */\r\n    function setAuthorizer(IAuthorizer newAuthorizer) external;\r\n\r\n    /**\r\n     * @dev Emitted when a new authorizer is set by `setAuthorizer`.\r\n     */\r\n    event AuthorizerChanged(IAuthorizer indexed newAuthorizer);\r\n\r\n    // Relayers\r\n    //\r\n    // Additionally, it is possible for an account to perform certain actions on behalf of another one, using their\r\n    // Vault ERC20 allowance and Internal Balance. These accounts are said to be 'relayers' for these Vault functions,\r\n    // and are expected to be smart contracts with sound authentication mechanisms. For an account to be able to wield\r\n    // this power, two things must occur:\r\n    //  - The Authorizer must grant the account the permission to be a relayer for the relevant Vault function. This\r\n    //    means that Balancer governance must approve each individual contract to act as a relayer for the intended\r\n    //    functions.\r\n    //  - Each user must approve the relayer to act on their behalf.\r\n    // This double protection means users cannot be tricked into approving malicious relayers (because they will not\r\n    // have been allowed by the Authorizer via governance), nor can malicious relayers approved by a compromised\r\n    // Authorizer or governance drain user funds, since they would also need to be approved by each individual user.\r\n\r\n    /**\r\n     * @dev Returns true if `user` has approved `relayer` to act as a relayer for them.\r\n     */\r\n    function hasApprovedRelayer(address user, address relayer) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise.\r\n     *\r\n     * Emits a `RelayerApprovalChanged` event.\r\n     */\r\n    function setRelayerApproval(\r\n        address sender,\r\n        address relayer,\r\n        bool approved\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\r\n     */\r\n    event RelayerApprovalChanged(address indexed relayer, address indexed sender, bool approved);\r\n\r\n    // Internal Balance\r\n    //\r\n    // Users can deposit tokens into the Vault, where they are allocated to their Internal Balance, and later\r\n    // transferred or withdrawn. It can also be used as a source of tokens when joining Pools, as a destination\r\n    // when exiting them, and as either when performing swaps. This usage of Internal Balance results in greatly reduced\r\n    // gas costs when compared to relying on plain ERC20 transfers, leading to large savings for frequent users.\r\n    //\r\n    // Internal Balance management features batching, which means a single contract call can be used to perform multiple\r\n    // operations of different kinds, with different senders and recipients, at once.\r\n\r\n    /**\r\n     * @dev Returns `user`'s Internal Balance for a set of tokens.\r\n     */\r\n    function getInternalBalance(address user, IERC20[] memory tokens) external view returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer)\r\n     * and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as\r\n     * it lets integrators reuse a user's Vault allowance.\r\n     *\r\n     * For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\r\n     */\r\n    function manageUserBalance(UserBalanceOp[] memory ops) external payable;\r\n\r\n    /**\r\n     * @dev Data for `manageUserBalance` operations, which include the possibility for ETH to be sent and received\r\n     without manual WETH wrapping or unwrapping.\r\n     */\r\n    struct UserBalanceOp {\r\n        UserBalanceOpKind kind;\r\n        IAsset asset;\r\n        uint256 amount;\r\n        address sender;\r\n        address payable recipient;\r\n    }\r\n\r\n    // There are four possible operations in `manageUserBalance`:\r\n    //\r\n    // - DEPOSIT_INTERNAL\r\n    // Increases the Internal Balance of the `recipient` account by transferring tokens from the corresponding\r\n    // `sender`. The sender must have allowed the Vault to use their tokens via `IERC20.approve()`.\r\n    //\r\n    // ETH can be used by passing the ETH sentinel value as the asset and forwarding ETH in the call: it will be wrapped\r\n    // and deposited as WETH. Any ETH amount remaining will be sent back to the caller (not the sender, which is\r\n    // relevant for relayers).\r\n    //\r\n    // Emits an `InternalBalanceChanged` event.\r\n    //\r\n    //\r\n    // - WITHDRAW_INTERNAL\r\n    // Decreases the Internal Balance of the `sender` account by transferring tokens to the `recipient`.\r\n    //\r\n    // ETH can be used by passing the ETH sentinel value as the asset. This will deduct WETH instead, unwrap it and send\r\n    // it to the recipient as ETH.\r\n    //\r\n    // Emits an `InternalBalanceChanged` event.\r\n    //\r\n    //\r\n    // - TRANSFER_INTERNAL\r\n    // Transfers tokens from the Internal Balance of the `sender` account to the Internal Balance of `recipient`.\r\n    //\r\n    // Reverts if the ETH sentinel value is passed.\r\n    //\r\n    // Emits an `InternalBalanceChanged` event.\r\n    //\r\n    //\r\n    // - TRANSFER_EXTERNAL\r\n    // Transfers tokens from `sender` to `recipient`, using the Vault's ERC20 allowance. This is typically used by\r\n    // relayers, as it lets them reuse a user's Vault allowance.\r\n    //\r\n    // Reverts if the ETH sentinel value is passed.\r\n    //\r\n    // Emits an `ExternalBalanceTransfer` event.\r\n\r\n    enum UserBalanceOpKind { DEPOSIT_INTERNAL, WITHDRAW_INTERNAL, TRANSFER_INTERNAL, TRANSFER_EXTERNAL }\r\n\r\n    /**\r\n     * @dev Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through\r\n     * interacting with Pools using Internal Balance.\r\n     *\r\n     * Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH\r\n     * address.\r\n     */\r\n    event InternalBalanceChanged(address indexed user, IERC20 indexed token, int256 delta);\r\n\r\n    /**\r\n     * @dev Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\r\n     */\r\n    event ExternalBalanceTransfer(IERC20 indexed token, address indexed sender, address recipient, uint256 amount);\r\n\r\n    // Pools\r\n    //\r\n    // There are three specialization settings for Pools, which allow for cheaper swaps at the cost of reduced\r\n    // functionality:\r\n    //\r\n    //  - General: no specialization, suited for all Pools. IGeneralPool is used for swap request callbacks, passing the\r\n    // balance of all tokens in the Pool. These Pools have the largest swap costs (because of the extra storage reads),\r\n    // which increase with the number of registered tokens.\r\n    //\r\n    //  - Minimal Swap Info: IMinimalSwapInfoPool is used instead of IGeneralPool, which saves gas by only passing the\r\n    // balance of the two tokens involved in the swap. This is suitable for some pricing algorithms, like the weighted\r\n    // constant product one popularized by Balancer V1. Swap costs are smaller compared to general Pools, and are\r\n    // independent of the number of registered tokens.\r\n    //\r\n    //  - Two Token: only allows two tokens to be registered. This achieves the lowest possible swap gas cost. Like\r\n    // minimal swap info Pools, these are called via IMinimalSwapInfoPool.\r\n\r\n    enum PoolSpecialization { GENERAL, MINIMAL_SWAP_INFO, TWO_TOKEN }\r\n\r\n    /**\r\n     * @dev Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which\r\n     * is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be\r\n     * changed.\r\n     *\r\n     * The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`,\r\n     * depending on the chosen specialization setting. This contract is known as the Pool's contract.\r\n     *\r\n     * Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words,\r\n     * multiple Pools may share the same contract.\r\n     *\r\n     * Emits a `PoolRegistered` event.\r\n     */\r\n    function registerPool(PoolSpecialization specialization) external returns (bytes32);\r\n\r\n    /**\r\n     * @dev Emitted when a Pool is registered by calling `registerPool`.\r\n     */\r\n    event PoolRegistered(bytes32 indexed poolId, address indexed poolAddress, PoolSpecialization specialization);\r\n\r\n    /**\r\n     * @dev Returns a Pool's contract address and specialization setting.\r\n     */\r\n    function getPool(bytes32 poolId) external view returns (address, PoolSpecialization);\r\n\r\n    /**\r\n     * @dev Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\r\n     *\r\n     * Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens,\r\n     * exit by receiving registered tokens, and can only swap registered tokens.\r\n     *\r\n     * Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length\r\n     * of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in\r\n     * ascending order.\r\n     *\r\n     * The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset\r\n     * Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`,\r\n     * depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore\r\n     * expected to be highly secured smart contracts with sound design principles, and the decision to register an\r\n     * Asset Manager should not be made lightly.\r\n     *\r\n     * Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset\r\n     * Manager is set, it cannot be changed except by deregistering the associated token and registering again with a\r\n     * different Asset Manager.\r\n     *\r\n     * Emits a `TokensRegistered` event.\r\n     */\r\n    function registerTokens(\r\n        bytes32 poolId,\r\n        IERC20[] memory tokens,\r\n        address[] memory assetManagers\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Emitted when a Pool registers tokens by calling `registerTokens`.\r\n     */\r\n    event TokensRegistered(bytes32 indexed poolId, IERC20[] tokens, address[] assetManagers);\r\n\r\n    /**\r\n     * @dev Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\r\n     *\r\n     * Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total\r\n     * balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens\r\n     * must be deregistered in the same `deregisterTokens` call.\r\n     *\r\n     * A deregistered token can be re-registered later on, possibly with a different Asset Manager.\r\n     *\r\n     * Emits a `TokensDeregistered` event.\r\n     */\r\n    function deregisterTokens(bytes32 poolId, IERC20[] memory tokens) external;\r\n\r\n    /**\r\n     * @dev Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\r\n     */\r\n    event TokensDeregistered(bytes32 indexed poolId, IERC20[] tokens);\r\n\r\n    /**\r\n     * @dev Returns detailed information for a Pool's registered token.\r\n     *\r\n     * `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens\r\n     * withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token`\r\n     * equals the sum of `cash` and `managed`.\r\n     *\r\n     * Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`,\r\n     * `managed` or `total` balance to be greater than 2^112 - 1.\r\n     *\r\n     * `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a\r\n     * join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for\r\n     * example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a\r\n     * change for this purpose, and will update `lastChangeBlock`.\r\n     *\r\n     * `assetManager` is the Pool's token Asset Manager.\r\n     */\r\n    function getPoolTokenInfo(bytes32 poolId, IERC20 token)\r\n        external\r\n        view\r\n        returns (\r\n            uint256 cash,\r\n            uint256 managed,\r\n            uint256 lastChangeBlock,\r\n            address assetManager\r\n        );\r\n\r\n    /**\r\n     * @dev Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of\r\n     * the tokens' `balances` changed.\r\n     *\r\n     * The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all\r\n     * Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order.\r\n     *\r\n     * If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same\r\n     * order as passed to `registerTokens`.\r\n     *\r\n     * Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are\r\n     * the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo`\r\n     * instead.\r\n     */\r\n    function getPoolTokens(bytes32 poolId)\r\n        external\r\n        view\r\n        returns (\r\n            IERC20[] memory tokens,\r\n            uint256[] memory balances,\r\n            uint256 lastChangeBlock\r\n        );\r\n\r\n    /**\r\n     * @dev Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will\r\n     * trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized\r\n     * Pool shares.\r\n     *\r\n     * If the caller is not `sender`, it must be an authorized relayer for them.\r\n     *\r\n     * The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount\r\n     * to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces\r\n     * these maximums.\r\n     *\r\n     * If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable\r\n     * this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the\r\n     * WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent\r\n     * back to the caller (not the sender, which is important for relayers).\r\n     *\r\n     * `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\r\n     * interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be\r\n     * sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final\r\n     * `assets` array might not be sorted. Pools with no registered tokens cannot be joined.\r\n     *\r\n     * If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only\r\n     * be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be\r\n     * withdrawn from Internal Balance: attempting to do so will trigger a revert.\r\n     *\r\n     * This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement\r\n     * their own custom logic. This typically requires additional information from the user (such as the expected number\r\n     * of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed\r\n     * directly to the Pool's contract, as is `recipient`.\r\n     *\r\n     * Emits a `PoolBalanceChanged` event.\r\n     */\r\n    function joinPool(\r\n        bytes32 poolId,\r\n        address sender,\r\n        address recipient,\r\n        JoinPoolRequest memory request\r\n    ) external payable;\r\n\r\n    struct JoinPoolRequest {\r\n        IAsset[] assets;\r\n        uint256[] maxAmountsIn;\r\n        bytes userData;\r\n        bool fromInternalBalance;\r\n    }\r\n\r\n    /**\r\n     * @dev Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will\r\n     * trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized\r\n     * Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see\r\n     * `getPoolTokenInfo`).\r\n     *\r\n     * If the caller is not `sender`, it must be an authorized relayer for them.\r\n     *\r\n     * The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum\r\n     * token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault:\r\n     * it just enforces these minimums.\r\n     *\r\n     * If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To\r\n     * enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead\r\n     * of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit.\r\n     *\r\n     * `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\r\n     * interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must\r\n     * be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the\r\n     * final `assets` array might not be sorted. Pools with no registered tokens cannot be exited.\r\n     *\r\n     * If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise,\r\n     * an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to\r\n     * do so will trigger a revert.\r\n     *\r\n     * `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the\r\n     * `tokens` array. This array must match the Pool's registered tokens.\r\n     *\r\n     * This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement\r\n     * their own custom logic. This typically requires additional information from the user (such as the expected number\r\n     * of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and\r\n     * passed directly to the Pool's contract.\r\n     *\r\n     * Emits a `PoolBalanceChanged` event.\r\n     */\r\n    function exitPool(\r\n        bytes32 poolId,\r\n        address sender,\r\n        address payable recipient,\r\n        ExitPoolRequest memory request\r\n    ) external;\r\n\r\n    struct ExitPoolRequest {\r\n        IAsset[] assets;\r\n        uint256[] minAmountsOut;\r\n        bytes userData;\r\n        bool toInternalBalance;\r\n    }\r\n\r\n    /**\r\n     * @dev Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\r\n     */\r\n    event PoolBalanceChanged(\r\n        bytes32 indexed poolId,\r\n        address indexed liquidityProvider,\r\n        IERC20[] tokens,\r\n        int256[] deltas,\r\n        uint256[] protocolFeeAmounts\r\n    );\r\n\r\n    enum PoolBalanceChangeKind { JOIN, EXIT }\r\n\r\n    // Swaps\r\n    //\r\n    // Users can swap tokens with Pools by calling the `swap` and `batchSwap` functions. To do this,\r\n    // they need not trust Pool contracts in any way: all security checks are made by the Vault. They must however be\r\n    // aware of the Pools' pricing algorithms in order to estimate the prices Pools will quote.\r\n    //\r\n    // The `swap` function executes a single swap, while `batchSwap` can perform multiple swaps in sequence.\r\n    // In each individual swap, tokens of one kind are sent from the sender to the Pool (this is the 'token in'),\r\n    // and tokens of another kind are sent from the Pool to the recipient in exchange (this is the 'token out').\r\n    // More complex swaps, such as one token in to multiple tokens out can be achieved by batching together\r\n    // individual swaps.\r\n    //\r\n    // There are two swap kinds:\r\n    //  - 'given in' swaps, where the amount of tokens in (sent to the Pool) is known, and the Pool determines (via the\r\n    // `onSwap` hook) the amount of tokens out (to send to the recipient).\r\n    //  - 'given out' swaps, where the amount of tokens out (received from the Pool) is known, and the Pool determines\r\n    // (via the `onSwap` hook) the amount of tokens in (to receive from the sender).\r\n    //\r\n    // Additionally, it is possible to chain swaps using a placeholder input amount, which the Vault replaces with\r\n    // the calculated output of the previous swap. If the previous swap was 'given in', this will be the calculated\r\n    // tokenOut amount. If the previous swap was 'given out', it will use the calculated tokenIn amount. These extended\r\n    // swaps are known as 'multihop' swaps, since they 'hop' through a number of intermediate tokens before arriving at\r\n    // the final intended token.\r\n    //\r\n    // In all cases, tokens are only transferred in and out of the Vault (or withdrawn from and deposited into Internal\r\n    // Balance) after all individual swaps have been completed, and the net token balance change computed. This makes\r\n    // certain swap patterns, such as multihops, or swaps that interact with the same token pair in multiple Pools, cost\r\n    // much less gas than they would otherwise.\r\n    //\r\n    // It also means that under certain conditions it is possible to perform arbitrage by swapping with multiple\r\n    // Pools in a way that results in net token movement out of the Vault (profit), with no tokens being sent in (only\r\n    // updating the Pool's internal accounting).\r\n    //\r\n    // To protect users from front-running or the market changing rapidly, they supply a list of 'limits' for each token\r\n    // involved in the swap, where either the maximum number of tokens to send (by passing a positive value) or the\r\n    // minimum amount of tokens to receive (by passing a negative value) is specified.\r\n    //\r\n    // Additionally, a 'deadline' timestamp can also be provided, forcing the swap to fail if it occurs after\r\n    // this point in time (e.g. if the transaction failed to be included in a block promptly).\r\n    //\r\n    // If interacting with Pools that hold WETH, it is possible to both send and receive ETH directly: the Vault will do\r\n    // the wrapping and unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be\r\n    // passed in the `assets` array instead of the WETH address. Note that it is possible to combine ETH and WETH in the\r\n    // same swap. Any excess ETH will be sent back to the caller (not the sender, which is relevant for relayers).\r\n    //\r\n    // Finally, Internal Balance can be used when either sending or receiving tokens.\r\n\r\n    enum SwapKind { GIVEN_IN, GIVEN_OUT }\r\n\r\n    /**\r\n     * @dev Performs a swap with a single Pool.\r\n     *\r\n     * If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens\r\n     * taken from the Pool, which must be greater than or equal to `limit`.\r\n     *\r\n     * If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens\r\n     * sent to the Pool, which must be less than or equal to `limit`.\r\n     *\r\n     * Internal Balance usage and the recipient are determined by the `funds` struct.\r\n     *\r\n     * Emits a `Swap` event.\r\n     */\r\n    function swap(\r\n        SingleSwap memory singleSwap,\r\n        FundManagement memory funds,\r\n        uint256 limit,\r\n        uint256 deadline\r\n    ) external payable returns (uint256);\r\n\r\n    /**\r\n     * @dev Data for a single swap executed by `swap`. `amount` is either `amountIn` or `amountOut` depending on\r\n     * the `kind` value.\r\n     *\r\n     * `assetIn` and `assetOut` are either token addresses, or the IAsset sentinel value for ETH (the zero address).\r\n     * Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault.\r\n     *\r\n     * The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\r\n     * used to extend swap behavior.\r\n     */\r\n    struct SingleSwap {\r\n        bytes32 poolId;\r\n        SwapKind kind;\r\n        IAsset assetIn;\r\n        IAsset assetOut;\r\n        uint256 amount;\r\n        bytes userData;\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either\r\n     * the amount of tokens sent to or received from the Pool, depending on the `kind` value.\r\n     *\r\n     * Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\r\n     * Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\r\n     * the same index in the `assets` array.\r\n     *\r\n     * Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a\r\n     * Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or\r\n     * `amountOut` depending on the swap kind.\r\n     *\r\n     * Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out\r\n     * of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal\r\n     * the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`.\r\n     *\r\n     * The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses,\r\n     * or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and\r\n     * out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to\r\n     * or unwrapped from WETH by the Vault.\r\n     *\r\n     * Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies\r\n     * the minimum or maximum amount of each token the vault is allowed to transfer.\r\n     *\r\n     * `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the\r\n     * equivalent `swap` call.\r\n     *\r\n     * Emits `Swap` events.\r\n     */\r\n    function batchSwap(\r\n        SwapKind kind,\r\n        BatchSwapStep[] memory swaps,\r\n        IAsset[] memory assets,\r\n        FundManagement memory funds,\r\n        int256[] memory limits,\r\n        uint256 deadline\r\n    ) external payable returns (int256[] memory);\r\n\r\n    /**\r\n     * @dev Data for each individual swap executed by `batchSwap`. The asset in and out fields are indexes into the\r\n     * `assets` array passed to that function, and ETH assets are converted to WETH.\r\n     *\r\n     * If `amount` is zero, the multihop mechanism is used to determine the actual amount based on the amount in/out\r\n     * from the previous swap, depending on the swap kind.\r\n     *\r\n     * The `userData` field is ignored by the Vault, but forwarded to the Pool in the `onSwap` hook, and may be\r\n     * used to extend swap behavior.\r\n     */\r\n    struct BatchSwapStep {\r\n        bytes32 poolId;\r\n        uint256 assetInIndex;\r\n        uint256 assetOutIndex;\r\n        uint256 amount;\r\n        bytes userData;\r\n    }\r\n\r\n    /**\r\n     * @dev Emitted for each individual swap performed by `swap` or `batchSwap`.\r\n     */\r\n    event Swap(\r\n        bytes32 indexed poolId,\r\n        IERC20 indexed tokenIn,\r\n        IERC20 indexed tokenOut,\r\n        uint256 amountIn,\r\n        uint256 amountOut\r\n    );\r\n\r\n    /**\r\n     * @dev All tokens in a swap are either sent from the `sender` account to the Vault, or from the Vault to the\r\n     * `recipient` account.\r\n     *\r\n     * If the caller is not `sender`, it must be an authorized relayer for them.\r\n     *\r\n     * If `fromInternalBalance` is true, the `sender`'s Internal Balance will be preferred, performing an ERC20\r\n     * transfer for the difference between the requested amount and the User's Internal Balance (if any). The `sender`\r\n     * must have allowed the Vault to use their tokens via `IERC20.approve()`. This matches the behavior of\r\n     * `joinPool`.\r\n     *\r\n     * If `toInternalBalance` is true, tokens will be deposited to `recipient`'s internal balance instead of\r\n     * transferred. This matches the behavior of `exitPool`.\r\n     *\r\n     * Note that ETH cannot be deposited to or withdrawn from Internal Balance: attempting to do so will trigger a\r\n     * revert.\r\n     */\r\n    struct FundManagement {\r\n        address sender;\r\n        bool fromInternalBalance;\r\n        address payable recipient;\r\n        bool toInternalBalance;\r\n    }\r\n\r\n    /**\r\n     * @dev Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\r\n     * simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\r\n     *\r\n     * Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\r\n     * the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\r\n     * receives are the same that an equivalent `batchSwap` call would receive.\r\n     *\r\n     * Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct.\r\n     * This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens,\r\n     * approve them for the Vault, or even know a user's address.\r\n     *\r\n     * Note that this function is not 'view' (due to implementation details): the client code must explicitly execute\r\n     * eth_call instead of eth_sendTransaction.\r\n     */\r\n    function queryBatchSwap(\r\n        SwapKind kind,\r\n        BatchSwapStep[] memory swaps,\r\n        IAsset[] memory assets,\r\n        FundManagement memory funds\r\n    ) external returns (int256[] memory assetDeltas);\r\n\r\n    // Flash Loans\r\n\r\n    /**\r\n     * @dev Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it,\r\n     * and then reverting unless the tokens plus a proportional protocol fee have been returned.\r\n     *\r\n     * The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount\r\n     * for each token contract. `tokens` must be sorted in ascending order.\r\n     *\r\n     * The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the\r\n     * `receiveFlashLoan` call.\r\n     *\r\n     * Emits `FlashLoan` events.\r\n     */\r\n    function flashLoan(\r\n        IFlashLoanRecipient recipient,\r\n        IERC20[] memory tokens,\r\n        uint256[] memory amounts,\r\n        bytes memory userData\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Emitted for each individual flash loan performed by `flashLoan`.\r\n     */\r\n    event FlashLoan(IFlashLoanRecipient indexed recipient, IERC20 indexed token, uint256 amount, uint256 feeAmount);\r\n\r\n    // Asset Management\r\n    //\r\n    // Each token registered for a Pool can be assigned an Asset Manager, which is able to freely withdraw the Pool's\r\n    // tokens from the Vault, deposit them, or assign arbitrary values to its `managed` balance (see\r\n    // `getPoolTokenInfo`). This makes them extremely powerful and dangerous. Even if an Asset Manager only directly\r\n    // controls one of the tokens in a Pool, a malicious manager could set that token's balance to manipulate the\r\n    // prices of the other tokens, and then drain the Pool with swaps. The risk of using Asset Managers is therefore\r\n    // not constrained to the tokens they are managing, but extends to the entire Pool's holdings.\r\n    //\r\n    // However, a properly designed Asset Manager smart contract can be safely used for the Pool's benefit,\r\n    // for example by lending unused tokens out for interest, or using them to participate in voting protocols.\r\n    //\r\n    // This concept is unrelated to the IAsset interface.\r\n\r\n    /**\r\n     * @dev Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates.\r\n     *\r\n     * Pool Balance management features batching, which means a single contract call can be used to perform multiple\r\n     * operations of different kinds, with different Pools and tokens, at once.\r\n     *\r\n     * For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\r\n     */\r\n    function managePoolBalance(PoolBalanceOp[] memory ops) external;\r\n\r\n    struct PoolBalanceOp {\r\n        PoolBalanceOpKind kind;\r\n        bytes32 poolId;\r\n        IERC20 token;\r\n        uint256 amount;\r\n    }\r\n\r\n    /**\r\n     * Withdrawals decrease the Pool's cash, but increase its managed balance, leaving the total balance unchanged.\r\n     *\r\n     * Deposits increase the Pool's cash, but decrease its managed balance, leaving the total balance unchanged.\r\n     *\r\n     * Updates don't affect the Pool's cash balance, but because the managed balance changes, it does alter the total.\r\n     * The external amount can be either increased or decreased by this call (i.e., reporting a gain or a loss).\r\n     */\r\n    enum PoolBalanceOpKind { WITHDRAW, DEPOSIT, UPDATE }\r\n\r\n    /**\r\n     * @dev Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\r\n     */\r\n    event PoolBalanceManaged(\r\n        bytes32 indexed poolId,\r\n        address indexed assetManager,\r\n        IERC20 indexed token,\r\n        int256 cashDelta,\r\n        int256 managedDelta\r\n    );\r\n\r\n    // Protocol Fees\r\n    //\r\n    // Some operations cause the Vault to collect tokens in the form of protocol fees, which can then be withdrawn by\r\n    // permissioned accounts.\r\n    //\r\n    // There are two kinds of protocol fees:\r\n    //\r\n    //  - flash loan fees: charged on all flash loans, as a percentage of the amounts lent.\r\n    //\r\n    //  - swap fees: a percentage of the fees charged by Pools when performing swaps. For a number of reasons, including\r\n    // swap gas costs and interface simplicity, protocol swap fees are not charged on each individual swap. Rather,\r\n    // Pools are expected to keep track of how much they have charged in swap fees, and pay any outstanding debts to the\r\n    // Vault when they are joined or exited. This prevents users from joining a Pool with unpaid debt, as well as\r\n    // exiting a Pool in debt without first paying their share.\r\n\r\n    /**\r\n     * @dev Returns the current protocol fee module.\r\n     */\r\n    function getProtocolFeesCollector() external view returns (IProtocolFeesCollector);\r\n\r\n    /**\r\n     * @dev Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an\r\n     * error in some part of the system.\r\n     *\r\n     * The Vault can only be paused during an initial time period, after which pausing is forever disabled.\r\n     *\r\n     * While the contract is paused, the following features are disabled:\r\n     * - depositing and transferring internal balance\r\n     * - transferring external balance (using the Vault's allowance)\r\n     * - swaps\r\n     * - joining Pools\r\n     * - Asset Manager interactions\r\n     *\r\n     * Internal Balance can still be withdrawn, and Pools exited.\r\n     */\r\n    function setPaused(bool paused) external;\r\n\r\n    /**\r\n     * @dev Returns the Vault's WETH instance.\r\n     */\r\n    function WETH() external view returns (IWETH);\r\n    // solhint-disable-previous-line func-name-mixedcase\r\n}\r\n\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n\r\ninterface IAssetManager {\r\n    /**\r\n     * @notice Emitted when asset manager is rebalanced\r\n     */\r\n    event Rebalance(bytes32 poolId);\r\n\r\n    /**\r\n     * @notice Sets the config\r\n     */\r\n    function setConfig(bytes32 poolId, bytes calldata config) external;\r\n\r\n    /**\r\n     * Note: No function to read the asset manager config is included in IAssetManager\r\n     * as the signature is expected to vary between asset manager implementations\r\n     */\r\n\r\n    /**\r\n     * @notice Returns the asset manager's token\r\n     */\r\n    function getToken() external view returns (IERC20);\r\n\r\n    /**\r\n     * @return the current assets under management of this asset manager\r\n     */\r\n    function getAUM(bytes32 poolId) external view returns (uint256);\r\n\r\n    /**\r\n     * @return poolCash - The up-to-date cash balance of the pool\r\n     * @return poolManaged - The up-to-date managed balance of the pool\r\n     */\r\n    function getPoolBalances(bytes32 poolId) external view returns (uint256 poolCash, uint256 poolManaged);\r\n\r\n    /**\r\n     * @return The difference in tokens between the target investment\r\n     * and the currently invested amount (i.e. the amount that can be invested)\r\n     */\r\n    function maxInvestableBalance(bytes32 poolId) external view returns (int256);\r\n\r\n    /**\r\n     * @notice Updates the Vault on the value of the pool's investment returns\r\n     */\r\n    function updateBalanceOfPool(bytes32 poolId) external;\r\n\r\n    /**\r\n     * @notice Determines whether the pool should rebalance given the provided balances\r\n     */\r\n    function shouldRebalance(uint256 cash, uint256 managed) external view returns (bool);\r\n\r\n    /**\r\n     * @notice Rebalances funds between the pool and the asset manager to maintain target investment percentage.\r\n     * @param poolId - the poolId of the pool to be rebalanced\r\n     * @param force - a boolean representing whether a rebalance should be forced even when the pool is near balance\r\n     */\r\n    function rebalance(bytes32 poolId, bool force) external;\r\n\r\n    /**\r\n     * @notice allows an authorized rebalancer to remove capital to facilitate large withdrawals\r\n     * @param poolId - the poolId of the pool to withdraw funds back to\r\n     * @param amount - the amount of tokens to withdraw back to the pool\r\n     */\r\n    function capitalOut(bytes32 poolId, uint256 amount) external;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        _require(c >= a, Errors.ADD_OVERFLOW);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, Errors.SUB_OVERFLOW);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, uint256 errorCode) internal pure returns (uint256) {\r\n        _require(b <= a, errorCode);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n}\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Interface for WETH9.\r\n * See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol\r\n */\r\ninterface IWETH is IERC20 {\r\n    function deposit() external payable;\r\n\r\n    function withdraw(uint256 amount) external;\r\n}\r\n\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\ninterface IAuthorizer {\r\n    /**\r\n     * @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`.\r\n     */\r\n    function canPerform(\r\n        bytes32 actionId,\r\n        address account,\r\n        address where\r\n    ) external view returns (bool);\r\n}\r\n\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n// Inspired by Aave Protocol's IFlashLoanReceiver.\r\n\r\n\r\ninterface IFlashLoanRecipient {\r\n    /**\r\n     * @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\r\n     *\r\n     * At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\r\n     * call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\r\n     * Vault, or else the entire flash loan will revert.\r\n     *\r\n     * `userData` is the same value passed in the `IVault.flashLoan` call.\r\n     */\r\n    function receiveFlashLoan(\r\n        IERC20[] memory tokens,\r\n        uint256[] memory amounts,\r\n        uint256[] memory feeAmounts,\r\n        bytes memory userData\r\n    ) external;\r\n}\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n\r\ninterface IProtocolFeesCollector {\r\n    event SwapFeePercentageChanged(uint256 newSwapFeePercentage);\r\n    event FlashLoanFeePercentageChanged(uint256 newFlashLoanFeePercentage);\r\n\r\n    function withdrawCollectedFees(\r\n        IERC20[] calldata tokens,\r\n        uint256[] calldata amounts,\r\n        address recipient\r\n    ) external;\r\n\r\n    function setSwapFeePercentage(uint256 newSwapFeePercentage) external;\r\n\r\n    function setFlashLoanFeePercentage(uint256 newFlashLoanFeePercentage) external;\r\n\r\n    function getSwapFeePercentage() external view returns (uint256);\r\n\r\n    function getFlashLoanFeePercentage() external view returns (uint256);\r\n\r\n    function getCollectedFeeAmounts(IERC20[] memory tokens) external view returns (uint256[] memory feeAmounts);\r\n\r\n    function getAuthorizer() external view returns (IAuthorizer);\r\n\r\n    function vault() external view returns (IVault);\r\n}\r\n\r\npragma solidity ^0.7.0;\r\n\r\n\r\n/**\r\n * @dev Base factory for contracts whose creation code is so large that the factory cannot hold it. This happens when\r\n * the contract's creation code grows close to 24kB.\r\n *\r\n * Note that this factory cannot help with contracts that have a *runtime* (deployed) bytecode larger than 24kB.\r\n */\r\nabstract contract BaseSplitCodeFactory {\r\n    // The contract's creation code is stored as code in two separate addresses, and retrieved via `extcodecopy`. This\r\n    // means this factory supports contracts with creation code of up to 48kB.\r\n    // We rely on inline-assembly to achieve this, both to make the entire operation highly gas efficient, and because\r\n    // `extcodecopy` is not available in Solidity.\r\n\r\n    // solhint-disable no-inline-assembly\r\n\r\n    address private immutable _creationCodeContractA;\r\n    uint256 private immutable _creationCodeSizeA;\r\n\r\n    address private immutable _creationCodeContractB;\r\n    uint256 private immutable _creationCodeSizeB;\r\n\r\n    /**\r\n     * @dev The creation code of a contract Foo can be obtained inside Solidity with `type(Foo).creationCode`.\r\n     */\r\n    constructor(bytes memory creationCode) {\r\n        uint256 creationCodeSize = creationCode.length;\r\n\r\n        // We are going to deploy two contracts: one with approximately the first half of `creationCode`'s contents\r\n        // (A), and another with the remaining half (B).\r\n        // We store the lengths in both immutable and stack variables, since immutable variables cannot be read during\r\n        // construction.\r\n        uint256 creationCodeSizeA = creationCodeSize / 2;\r\n        _creationCodeSizeA = creationCodeSizeA;\r\n\r\n        uint256 creationCodeSizeB = creationCodeSize - creationCodeSizeA;\r\n        _creationCodeSizeB = creationCodeSizeB;\r\n\r\n        // To deploy the contracts, we're going to use `CodeDeployer.deploy()`, which expects a memory array with\r\n        // the code to deploy. Note that we cannot simply create arrays for A and B's code by copying or moving\r\n        // `creationCode`'s contents as they are expected to be very large (> 24kB), so we must operate in-place.\r\n\r\n        // Memory: [ code length ] [ A.data ] [ B.data ]\r\n\r\n        // Creating A's array is simple: we simply replace `creationCode`'s length with A's length. We'll later restore\r\n        // the original length.\r\n\r\n        bytes memory creationCodeA;\r\n        assembly {\r\n            creationCodeA := creationCode\r\n            mstore(creationCodeA, creationCodeSizeA)\r\n        }\r\n\r\n        // Memory: [ A.length ] [ A.data ] [ B.data ]\r\n        //         ^ creationCodeA\r\n\r\n        _creationCodeContractA = CodeDeployer.deploy(creationCodeA);\r\n\r\n        // Creating B's array is a bit more involved: since we cannot move B's contents, we are going to create a 'new'\r\n        // memory array starting at A's last 32 bytes, which will be replaced with B's length. We'll back-up this last\r\n        // byte to later restore it.\r\n\r\n        bytes memory creationCodeB;\r\n        bytes32 lastByteA;\r\n\r\n        assembly {\r\n            // `creationCode` points to the array's length, not data, so by adding A's length to it we arrive at A's\r\n            // last 32 bytes.\r\n            creationCodeB := add(creationCode, creationCodeSizeA)\r\n            lastByteA := mload(creationCodeB)\r\n            mstore(creationCodeB, creationCodeSizeB)\r\n        }\r\n\r\n        // Memory: [ A.length ] [ A.data[ : -1] ] [ B.length ][ B.data ]\r\n        //         ^ creationCodeA                ^ creationCodeB\r\n\r\n        _creationCodeContractB = CodeDeployer.deploy(creationCodeB);\r\n\r\n        // We now restore the original contents of `creationCode` by writing back the original length and A's last byte.\r\n        assembly {\r\n            mstore(creationCodeA, creationCodeSize)\r\n            mstore(creationCodeB, lastByteA)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the two addresses where the creation code of the contract crated by this factory is stored.\r\n     */\r\n    function getCreationCodeContracts() public view returns (address contractA, address contractB) {\r\n        return (_creationCodeContractA, _creationCodeContractB);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the creation code of the contract this factory creates.\r\n     */\r\n    function getCreationCode() public view returns (bytes memory) {\r\n        return _getCreationCodeWithArgs(\"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the creation code that will result in a contract being deployed with `constructorArgs`.\r\n     */\r\n    function _getCreationCodeWithArgs(bytes memory constructorArgs) private view returns (bytes memory code) {\r\n        // This function exists because `abi.encode()` cannot be instructed to place its result at a specific address.\r\n        // We need for the ABI-encoded constructor arguments to be located immediately after the creation code, but\r\n        // cannot rely on `abi.encodePacked()` to perform concatenation as that would involve copying the creation code,\r\n        // which would be prohibitively expensive.\r\n        // Instead, we compute the creation code in a pre-allocated array that is large enough to hold *both* the\r\n        // creation code and the constructor arguments, and then copy the ABI-encoded arguments (which should not be\r\n        // overly long) right after the end of the creation code.\r\n\r\n        // Immutable variables cannot be used in assembly, so we store them in the stack first.\r\n        address creationCodeContractA = _creationCodeContractA;\r\n        uint256 creationCodeSizeA = _creationCodeSizeA;\r\n        address creationCodeContractB = _creationCodeContractB;\r\n        uint256 creationCodeSizeB = _creationCodeSizeB;\r\n\r\n        uint256 creationCodeSize = creationCodeSizeA + creationCodeSizeB;\r\n        uint256 constructorArgsSize = constructorArgs.length;\r\n\r\n        uint256 codeSize = creationCodeSize + constructorArgsSize;\r\n\r\n        assembly {\r\n            // First, we allocate memory for `code` by retrieving the free memory pointer and then moving it ahead of\r\n            // `code` by the size of the creation code plus constructor arguments, and 32 bytes for the array length.\r\n            code := mload(0x40)\r\n            mstore(0x40, add(code, add(codeSize, 32)))\r\n\r\n            // We now store the length of the code plus constructor arguments.\r\n            mstore(code, codeSize)\r\n\r\n            // Next, we concatenate the creation code stored in A and B.\r\n            let dataStart := add(code, 32)\r\n            extcodecopy(creationCodeContractA, dataStart, 0, creationCodeSizeA)\r\n            extcodecopy(creationCodeContractB, add(dataStart, creationCodeSizeA), 0, creationCodeSizeB)\r\n        }\r\n\r\n        // Finally, we copy the constructorArgs to the end of the array. Unfortunately there is no way to avoid this\r\n        // copy, as it is not possible to tell Solidity where to store the result of `abi.encode()`.\r\n        uint256 constructorArgsDataPtr;\r\n        uint256 constructorArgsCodeDataPtr;\r\n        assembly {\r\n            constructorArgsDataPtr := add(constructorArgs, 32)\r\n            constructorArgsCodeDataPtr := add(add(code, 32), creationCodeSize)\r\n        }\r\n\r\n        _memcpy(constructorArgsCodeDataPtr, constructorArgsDataPtr, constructorArgsSize);\r\n    }\r\n\r\n    /**\r\n     * @dev Deploys a contract with constructor arguments. To create `constructorArgs`, call `abi.encode()` with the\r\n     * contract's constructor arguments, in order.\r\n     */\r\n    function _create(bytes memory constructorArgs) internal virtual returns (address) {\r\n        bytes memory creationCode = _getCreationCodeWithArgs(constructorArgs);\r\n\r\n        address destination;\r\n        assembly {\r\n            destination := create(0, add(creationCode, 32), mload(creationCode))\r\n        }\r\n\r\n        if (destination == address(0)) {\r\n            // Bubble up inner revert reason\r\n            // solhint-disable-next-line no-inline-assembly\r\n            assembly {\r\n                returndatacopy(0, 0, returndatasize())\r\n                revert(0, returndatasize())\r\n            }\r\n        }\r\n\r\n        return destination;\r\n    }\r\n\r\n    // From\r\n    // https://github.com/Arachnid/solidity-stringutils/blob/b9a6f6615cf18a87a823cbc461ce9e140a61c305/src/strings.sol\r\n    function _memcpy(\r\n        uint256 dest,\r\n        uint256 src,\r\n        uint256 len\r\n    ) private pure {\r\n        // Copy word-length chunks while possible\r\n        for (; len >= 32; len -= 32) {\r\n            assembly {\r\n                mstore(dest, mload(src))\r\n            }\r\n            dest += 32;\r\n            src += 32;\r\n        }\r\n\r\n        // Copy remaining bytes\r\n        uint256 mask = 256**(32 - len) - 1;\r\n        assembly {\r\n            let srcpart := and(mload(src), not(mask))\r\n            let destpart := and(mload(dest), mask)\r\n            mstore(dest, or(destpart, srcpart))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Same as `BasePoolFactory`, for Pools whose creation code is so large that the factory cannot hold it.\r\n */\r\nabstract contract BasePoolSplitCodeFactory is BaseSplitCodeFactory {\r\n    IVault private immutable _vault;\r\n    address private _defaultPoolOwner;\r\n    mapping(address => bool) private _isPoolFromFactory;\r\n\r\n    event PoolCreated(address indexed pool);\r\n\r\n    constructor(IVault vault, bytes memory creationCode, address defaultPoolOwner) BaseSplitCodeFactory(creationCode) {\r\n        _vault = vault;\r\n        _defaultPoolOwner = defaultPoolOwner;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the Vault's address.\r\n     */\r\n    function getVault() public view returns (IVault) {\r\n        return _vault;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the defaultPoolOwner's address.\r\n     */\r\n    function getDefaultPoolOwner() public view returns (address) {\r\n        return _defaultPoolOwner;\r\n    }\r\n\r\n    \r\n\r\n    /**\r\n     * @dev Returns true if `pool` was created by this factory.\r\n     */\r\n    function isPoolFromFactory(address pool) external view returns (bool) {\r\n        return _isPoolFromFactory[pool];\r\n    }\r\n\r\n    function _create(bytes memory constructorArgs) internal override returns (address) {\r\n        address pool = super._create(constructorArgs);\r\n\r\n        _isPoolFromFactory[pool] = true;\r\n        emit PoolCreated(pool);\r\n\r\n        return pool;\r\n    }\r\n}\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n/**\r\n * @dev Utility to create Pool factories for Pools that use the `TemporarilyPausable` contract.\r\n *\r\n * By calling `TemporarilyPausable`'s constructor with the result of `getPauseConfiguration`, all Pools created by this\r\n * factory will share the same Pause Window end time, after which both old and new Pools will not be pausable.\r\n */\r\ncontract FactoryWidePauseWindow {\r\n    // This contract relies on timestamps in a similar way as `TemporarilyPausable` does - the same caveats apply.\r\n    // solhint-disable not-rely-on-time\r\n\r\n    uint256 private constant _INITIAL_PAUSE_WINDOW_DURATION = 90 days;\r\n    uint256 private constant _BUFFER_PERIOD_DURATION = 30 days;\r\n\r\n    // Time when the pause window for all created Pools expires, and the pause window duration of new Pools becomes\r\n    // zero.\r\n    uint256 private immutable _poolsPauseWindowEndTime;\r\n\r\n    constructor() {\r\n        _poolsPauseWindowEndTime = block.timestamp + _INITIAL_PAUSE_WINDOW_DURATION;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current `TemporarilyPausable` configuration that will be applied to Pools created by this\r\n     * factory.\r\n     *\r\n     * `pauseWindowDuration` will decrease over time until it reaches zero, at which point both it and\r\n     * `bufferPeriodDuration` will be zero forever, meaning deployed Pools will not be pausable.\r\n     */\r\n    function getPauseConfiguration() public view returns (uint256 pauseWindowDuration, uint256 bufferPeriodDuration) {\r\n        uint256 currentTime = block.timestamp;\r\n        if (currentTime < _poolsPauseWindowEndTime) {\r\n            // The buffer period is always the same since its duration is related to how much time is needed to respond\r\n            // to a potential emergency. The Pause Window duration however decreases as the end time approaches.\r\n\r\n            pauseWindowDuration = _poolsPauseWindowEndTime - currentTime; // No need for checked arithmetic.\r\n            bufferPeriodDuration = _BUFFER_PERIOD_DURATION;\r\n        } else {\r\n            // After the end time, newly created Pools have no Pause Window, nor Buffer Period (since they are not\r\n            // pausable in the first place).\r\n\r\n            pauseWindowDuration = 0;\r\n            bufferPeriodDuration = 0;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\ncontract AaveLinearPoolFactory is BasePoolSplitCodeFactory, FactoryWidePauseWindow {\r\n    constructor(IVault vault, address defaultPoolOwner) BasePoolSplitCodeFactory(vault, type(AaveLinearPool).creationCode, defaultPoolOwner) {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n\r\n    /**\r\n     * @dev Deploys a new `AaveLinearPool`.\r\n     */\r\n    function create(\r\n        string memory name,\r\n        string memory symbol,\r\n        IERC20 mainToken,\r\n        IERC20 wrappedToken,\r\n        uint256 upperTarget,\r\n        uint256 swapFeePercentage\r\n    ) external returns (LinearPool) {\r\n        (uint256 pauseWindowDuration, uint256 bufferPeriodDuration) = getPauseConfiguration();\r\n\r\n        LinearPool pool = AaveLinearPool(\r\n            _create(\r\n                abi.encode(\r\n                    getVault(),\r\n                    name,\r\n                    symbol,\r\n                    mainToken,\r\n                    wrappedToken,\r\n                    upperTarget,\r\n                    swapFeePercentage,\r\n                    pauseWindowDuration,\r\n                    bufferPeriodDuration,\r\n                    getDefaultPoolOwner()\r\n                )\r\n            )\r\n        );\r\n\r\n        // LinearPools have a separate post-construction initialization step: we perform it here to\r\n        // ensure deployment and initialization are atomic.\r\n        pool.initialize();\r\n\r\n        return pool;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\npragma solidity ^0.7.0;\r\n\r\n\r\n/**\r\n * @dev Library used to deploy contracts with specific code. This can be used for long-term storage of immutable data as\r\n * contract code, which can be retrieved via the `extcodecopy` opcode.\r\n */\r\nlibrary CodeDeployer {\r\n    // During contract construction, the full code supplied exists as code, and can be accessed via `codesize` and\r\n    // `codecopy`. This is not the contract's final code however: whatever the constructor returns is what will be\r\n    // stored as its code.\r\n    //\r\n    // We use this mechanism to have a simple constructor that stores whatever is appended to it. The following opcode\r\n    // sequence corresponds to the creation code of the following equivalent Solidity contract, plus padding to make the\r\n    // full code 32 bytes long:\r\n    //\r\n    // contract CodeDeployer {\r\n    //     constructor() payable {\r\n    //         uint256 size;\r\n    //         assembly {\r\n    //             size := sub(codesize(), 32) // size of appended data, as constructor is 32 bytes long\r\n    //             codecopy(0, 32, size) // copy all appended data to memory at position 0\r\n    //             return(0, size) // return appended data for it to be stored as code\r\n    //         }\r\n    //     }\r\n    // }\r\n    //\r\n    // More specifically, it is composed of the following opcodes (plus padding):\r\n    //\r\n    // [1] PUSH1 0x20\r\n    // [2] CODESIZE\r\n    // [3] SUB\r\n    // [4] DUP1\r\n    // [6] PUSH1 0x20\r\n    // [8] PUSH1 0x00\r\n    // [9] CODECOPY\r\n    // [11] PUSH1 0x00\r\n    // [12] RETURN\r\n    //\r\n    // The padding is just the 0xfe sequence (invalid opcode).\r\n    bytes32\r\n        private constant _DEPLOYER_CREATION_CODE = 0x602038038060206000396000f3fefefefefefefefefefefefefefefefefefefe;\r\n\r\n    /**\r\n     * @dev Deploys a contract with `code` as its code, returning the destination address.\r\n     *\r\n     * Reverts if deployment fails.\r\n     */\r\n    function deploy(bytes memory code) internal returns (address destination) {\r\n        bytes32 deployerCreationCode = _DEPLOYER_CREATION_CODE;\r\n\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            let codeLength := mload(code)\r\n\r\n            // `code` is composed of length and data. We've already stored its length in `codeLength`, so we simply\r\n            // replace it with the deployer creation code (which is exactly 32 bytes long).\r\n            mstore(code, deployerCreationCode)\r\n\r\n            // At this point, `code` now points to the deployer creation code immediately followed by `code`'s data\r\n            // contents. This is exactly what the deployer expects to receive when created.\r\n            destination := create(0, code, add(codeLength, 32))\r\n\r\n            // Finally, we restore the original length in order to not mutate `code`.\r\n            mstore(code, codeLength)\r\n        }\r\n\r\n        // The create opcode returns the zero address when contract creation fails, so we revert if this happens.\r\n        _require(destination != address(0), Errors.CODE_DEPLOYMENT_FAILED);\r\n    }\r\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"6321","formattedMessage":"contracts/AaveLinearPoolFactory.sol:2060:30: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n    ) internal view returns (uint256) {\n                             ^-----^\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":85759,"file":"contracts/AaveLinearPoolFactory.sol","start":85752},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"contracts/AaveLinearPoolFactory.sol:2128:30: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n    ) internal view returns (uint256) {\n                             ^-----^\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":88543,"file":"contracts/AaveLinearPoolFactory.sol","start":88536},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"contracts/AaveLinearPoolFactory.sol:2227:13: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n            uint256,\n            ^-----^\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":92350,"file":"contracts/AaveLinearPoolFactory.sol","start":92343},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"contracts/AaveLinearPoolFactory.sol:2228:13: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n            uint256[] memory,\n            ^--------------^\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":92381,"file":"contracts/AaveLinearPoolFactory.sol","start":92365},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"contracts/AaveLinearPoolFactory.sol:2229:13: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n            uint256[] memory\n            ^--------------^\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":92412,"file":"contracts/AaveLinearPoolFactory.sol","start":92396},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"contracts/AaveLinearPoolFactory.sol:2317:83: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n    function _scalingFactor(IERC20 token) internal view virtual override returns (uint256) {\n                                                                                  ^-----^\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":96083,"file":"contracts/AaveLinearPoolFactory.sol","start":96076},"type":"Warning"}],"sources":{"contracts/AaveLinearPoolFactory.sol":{"ast":{"absolutePath":"contracts/AaveLinearPoolFactory.sol","exportedSymbols":{"AaveLinearPool":[4336],"AaveLinearPoolFactory":[10195],"Authentication":[193],"BalancerPoolToken":[1315],"BasePool":[2691],"BasePoolAuthorization":[282],"BasePoolSplitCodeFactory":[10058],"BaseSplitCodeFactory":[9961],"CodeDeployer":[10226],"EIP712":[409],"ERC20":[960],"ERC20Permit":[1109],"Errors":[4806],"FactoryWidePauseWindow":[10118],"FixedPoint":[5377],"IAsset":[6431],"IAssetManager":[9562],"IAuthentication":[119],"IAuthorizer":[9665],"IBasePool":[90],"IERC20":[486],"IERC20Permit":[317],"IFlashLoanRecipient":[9682],"IGeneralPool":[109],"ILendingPool":[4366],"IPoolSwapStructs":[30],"IProtocolFeesCollector":[9742],"IRateProvider":[9],"ISignaturesValidator":[9031],"IStaticAToken":[4356],"ITemporarilyPausable":[1333],"IVault":[9483],"IWETH":[9651],"InputHelpers":[8146],"LinearMath":[6389],"LinearPool":[4244],"LinearPoolUserData":[6428],"LogExpMath":[7727],"Math":[8037],"PriceRateCache":[5524],"SafeMath":[9638],"TemporarilyPausable":[1523],"WordCodec":[9014],"_asIAsset":[4818],"_getSortedTokenIndexes":[5038],"_insertSorted":[4964],"_require":[4383],"_revert":[4391],"_sortTokens":[4869]},"id":10227,"license":"GPL-3.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"702:23:0"},{"id":2,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"727:33:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9,"linearizedBaseContracts":[9],"name":"IRateProvider","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"801:194:0","text":" @dev Returns an 18 decimal fixed point number that is the exchange rate of the token to some other underlying\n token. The meaning of this rate depends on the context."},"functionSelector":"679aefce","id":8,"implemented":false,"kind":"function","modifiers":[],"name":"getRate","nodeType":"FunctionDefinition","parameters":{"id":4,"nodeType":"ParameterList","parameters":[],"src":"1017:2:0"},"returnParameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8,"src":"1043:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:9:0"},"scope":9,"src":"1001:51:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10227,"src":"768:287:0"},{"id":10,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"1061:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":30,"linearizedBaseContracts":[30],"name":"IPoolSwapStructs","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPoolSwapStructs.SwapRequest","id":29,"members":[{"constant":false,"id":12,"mutability":"mutable","name":"kind","nodeType":"VariableDeclaration","scope":29,"src":"2649:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$9307","typeString":"enum IVault.SwapKind"},"typeName":{"id":11,"name":"IVault.SwapKind","nodeType":"UserDefinedTypeName","referencedDeclaration":9307,"src":"2649:15:0","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$9307","typeString":"enum IVault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":14,"mutability":"mutable","name":"tokenIn","nodeType":"VariableDeclaration","scope":29,"src":"2680:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":13,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"2680:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":16,"mutability":"mutable","name":"tokenOut","nodeType":"VariableDeclaration","scope":29,"src":"2705:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":15,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"2705:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":29,"src":"2731:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"2731:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":29,"src":"2778:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2778:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":22,"mutability":"mutable","name":"lastChangeBlock","nodeType":"VariableDeclaration","scope":29,"src":"2803:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":21,"name":"uint256","nodeType":"ElementaryTypeName","src":"2803:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":29,"src":"2837:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"2837:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":29,"src":"2860:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"2860:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":29,"src":"2881:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":27,"name":"bytes","nodeType":"ElementaryTypeName","src":"2881:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SwapRequest","nodeType":"StructDefinition","scope":30,"src":"2619:284:0","visibility":"public"}],"scope":10227,"src":"1090:1816:0"},{"id":31,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"2914:23:0"},{"abstract":false,"baseContracts":[{"baseName":{"id":33,"name":"IPoolSwapStructs","nodeType":"UserDefinedTypeName","referencedDeclaration":30,"src":"3254:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolSwapStructs_$30","typeString":"contract IPoolSwapStructs"}},"id":34,"nodeType":"InheritanceSpecifier","src":"3254:16:0"}],"contractDependencies":[30],"contractKind":"interface","documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"2941:288:0","text":" @dev Interface for adding and removing liquidity that all Pool contracts should implement. Note that this is not\n the complete Pool contract interface, as it is missing the swap hooks. Pool contracts should also inherit from\n either IGeneralPool or IMinimalSwapInfoPool"},"fullyImplemented":false,"id":90,"linearizedBaseContracts":[90,30],"name":"IBasePool","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"3278:1510:0","text":" @dev Called by the Vault when a user calls `IVault.joinPool` to add liquidity to this Pool. Returns how many of\n each registered token the user should provide, as well as the amount of protocol fees the Pool owes to the Vault.\n The Vault will then take tokens from `sender` and add them to the Pool's balances, as well as collect\n the reported amount in protocol fees, which the pool should calculate based on `protocolSwapFeePercentage`.\n Protocol fees are reported and charged on join events so that the Pool is free of debt whenever new users join.\n `sender` is the account performing the join (from which tokens will be withdrawn), and `recipient` is the account\n designated to receive any benefits (typically pool shares). `balances` contains the total balances\n for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return.\n `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total\n balance.\n `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of\n join (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.)\n Contracts implementing this function should check that the caller is indeed the Vault before performing any\n state-changing operations, such as minting pool shares."},"functionSelector":"d5c096c4","id":59,"implemented":false,"kind":"function","modifiers":[],"name":"onJoinPool","nodeType":"FunctionDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":59,"src":"4824:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":36,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4824:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":59,"src":"4849:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"4849:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":59,"src":"4874:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":40,"name":"address","nodeType":"ElementaryTypeName","src":"4874:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":59,"src":"4902:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":42,"name":"uint256","nodeType":"ElementaryTypeName","src":"4902:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":43,"nodeType":"ArrayTypeName","src":"4902:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":46,"mutability":"mutable","name":"lastChangeBlock","nodeType":"VariableDeclaration","scope":59,"src":"4938:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45,"name":"uint256","nodeType":"ElementaryTypeName","src":"4938:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":48,"mutability":"mutable","name":"protocolSwapFeePercentage","nodeType":"VariableDeclaration","scope":59,"src":"4972:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47,"name":"uint256","nodeType":"ElementaryTypeName","src":"4972:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":50,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":59,"src":"5016:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":49,"name":"bytes","nodeType":"ElementaryTypeName","src":"5016:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4813:231:0"},"returnParameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":54,"mutability":"mutable","name":"amountsIn","nodeType":"VariableDeclaration","scope":59,"src":"5063:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":53,"nodeType":"ArrayTypeName","src":"5063:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"dueProtocolFeeAmounts","nodeType":"VariableDeclaration","scope":59,"src":"5091:38:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":55,"name":"uint256","nodeType":"ElementaryTypeName","src":"5091:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":56,"nodeType":"ArrayTypeName","src":"5091:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5062:68:0"},"scope":90,"src":"4794:337:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":60,"nodeType":"StructuredDocumentation","src":"5139:1511:0","text":" @dev Called by the Vault when a user calls `IVault.exitPool` to remove liquidity from this Pool. Returns how many\n tokens the Vault should deduct from the Pool's balances, as well as the amount of protocol fees the Pool owes\n to the Vault. The Vault will then take tokens from the Pool's balances and send them to `recipient`,\n as well as collect the reported amount in protocol fees, which the Pool should calculate based on\n `protocolSwapFeePercentage`.\n Protocol fees are charged on exit events to guarantee that users exiting the Pool have paid their share.\n `sender` is the account performing the exit (typically the pool shareholder), and `recipient` is the account\n to which the Vault will send the proceeds. `balances` contains the total token balances for each token\n the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return.\n `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total\n balance.\n `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of\n exit (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.)\n Contracts implementing this function should check that the caller is indeed the Vault before performing any\n state-changing operations, such as burning pool shares."},"functionSelector":"74f3b009","id":84,"implemented":false,"kind":"function","modifiers":[],"name":"onExitPool","nodeType":"FunctionDefinition","parameters":{"id":76,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":84,"src":"6686:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":61,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6686:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":64,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":84,"src":"6711:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"6711:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":66,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":84,"src":"6736:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65,"name":"address","nodeType":"ElementaryTypeName","src":"6736:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":84,"src":"6764:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":67,"name":"uint256","nodeType":"ElementaryTypeName","src":"6764:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":68,"nodeType":"ArrayTypeName","src":"6764:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":71,"mutability":"mutable","name":"lastChangeBlock","nodeType":"VariableDeclaration","scope":84,"src":"6800:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint256","nodeType":"ElementaryTypeName","src":"6800:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":73,"mutability":"mutable","name":"protocolSwapFeePercentage","nodeType":"VariableDeclaration","scope":84,"src":"6834:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":72,"name":"uint256","nodeType":"ElementaryTypeName","src":"6834:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":84,"src":"6878:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":74,"name":"bytes","nodeType":"ElementaryTypeName","src":"6878:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6675:231:0"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"amountsOut","nodeType":"VariableDeclaration","scope":84,"src":"6925:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":77,"name":"uint256","nodeType":"ElementaryTypeName","src":"6925:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":78,"nodeType":"ArrayTypeName","src":"6925:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":82,"mutability":"mutable","name":"dueProtocolFeeAmounts","nodeType":"VariableDeclaration","scope":84,"src":"6954:38:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":80,"name":"uint256","nodeType":"ElementaryTypeName","src":"6954:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":81,"nodeType":"ArrayTypeName","src":"6954:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6924:69:0"},"scope":90,"src":"6656:338:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"38fff2d0","id":89,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolId","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"7020:2:0"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":89,"src":"7046:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":86,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7046:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7045:9:0"},"scope":90,"src":"7002:53:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10227,"src":"3231:3827:0"},{"id":91,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"7064:23:0"},{"abstract":false,"baseContracts":[{"baseName":{"id":93,"name":"IBasePool","nodeType":"UserDefinedTypeName","referencedDeclaration":90,"src":"7737:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_IBasePool_$90","typeString":"contract IBasePool"}},"id":94,"nodeType":"InheritanceSpecifier","src":"7737:9:0"}],"contractDependencies":[30,90],"contractKind":"interface","documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"7093:616:0","text":" @dev IPools with the General specialization setting should implement this interface.\n This is called by the Vault when a user calls `IVault.swap` or `IVault.batchSwap` to swap with this Pool.\n Returns the number of tokens the Pool will grant to the user in a 'given in' swap, or that the user will\n grant to the pool in a 'given out' swap.\n This can often be implemented by a `view` function, since many pricing algorithms don't need to track state\n changes in swaps. However, contracts implementing this in non-view functions should check that the caller is\n indeed the Vault."},"fullyImplemented":false,"id":109,"linearizedBaseContracts":[109,90,30],"name":"IGeneralPool","nodeType":"ContractDefinition","nodes":[{"functionSelector":"01ec954a","id":108,"implemented":false,"kind":"function","modifiers":[],"name":"onSwap","nodeType":"FunctionDefinition","parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"swapRequest","nodeType":"VariableDeclaration","scope":108,"src":"7780:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest"},"typeName":{"id":95,"name":"SwapRequest","nodeType":"UserDefinedTypeName","referencedDeclaration":29,"src":"7780:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_storage_ptr","typeString":"struct IPoolSwapStructs.SwapRequest"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":108,"src":"7821:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":97,"name":"uint256","nodeType":"ElementaryTypeName","src":"7821:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":98,"nodeType":"ArrayTypeName","src":"7821:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":101,"mutability":"mutable","name":"indexIn","nodeType":"VariableDeclaration","scope":108,"src":"7857:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100,"name":"uint256","nodeType":"ElementaryTypeName","src":"7857:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"indexOut","nodeType":"VariableDeclaration","scope":108,"src":"7883:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"7883:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7769:137:0"},"returnParameters":{"id":107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":108,"src":"7925:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":105,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7924:16:0"},"scope":109,"src":"7754:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10227,"src":"7711:233:0"},{"id":110,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"7948:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":119,"linearizedBaseContracts":[119],"name":"IAuthentication","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":111,"nodeType":"StructuredDocumentation","src":"8008:118:0","text":" @dev Returns the action identifier associated with the external function described by `selector`."},"functionSelector":"851c1bb3","id":118,"implemented":false,"kind":"function","modifiers":[],"name":"getActionId","nodeType":"FunctionDefinition","parameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"selector","nodeType":"VariableDeclaration","scope":118,"src":"8153:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":112,"name":"bytes4","nodeType":"ElementaryTypeName","src":"8153:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"8152:17:0"},"returnParameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":116,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":118,"src":"8193:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8193:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8192:9:0"},"scope":119,"src":"8132:70:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10227,"src":"7975:230:0"},{"id":120,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"8213:23:0"},{"abstract":true,"baseContracts":[{"baseName":{"id":122,"name":"IAuthentication","nodeType":"UserDefinedTypeName","referencedDeclaration":119,"src":"8676:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthentication_$119","typeString":"contract IAuthentication"}},"id":123,"nodeType":"InheritanceSpecifier","src":"8676:15:0"}],"contractDependencies":[119],"contractKind":"contract","documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"8238:400:0","text":" @dev Building block for performing access control on external functions.\n This contract is used via the `authenticate` modifier (or the `_authenticateCaller` function), which can be applied\n to external functions to only make them callable by authorized accounts.\n Derived contracts must implement the `_canPerform` function, which holds the actual access control logic."},"fullyImplemented":false,"id":193,"linearizedBaseContracts":[193,119],"name":"Authentication","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":125,"mutability":"immutable","name":"_actionIdDisambiguator","nodeType":"VariableDeclaration","scope":193,"src":"8699:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8699:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":135,"nodeType":"Block","src":"9401:65:0","statements":[{"expression":{"id":133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":131,"name":"_actionIdDisambiguator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"9412:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":132,"name":"actionIdDisambiguator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"9437:21:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9412:46:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":134,"nodeType":"ExpressionStatement","src":"9412:46:0"}]},"documentation":{"id":126,"nodeType":"StructuredDocumentation","src":"8756:596:0","text":" @dev The main purpose of the `actionIdDisambiguator` is to prevent accidental function selector collisions in\n multi contract systems.\n There are two main uses for it:\n  - if the contract is a singleton, any unique identifier can be used to make the associated action identifiers\n    unique. The contract's own address is a good option.\n  - if the contract belongs to a family that shares action identifiers for the same functions, an identifier\n    shared by the entire family (and no other contract) should be used instead."},"id":136,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"actionIdDisambiguator","nodeType":"VariableDeclaration","scope":136,"src":"9370:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9370:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9369:31:0"},"returnParameters":{"id":130,"nodeType":"ParameterList","parameters":[],"src":"9401:0:0"},"scope":193,"src":"9358:108:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":143,"nodeType":"Block","src":"9635:52:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":139,"name":"_authenticateCaller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"9646:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9646:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":141,"nodeType":"ExpressionStatement","src":"9646:21:0"},{"id":142,"nodeType":"PlaceholderStatement","src":"9678:1:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"9474:131:0","text":" @dev Reverts unless the caller is allowed to call this function. Should only be applied to external functions."},"id":144,"name":"authenticate","nodeType":"ModifierDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[],"src":"9632:2:0"},"src":"9611:76:0","virtual":false,"visibility":"internal"},{"body":{"id":165,"nodeType":"Block","src":"9842:139:0","statements":[{"assignments":[149],"declarations":[{"constant":false,"id":149,"mutability":"mutable","name":"actionId","nodeType":"VariableDeclaration","scope":165,"src":"9853:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9853:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":154,"initialValue":{"arguments":[{"expression":{"id":151,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9884:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sig","nodeType":"MemberAccess","src":"9884:7:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":150,"name":"getActionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"9872:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bytes32_$","typeString":"function (bytes4) view returns (bytes32)"}},"id":153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9872:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9853:39:0"},{"expression":{"arguments":[{"arguments":[{"id":157,"name":"actionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"9924:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":158,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9934:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9934:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":156,"name":"_canPerform","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"9912:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9912:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":161,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"9947:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SENDER_NOT_ALLOWED","nodeType":"MemberAccess","referencedDeclaration":4613,"src":"9947:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":155,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"9903:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9903:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"9903:70:0"}]},"documentation":{"id":145,"nodeType":"StructuredDocumentation","src":"9695:96:0","text":" @dev Reverts unless the caller is allowed to call the entry point function."},"id":166,"implemented":true,"kind":"function","modifiers":[],"name":"_authenticateCaller","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[],"src":"9825:2:0"},"returnParameters":{"id":147,"nodeType":"ParameterList","parameters":[],"src":"9842:0:0"},"scope":193,"src":"9797:184:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[118],"body":{"id":182,"nodeType":"Block","src":"10066:358:0","statements":[{"expression":{"arguments":[{"arguments":[{"id":177,"name":"_actionIdDisambiguator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"10382:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":178,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"10406:8:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":175,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10365:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"10365:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10365:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":174,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10355:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10355:61:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":173,"id":181,"nodeType":"Return","src":"10348:68:0"}]},"functionSelector":"851c1bb3","id":183,"implemented":true,"kind":"function","modifiers":[],"name":"getActionId","nodeType":"FunctionDefinition","overrides":{"id":170,"nodeType":"OverrideSpecifier","overrides":[],"src":"10039:8:0"},"parameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"selector","nodeType":"VariableDeclaration","scope":183,"src":"10010:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":167,"name":"bytes4","nodeType":"ElementaryTypeName","src":"10010:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"10009:17:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":183,"src":"10057:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":171,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10057:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10056:9:0"},"scope":193,"src":"9989:435:0","stateMutability":"view","virtual":false,"visibility":"public"},{"id":192,"implemented":false,"kind":"function","modifiers":[],"name":"_canPerform","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"actionId","nodeType":"VariableDeclaration","scope":192,"src":"10453:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10453:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":192,"src":"10471:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"10471:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10452:32:0"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":192,"src":"10516:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"10516:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10515:6:0"},"scope":193,"src":"10432:90:0","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":10227,"src":"8640:1885:0"},{"id":194,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"10535:23:0"},{"abstract":true,"baseContracts":[{"baseName":{"id":196,"name":"Authentication","nodeType":"UserDefinedTypeName","referencedDeclaration":193,"src":"11241:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_Authentication_$193","typeString":"contract Authentication"}},"id":197,"nodeType":"InheritanceSpecifier","src":"11241:14:0"}],"contractDependencies":[119,193],"contractKind":"contract","documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"10562:634:0","text":" @dev Base authorization layer implementation for Pools.\n The owner account can call some of the permissioned functions - access control of the rest is delegated to the\n Authorizer. Note that this owner is immutable: more sophisticated permission schemes, such as multiple ownership,\n granular roles, etc., could be built on top of this by making the owner a smart contract.\n Access control of all other permissioned functions is delegated to an Authorizer. It is also possible to delegate\n control of *all* permissioned functions to the Authorizer by setting the owner address to `_DELEGATE_OWNER`."},"fullyImplemented":false,"id":282,"linearizedBaseContracts":[282,193,119],"name":"BasePoolAuthorization","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":199,"mutability":"immutable","name":"_owner","nodeType":"VariableDeclaration","scope":282,"src":"11263:32:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"11263:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"id":202,"mutability":"constant","name":"_DELEGATE_OWNER","nodeType":"VariableDeclaration","scope":282,"src":"11304:85:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"11304:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307842413142413162613142413162413162413142613142413162613142413162413162613162613142","id":201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11347:42:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"value":"0xBA1BA1ba1BA1bA1bA1Ba1BA1ba1BA1bA1ba1ba1B"},"visibility":"private"},{"body":{"id":211,"nodeType":"Block","src":"11425:33:0","statements":[{"expression":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":207,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"11436:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":208,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"11445:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11436:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":210,"nodeType":"ExpressionStatement","src":"11436:14:0"}]},"id":212,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":212,"src":"11410:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"11410:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11409:15:0"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[],"src":"11425:0:0"},"scope":282,"src":"11398:60:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":219,"nodeType":"Block","src":"11516:32:0","statements":[{"expression":{"id":217,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"11534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":216,"id":218,"nodeType":"Return","src":"11527:13:0"}]},"functionSelector":"893d20e8","id":220,"implemented":true,"kind":"function","modifiers":[],"name":"getOwner","nodeType":"FunctionDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"11483:2:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":220,"src":"11507:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"11507:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11506:9:0"},"scope":282,"src":"11466:82:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":228,"nodeType":"Block","src":"11617:42:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getAuthorizer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"11635:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IAuthorizer_$9665_$","typeString":"function () view returns (contract IAuthorizer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11635:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$9665","typeString":"contract IAuthorizer"}},"functionReturnParameters":224,"id":227,"nodeType":"Return","src":"11628:23:0"}]},"functionSelector":"aaabadc5","id":229,"implemented":true,"kind":"function","modifiers":[],"name":"getAuthorizer","nodeType":"FunctionDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"11578:2:0"},"returnParameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":229,"src":"11604:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$9665","typeString":"contract IAuthorizer"},"typeName":{"id":222,"name":"IAuthorizer","nodeType":"UserDefinedTypeName","referencedDeclaration":9665,"src":"11604:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$9665","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"11603:13:0"},"scope":282,"src":"11556:103:0","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[192],"body":{"id":268,"nodeType":"Block","src":"11761:458:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":239,"name":"getOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"11777:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11777:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":241,"name":"_DELEGATE_OWNER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"11791:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11777:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":243,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11776:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":245,"name":"actionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"11830:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"_isOwnerOnlyAction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"11811:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) view returns (bool)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11811:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11776:63:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":266,"nodeType":"Block","src":"12001:211:0","statements":[{"expression":{"arguments":[{"id":258,"name":"actionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"12167:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":259,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"12177:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":262,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12194:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BasePoolAuthorization_$282","typeString":"contract BasePoolAuthorization"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePoolAuthorization_$282","typeString":"contract BasePoolAuthorization"}],"id":261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12186:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"12186:7:0","typeDescriptions":{}}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12186:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":255,"name":"_getAuthorizer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"12139:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IAuthorizer_$9665_$","typeString":"function () view returns (contract IAuthorizer)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12139:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$9665","typeString":"contract IAuthorizer"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"canPerform","nodeType":"MemberAccess","referencedDeclaration":9664,"src":"12139:27:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address,address) view external returns (bool)"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12139:61:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":238,"id":265,"nodeType":"Return","src":"12132:68:0"}]},"id":267,"nodeType":"IfStatement","src":"11772:440:0","trueBody":{"id":254,"nodeType":"Block","src":"11841:154:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":248,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11959:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11959:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":250,"name":"getOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"11973:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11973:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11959:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":238,"id":253,"nodeType":"Return","src":"11952:31:0"}]}}]},"id":269,"implemented":true,"kind":"function","modifiers":[],"name":"_canPerform","nodeType":"FunctionDefinition","overrides":{"id":235,"nodeType":"OverrideSpecifier","overrides":[],"src":"11737:8:0"},"parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"actionId","nodeType":"VariableDeclaration","scope":269,"src":"11688:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11688:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":269,"src":"11706:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":232,"name":"address","nodeType":"ElementaryTypeName","src":"11706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11687:35:0"},"returnParameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":269,"src":"11755:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":236,"name":"bool","nodeType":"ElementaryTypeName","src":"11755:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11754:6:0"},"scope":282,"src":"11667:552:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"id":276,"implemented":false,"kind":"function","modifiers":[],"name":"_isOwnerOnlyAction","nodeType":"FunctionDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"actionId","nodeType":"VariableDeclaration","scope":276,"src":"12255:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12255:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12254:18:0"},"returnParameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":276,"src":"12304:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":273,"name":"bool","nodeType":"ElementaryTypeName","src":"12304:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12303:6:0"},"scope":282,"src":"12227:83:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"id":281,"implemented":false,"kind":"function","modifiers":[],"name":"_getAuthorizer","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[],"src":"12341:2:0"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":281,"src":"12375:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$9665","typeString":"contract IAuthorizer"},"typeName":{"id":278,"name":"IAuthorizer","nodeType":"UserDefinedTypeName","referencedDeclaration":9665,"src":"12375:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$9665","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"12374:13:0"},"scope":282,"src":"12318:70:0","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":10227,"src":"11198:1193:0"},{"id":283,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"12397:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"12424:489:0","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":317,"linearizedBaseContracts":[317],"name":"IERC20Permit","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"12945:808:0","text":" @dev Sets `value` as the allowance of `spender` over `owner`'s tokens,\n given `owner`'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":302,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":302,"src":"13785:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"13785:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":302,"src":"13809:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"13809:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":291,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":302,"src":"13835:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"13835:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":293,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":302,"src":"13859:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":292,"name":"uint256","nodeType":"ElementaryTypeName","src":"13859:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":302,"src":"13886:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":294,"name":"uint8","nodeType":"ElementaryTypeName","src":"13886:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":302,"src":"13904:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13904:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":302,"src":"13924:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13924:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13774:166:0"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"13949:0:0"},"scope":317,"src":"13759:191:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"13958:300:0","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":310,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nodeType":"FunctionDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":310,"src":"14280:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"14280:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14279:15:0"},"returnParameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":308,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":310,"src":"14318:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":307,"name":"uint256","nodeType":"ElementaryTypeName","src":"14318:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14317:9:0"},"scope":317,"src":"14264:63:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":311,"nodeType":"StructuredDocumentation","src":"14335:130:0","text":" @dev Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}."},"functionSelector":"3644e515","id":316,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nodeType":"FunctionDefinition","parameters":{"id":312,"nodeType":"ParameterList","parameters":[],"src":"14550:2:0"},"returnParameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":314,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":316,"src":"14576:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14576:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14575:9:0"},"scope":317,"src":"14525:60:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10227,"src":"12915:1673:0"},{"id":318,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"14596:23:0"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"14623:1160:0","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n _Available since v3.4._"},"fullyImplemented":true,"id":409,"linearizedBaseContracts":[409],"name":"EIP712","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":321,"mutability":"immutable","name":"_HASHED_NAME","nodeType":"VariableDeclaration","scope":409,"src":"15863:38:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15863:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":323,"mutability":"immutable","name":"_HASHED_VERSION","nodeType":"VariableDeclaration","scope":409,"src":"15908:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15908:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":325,"mutability":"immutable","name":"_TYPE_HASH","nodeType":"VariableDeclaration","scope":409,"src":"15956:36:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15956:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":357,"nodeType":"Block","src":"16679:229:0","statements":[{"expression":{"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":333,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"16690:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":337,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"16721:4:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16715:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":335,"name":"bytes","nodeType":"ElementaryTypeName","src":"16715:5:0","typeDescriptions":{}}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16715:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":334,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16705:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16705:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16690:37:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":341,"nodeType":"ExpressionStatement","src":"16690:37:0"},{"expression":{"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":342,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"16738:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":346,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"16772:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16766:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":344,"name":"bytes","nodeType":"ElementaryTypeName","src":"16766:5:0","typeDescriptions":{}}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16766:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":343,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16756:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16756:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16738:43:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":350,"nodeType":"ExpressionStatement","src":"16738:43:0"},{"expression":{"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":351,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"16792:10:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16815:84:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":352,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16805:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16805:95:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16792:108:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":356,"nodeType":"ExpressionStatement","src":"16792:108:0"}]},"documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"16048:570:0","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":358,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":358,"src":"16636:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":327,"name":"string","nodeType":"ElementaryTypeName","src":"16636:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"version","nodeType":"VariableDeclaration","scope":358,"src":"16656:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":329,"name":"string","nodeType":"ElementaryTypeName","src":"16656:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16635:43:0"},"returnParameters":{"id":332,"nodeType":"ParameterList","parameters":[],"src":"16679:0:0"},"scope":409,"src":"16624:284:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":379,"nodeType":"Block","src":"17069:120:0","statements":[{"expression":{"arguments":[{"arguments":[{"id":367,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"17108:10:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":368,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"17120:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":369,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"17134:15:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":370,"name":"_getChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"17151:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17151:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":374,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17174:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$409","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$409","typeString":"contract EIP712"}],"id":373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17166:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":372,"name":"address","nodeType":"ElementaryTypeName","src":"17166:7:0","typeDescriptions":{}}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17166:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":365,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"17097:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"17097:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17097:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":364,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"17087:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17087:94:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":363,"id":378,"nodeType":"Return","src":"17080:101:0"}]},"documentation":{"id":359,"nodeType":"StructuredDocumentation","src":"16916:77:0","text":" @dev Returns the domain separator for the current chain."},"id":380,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nodeType":"FunctionDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"17026:2:0"},"returnParameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":362,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":380,"src":"17060:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":361,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17060:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17059:9:0"},"scope":409,"src":"16999:190:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":398,"nodeType":"Block","src":"17917:99:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17962:10:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"arguments":[],"expression":{"argumentTypes":[],"id":392,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"17974:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17974:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":394,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"17996:10:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":389,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"17945:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"17945:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17945:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":388,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"17935:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17935:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":387,"id":397,"nodeType":"Return","src":"17928:80:0"}]},"documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"17197:628:0","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":399,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nodeType":"FunctionDefinition","parameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"structHash","nodeType":"VariableDeclaration","scope":399,"src":"17857:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":382,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17857:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17856:20:0"},"returnParameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":399,"src":"17908:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17908:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17907:9:0"},"scope":409,"src":"17831:185:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":407,"nodeType":"Block","src":"18086:375:0","statements":[{"expression":{"id":404,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"18325:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$409","typeString":"contract EIP712"}},"id":405,"nodeType":"ExpressionStatement","src":"18325:4:0"},{"AST":{"nodeType":"YulBlock","src":"18408:46:0","statements":[{"nodeType":"YulAssignment","src":"18423:20:0","value":{"arguments":[],"functionName":{"name":"chainid","nodeType":"YulIdentifier","src":"18434:7:0"},"nodeType":"YulFunctionCall","src":"18434:9:0"},"variableNames":[{"name":"chainId","nodeType":"YulIdentifier","src":"18423:7:0"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":402,"isOffset":false,"isSlot":false,"src":"18423:7:0","valueSize":1}],"id":406,"nodeType":"InlineAssembly","src":"18399:55:0"}]},"id":408,"implemented":true,"kind":"function","modifiers":[],"name":"_getChainId","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[],"src":"18044:2:0"},"returnParameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"chainId","nodeType":"VariableDeclaration","scope":408,"src":"18069:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":401,"name":"uint256","nodeType":"ElementaryTypeName","src":"18069:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18068:17:0"},"scope":409,"src":"18024:437:0","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":10227,"src":"15785:2679:0"},{"id":410,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"18470:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"18497:72:0","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":486,"linearizedBaseContracts":[486],"name":"IERC20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"18595:68:0","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":417,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[],"src":"18689:2:0"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":417,"src":"18715:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"18715:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18714:9:0"},"scope":486,"src":"18669:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":418,"nodeType":"StructuredDocumentation","src":"18732:74:0","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":425,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":425,"src":"18831:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"18831:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18830:17:0"},"returnParameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":425,"src":"18871:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"18871:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18870:9:0"},"scope":486,"src":"18812:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":426,"nodeType":"StructuredDocumentation","src":"18888:215:0","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":435,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":435,"src":"19127:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":427,"name":"address","nodeType":"ElementaryTypeName","src":"19127:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":430,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":435,"src":"19146:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"19146:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19126:35:0"},"returnParameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":435,"src":"19180:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":432,"name":"bool","nodeType":"ElementaryTypeName","src":"19180:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19179:6:0"},"scope":486,"src":"19109:77:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"19194:270:0","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":445,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":445,"src":"19489:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":437,"name":"address","nodeType":"ElementaryTypeName","src":"19489:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":445,"src":"19504:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":439,"name":"address","nodeType":"ElementaryTypeName","src":"19504:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19488:32:0"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":445,"src":"19544:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":442,"name":"uint256","nodeType":"ElementaryTypeName","src":"19544:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19543:9:0"},"scope":486,"src":"19470:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"19561:655:0","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":455,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":455,"src":"20239:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"20239:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":455,"src":"20256:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":449,"name":"uint256","nodeType":"ElementaryTypeName","src":"20256:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20238:33:0"},"returnParameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":455,"src":"20290:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":452,"name":"bool","nodeType":"ElementaryTypeName","src":"20290:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20289:6:0"},"scope":486,"src":"20222:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":456,"nodeType":"StructuredDocumentation","src":"20304:304:0","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":467,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":467,"src":"20646:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":457,"name":"address","nodeType":"ElementaryTypeName","src":"20646:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":460,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":467,"src":"20671:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"20671:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":462,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":467,"src":"20699:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":461,"name":"uint256","nodeType":"ElementaryTypeName","src":"20699:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20635:85:0"},"returnParameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":467,"src":"20739:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":464,"name":"bool","nodeType":"ElementaryTypeName","src":"20739:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20738:6:0"},"scope":486,"src":"20614:131:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":468,"nodeType":"StructuredDocumentation","src":"20753:163:0","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":476,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":476,"src":"20937:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"20937:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":472,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":476,"src":"20959:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"20959:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":474,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":476,"src":"20979:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":473,"name":"uint256","nodeType":"ElementaryTypeName","src":"20979:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20936:57:0"},"src":"20922:72:0"},{"anonymous":false,"documentation":{"id":477,"nodeType":"StructuredDocumentation","src":"21002:151:0","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":485,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":485,"src":"21174:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"21174:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":481,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":485,"src":"21197:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"21197:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":483,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":485,"src":"21222:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":482,"name":"uint256","nodeType":"ElementaryTypeName","src":"21222:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21173:63:0"},"src":"21159:78:0"}],"scope":10227,"src":"18571:2669:0"},{"id":487,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"21248:23:0"},{"abstract":false,"baseContracts":[{"baseName":{"id":489,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"22480:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":490,"nodeType":"InheritanceSpecifier","src":"22480:6:0"}],"contractDependencies":[486],"contractKind":"contract","documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"21275:1185:0","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":960,"linearizedBaseContracts":[960,486],"name":"ERC20","nodeType":"ContractDefinition","nodes":[{"id":493,"libraryName":{"id":491,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":9638,"src":"22500:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$9638","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"22494:27:0","typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"22513:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":497,"mutability":"mutable","name":"_balances","nodeType":"VariableDeclaration","scope":960,"src":"22529:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":496,"keyType":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"22537:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"22529:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"22548:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":503,"mutability":"mutable","name":"_allowances","nodeType":"VariableDeclaration","scope":960,"src":"22583:67:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":502,"keyType":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"22591:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"22583:47:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":501,"keyType":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"22610:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"22602:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":500,"name":"uint256","nodeType":"ElementaryTypeName","src":"22621:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":505,"mutability":"mutable","name":"_totalSupply","nodeType":"VariableDeclaration","scope":960,"src":"22659:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":504,"name":"uint256","nodeType":"ElementaryTypeName","src":"22659:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":507,"mutability":"mutable","name":"_name","nodeType":"VariableDeclaration","scope":960,"src":"22696:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":506,"name":"string","nodeType":"ElementaryTypeName","src":"22696:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":509,"mutability":"mutable","name":"_symbol","nodeType":"VariableDeclaration","scope":960,"src":"22723:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":508,"name":"string","nodeType":"ElementaryTypeName","src":"22723:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":511,"mutability":"mutable","name":"_decimals","nodeType":"VariableDeclaration","scope":960,"src":"22752:23:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":510,"name":"uint8","nodeType":"ElementaryTypeName","src":"22752:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"body":{"id":531,"nodeType":"Block","src":"23165:85:0","statements":[{"expression":{"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":519,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"23176:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":520,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"23184:5:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"23176:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":522,"nodeType":"ExpressionStatement","src":"23176:13:0"},{"expression":{"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":523,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"23200:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":524,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"23210:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"23200:17:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":526,"nodeType":"ExpressionStatement","src":"23200:17:0"},{"expression":{"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":527,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"23228:9:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3138","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23240:2:0","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"23228:14:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":530,"nodeType":"ExpressionStatement","src":"23228:14:0"}]},"documentation":{"id":512,"nodeType":"StructuredDocumentation","src":"22784:319:0","text":" @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."},"id":532,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"name_","nodeType":"VariableDeclaration","scope":532,"src":"23121:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":513,"name":"string","nodeType":"ElementaryTypeName","src":"23121:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"symbol_","nodeType":"VariableDeclaration","scope":532,"src":"23142:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":515,"name":"string","nodeType":"ElementaryTypeName","src":"23142:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23120:44:0"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[],"src":"23165:0:0"},"scope":960,"src":"23109:141:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":540,"nodeType":"Block","src":"23372:31:0","statements":[{"expression":{"id":538,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"23390:5:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":537,"id":539,"nodeType":"Return","src":"23383:12:0"}]},"documentation":{"id":533,"nodeType":"StructuredDocumentation","src":"23258:56:0","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":541,"implemented":true,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[],"src":"23333:2:0"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":541,"src":"23357:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":535,"name":"string","nodeType":"ElementaryTypeName","src":"23357:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23356:15:0"},"scope":960,"src":"23320:83:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":549,"nodeType":"Block","src":"23576:33:0","statements":[{"expression":{"id":547,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"23594:7:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":546,"id":548,"nodeType":"Return","src":"23587:14:0"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"23411:105:0","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":550,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"23537:2:0"},"returnParameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":550,"src":"23561:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":544,"name":"string","nodeType":"ElementaryTypeName","src":"23561:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23560:15:0"},"scope":960,"src":"23522:87:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":558,"nodeType":"Block","src":"24295:35:0","statements":[{"expression":{"id":556,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"24313:9:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":555,"id":557,"nodeType":"Return","src":"24306:16:0"}]},"documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"23617:624:0","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":559,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[],"src":"24264:2:0"},"returnParameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":559,"src":"24288:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":553,"name":"uint8","nodeType":"ElementaryTypeName","src":"24288:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"24287:7:0"},"scope":960,"src":"24247:83:0","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[417],"body":{"id":568,"nodeType":"Block","src":"24457:38:0","statements":[{"expression":{"id":566,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"24475:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":565,"id":567,"nodeType":"Return","src":"24468:19:0"}]},"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"24338:51:0","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":569,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","overrides":{"id":562,"nodeType":"OverrideSpecifier","overrides":[],"src":"24430:8:0"},"parameters":{"id":561,"nodeType":"ParameterList","parameters":[],"src":"24415:2:0"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":569,"src":"24448:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint256","nodeType":"ElementaryTypeName","src":"24448:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24447:9:0"},"scope":960,"src":"24395:100:0","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[425],"body":{"id":582,"nodeType":"Block","src":"24633:44:0","statements":[{"expression":{"baseExpression":{"id":578,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"24651:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":580,"indexExpression":{"id":579,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"24661:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24651:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":577,"id":581,"nodeType":"Return","src":"24644:25:0"}]},"documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"24503:49:0","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":583,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","overrides":{"id":574,"nodeType":"OverrideSpecifier","overrides":[],"src":"24606:8:0"},"parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":583,"src":"24577:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"24577:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24576:17:0"},"returnParameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":583,"src":"24624:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"24624:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24623:9:0"},"scope":960,"src":"24558:119:0","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[435],"body":{"id":603,"nodeType":"Block","src":"24982:81:0","statements":[{"expression":{"arguments":[{"expression":{"id":595,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"25003:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"25003:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":597,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"25015:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":598,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"25026:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":594,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"24993:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24993:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":600,"nodeType":"ExpressionStatement","src":"24993:40:0"},{"expression":{"hexValue":"74727565","id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25051:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":593,"id":602,"nodeType":"Return","src":"25044:11:0"}]},"documentation":{"id":584,"nodeType":"StructuredDocumentation","src":"24685:199:0","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":604,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","overrides":{"id":590,"nodeType":"OverrideSpecifier","overrides":[],"src":"24958:8:0"},"parameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":604,"src":"24908:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":585,"name":"address","nodeType":"ElementaryTypeName","src":"24908:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":588,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":604,"src":"24927:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":587,"name":"uint256","nodeType":"ElementaryTypeName","src":"24927:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24907:35:0"},"returnParameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":604,"src":"24976:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":591,"name":"bool","nodeType":"ElementaryTypeName","src":"24976:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24975:6:0"},"scope":960,"src":"24890:173:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[445],"body":{"id":621,"nodeType":"Block","src":"25224:53:0","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":615,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"25242:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":617,"indexExpression":{"id":616,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"25254:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25242:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":619,"indexExpression":{"id":618,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"25261:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25242:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":614,"id":620,"nodeType":"Return","src":"25235:34:0"}]},"documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"25071:49:0","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":622,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","overrides":{"id":611,"nodeType":"OverrideSpecifier","overrides":[],"src":"25197:8:0"},"parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":622,"src":"25145:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"25145:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":622,"src":"25160:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"25160:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25144:32:0"},"returnParameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":613,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":622,"src":"25215:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":612,"name":"uint256","nodeType":"ElementaryTypeName","src":"25215:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25214:9:0"},"scope":960,"src":"25126:151:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[455],"body":{"id":642,"nodeType":"Block","src":"25513:78:0","statements":[{"expression":{"arguments":[{"expression":{"id":634,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"25533:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"25533:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":636,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"25545:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":637,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"25554:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":633,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"25524:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25524:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":639,"nodeType":"ExpressionStatement","src":"25524:37:0"},{"expression":{"hexValue":"74727565","id":640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25579:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":632,"id":641,"nodeType":"Return","src":"25572:11:0"}]},"documentation":{"id":623,"nodeType":"StructuredDocumentation","src":"25285:133:0","text":" @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":643,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","overrides":{"id":629,"nodeType":"OverrideSpecifier","overrides":[],"src":"25489:8:0"},"parameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":643,"src":"25441:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":624,"name":"address","nodeType":"ElementaryTypeName","src":"25441:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":627,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":643,"src":"25458:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":626,"name":"uint256","nodeType":"ElementaryTypeName","src":"25458:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25440:33:0"},"returnParameters":{"id":632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":631,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":643,"src":"25507:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":630,"name":"bool","nodeType":"ElementaryTypeName","src":"25507:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25506:6:0"},"scope":960,"src":"25424:167:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[467],"body":{"id":681,"nodeType":"Block","src":"26219:252:0","statements":[{"expression":{"arguments":[{"id":657,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"26240:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":658,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"26248:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"26259:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":656,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"26230:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26230:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":661,"nodeType":"ExpressionStatement","src":"26230:36:0"},{"expression":{"arguments":[{"id":663,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"26300:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":664,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"26321:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"26321:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"id":673,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"26382:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":674,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"26390:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ERC20_TRANSFER_EXCEEDS_ALLOWANCE","nodeType":"MemberAccess","referencedDeclaration":4652,"src":"26390:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":666,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"26346:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":668,"indexExpression":{"id":667,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"26358:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26346:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":671,"indexExpression":{"expression":{"id":669,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"26366:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"26366:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26346:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":9637,"src":"26346:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26346:84:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":662,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"26277:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26277:164:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"ExpressionStatement","src":"26277:164:0"},{"expression":{"hexValue":"74727565","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"26459:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":655,"id":680,"nodeType":"Return","src":"26452:11:0"}]},"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"25599:468:0","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":682,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","overrides":{"id":652,"nodeType":"OverrideSpecifier","overrides":[],"src":"26195:8:0"},"parameters":{"id":651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":682,"src":"26105:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"26105:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":648,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":682,"src":"26130:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":647,"name":"address","nodeType":"ElementaryTypeName","src":"26130:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":650,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":682,"src":"26158:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":649,"name":"uint256","nodeType":"ElementaryTypeName","src":"26158:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26094:85:0"},"returnParameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":682,"src":"26213:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":653,"name":"bool","nodeType":"ElementaryTypeName","src":"26213:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"26212:6:0"},"scope":960,"src":"26073:398:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":709,"nodeType":"Block","src":"26974:120:0","statements":[{"expression":{"arguments":[{"expression":{"id":693,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"26994:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"26994:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":695,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"27006:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":703,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"27052:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":696,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"27015:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":699,"indexExpression":{"expression":{"id":697,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"27027:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"27027:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27015:23:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":701,"indexExpression":{"id":700,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"27039:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27015:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":9591,"src":"27015:36:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27015:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":692,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"26985:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26985:79:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":706,"nodeType":"ExpressionStatement","src":"26985:79:0"},{"expression":{"hexValue":"74727565","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"27082:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":691,"id":708,"nodeType":"Return","src":"27075:11:0"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"26479:395:0","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":710,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":710,"src":"26907:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"26907:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"addedValue","nodeType":"VariableDeclaration","scope":710,"src":"26924:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"26924:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26906:37:0"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":710,"src":"26968:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":689,"name":"bool","nodeType":"ElementaryTypeName","src":"26968:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"26967:6:0"},"scope":960,"src":"26880:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":739,"nodeType":"Block","src":"27696:220:0","statements":[{"expression":{"arguments":[{"expression":{"id":721,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"27730:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"27730:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":723,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"27755:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":731,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"27814:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":732,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"27831:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ERC20_DECREASED_ALLOWANCE_BELOW_ZERO","nodeType":"MemberAccess","referencedDeclaration":4655,"src":"27831:43:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"baseExpression":{"id":724,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"27777:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":727,"indexExpression":{"expression":{"id":725,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"27789:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"27789:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27777:23:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":729,"indexExpression":{"id":728,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"27801:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27777:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":9637,"src":"27777:36:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27777:98:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":720,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"27707:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27707:179:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":736,"nodeType":"ExpressionStatement","src":"27707:179:0"},{"expression":{"hexValue":"74727565","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"27904:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":719,"id":738,"nodeType":"Return","src":"27897:11:0"}]},"documentation":{"id":711,"nodeType":"StructuredDocumentation","src":"27102:489:0","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":740,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nodeType":"FunctionDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":713,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":740,"src":"27624:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":712,"name":"address","nodeType":"ElementaryTypeName","src":"27624:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":715,"mutability":"mutable","name":"subtractedValue","nodeType":"VariableDeclaration","scope":740,"src":"27641:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"27641:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27623:42:0"},"returnParameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":740,"src":"27690:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":717,"name":"bool","nodeType":"ElementaryTypeName","src":"27690:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"27689:6:0"},"scope":960,"src":"27597:319:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":808,"nodeType":"Block","src":"28527:451:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":751,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"28547:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28565:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28557:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"28557:7:0","typeDescriptions":{}}},"id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28557:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"28547:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":757,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"28569:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ERC20_TRANSFER_FROM_ZERO_ADDRESS","nodeType":"MemberAccess","referencedDeclaration":4634,"src":"28569:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":750,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"28538:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28538:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":760,"nodeType":"ExpressionStatement","src":"28538:71:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":762,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"28629:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28650:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28642:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"28642:7:0","typeDescriptions":{}}},"id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28642:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"28629:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":768,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"28654:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ERC20_TRANSFER_TO_ZERO_ADDRESS","nodeType":"MemberAccess","referencedDeclaration":4637,"src":"28654:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":761,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"28620:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28620:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"ExpressionStatement","src":"28620:72:0"},{"expression":{"arguments":[{"id":773,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"28726:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":774,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"28734:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":775,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"28745:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":772,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"28705:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28705:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":777,"nodeType":"ExpressionStatement","src":"28705:47:0"},{"expression":{"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":778,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"28765:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":780,"indexExpression":{"id":779,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"28775:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"28765:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":785,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"28807:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":786,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"28815:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ERC20_TRANSFER_EXCEEDS_BALANCE","nodeType":"MemberAccess","referencedDeclaration":4658,"src":"28815:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":781,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"28785:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":783,"indexExpression":{"id":782,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"28795:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28785:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":9637,"src":"28785:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28785:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28765:88:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":790,"nodeType":"ExpressionStatement","src":"28765:88:0"},{"expression":{"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":791,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"28864:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":793,"indexExpression":{"id":792,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"28874:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"28864:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":798,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"28912:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":794,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"28887:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":796,"indexExpression":{"id":795,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"28897:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28887:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":9591,"src":"28887:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28887:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28864:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":801,"nodeType":"ExpressionStatement","src":"28864:55:0"},{"eventCall":{"arguments":[{"id":803,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"28944:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":804,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"28952:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":805,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"28963:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":802,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"28935:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28935:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":807,"nodeType":"EmitStatement","src":"28930:40:0"}]},"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"27924:476:0","text":" @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."},"id":809,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":743,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":809,"src":"28435:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"28435:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":745,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":809,"src":"28460:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"28460:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":747,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":809,"src":"28488:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"28488:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28424:85:0"},"returnParameters":{"id":749,"nodeType":"ParameterList","parameters":[],"src":"28527:0:0"},"scope":960,"src":"28406:572:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":853,"nodeType":"Block","src":"29325:235:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29365:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29357:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"29357:7:0","typeDescriptions":{}}},"id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29357:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":822,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"29369:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":823,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"29378:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":817,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"29336:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29336:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":825,"nodeType":"ExpressionStatement","src":"29336:49:0"},{"expression":{"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":826,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"29398:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":829,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"29430:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":827,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"29413:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":9591,"src":"29413:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29413:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29398:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":832,"nodeType":"ExpressionStatement","src":"29398:39:0"},{"expression":{"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":833,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"29448:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":835,"indexExpression":{"id":834,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"29458:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"29448:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":840,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"29492:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":836,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"29469:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":838,"indexExpression":{"id":837,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"29479:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29469:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":9591,"src":"29469:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29469:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29448:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":843,"nodeType":"ExpressionStatement","src":"29448:51:0"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29532:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29524:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"29524:7:0","typeDescriptions":{}}},"id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29524:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":849,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"29536:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":850,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"29545:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":844,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"29515:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29515:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":852,"nodeType":"EmitStatement","src":"29510:42:0"}]},"documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"28986:268:0","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."},"id":854,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":854,"src":"29275:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":811,"name":"address","nodeType":"ElementaryTypeName","src":"29275:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":854,"src":"29292:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"29292:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29274:33:0"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"29325:0:0"},"scope":960,"src":"29260:300:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":911,"nodeType":"Block","src":"29958:353:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":863,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"29978:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29997:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29989:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"29989:7:0","typeDescriptions":{}}},"id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29989:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"29978:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":869,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"30001:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ERC20_BURN_FROM_ZERO_ADDRESS","nodeType":"MemberAccess","referencedDeclaration":4643,"src":"30001:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":862,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"29969:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29969:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":872,"nodeType":"ExpressionStatement","src":"29969:68:0"},{"expression":{"arguments":[{"id":874,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"30071:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30088:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30080:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"30080:7:0","typeDescriptions":{}}},"id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30080:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":879,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"30092:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":873,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"30050:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30050:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":881,"nodeType":"ExpressionStatement","src":"30050:49:0"},{"expression":{"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":882,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"30112:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":884,"indexExpression":{"id":883,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"30122:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"30112:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":889,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"30156:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":890,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"30164:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ERC20_BURN_EXCEEDS_ALLOWANCE","nodeType":"MemberAccess","referencedDeclaration":4661,"src":"30164:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":885,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"30133:9:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":887,"indexExpression":{"id":886,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"30143:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30133:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":9637,"src":"30133:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30133:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30112:88:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":894,"nodeType":"ExpressionStatement","src":"30112:88:0"},{"expression":{"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":895,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"30211:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":898,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"30243:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":896,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"30226:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":9609,"src":"30226:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30226:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30211:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":901,"nodeType":"ExpressionStatement","src":"30211:39:0"},{"eventCall":{"arguments":[{"id":903,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"30275:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30292:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30284:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"30284:7:0","typeDescriptions":{}}},"id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30284:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":908,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"30296:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":902,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"30266:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30266:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":910,"nodeType":"EmitStatement","src":"30261:42:0"}]},"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"29568:319:0","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":912,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":912,"src":"29908:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"29908:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":912,"src":"29925:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"29925:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29907:33:0"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[],"src":"29958:0:0"},"scope":960,"src":"29893:418:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":936,"nodeType":"Block","src":"30866:103:0","statements":[{"expression":{"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":922,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"30877:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":925,"indexExpression":{"id":923,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"30889:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30877:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":926,"indexExpression":{"id":924,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"30896:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"30877:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":927,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"30907:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30877:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":929,"nodeType":"ExpressionStatement","src":"30877:36:0"},{"eventCall":{"arguments":[{"id":931,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"30938:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":932,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"30945:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":933,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"30954:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":930,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"30929:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30929:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":935,"nodeType":"EmitStatement","src":"30924:37:0"}]},"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"30319:424:0","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":937,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nodeType":"FunctionDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":937,"src":"30777:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"30777:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":917,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":937,"src":"30801:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":916,"name":"address","nodeType":"ElementaryTypeName","src":"30801:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":919,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":937,"src":"30827:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":918,"name":"uint256","nodeType":"ElementaryTypeName","src":"30827:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30766:82:0"},"returnParameters":{"id":921,"nodeType":"ParameterList","parameters":[],"src":"30866:0:0"},"scope":960,"src":"30749:220:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":947,"nodeType":"Block","src":"31351:40:0","statements":[{"expression":{"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":943,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"31362:9:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":944,"name":"decimals_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"31374:9:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"31362:21:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":946,"nodeType":"ExpressionStatement","src":"31362:21:0"}]},"documentation":{"id":938,"nodeType":"StructuredDocumentation","src":"30977:318:0","text":" @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."},"id":948,"implemented":true,"kind":"function","modifiers":[],"name":"_setupDecimals","nodeType":"FunctionDefinition","parameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":940,"mutability":"mutable","name":"decimals_","nodeType":"VariableDeclaration","scope":948,"src":"31325:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":939,"name":"uint8","nodeType":"ElementaryTypeName","src":"31325:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"31324:17:0"},"returnParameters":{"id":942,"nodeType":"ParameterList","parameters":[],"src":"31351:0:0"},"scope":960,"src":"31301:90:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":958,"nodeType":"Block","src":"32117:2:0","statements":[]},"documentation":{"id":949,"nodeType":"StructuredDocumentation","src":"31399:589:0","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":959,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nodeType":"FunctionDefinition","parameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":959,"src":"32034:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"32034:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":959,"src":"32057:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"32057:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":959,"src":"32078:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":954,"name":"uint256","nodeType":"ElementaryTypeName","src":"32078:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32023:76:0"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[],"src":"32117:0:0"},"scope":960,"src":"31994:125:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":10227,"src":"22462:9660:0"},{"id":961,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"32130:23:0"},{"abstract":true,"baseContracts":[{"baseName":{"id":963,"name":"ERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":960,"src":"32718:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$960","typeString":"contract ERC20"}},"id":964,"nodeType":"InheritanceSpecifier","src":"32718:5:0"},{"baseName":{"id":965,"name":"IERC20Permit","nodeType":"UserDefinedTypeName","referencedDeclaration":317,"src":"32725:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$317","typeString":"contract IERC20Permit"}},"id":966,"nodeType":"InheritanceSpecifier","src":"32725:12:0"},{"baseName":{"id":967,"name":"EIP712","nodeType":"UserDefinedTypeName","referencedDeclaration":409,"src":"32739:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$409","typeString":"contract EIP712"}},"id":968,"nodeType":"InheritanceSpecifier","src":"32739:6:0"}],"contractDependencies":[317,409,486,960],"contractKind":"contract","documentation":{"id":962,"nodeType":"StructuredDocumentation","src":"32157:526:0","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"},"fullyImplemented":false,"id":1109,"linearizedBaseContracts":[1109,409,317,960,486],"name":"ERC20Permit","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":972,"mutability":"mutable","name":"_nonces","nodeType":"VariableDeclaration","scope":1109,"src":"32753:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":971,"keyType":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"32761:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"32753:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"32772:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":977,"mutability":"immutable","name":"_PERMIT_TYPEHASH","nodeType":"VariableDeclaration","scope":1109,"src":"32858:149:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"32858:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32922:84:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":974,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"32912:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32912:95:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":987,"nodeType":"Block","src":"33296:2:0","statements":[]},"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"33016:224:0","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":988,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":983,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"33285:4:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33291:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":985,"modifierName":{"id":982,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"33278:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EIP712_$409_$","typeString":"type(contract EIP712)"}},"nodeType":"ModifierInvocation","src":"33278:17:0"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":988,"src":"33258:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":979,"name":"string","nodeType":"ElementaryTypeName","src":"33258:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33257:20:0"},"returnParameters":{"id":986,"nodeType":"ParameterList","parameters":[],"src":"33296:0:0"},"scope":1109,"src":"33246:52:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[302],"body":{"id":1082,"nodeType":"Block","src":"33570:569:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1008,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"33645:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"33645:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1010,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"33664:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"33645:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1012,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"33674:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"EXPIRED_PERMIT","nodeType":"MemberAccess","referencedDeclaration":4466,"src":"33674:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1007,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"33636:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33636:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1015,"nodeType":"ExpressionStatement","src":"33636:60:0"},{"assignments":[1017],"declarations":[{"constant":false,"id":1017,"mutability":"mutable","name":"nonce","nodeType":"VariableDeclaration","scope":1082,"src":"33709:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"33709:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1021,"initialValue":{"baseExpression":{"id":1018,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"33725:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1020,"indexExpression":{"id":1019,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"33733:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"33725:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"33709:30:0"},{"assignments":[1023],"declarations":[{"constant":false,"id":1023,"mutability":"mutable","name":"structHash","nodeType":"VariableDeclaration","scope":1082,"src":"33750:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"33750:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1035,"initialValue":{"arguments":[{"arguments":[{"id":1027,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"33792:16:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1028,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"33810:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1029,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"33817:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"33826:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1031,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"33833:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1032,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"33840:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1025,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"33781:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"33781:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33781:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1024,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"33771:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33771:79:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"33750:100:0"},{"assignments":[1037],"declarations":[{"constant":false,"id":1037,"mutability":"mutable","name":"hash","nodeType":"VariableDeclaration","scope":1082,"src":"33863:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1036,"name":"bytes32","nodeType":"ElementaryTypeName","src":"33863:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1041,"initialValue":{"arguments":[{"id":1039,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"33895:10:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1038,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"33878:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33878:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"33863:43:0"},{"assignments":[1043],"declarations":[{"constant":false,"id":1043,"mutability":"mutable","name":"signer","nodeType":"VariableDeclaration","scope":1082,"src":"33919:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1042,"name":"address","nodeType":"ElementaryTypeName","src":"33919:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1050,"initialValue":{"arguments":[{"id":1045,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"33946:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1046,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"33952:1:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1047,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"33955:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1048,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"33958:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1044,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"33936:9:0","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33936:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"33919:41:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1052,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"33981:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33999:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33991:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"33991:7:0","typeDescriptions":{}}},"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33991:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"33981:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"33980:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1059,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"34007:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1060,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"34017:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"34007:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1062,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"34006:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"33980:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1064,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"34025:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_SIGNATURE","nodeType":"MemberAccess","referencedDeclaration":4724,"src":"34025:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1051,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"33971:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33971:79:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1067,"nodeType":"ExpressionStatement","src":"33971:79:0"},{"expression":{"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1068,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"34063:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1070,"indexExpression":{"id":1069,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"34071:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"34063:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1071,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"34080:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34088:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"34080:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34063:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1075,"nodeType":"ExpressionStatement","src":"34063:26:0"},{"expression":{"arguments":[{"id":1077,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"34109:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1078,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"34116:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"34125:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1076,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"34100:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34100:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1081,"nodeType":"ExpressionStatement","src":"34100:31:0"}]},"documentation":{"id":989,"nodeType":"StructuredDocumentation","src":"33306:52:0","text":" @dev See {IERC20Permit-permit}."},"functionSelector":"d505accf","id":1083,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nodeType":"FunctionDefinition","overrides":{"id":1005,"nodeType":"OverrideSpecifier","overrides":[],"src":"33561:8:0"},"parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1083,"src":"33390:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"33390:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":1083,"src":"33414:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":992,"name":"address","nodeType":"ElementaryTypeName","src":"33414:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":995,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1083,"src":"33440:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":994,"name":"uint256","nodeType":"ElementaryTypeName","src":"33440:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":997,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":1083,"src":"33464:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"33464:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":999,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":1083,"src":"33491:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":998,"name":"uint8","nodeType":"ElementaryTypeName","src":"33491:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1001,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":1083,"src":"33509:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"33509:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1003,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":1083,"src":"33529:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"33529:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"33379:166:0"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[],"src":"33570:0:0"},"scope":1109,"src":"33364:775:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[310],"body":{"id":1096,"nodeType":"Block","src":"34275:40:0","statements":[{"expression":{"baseExpression":{"id":1092,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"34293:7:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1094,"indexExpression":{"id":1093,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"34301:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34293:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1091,"id":1095,"nodeType":"Return","src":"34286:21:0"}]},"documentation":{"id":1084,"nodeType":"StructuredDocumentation","src":"34147:52:0","text":" @dev See {IERC20Permit-nonces}."},"functionSelector":"7ecebe00","id":1097,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nodeType":"FunctionDefinition","overrides":{"id":1088,"nodeType":"OverrideSpecifier","overrides":[],"src":"34248:8:0"},"parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1097,"src":"34221:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"34221:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"34220:15:0"},"returnParameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1097,"src":"34266:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1089,"name":"uint256","nodeType":"ElementaryTypeName","src":"34266:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34265:9:0"},"scope":1109,"src":"34205:110:0","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[316],"body":{"id":1107,"nodeType":"Block","src":"34514:46:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1104,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"34532:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34532:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1103,"id":1106,"nodeType":"Return","src":"34525:27:0"}]},"documentation":{"id":1098,"nodeType":"StructuredDocumentation","src":"34323:62:0","text":" @dev See {IERC20Permit-DOMAIN_SEPARATOR}."},"functionSelector":"3644e515","id":1108,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nodeType":"FunctionDefinition","overrides":{"id":1100,"nodeType":"OverrideSpecifier","overrides":[],"src":"34487:8:0"},"parameters":{"id":1099,"nodeType":"ParameterList","parameters":[],"src":"34470:2:0"},"returnParameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1108,"src":"34505:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"34505:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"34504:9:0"},"scope":1109,"src":"34445:115:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10227,"src":"32685:1878:0"},{"id":1110,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"34569:23:0"},{"abstract":false,"baseContracts":[{"baseName":{"id":1112,"name":"ERC20Permit","nodeType":"UserDefinedTypeName","referencedDeclaration":1109,"src":"35290:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Permit_$1109","typeString":"contract ERC20Permit"}},"id":1113,"nodeType":"InheritanceSpecifier","src":"35290:11:0"}],"contractDependencies":[317,409,486,960,1109],"contractKind":"contract","documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"34596:662:0","text":" @title Highly opinionated token implementation\n @author Balancer Labs\n @dev\n - Includes functions to increase and decrease allowance as a workaround\n   for the well-known issue with `approve`:\n   https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n - Allows for 'infinite allowance', where an allowance of 0xff..ff is not\n   decreased by calls to transferFrom\n - Lets a token holder use `transferFrom` to send their own tokens,\n   without first setting allowance\n - Emits 'Approval' events whenever allowance is changed by `transferFrom`\n - Assigns infinite allowance for all token holders to the Vault"},"fullyImplemented":true,"id":1315,"linearizedBaseContracts":[1315,1109,409,317,960,486],"name":"BalancerPoolToken","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1115,"mutability":"immutable","name":"_vault","nodeType":"VariableDeclaration","scope":1315,"src":"35309:31:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"},"typeName":{"id":1114,"name":"IVault","nodeType":"UserDefinedTypeName","referencedDeclaration":9483,"src":"35309:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"visibility":"private"},{"body":{"id":1135,"nodeType":"Block","src":"35514:33:0","statements":[{"expression":{"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1131,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"35525:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1132,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"35534:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"src":"35525:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"id":1134,"nodeType":"ExpressionStatement","src":"35525:14:0"}]},"id":1136,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1124,"name":"tokenName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"35467:9:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1125,"name":"tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"35478:11:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":1126,"modifierName":{"id":1123,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"35461:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$960_$","typeString":"type(contract ERC20)"}},"nodeType":"ModifierInvocation","src":"35461:29:0"},{"arguments":[{"id":1128,"name":"tokenName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"35503:9:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":1129,"modifierName":{"id":1127,"name":"ERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"35491:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20Permit_$1109_$","typeString":"type(contract ERC20Permit)"}},"nodeType":"ModifierInvocation","src":"35491:22:0"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1117,"mutability":"mutable","name":"tokenName","nodeType":"VariableDeclaration","scope":1136,"src":"35371:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1116,"name":"string","nodeType":"ElementaryTypeName","src":"35371:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"tokenSymbol","nodeType":"VariableDeclaration","scope":1136,"src":"35405:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1118,"name":"string","nodeType":"ElementaryTypeName","src":"35405:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"vault","nodeType":"VariableDeclaration","scope":1136,"src":"35441:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"},"typeName":{"id":1120,"name":"IVault","nodeType":"UserDefinedTypeName","referencedDeclaration":9483,"src":"35441:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"visibility":"internal"}],"src":"35360:100:0"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"35514:0:0"},"scope":1315,"src":"35349:198:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1143,"nodeType":"Block","src":"35604:32:0","statements":[{"expression":{"id":1141,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"35622:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"functionReturnParameters":1140,"id":1142,"nodeType":"Return","src":"35615:13:0"}]},"functionSelector":"8d928af8","id":1144,"implemented":true,"kind":"function","modifiers":[],"name":"getVault","nodeType":"FunctionDefinition","parameters":{"id":1137,"nodeType":"ParameterList","parameters":[],"src":"35572:2:0"},"returnParameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1144,"src":"35596:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"},"typeName":{"id":1138,"name":"IVault","nodeType":"UserDefinedTypeName","referencedDeclaration":9483,"src":"35596:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"visibility":"internal"}],"src":"35595:8:0"},"scope":1315,"src":"35555:81:0","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[622],"body":{"id":1177,"nodeType":"Block","src":"36038:170:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1155,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"36053:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1158,"name":"getVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"36072:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IVault_$9483_$","typeString":"function () view returns (contract IVault)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"36072:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}],"id":1157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"36064:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"36064:7:0","typeDescriptions":{}}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"36064:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"36053:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1175,"nodeType":"Block","src":"36136:65:0","statements":[{"expression":{"arguments":[{"id":1171,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"36174:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1172,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"36181:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1169,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"36158:5:0","typeDescriptions":{"typeIdentifier":"t_super$_BalancerPoolToken_$1315","typeString":"contract super BalancerPoolToken"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":622,"src":"36158:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"36158:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1154,"id":1174,"nodeType":"Return","src":"36151:38:0"}]},"id":1176,"nodeType":"IfStatement","src":"36049:152:0","trueBody":{"id":1168,"nodeType":"Block","src":"36085:45:0","statements":[{"expression":{"arguments":[{"id":1165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"36115:2:0","subExpression":{"hexValue":"31","id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36116:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":1163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"36107:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"36107:7:0","typeDescriptions":{}}},"id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"36107:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1154,"id":1167,"nodeType":"Return","src":"36100:18:0"}]}}]},"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"35664:278:0","text":" @dev Override to grant the Vault infinite allowance, causing for Pool Tokens to not require approval.\n This is sound as the Vault already provides authorization mechanisms when initiation token transfers, which this\n contract inherits."},"functionSelector":"dd62ed3e","id":1178,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","overrides":{"id":1151,"nodeType":"OverrideSpecifier","overrides":[],"src":"36011:8:0"},"parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1178,"src":"35967:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"35967:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":1178,"src":"35982:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"35982:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"35966:32:0"},"returnParameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1178,"src":"36029:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"36029:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"36028:9:0"},"scope":1315,"src":"35948:260:0","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[682],"body":{"id":1243,"nodeType":"Block","src":"36494:533:0","statements":[{"assignments":[1192],"declarations":[{"constant":false,"id":1192,"mutability":"mutable","name":"currentAllowance","nodeType":"VariableDeclaration","scope":1243,"src":"36505:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"36505:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1198,"initialValue":{"arguments":[{"id":1194,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"36542:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1195,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"36550:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"36550:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":1193,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[1178],"referencedDeclaration":1178,"src":"36532:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"36532:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"36505:56:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1200,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"36581:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"36581:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1202,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"36595:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"36581:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1204,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"36605:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1205,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"36625:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36605:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"36581:50:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1208,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"36633:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ERC20_TRANSFER_EXCEEDS_ALLOWANCE","nodeType":"MemberAccess","referencedDeclaration":4652,"src":"36633:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1199,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"36572:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"36572:101:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1211,"nodeType":"ExpressionStatement","src":"36572:101:0"},{"expression":{"arguments":[{"id":1213,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"36696:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1214,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"36704:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1215,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"36715:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1212,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"36686:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"36686:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1217,"nodeType":"ExpressionStatement","src":"36686:36:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1218,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"36739:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"36739:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1220,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"36753:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"36739:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1222,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"36763:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":1226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"36791:2:0","subExpression":{"hexValue":"31","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36792:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}],"id":1224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"36783:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1223,"name":"uint256","nodeType":"ElementaryTypeName","src":"36783:7:0","typeDescriptions":{}}},"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"36783:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36763:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"36739:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1240,"nodeType":"IfStatement","src":"36735:261:0","trueBody":{"id":1239,"nodeType":"Block","src":"36796:200:0","statements":[{"expression":{"arguments":[{"id":1231,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"36938:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1232,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"36946:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"36946:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1234,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"36958:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1235,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"36977:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36958:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1230,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"36929:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"36929:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1238,"nodeType":"ExpressionStatement","src":"36929:55:0"}]}},{"expression":{"hexValue":"74727565","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"37015:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1190,"id":1242,"nodeType":"Return","src":"37008:11:0"}]},"documentation":{"id":1179,"nodeType":"StructuredDocumentation","src":"36216:134:0","text":" @dev Override to allow for 'infinite allowance' and let the token owner use `transferFrom` with no self-allowance"},"functionSelector":"23b872dd","id":1244,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","overrides":{"id":1187,"nodeType":"OverrideSpecifier","overrides":[],"src":"36470:8:0"},"parameters":{"id":1186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":1244,"src":"36388:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"36388:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1183,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1244,"src":"36413:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"36413:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1185,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1244,"src":"36441:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1184,"name":"uint256","nodeType":"ElementaryTypeName","src":"36441:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"36377:85:0"},"returnParameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1244,"src":"36488:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1188,"name":"bool","nodeType":"ElementaryTypeName","src":"36488:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"36487:6:0"},"scope":1315,"src":"36356:671:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[740],"body":{"id":1287,"nodeType":"Block","src":"37249:349:0","statements":[{"assignments":[1256],"declarations":[{"constant":false,"id":1256,"mutability":"mutable","name":"currentAllowance","nodeType":"VariableDeclaration","scope":1287,"src":"37260:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"37260:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1262,"initialValue":{"arguments":[{"expression":{"id":1258,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"37297:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"37297:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1260,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"37309:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1257,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[1178],"referencedDeclaration":1178,"src":"37287:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"37287:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"37260:57:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1263,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"37334:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1264,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"37344:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"37334:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1283,"nodeType":"Block","src":"37427:140:0","statements":[{"expression":{"arguments":[{"expression":{"id":1275,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"37508:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"37508:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1277,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"37520:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1278,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"37529:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1279,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"37548:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"37529:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1274,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"37499:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"37499:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1282,"nodeType":"ExpressionStatement","src":"37499:56:0"}]},"id":1284,"nodeType":"IfStatement","src":"37330:237:0","trueBody":{"id":1273,"nodeType":"Block","src":"37362:59:0","statements":[{"expression":{"arguments":[{"expression":{"id":1267,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"37386:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"37386:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1269,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"37398:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37407:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1266,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"37377:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"37377:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1272,"nodeType":"ExpressionStatement","src":"37377:32:0"}]}},{"expression":{"hexValue":"74727565","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"37586:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1254,"id":1286,"nodeType":"Return","src":"37579:11:0"}]},"documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"37035:117:0","text":" @dev Override to allow decreasing allowance by more than the current amount (setting it to zero)"},"functionSelector":"a457c2d7","id":1288,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nodeType":"FunctionDefinition","overrides":{"id":1251,"nodeType":"OverrideSpecifier","overrides":[],"src":"37225:8:0"},"parameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":1288,"src":"37185:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"37185:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1288,"src":"37202:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"37202:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"37184:33:0"},"returnParameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1288,"src":"37243:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1252,"name":"bool","nodeType":"ElementaryTypeName","src":"37243:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"37242:6:0"},"scope":1315,"src":"37158:440:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1300,"nodeType":"Block","src":"37704:43:0","statements":[{"expression":{"arguments":[{"id":1296,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"37721:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1297,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"37732:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1295,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"37715:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"37715:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1299,"nodeType":"ExpressionStatement","src":"37715:24:0"}]},"id":1301,"implemented":true,"kind":"function","modifiers":[],"name":"_mintPoolTokens","nodeType":"FunctionDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1301,"src":"37660:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"37660:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1292,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1301,"src":"37679:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"37679:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"37659:35:0"},"returnParameters":{"id":1294,"nodeType":"ParameterList","parameters":[],"src":"37704:0:0"},"scope":1315,"src":"37635:112:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1313,"nodeType":"Block","src":"37821:40:0","statements":[{"expression":{"arguments":[{"id":1309,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"37838:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1310,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"37846:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1308,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"37832:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"37832:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1312,"nodeType":"ExpressionStatement","src":"37832:21:0"}]},"id":1314,"implemented":true,"kind":"function","modifiers":[],"name":"_burnPoolTokens","nodeType":"FunctionDefinition","parameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":1314,"src":"37780:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1302,"name":"address","nodeType":"ElementaryTypeName","src":"37780:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1305,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1314,"src":"37796:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"37796:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"37779:32:0"},"returnParameters":{"id":1307,"nodeType":"ParameterList","parameters":[],"src":"37821:0:0"},"scope":1315,"src":"37755:106:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":10227,"src":"35260:2604:0"},{"id":1316,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"37872:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1317,"nodeType":"StructuredDocumentation","src":"37899:63:0","text":" @dev Interface for the TemporarilyPausable helper."},"fullyImplemented":false,"id":1333,"linearizedBaseContracts":[1333],"name":"ITemporarilyPausable","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1318,"nodeType":"StructuredDocumentation","src":"38002:85:0","text":" @dev Emitted every time the pause state changes by `_setPaused`."},"id":1322,"name":"PausedStateChanged","nodeType":"EventDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1320,"indexed":false,"mutability":"mutable","name":"paused","nodeType":"VariableDeclaration","scope":1322,"src":"38118:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1319,"name":"bool","nodeType":"ElementaryTypeName","src":"38118:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"38117:13:0"},"src":"38093:38:0"},{"documentation":{"id":1323,"nodeType":"StructuredDocumentation","src":"38139:59:0","text":" @dev Returns the current paused state."},"functionSelector":"1c0de051","id":1332,"implemented":false,"kind":"function","modifiers":[],"name":"getPausedState","nodeType":"FunctionDefinition","parameters":{"id":1324,"nodeType":"ParameterList","parameters":[],"src":"38227:2:0"},"returnParameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"paused","nodeType":"VariableDeclaration","scope":1332,"src":"38294:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1325,"name":"bool","nodeType":"ElementaryTypeName","src":"38294:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"pauseWindowEndTime","nodeType":"VariableDeclaration","scope":1332,"src":"38320:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"38320:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"bufferPeriodEndTime","nodeType":"VariableDeclaration","scope":1332,"src":"38361:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"38361:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38279:120:0"},"scope":1333,"src":"38204:196:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10227,"src":"37964:439:0"},{"id":1334,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"38411:23:0"},{"abstract":true,"baseContracts":[{"baseName":{"id":1336,"name":"ITemporarilyPausable","nodeType":"UserDefinedTypeName","referencedDeclaration":1333,"src":"39595:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ITemporarilyPausable_$1333","typeString":"contract ITemporarilyPausable"}},"id":1337,"nodeType":"InheritanceSpecifier","src":"39595:20:0"}],"contractDependencies":[1333],"contractKind":"contract","documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"38438:1114:0","text":" @dev Allows for a contract to be paused during an initial period after deployment, disabling functionality. Can be\n used as an emergency switch in case a security vulnerability or threat is identified.\n The contract can only be paused during the Pause Window, a period that starts at deployment. It can also be\n unpaused and repaused any number of times during this period. This is intended to serve as a safety measure: it lets\n system managers react quickly to potentially dangerous situations, knowing that this action is reversible if careful\n analysis later determines there was a false alarm.\n If the contract is paused when the Pause Window finishes, it will remain in the paused state through an additional\n Buffer Period, after which it will be automatically unpaused forever. This is to ensure there is always enough time\n to react to an emergency, even if the threat is discovered shortly before the Pause Window expires.\n Note that since the contract can only be paused within the Pause Window, unpausing during the Buffer Period is\n irreversible."},"fullyImplemented":true,"id":1523,"linearizedBaseContracts":[1523,1333],"name":"TemporarilyPausable","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1340,"mutability":"constant","name":"_MAX_PAUSE_WINDOW_DURATION","nodeType":"VariableDeclaration","scope":1523,"src":"39786:61:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"39786:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3930","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39840:7:0","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_7776000_by_1","typeString":"int_const 7776000"},"value":"90"},"visibility":"private"},{"constant":true,"id":1343,"mutability":"constant","name":"_MAX_BUFFER_PERIOD_DURATION","nodeType":"VariableDeclaration","scope":1523,"src":"39854:62:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"39854:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3330","id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39909:7:0","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"visibility":"private"},{"constant":false,"id":1345,"mutability":"immutable","name":"_pauseWindowEndTime","nodeType":"VariableDeclaration","scope":1523,"src":"39925:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"39925:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1347,"mutability":"immutable","name":"_bufferPeriodEndTime","nodeType":"VariableDeclaration","scope":1523,"src":"39977:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1346,"name":"uint256","nodeType":"ElementaryTypeName","src":"39977:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1349,"mutability":"mutable","name":"_paused","nodeType":"VariableDeclaration","scope":1523,"src":"40032:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1348,"name":"bool","nodeType":"ElementaryTypeName","src":"40032:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":1389,"nodeType":"Block","src":"40132:426:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1357,"name":"pauseWindowDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"40152:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1358,"name":"_MAX_PAUSE_WINDOW_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"40175:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"40152:49:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1360,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"40203:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MAX_PAUSE_WINDOW_DURATION","nodeType":"MemberAccess","referencedDeclaration":4622,"src":"40203:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1356,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"40143:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"40143:93:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1363,"nodeType":"ExpressionStatement","src":"40143:93:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1365,"name":"bufferPeriodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"40256:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1366,"name":"_MAX_BUFFER_PERIOD_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"40280:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"40256:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1368,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"40309:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MAX_BUFFER_PERIOD_DURATION","nodeType":"MemberAccess","referencedDeclaration":4625,"src":"40309:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1364,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"40247:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"40247:96:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1371,"nodeType":"ExpressionStatement","src":"40247:96:0"},{"assignments":[1373],"declarations":[{"constant":false,"id":1373,"mutability":"mutable","name":"pauseWindowEndTime","nodeType":"VariableDeclaration","scope":1389,"src":"40356:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"40356:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1378,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1374,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"40385:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"40385:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1376,"name":"pauseWindowDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"40403:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"40385:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"40356:66:0"},{"expression":{"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1379,"name":"_pauseWindowEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"40435:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1380,"name":"pauseWindowEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"40457:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"40435:40:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1382,"nodeType":"ExpressionStatement","src":"40435:40:0"},{"expression":{"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1383,"name":"_bufferPeriodEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"40486:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1384,"name":"pauseWindowEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"40509:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1385,"name":"bufferPeriodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"40530:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"40509:41:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"40486:64:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1388,"nodeType":"ExpressionStatement","src":"40486:64:0"}]},"id":1390,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"pauseWindowDuration","nodeType":"VariableDeclaration","scope":1390,"src":"40073:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"40073:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1353,"mutability":"mutable","name":"bufferPeriodDuration","nodeType":"VariableDeclaration","scope":1390,"src":"40102:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1352,"name":"uint256","nodeType":"ElementaryTypeName","src":"40102:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40072:59:0"},"returnParameters":{"id":1355,"nodeType":"ParameterList","parameters":[],"src":"40132:0:0"},"scope":1523,"src":"40061:497:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1397,"nodeType":"Block","src":"40657:49:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1393,"name":"_ensureNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"40668:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"40668:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1395,"nodeType":"ExpressionStatement","src":"40668:18:0"},{"id":1396,"nodeType":"PlaceholderStatement","src":"40697:1:0"}]},"documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"40566:60:0","text":" @dev Reverts if the contract is paused."},"id":1398,"name":"whenNotPaused","nodeType":"ModifierDefinition","parameters":{"id":1392,"nodeType":"ParameterList","parameters":[],"src":"40654:2:0"},"src":"40632:74:0","virtual":false,"visibility":"internal"},{"baseFunctions":[1332],"body":{"id":1425,"nodeType":"Block","src":"41079:157:0","statements":[{"expression":{"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1409,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"41090:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"41099:15:0","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1410,"name":"_isNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"41100:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"41100:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"41090:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1414,"nodeType":"ExpressionStatement","src":"41090:24:0"},{"expression":{"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1415,"name":"pauseWindowEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"41125:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":1416,"name":"_getPauseWindowEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"41146:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"41146:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"41125:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1419,"nodeType":"ExpressionStatement","src":"41125:45:0"},{"expression":{"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1420,"name":"bufferPeriodEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"41181:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":1421,"name":"_getBufferPeriodEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"41203:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"41203:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"41181:47:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1424,"nodeType":"ExpressionStatement","src":"41181:47:0"}]},"documentation":{"id":1399,"nodeType":"StructuredDocumentation","src":"40714:140:0","text":" @dev Returns the current contract pause status, as well as the end times of the Pause Window and Buffer\n Period."},"functionSelector":"1c0de051","id":1426,"implemented":true,"kind":"function","modifiers":[],"name":"getPausedState","nodeType":"FunctionDefinition","overrides":{"id":1401,"nodeType":"OverrideSpecifier","overrides":[],"src":"40927:8:0"},"parameters":{"id":1400,"nodeType":"ParameterList","parameters":[],"src":"40883:2:0"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"mutability":"mutable","name":"paused","nodeType":"VariableDeclaration","scope":1426,"src":"40968:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1402,"name":"bool","nodeType":"ElementaryTypeName","src":"40968:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1405,"mutability":"mutable","name":"pauseWindowEndTime","nodeType":"VariableDeclaration","scope":1426,"src":"40994:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"40994:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"bufferPeriodEndTime","nodeType":"VariableDeclaration","scope":1426,"src":"41035:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1406,"name":"uint256","nodeType":"ElementaryTypeName","src":"41035:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40953:120:0"},"scope":1523,"src":"40860:376:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1464,"nodeType":"Block","src":"41562:325:0","statements":[{"condition":{"id":1432,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"41577:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1454,"nodeType":"Block","src":"41699:110:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1445,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"41723:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"41723:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1447,"name":"_getBufferPeriodEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"41741:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"41741:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"41723:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1450,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"41768:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"BUFFER_PERIOD_EXPIRED","nodeType":"MemberAccess","referencedDeclaration":4685,"src":"41768:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1444,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"41714:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"41714:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1453,"nodeType":"ExpressionStatement","src":"41714:83:0"}]},"id":1455,"nodeType":"IfStatement","src":"41573:236:0","trueBody":{"id":1443,"nodeType":"Block","src":"41585:108:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1434,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"41609:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"41609:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1436,"name":"_getPauseWindowEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"41627:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"41627:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"41609:42:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1439,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"41653:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"PAUSE_WINDOW_EXPIRED","nodeType":"MemberAccess","referencedDeclaration":4619,"src":"41653:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1433,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"41600:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"41600:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1442,"nodeType":"ExpressionStatement","src":"41600:81:0"}]}},{"expression":{"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1456,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"41821:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1457,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"41831:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"41821:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1459,"nodeType":"ExpressionStatement","src":"41821:16:0"},{"eventCall":{"arguments":[{"id":1461,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"41872:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1460,"name":"PausedStateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"41853:18:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"41853:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1463,"nodeType":"EmitStatement","src":"41848:31:0"}]},"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"41244:270:0","text":" @dev Sets the pause state to `paused`. The contract can only be paused until the end of the Pause Window, and\n unpaused until the end of the Buffer Period.\n Once the Buffer Period expires, this function reverts unconditionally."},"id":1465,"implemented":true,"kind":"function","modifiers":[],"name":"_setPaused","nodeType":"FunctionDefinition","parameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"paused","nodeType":"VariableDeclaration","scope":1465,"src":"41540:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1428,"name":"bool","nodeType":"ElementaryTypeName","src":"41540:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"41539:13:0"},"returnParameters":{"id":1431,"nodeType":"ParameterList","parameters":[],"src":"41562:0:0"},"scope":1523,"src":"41520:367:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1476,"nodeType":"Block","src":"42003:58:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1470,"name":"_isNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"42023:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"42023:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1472,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"42039:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"PAUSED","nodeType":"MemberAccess","referencedDeclaration":4616,"src":"42039:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1469,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"42014:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"42014:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1475,"nodeType":"ExpressionStatement","src":"42014:39:0"}]},"documentation":{"id":1466,"nodeType":"StructuredDocumentation","src":"41895:60:0","text":" @dev Reverts if the contract is paused."},"id":1477,"implemented":true,"kind":"function","modifiers":[],"name":"_ensureNotPaused","nodeType":"FunctionDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[],"src":"41986:2:0"},"returnParameters":{"id":1468,"nodeType":"ParameterList","parameters":[],"src":"42003:0:0"},"scope":1523,"src":"41961:100:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1489,"nodeType":"Block","src":"42178:63:0","statements":[{"expression":{"arguments":[{"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"42198:15:0","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1482,"name":"_isNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"42199:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"42199:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1485,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"42215:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"NOT_PAUSED","nodeType":"MemberAccess","referencedDeclaration":4703,"src":"42215:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1481,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"42189:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"42189:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1488,"nodeType":"ExpressionStatement","src":"42189:44:0"}]},"documentation":{"id":1478,"nodeType":"StructuredDocumentation","src":"42069:64:0","text":" @dev Reverts if the contract is not paused."},"id":1490,"implemented":true,"kind":"function","modifiers":[],"name":"_ensurePaused","nodeType":"FunctionDefinition","parameters":{"id":1479,"nodeType":"ParameterList","parameters":[],"src":"42161:2:0"},"returnParameters":{"id":1480,"nodeType":"ParameterList","parameters":[],"src":"42178:0:0"},"scope":1523,"src":"42139:102:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1505,"nodeType":"Block","src":"42528:187:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1496,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"42652:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"42652:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1498,"name":"_getBufferPeriodEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"42670:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"42670:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"42652:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"42699:8:0","subExpression":{"id":1501,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"42700:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"42652:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1495,"id":1504,"nodeType":"Return","src":"42645:62:0"}]},"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"42249:220:0","text":" @dev Returns true if the contract is unpaused.\n Once the Buffer Period expires, the gas cost of calling this function is reduced dramatically, as storage is no\n longer accessed."},"id":1506,"implemented":true,"kind":"function","modifiers":[],"name":"_isNotPaused","nodeType":"FunctionDefinition","parameters":{"id":1492,"nodeType":"ParameterList","parameters":[],"src":"42496:2:0"},"returnParameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1506,"src":"42522:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1493,"name":"bool","nodeType":"ElementaryTypeName","src":"42522:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"42521:6:0"},"scope":1523,"src":"42475:240:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1513,"nodeType":"Block","src":"42897:45:0","statements":[{"expression":{"id":1511,"name":"_pauseWindowEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"42915:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1510,"id":1512,"nodeType":"Return","src":"42908:26:0"}]},"id":1514,"implemented":true,"kind":"function","modifiers":[],"name":"_getPauseWindowEndTime","nodeType":"FunctionDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[],"src":"42863:2:0"},"returnParameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1514,"src":"42888:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"42888:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42887:9:0"},"scope":1523,"src":"42832:110:0","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1521,"nodeType":"Block","src":"43016:46:0","statements":[{"expression":{"id":1519,"name":"_bufferPeriodEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"43034:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1518,"id":1520,"nodeType":"Return","src":"43027:27:0"}]},"id":1522,"implemented":true,"kind":"function","modifiers":[],"name":"_getBufferPeriodEndTime","nodeType":"FunctionDefinition","parameters":{"id":1515,"nodeType":"ParameterList","parameters":[],"src":"42982:2:0"},"returnParameters":{"id":1518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1517,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1522,"src":"43007:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1516,"name":"uint256","nodeType":"ElementaryTypeName","src":"43007:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43006:9:0"},"scope":1523,"src":"42950:112:0","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":10227,"src":"39554:3511:0"},{"id":1524,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"43073:23:0"},{"abstract":true,"baseContracts":[{"baseName":{"id":1526,"name":"IBasePool","nodeType":"UserDefinedTypeName","referencedDeclaration":90,"src":"44041:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_IBasePool_$90","typeString":"contract IBasePool"}},"id":1527,"nodeType":"InheritanceSpecifier","src":"44041:9:0"},{"baseName":{"id":1528,"name":"BasePoolAuthorization","nodeType":"UserDefinedTypeName","referencedDeclaration":282,"src":"44052:21:0","typeDescriptions":{"typeIdentifier":"t_contract$_BasePoolAuthorization_$282","typeString":"contract BasePoolAuthorization"}},"id":1529,"nodeType":"InheritanceSpecifier","src":"44052:21:0"},{"baseName":{"id":1530,"name":"BalancerPoolToken","nodeType":"UserDefinedTypeName","referencedDeclaration":1315,"src":"44075:17:0","typeDescriptions":{"typeIdentifier":"t_contract$_BalancerPoolToken_$1315","typeString":"contract BalancerPoolToken"}},"id":1531,"nodeType":"InheritanceSpecifier","src":"44075:17:0"},{"baseName":{"id":1532,"name":"TemporarilyPausable","nodeType":"UserDefinedTypeName","referencedDeclaration":1523,"src":"44094:19:0","typeDescriptions":{"typeIdentifier":"t_contract$_TemporarilyPausable_$1523","typeString":"contract TemporarilyPausable"}},"id":1533,"nodeType":"InheritanceSpecifier","src":"44094:19:0"}],"contractDependencies":[30,90,119,193,282,317,409,486,960,1109,1315,1333,1523],"contractKind":"contract","documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"43139:870:0","text":" @dev Reference implementation for the base layer of a Pool contract that manages a single Pool with optional\n Asset Managers, an admin-controlled swap fee percentage, and an emergency pause mechanism.\n Note that neither swap fees nor the pause mechanism are used by this contract. They are passed through so that\n derived contracts can use them via the `_addSwapFeeAmount` and `_subtractSwapFeeAmount` functions, and the\n `whenNotPaused` modifier.\n No admin permissions are checked here: instead, this contract delegates that to the Vault's own Authorizer.\n Because this contract doesn't implement the swap hooks, derived contracts should generally inherit from\n BaseGeneralPool or BaseMinimalSwapInfoPool. Otherwise, subclasses must inherit from the corresponding interfaces\n and implement the swap callbacks themselves."},"fullyImplemented":false,"id":2691,"linearizedBaseContracts":[2691,1523,1333,1315,1109,409,317,960,486,282,193,119,90,30],"name":"BasePool","nodeType":"ContractDefinition","nodes":[{"id":1536,"libraryName":{"id":1534,"name":"WordCodec","nodeType":"UserDefinedTypeName","referencedDeclaration":9014,"src":"44127:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_WordCodec_$9014","typeString":"library WordCodec"}},"nodeType":"UsingForDirective","src":"44121:28:0","typeName":{"id":1535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"44141:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"id":1539,"libraryName":{"id":1537,"name":"FixedPoint","nodeType":"UserDefinedTypeName","referencedDeclaration":5377,"src":"44161:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_FixedPoint_$5377","typeString":"library FixedPoint"}},"nodeType":"UsingForDirective","src":"44155:29:0","typeName":{"id":1538,"name":"uint256","nodeType":"ElementaryTypeName","src":"44176:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":1542,"mutability":"constant","name":"_MIN_TOKENS","nodeType":"VariableDeclaration","scope":2691,"src":"44192:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1540,"name":"uint256","nodeType":"ElementaryTypeName","src":"44192:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44231:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":true,"id":1545,"mutability":"constant","name":"_DEFAULT_MINIMUM_BPT","nodeType":"VariableDeclaration","scope":2691,"src":"44241:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1543,"name":"uint256","nodeType":"ElementaryTypeName","src":"44241:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"316536","id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44289:3:0","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1e6"},"visibility":"private"},{"constant":true,"id":1548,"mutability":"constant","name":"_MIN_SWAP_FEE_PERCENTAGE","nodeType":"VariableDeclaration","scope":2691,"src":"44348:56:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1546,"name":"uint256","nodeType":"ElementaryTypeName","src":"44348:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653132","id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44400:4:0","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"visibility":"private"},{"constant":true,"id":1551,"mutability":"constant","name":"_MAX_SWAP_FEE_PERCENTAGE","nodeType":"VariableDeclaration","scope":2691,"src":"44422:56:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"44422:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653137","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44474:4:0","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"value":"1e17"},"visibility":"private"},{"constant":false,"id":1553,"mutability":"mutable","name":"_miscData","nodeType":"VariableDeclaration","scope":2691,"src":"44922:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"44922:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"id":1556,"mutability":"constant","name":"_SWAP_FEE_PERCENTAGE_OFFSET","nodeType":"VariableDeclaration","scope":2691,"src":"44954:58:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1554,"name":"uint256","nodeType":"ElementaryTypeName","src":"44954:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313932","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45009:3:0","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},"visibility":"private"},{"constant":false,"id":1558,"mutability":"immutable","name":"_poolId","nodeType":"VariableDeclaration","scope":2691,"src":"45021:33:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1557,"name":"bytes32","nodeType":"ElementaryTypeName","src":"45021:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"anonymous":false,"id":1562,"name":"SwapFeePercentageChanged","nodeType":"EventDefinition","parameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1560,"indexed":false,"mutability":"mutable","name":"swapFeePercentage","nodeType":"VariableDeclaration","scope":1562,"src":"45094:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1559,"name":"uint256","nodeType":"ElementaryTypeName","src":"45094:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45093:27:0"},"src":"45063:58:0"},{"body":{"id":1657,"nodeType":"Block","src":"46245:1043:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1610,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"46265:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"46265:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1612,"name":"_MIN_TOKENS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"46282:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46265:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1614,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"46295:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MIN_TOKENS","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"46295:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1609,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"46256:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"46256:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1617,"nodeType":"ExpressionStatement","src":"46256:57:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1619,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"46333:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"46333:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1621,"name":"_getMaxTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"46350:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint256_$","typeString":"function () pure returns (uint256)"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"46350:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46333:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1624,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"46367:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MAX_TOKENS","nodeType":"MemberAccess","referencedDeclaration":4442,"src":"46367:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1618,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"46324:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"46324:61:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1627,"nodeType":"ExpressionStatement","src":"46324:61:0"},{"expression":{"arguments":[{"id":1631,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"46973:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}],"expression":{"id":1628,"name":"InputHelpers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"46940:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_InputHelpers_$8146_$","typeString":"type(library InputHelpers)"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ensureArrayIsSorted","nodeType":"MemberAccess","referencedDeclaration":8094,"src":"46940:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr_$returns$__$","typeString":"function (contract IERC20[] memory) pure"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"46940:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1633,"nodeType":"ExpressionStatement","src":"46940:40:0"},{"expression":{"arguments":[{"id":1635,"name":"swapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"47015:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1634,"name":"_setSwapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"46993:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"46993:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1637,"nodeType":"ExpressionStatement","src":"46993:40:0"},{"assignments":[1639],"declarations":[{"constant":false,"id":1639,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1657,"src":"47046:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1638,"name":"bytes32","nodeType":"ElementaryTypeName","src":"47046:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1644,"initialValue":{"arguments":[{"id":1642,"name":"specialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"47082:14:0","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$9142","typeString":"enum IVault.PoolSpecialization"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PoolSpecialization_$9142","typeString":"enum IVault.PoolSpecialization"}],"expression":{"id":1640,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"47063:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerPool","nodeType":"MemberAccess","referencedDeclaration":9150,"src":"47063:18:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_enum$_PoolSpecialization_$9142_$returns$_t_bytes32_$","typeString":"function (enum IVault.PoolSpecialization) external returns (bytes32)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"47063:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"47046:51:0"},{"expression":{"arguments":[{"id":1648,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"47131:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1649,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"47139:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},{"id":1650,"name":"assetManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"47147:13:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"expression":{"id":1645,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"47110:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"registerTokens","nodeType":"MemberAccess","referencedDeclaration":9181,"src":"47110:20:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (bytes32,contract IERC20[] memory,address[] memory) external"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"47110:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1652,"nodeType":"ExpressionStatement","src":"47110:51:0"},{"expression":{"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1653,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"47264:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1654,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"47274:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"47264:16:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1656,"nodeType":"ExpressionStatement","src":"47264:16:0"}]},"id":1658,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1591,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"46068:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"46068:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":1590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"46060:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1589,"name":"uint256","nodeType":"ElementaryTypeName","src":"46060:7:0","typeDescriptions":{}}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"46060:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"46052:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"46052:7:0","typeDescriptions":{}}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"46052:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1595,"modifierName":{"id":1586,"name":"Authentication","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"46037:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Authentication_$193_$","typeString":"type(contract Authentication)"}},"nodeType":"ModifierInvocation","src":"46037:44:0"},{"arguments":[{"id":1597,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"46109:4:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1598,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"46115:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1599,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"46123:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}}],"id":1600,"modifierName":{"id":1596,"name":"BalancerPoolToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"46091:17:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BalancerPoolToken_$1315_$","typeString":"type(contract BalancerPoolToken)"}},"nodeType":"ModifierInvocation","src":"46091:38:0"},{"arguments":[{"id":1602,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"46161:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1603,"modifierName":{"id":1601,"name":"BasePoolAuthorization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"46139:21:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BasePoolAuthorization_$282_$","typeString":"type(contract BasePoolAuthorization)"}},"nodeType":"ModifierInvocation","src":"46139:28:0"},{"arguments":[{"id":1605,"name":"pauseWindowDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"46197:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1606,"name":"bufferPeriodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"46218:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1607,"modifierName":{"id":1604,"name":"TemporarilyPausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"46177:19:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TemporarilyPausable_$1523_$","typeString":"type(contract TemporarilyPausable)"}},"nodeType":"ModifierInvocation","src":"46177:62:0"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"vault","nodeType":"VariableDeclaration","scope":1658,"src":"45151:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"},"typeName":{"id":1563,"name":"IVault","nodeType":"UserDefinedTypeName","referencedDeclaration":9483,"src":"45151:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"visibility":"internal"},{"constant":false,"id":1566,"mutability":"mutable","name":"specialization","nodeType":"VariableDeclaration","scope":1658,"src":"45174:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$9142","typeString":"enum IVault.PoolSpecialization"},"typeName":{"id":1565,"name":"IVault.PoolSpecialization","nodeType":"UserDefinedTypeName","referencedDeclaration":9142,"src":"45174:25:0","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$9142","typeString":"enum IVault.PoolSpecialization"}},"visibility":"internal"},{"constant":false,"id":1568,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":1658,"src":"45225:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1567,"name":"string","nodeType":"ElementaryTypeName","src":"45225:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1570,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":1658,"src":"45254:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1569,"name":"string","nodeType":"ElementaryTypeName","src":"45254:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1573,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":1658,"src":"45285:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":1571,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"45285:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":1572,"nodeType":"ArrayTypeName","src":"45285:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":1576,"mutability":"mutable","name":"assetManagers","nodeType":"VariableDeclaration","scope":1658,"src":"45318:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1574,"name":"address","nodeType":"ElementaryTypeName","src":"45318:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1575,"nodeType":"ArrayTypeName","src":"45318:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1578,"mutability":"mutable","name":"swapFeePercentage","nodeType":"VariableDeclaration","scope":1658,"src":"45359:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"45359:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"pauseWindowDuration","nodeType":"VariableDeclaration","scope":1658,"src":"45395:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"45395:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"bufferPeriodDuration","nodeType":"VariableDeclaration","scope":1658,"src":"45433:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"45433:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1584,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1658,"src":"45472:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1583,"name":"address","nodeType":"ElementaryTypeName","src":"45472:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"45140:352:0"},"returnParameters":{"id":1608,"nodeType":"ParameterList","parameters":[],"src":"46245:0:0"},"scope":2691,"src":"45129:2159:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[89],"body":{"id":1666,"nodeType":"Block","src":"47384:33:0","statements":[{"expression":{"id":1664,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"47402:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1663,"id":1665,"nodeType":"Return","src":"47395:14:0"}]},"functionSelector":"38fff2d0","id":1667,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolId","nodeType":"FunctionDefinition","overrides":{"id":1660,"nodeType":"OverrideSpecifier","overrides":[],"src":"47357:8:0"},"parameters":{"id":1659,"nodeType":"ParameterList","parameters":[],"src":"47342:2:0"},"returnParameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1662,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1667,"src":"47375:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"47375:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"47374:9:0"},"scope":2691,"src":"47324:93:0","stateMutability":"view","virtual":false,"visibility":"public"},{"id":1672,"implemented":false,"kind":"function","modifiers":[],"name":"_getTotalTokens","nodeType":"FunctionDefinition","parameters":{"id":1668,"nodeType":"ParameterList","parameters":[],"src":"47449:2:0"},"returnParameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1672,"src":"47483:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"47483:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47482:9:0"},"scope":2691,"src":"47425:67:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"id":1677,"implemented":false,"kind":"function","modifiers":[],"name":"_getMaxTokens","nodeType":"FunctionDefinition","parameters":{"id":1673,"nodeType":"ParameterList","parameters":[],"src":"47522:2:0"},"returnParameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1677,"src":"47556:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1674,"name":"uint256","nodeType":"ElementaryTypeName","src":"47556:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47555:9:0"},"scope":2691,"src":"47500:65:0","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":1685,"nodeType":"Block","src":"47974:46:0","statements":[{"expression":{"id":1683,"name":"_DEFAULT_MINIMUM_BPT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"47992:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1682,"id":1684,"nodeType":"Return","src":"47985:27:0"}]},"documentation":{"id":1678,"nodeType":"StructuredDocumentation","src":"47573:329:0","text":" @dev Returns the minimum BPT supply. This amount is minted to the zero address during initialization, effectively\n locking it.\n This is useful to make sure Pool initialization happens only once, but derived Pools can change this value (even\n to zero) by overriding this function."},"id":1686,"implemented":true,"kind":"function","modifiers":[],"name":"_getMinimumBpt","nodeType":"FunctionDefinition","parameters":{"id":1679,"nodeType":"ParameterList","parameters":[],"src":"47931:2:0"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1686,"src":"47965:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"47965:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47964:9:0"},"scope":2691,"src":"47908:112:0","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":1696,"nodeType":"Block","src":"48090:77:0","statements":[{"expression":{"arguments":[{"id":1693,"name":"_SWAP_FEE_PERCENTAGE_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"48131:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1691,"name":"_miscData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"48108:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decodeUint64","nodeType":"MemberAccess","referencedDeclaration":8895,"src":"48108:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_uint256_$bound_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (uint256)"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"48108:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1690,"id":1695,"nodeType":"Return","src":"48101:58:0"}]},"functionSelector":"55c67628","id":1697,"implemented":true,"kind":"function","modifiers":[],"name":"getSwapFeePercentage","nodeType":"FunctionDefinition","parameters":{"id":1687,"nodeType":"ParameterList","parameters":[],"src":"48057:2:0"},"returnParameters":{"id":1690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1697,"src":"48081:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1688,"name":"uint256","nodeType":"ElementaryTypeName","src":"48081:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48080:9:0"},"scope":2691,"src":"48028:139:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1710,"nodeType":"Block","src":"48274:59:0","statements":[{"expression":{"arguments":[{"id":1707,"name":"swapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"48307:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1706,"name":"_setSwapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"48285:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"48285:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1709,"nodeType":"ExpressionStatement","src":"48285:40:0"}]},"functionSelector":"38e9922e","id":1711,"implemented":true,"kind":"function","modifiers":[{"id":1702,"modifierName":{"id":1701,"name":"authenticate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"48247:12:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"48247:12:0"},{"id":1704,"modifierName":{"id":1703,"name":"whenNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"48260:13:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"48260:13:0"}],"name":"setSwapFeePercentage","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"swapFeePercentage","nodeType":"VariableDeclaration","scope":1711,"src":"48205:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"48205:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48204:27:0"},"returnParameters":{"id":1705,"nodeType":"ParameterList","parameters":[],"src":"48274:0:0"},"scope":2691,"src":"48175:158:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1744,"nodeType":"Block","src":"48407:358:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1717,"name":"swapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"48427:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1718,"name":"_MIN_SWAP_FEE_PERCENTAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"48448:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"48427:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1720,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"48474:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MIN_SWAP_FEE_PERCENTAGE","nodeType":"MemberAccess","referencedDeclaration":4448,"src":"48474:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1716,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"48418:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"48418:87:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1723,"nodeType":"ExpressionStatement","src":"48418:87:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1725,"name":"swapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"48525:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1726,"name":"_MAX_SWAP_FEE_PERCENTAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"48546:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"48525:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1728,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"48572:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MAX_SWAP_FEE_PERCENTAGE","nodeType":"MemberAccess","referencedDeclaration":4445,"src":"48572:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1724,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"48516:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"48516:87:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1731,"nodeType":"ExpressionStatement","src":"48516:87:0"},{"expression":{"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1732,"name":"_miscData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"48616:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1735,"name":"swapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"48651:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1736,"name":"_SWAP_FEE_PERCENTAGE_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"48670:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1733,"name":"_miscData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"48628:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"insertUint64","nodeType":"MemberAccess","referencedDeclaration":8578,"src":"48628:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_bytes32_$","typeString":"function (bytes32,uint256,uint256) pure returns (bytes32)"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"48628:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"48616:82:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1739,"nodeType":"ExpressionStatement","src":"48616:82:0"},{"eventCall":{"arguments":[{"id":1741,"name":"swapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"48739:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1740,"name":"SwapFeePercentageChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"48714:24:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"48714:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1743,"nodeType":"EmitStatement","src":"48709:48:0"}]},"id":1745,"implemented":true,"kind":"function","modifiers":[],"name":"_setSwapFeePercentage","nodeType":"FunctionDefinition","parameters":{"id":1714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"swapFeePercentage","nodeType":"VariableDeclaration","scope":1745,"src":"48372:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1712,"name":"uint256","nodeType":"ElementaryTypeName","src":"48372:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48371:27:0"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[],"src":"48407:0:0"},"scope":2691,"src":"48341:424:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1761,"nodeType":"Block","src":"48930:64:0","statements":[{"expression":{"arguments":[{"id":1757,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"48968:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},{"id":1758,"name":"poolConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"48975:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1756,"name":"_setAssetManagerPoolConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"48941:26:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$486_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"48941:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1760,"nodeType":"ExpressionStatement","src":"48941:45:0"}]},"functionSelector":"50dd6ed9","id":1762,"implemented":true,"kind":"function","modifiers":[{"id":1752,"modifierName":{"id":1751,"name":"authenticate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"48889:12:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"48889:12:0"},{"id":1754,"modifierName":{"id":1753,"name":"whenNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"48911:13:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"48911:13:0"}],"name":"setAssetManagerPoolConfig","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":1762,"src":"48808:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":1746,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"48808:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1749,"mutability":"mutable","name":"poolConfig","nodeType":"VariableDeclaration","scope":1762,"src":"48822:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1748,"name":"bytes","nodeType":"ElementaryTypeName","src":"48822:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"48807:39:0"},"returnParameters":{"id":1755,"nodeType":"ParameterList","parameters":[],"src":"48930:0:0"},"scope":2691,"src":"48773:221:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1791,"nodeType":"Block","src":"49085:201:0","statements":[{"assignments":[1770],"declarations":[{"constant":false,"id":1770,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1791,"src":"49096:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1769,"name":"bytes32","nodeType":"ElementaryTypeName","src":"49096:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1773,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1771,"name":"getPoolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"49113:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"49113:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"49096:28:0"},{"assignments":[null,null,null,1775],"declarations":[null,null,null,{"constant":false,"id":1775,"mutability":"mutable","name":"assetManager","nodeType":"VariableDeclaration","scope":1791,"src":"49142:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1774,"name":"address","nodeType":"ElementaryTypeName","src":"49142:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1782,"initialValue":{"arguments":[{"id":1779,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"49194:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1780,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"49202:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1776,"name":"getVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"49166:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IVault_$9483_$","typeString":"function () view returns (contract IVault)"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"49166:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPoolTokenInfo","nodeType":"MemberAccess","referencedDeclaration":9225,"src":"49166:27:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_contract$_IERC20_$486_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$","typeString":"function (bytes32,contract IERC20) view external returns (uint256,uint256,uint256,address)"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"49166:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$","typeString":"tuple(uint256,uint256,uint256,address)"}},"nodeType":"VariableDeclarationStatement","src":"49135:73:0"},{"expression":{"arguments":[{"id":1787,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"49259:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1788,"name":"poolConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"49267:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1784,"name":"assetManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"49235:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1783,"name":"IAssetManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9562,"src":"49221:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAssetManager_$9562_$","typeString":"type(contract IAssetManager)"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"49221:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAssetManager_$9562","typeString":"contract IAssetManager"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setConfig","nodeType":"MemberAccess","referencedDeclaration":9497,"src":"49221:37:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory) external"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"49221:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1790,"nodeType":"ExpressionStatement","src":"49221:57:0"}]},"id":1792,"implemented":true,"kind":"function","modifiers":[],"name":"_setAssetManagerPoolConfig","nodeType":"FunctionDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":1792,"src":"49038:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":1763,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"49038:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1766,"mutability":"mutable","name":"poolConfig","nodeType":"VariableDeclaration","scope":1792,"src":"49052:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1765,"name":"bytes","nodeType":"ElementaryTypeName","src":"49052:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"49037:39:0"},"returnParameters":{"id":1768,"nodeType":"ParameterList","parameters":[],"src":"49085:0:0"},"scope":2691,"src":"49002:284:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1803,"nodeType":"Block","src":"49348:37:0","statements":[{"expression":{"arguments":[{"id":1800,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"49370:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1799,"name":"_setPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"49359:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"49359:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1802,"nodeType":"ExpressionStatement","src":"49359:18:0"}]},"functionSelector":"16c38b3c","id":1804,"implemented":true,"kind":"function","modifiers":[{"id":1797,"modifierName":{"id":1796,"name":"authenticate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"49335:12:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"49335:12:0"}],"name":"setPaused","nodeType":"FunctionDefinition","parameters":{"id":1795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"paused","nodeType":"VariableDeclaration","scope":1804,"src":"49313:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1793,"name":"bool","nodeType":"ElementaryTypeName","src":"49313:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"49312:13:0"},"returnParameters":{"id":1798,"nodeType":"ParameterList","parameters":[],"src":"49348:0:0"},"scope":2691,"src":"49294:91:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[276],"body":{"id":1830,"nodeType":"Block","src":"49485:183:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1812,"name":"actionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"49517:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"expression":{"id":1814,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"49541:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BasePool_$2691","typeString":"contract BasePool"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setSwapFeePercentage","nodeType":"MemberAccess","referencedDeclaration":1711,"src":"49541:25:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"49541:34:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":1813,"name":"getActionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"49529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bytes32_$","typeString":"function (bytes4) view returns (bytes32)"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"49529:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"49517:59:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"49516:61:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1820,"name":"actionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"49595:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"expression":{"id":1822,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"49619:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BasePool_$2691","typeString":"contract BasePool"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setAssetManagerPoolConfig","nodeType":"MemberAccess","referencedDeclaration":1762,"src":"49619:30:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_contract$_IERC20_$486_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory) external"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"49619:39:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":1821,"name":"getActionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"49607:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bytes32_$","typeString":"function (bytes4) view returns (bytes32)"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"49607:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"49595:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"49594:66:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"49516:144:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1811,"id":1829,"nodeType":"Return","src":"49496:164:0"}]},"id":1831,"implemented":true,"kind":"function","modifiers":[],"name":"_isOwnerOnlyAction","nodeType":"FunctionDefinition","overrides":{"id":1808,"nodeType":"OverrideSpecifier","overrides":[],"src":"49461:8:0"},"parameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"actionId","nodeType":"VariableDeclaration","scope":1831,"src":"49421:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"49421:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"49420:18:0"},"returnParameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1810,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1831,"src":"49479:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1809,"name":"bool","nodeType":"ElementaryTypeName","src":"49479:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"49478:6:0"},"scope":2691,"src":"49393:275:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1838,"nodeType":"Block","src":"49732:35:0","statements":[{"expression":{"id":1836,"name":"_miscData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"49750:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1835,"id":1837,"nodeType":"Return","src":"49743:16:0"}]},"id":1839,"implemented":true,"kind":"function","modifiers":[],"name":"_getMiscData","nodeType":"FunctionDefinition","parameters":{"id":1832,"nodeType":"ParameterList","parameters":[],"src":"49697:2:0"},"returnParameters":{"id":1835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1839,"src":"49723:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1833,"name":"bytes32","nodeType":"ElementaryTypeName","src":"49723:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"49722:9:0"},"scope":2691,"src":"49676:91:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1853,"nodeType":"Block","src":"50032:66:0","statements":[{"expression":{"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1845,"name":"_miscData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"50043:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1848,"name":"newData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"50079:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"50088:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1846,"name":"_miscData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"50055:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"insertBits192","nodeType":"MemberAccess","referencedDeclaration":8666,"src":"50055:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_bytes32_$","typeString":"function (bytes32,bytes32,uint256) pure returns (bytes32)"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"50055:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"50043:47:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1852,"nodeType":"ExpressionStatement","src":"50043:47:0"}]},"documentation":{"id":1840,"nodeType":"StructuredDocumentation","src":"49775:203:0","text":" Inserts data into the least-significant 192 bits of the misc data storage slot.\n Note that the remaining 64 bits are used for the swap fee percentage and cannot be overloaded."},"id":1854,"implemented":true,"kind":"function","modifiers":[],"name":"_setMiscData","nodeType":"FunctionDefinition","parameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"newData","nodeType":"VariableDeclaration","scope":1854,"src":"50006:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"50006:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"50005:17:0"},"returnParameters":{"id":1844,"nodeType":"ParameterList","parameters":[],"src":"50032:0:0"},"scope":2691,"src":"49984:114:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1881,"nodeType":"Block","src":"50169:165:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1859,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"50189:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"50189:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1863,"name":"getVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"50211:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IVault_$9483_$","typeString":"function () view returns (contract IVault)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"50211:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}],"id":1862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"50203:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1861,"name":"address","nodeType":"ElementaryTypeName","src":"50203:7:0","typeDescriptions":{}}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"50203:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"50189:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1867,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"50224:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"CALLER_NOT_VAULT","nodeType":"MemberAccess","referencedDeclaration":4454,"src":"50224:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1858,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"50180:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"50180:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1870,"nodeType":"ExpressionStatement","src":"50180:68:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1872,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"50268:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1873,"name":"getPoolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"50278:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"50278:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"50268:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1876,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"50291:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_POOL_ID","nodeType":"MemberAccess","referencedDeclaration":4712,"src":"50291:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1871,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"50259:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"50259:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1879,"nodeType":"ExpressionStatement","src":"50259:55:0"},{"id":1880,"nodeType":"PlaceholderStatement","src":"50325:1:0"}]},"id":1882,"name":"onlyVault","nodeType":"ModifierDefinition","parameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":1882,"src":"50153:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1855,"name":"bytes32","nodeType":"ElementaryTypeName","src":"50153:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"50152:16:0"},"src":"50134:200:0","virtual":false,"visibility":"internal"},{"baseFunctions":[59],"body":{"id":2021,"nodeType":"Block","src":"50680:2017:0","statements":[{"assignments":[1914],"declarations":[{"constant":false,"id":1914,"mutability":"mutable","name":"scalingFactors","nodeType":"VariableDeclaration","scope":2021,"src":"50691:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1912,"name":"uint256","nodeType":"ElementaryTypeName","src":"50691:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1913,"nodeType":"ArrayTypeName","src":"50691:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1917,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1915,"name":"_scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"50725:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"50725:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"50691:51:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1918,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"50759:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"50759:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"50776:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"50759:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2019,"nodeType":"Block","src":"51738:952:0","statements":[{"expression":{"arguments":[{"id":1977,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"51767:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1978,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"51777:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1976,"name":"_upscaleArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"51753:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory,uint256[] memory) view"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"51753:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1980,"nodeType":"ExpressionStatement","src":"51753:39:0"},{"assignments":[1982,1985,1988],"declarations":[{"constant":false,"id":1982,"mutability":"mutable","name":"bptAmountOut","nodeType":"VariableDeclaration","scope":2019,"src":"51808:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"51808:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1985,"mutability":"mutable","name":"amountsIn","nodeType":"VariableDeclaration","scope":2019,"src":"51830:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1983,"name":"uint256","nodeType":"ElementaryTypeName","src":"51830:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1984,"nodeType":"ArrayTypeName","src":"51830:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1988,"mutability":"mutable","name":"dueProtocolFeeAmounts","nodeType":"VariableDeclaration","scope":2019,"src":"51858:38:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"51858:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1987,"nodeType":"ArrayTypeName","src":"51858:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1999,"initialValue":{"arguments":[{"id":1990,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"51930:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1991,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"51955:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1992,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"51980:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1993,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"52008:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1994,"name":"lastChangeBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"52035:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1995,"name":"protocolSwapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"52069:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1996,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"52113:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1997,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"52146:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1989,"name":"_onJoinPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"51900:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32,address,address,uint256[] memory,uint256,uint256,uint256[] memory,bytes memory) returns (uint256,uint256[] memory,uint256[] memory)"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"51900:269:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"51807:362:0"},{"expression":{"arguments":[{"id":2001,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"52303:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2002,"name":"bptAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"52314:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2000,"name":"_mintPoolTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"52287:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"52287:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2004,"nodeType":"ExpressionStatement","src":"52287:40:0"},{"expression":{"arguments":[{"id":2006,"name":"amountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"52435:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2007,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"52446:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2005,"name":"_downscaleUpArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"52417:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory,uint256[] memory) view"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"52417:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2009,"nodeType":"ExpressionStatement","src":"52417:44:0"},{"expression":{"arguments":[{"id":2011,"name":"dueProtocolFeeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"52582:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2012,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"52605:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2010,"name":"_downscaleDownArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"52562:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory,uint256[] memory) view"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"52562:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2014,"nodeType":"ExpressionStatement","src":"52562:58:0"},{"expression":{"components":[{"id":2015,"name":"amountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"52645:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2016,"name":"dueProtocolFeeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"52656:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"52644:34:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"functionReturnParameters":1909,"id":2018,"nodeType":"Return","src":"52637:41:0"}]},"id":2020,"nodeType":"IfStatement","src":"50755:1935:0","trueBody":{"id":1975,"nodeType":"Block","src":"50779:953:0","statements":[{"assignments":[1923,1926],"declarations":[{"constant":false,"id":1923,"mutability":"mutable","name":"bptAmountOut","nodeType":"VariableDeclaration","scope":1975,"src":"50795:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"50795:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1926,"mutability":"mutable","name":"amountsIn","nodeType":"VariableDeclaration","scope":1975,"src":"50817:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1924,"name":"uint256","nodeType":"ElementaryTypeName","src":"50817:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1925,"nodeType":"ArrayTypeName","src":"50817:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1934,"initialValue":{"arguments":[{"id":1928,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"50883:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1929,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"50908:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1930,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"50933:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1931,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"50961:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1932,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"50994:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1927,"name":"_onInitializePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"50847:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32,address,address,uint256[] memory,bytes memory) returns (uint256,uint256[] memory)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"50847:170:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"50794:223:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1936,"name":"bptAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"51330:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1937,"name":"_getMinimumBpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"51346:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint256_$","typeString":"function () pure returns (uint256)"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"51346:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"51330:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1940,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"51364:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MINIMUM_BPT","nodeType":"MemberAccess","referencedDeclaration":4451,"src":"51364:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1935,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"51321:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"51321:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1943,"nodeType":"ExpressionStatement","src":"51321:62:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"51422:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"51414:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1945,"name":"address","nodeType":"ElementaryTypeName","src":"51414:7:0","typeDescriptions":{}}},"id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"51414:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1949,"name":"_getMinimumBpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"51426:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint256_$","typeString":"function () pure returns (uint256)"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"51426:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1944,"name":"_mintPoolTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"51398:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"51398:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1952,"nodeType":"ExpressionStatement","src":"51398:45:0"},{"expression":{"arguments":[{"id":1954,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"51474:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1955,"name":"bptAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"51485:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1956,"name":"_getMinimumBpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"51500:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint256_$","typeString":"function () pure returns (uint256)"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"51500:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"51485:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1953,"name":"_mintPoolTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"51458:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"51458:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1960,"nodeType":"ExpressionStatement","src":"51458:59:0"},{"expression":{"arguments":[{"id":1962,"name":"amountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"51625:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1963,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"51636:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1961,"name":"_downscaleUpArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"51607:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory,uint256[] memory) view"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"51607:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1965,"nodeType":"ExpressionStatement","src":"51607:44:0"},{"expression":{"components":[{"id":1966,"name":"amountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"51676:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1970,"name":"_getTotalTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"51701:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"51701:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"51687:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"51691:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1968,"nodeType":"ArrayTypeName","src":"51691:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"51687:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":1973,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"51675:45:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"functionReturnParameters":1909,"id":1974,"nodeType":"Return","src":"51668:52:0"}]}}]},"functionSelector":"d5c096c4","id":2022,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1901,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"50627:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1902,"modifierName":{"id":1900,"name":"onlyVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"50617:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"50617:17:0"}],"name":"onJoinPool","nodeType":"FunctionDefinition","overrides":{"id":1899,"nodeType":"OverrideSpecifier","overrides":[],"src":"50608:8:0"},"parameters":{"id":1898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":2022,"src":"50372:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1883,"name":"bytes32","nodeType":"ElementaryTypeName","src":"50372:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1886,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":2022,"src":"50397:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1885,"name":"address","nodeType":"ElementaryTypeName","src":"50397:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1888,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2022,"src":"50422:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1887,"name":"address","nodeType":"ElementaryTypeName","src":"50422:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1891,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":2022,"src":"50450:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"50450:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1890,"nodeType":"ArrayTypeName","src":"50450:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"lastChangeBlock","nodeType":"VariableDeclaration","scope":2022,"src":"50486:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"50486:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"protocolSwapFeePercentage","nodeType":"VariableDeclaration","scope":2022,"src":"50520:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"50520:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1897,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":2022,"src":"50564:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1896,"name":"bytes","nodeType":"ElementaryTypeName","src":"50564:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"50361:231:0"},"returnParameters":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2022,"src":"50644:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"50644:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1904,"nodeType":"ArrayTypeName","src":"50644:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1908,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2022,"src":"50662:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1906,"name":"uint256","nodeType":"ElementaryTypeName","src":"50662:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1907,"nodeType":"ArrayTypeName","src":"50662:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"50643:36:0"},"scope":2691,"src":"50342:2355:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[84],"body":{"id":2101,"nodeType":"Block","src":"53043:891:0","statements":[{"assignments":[2054],"declarations":[{"constant":false,"id":2054,"mutability":"mutable","name":"scalingFactors","nodeType":"VariableDeclaration","scope":2101,"src":"53054:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2052,"name":"uint256","nodeType":"ElementaryTypeName","src":"53054:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2053,"nodeType":"ArrayTypeName","src":"53054:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2057,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2055,"name":"_scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"53088:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"53088:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"53054:51:0"},{"expression":{"arguments":[{"id":2059,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"53130:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2060,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"53140:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2058,"name":"_upscaleArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"53116:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory,uint256[] memory) view"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"53116:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2062,"nodeType":"ExpressionStatement","src":"53116:39:0"},{"assignments":[2064,2067,2070],"declarations":[{"constant":false,"id":2064,"mutability":"mutable","name":"bptAmountIn","nodeType":"VariableDeclaration","scope":2101,"src":"53169:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2063,"name":"uint256","nodeType":"ElementaryTypeName","src":"53169:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2067,"mutability":"mutable","name":"amountsOut","nodeType":"VariableDeclaration","scope":2101,"src":"53190:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2065,"name":"uint256","nodeType":"ElementaryTypeName","src":"53190:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2066,"nodeType":"ArrayTypeName","src":"53190:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2070,"mutability":"mutable","name":"dueProtocolFeeAmounts","nodeType":"VariableDeclaration","scope":2101,"src":"53219:38:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"53219:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2069,"nodeType":"ArrayTypeName","src":"53219:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2081,"initialValue":{"arguments":[{"id":2072,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"53287:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2073,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"53308:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2074,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"53329:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2075,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"53353:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2076,"name":"lastChangeBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"53376:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2077,"name":"protocolSwapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"53406:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2078,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"53446:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2079,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"53475:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2071,"name":"_onExitPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"53261:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32,address,address,uint256[] memory,uint256,uint256,uint256[] memory,bytes memory) returns (uint256,uint256[] memory,uint256[] memory)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"53261:233:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"53168:326:0"},{"expression":{"arguments":[{"id":2083,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"53620:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2084,"name":"bptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"53628:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2082,"name":"_burnPoolTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"53604:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"53604:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2086,"nodeType":"ExpressionStatement","src":"53604:36:0"},{"expression":{"arguments":[{"id":2088,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"53775:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2089,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"53787:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2087,"name":"_downscaleDownArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"53755:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory,uint256[] memory) view"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"53755:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2091,"nodeType":"ExpressionStatement","src":"53755:47:0"},{"expression":{"arguments":[{"id":2093,"name":"dueProtocolFeeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"53833:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2094,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"53856:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2092,"name":"_downscaleDownArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"53813:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory,uint256[] memory) view"}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"53813:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2096,"nodeType":"ExpressionStatement","src":"53813:58:0"},{"expression":{"components":[{"id":2097,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"53892:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2098,"name":"dueProtocolFeeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"53904:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2099,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"53891:35:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"functionReturnParameters":2049,"id":2100,"nodeType":"Return","src":"53884:42:0"}]},"functionSelector":"74f3b009","id":2102,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2041,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"52990:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2042,"modifierName":{"id":2040,"name":"onlyVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"52980:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"52980:17:0"}],"name":"onExitPool","nodeType":"FunctionDefinition","overrides":{"id":2039,"nodeType":"OverrideSpecifier","overrides":[],"src":"52971:8:0"},"parameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":2102,"src":"52735:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2023,"name":"bytes32","nodeType":"ElementaryTypeName","src":"52735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2026,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":2102,"src":"52760:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2025,"name":"address","nodeType":"ElementaryTypeName","src":"52760:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2028,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2102,"src":"52785:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2027,"name":"address","nodeType":"ElementaryTypeName","src":"52785:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2031,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":2102,"src":"52813:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"52813:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2030,"nodeType":"ArrayTypeName","src":"52813:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2033,"mutability":"mutable","name":"lastChangeBlock","nodeType":"VariableDeclaration","scope":2102,"src":"52849:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2032,"name":"uint256","nodeType":"ElementaryTypeName","src":"52849:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2035,"mutability":"mutable","name":"protocolSwapFeePercentage","nodeType":"VariableDeclaration","scope":2102,"src":"52883:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2034,"name":"uint256","nodeType":"ElementaryTypeName","src":"52883:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2037,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":2102,"src":"52927:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2036,"name":"bytes","nodeType":"ElementaryTypeName","src":"52927:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"52724:231:0"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2045,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2102,"src":"53007:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2043,"name":"uint256","nodeType":"ElementaryTypeName","src":"53007:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2044,"nodeType":"ArrayTypeName","src":"53007:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2048,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2102,"src":"53025:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2046,"name":"uint256","nodeType":"ElementaryTypeName","src":"53025:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2047,"nodeType":"ArrayTypeName","src":"53025:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"53006:36:0"},"scope":2691,"src":"52705:1229:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2151,"nodeType":"Block","src":"54913:616:0","statements":[{"expression":{"arguments":[{"expression":{"id":2129,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"54960:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"54960:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2131,"name":"_getTotalTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"54977:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"54977:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2126,"name":"InputHelpers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"54924:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_InputHelpers_$8146_$","typeString":"type(library InputHelpers)"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ensureInputLengthMatch","nodeType":"MemberAccess","referencedDeclaration":8054,"src":"54924:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"54924:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2134,"nodeType":"ExpressionStatement","src":"54924:71:0"},{"expression":{"arguments":[{"id":2136,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"55035:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2137,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"55056:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2138,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"55077:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2139,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"55101:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2140,"name":"lastChangeBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"55124:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2141,"name":"protocolSwapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"55154:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2142,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"55194:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2143,"name":"_onJoinPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"55217:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32,address,address,uint256[] memory,uint256,uint256,uint256[] memory,bytes memory) returns (uint256,uint256[] memory,uint256[] memory)"}},{"id":2144,"name":"_downscaleUpArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"55243:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory,uint256[] memory) view"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32,address,address,uint256[] memory,uint256,uint256,uint256[] memory,bytes memory) returns (uint256,uint256[] memory,uint256[] memory)"},{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory,uint256[] memory) view"}],"id":2135,"name":"_queryAction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"55008:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$_t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$_$returns$__$","typeString":"function (bytes32,address,address,uint256[] memory,uint256,uint256,bytes memory,function (bytes32,address,address,uint256[] memory,uint256,uint256,uint256[] memory,bytes memory) returns (uint256,uint256[] memory,uint256[] memory),function (uint256[] memory,uint256[] memory) view)"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"55008:263:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2146,"nodeType":"ExpressionStatement","src":"55008:263:0"},{"expression":{"components":[{"id":2147,"name":"bptOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"55503:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2148,"name":"amountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"55511:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"55502:19:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"functionReturnParameters":2125,"id":2150,"nodeType":"Return","src":"55495:26:0"}]},"documentation":{"id":2103,"nodeType":"StructuredDocumentation","src":"53968:627:0","text":" @dev Returns the amount of BPT that would be granted to `recipient` if the `onJoinPool` hook were called by the\n Vault with the same arguments, along with the number of tokens `sender` would have to supply.\n This function is not meant to be called directly, but rather from a helper contract that fetches current Vault\n data, such as the protocol swap fee percentage and Pool balances.\n Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must\n explicitly use eth_call instead of eth_sendTransaction."},"functionSelector":"87ec6817","id":2152,"implemented":true,"kind":"function","modifiers":[],"name":"queryJoin","nodeType":"FunctionDefinition","parameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":2152,"src":"54630:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"54630:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2107,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":2152,"src":"54655:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2106,"name":"address","nodeType":"ElementaryTypeName","src":"54655:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2109,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2152,"src":"54680:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2108,"name":"address","nodeType":"ElementaryTypeName","src":"54680:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2112,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":2152,"src":"54708:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"54708:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2111,"nodeType":"ArrayTypeName","src":"54708:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2114,"mutability":"mutable","name":"lastChangeBlock","nodeType":"VariableDeclaration","scope":2152,"src":"54744:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2113,"name":"uint256","nodeType":"ElementaryTypeName","src":"54744:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2116,"mutability":"mutable","name":"protocolSwapFeePercentage","nodeType":"VariableDeclaration","scope":2152,"src":"54778:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2115,"name":"uint256","nodeType":"ElementaryTypeName","src":"54778:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":2152,"src":"54822:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2117,"name":"bytes","nodeType":"ElementaryTypeName","src":"54822:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"54619:231:0"},"returnParameters":{"id":2125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"bptOut","nodeType":"VariableDeclaration","scope":2152,"src":"54869:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"54869:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2124,"mutability":"mutable","name":"amountsIn","nodeType":"VariableDeclaration","scope":2152,"src":"54885:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2122,"name":"uint256","nodeType":"ElementaryTypeName","src":"54885:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2123,"nodeType":"ArrayTypeName","src":"54885:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"54868:44:0"},"scope":2691,"src":"54601:928:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2201,"nodeType":"Block","src":"56476:618:0","statements":[{"expression":{"arguments":[{"expression":{"id":2179,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"56523:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"56523:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2181,"name":"_getTotalTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"56540:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"56540:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2176,"name":"InputHelpers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"56487:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_InputHelpers_$8146_$","typeString":"type(library InputHelpers)"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ensureInputLengthMatch","nodeType":"MemberAccess","referencedDeclaration":8054,"src":"56487:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"56487:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2184,"nodeType":"ExpressionStatement","src":"56487:71:0"},{"expression":{"arguments":[{"id":2186,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"56598:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2187,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"56619:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2188,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"56640:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2189,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"56664:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2190,"name":"lastChangeBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"56687:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2191,"name":"protocolSwapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"56717:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2192,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"56757:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2193,"name":"_onExitPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"56780:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32,address,address,uint256[] memory,uint256,uint256,uint256[] memory,bytes memory) returns (uint256,uint256[] memory,uint256[] memory)"}},{"id":2194,"name":"_downscaleDownArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"56806:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory,uint256[] memory) view"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32,address,address,uint256[] memory,uint256,uint256,uint256[] memory,bytes memory) returns (uint256,uint256[] memory,uint256[] memory)"},{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory,uint256[] memory) view"}],"id":2185,"name":"_queryAction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"56571:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$_t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$_$returns$__$","typeString":"function (bytes32,address,address,uint256[] memory,uint256,uint256,bytes memory,function (bytes32,address,address,uint256[] memory,uint256,uint256,uint256[] memory,bytes memory) returns (uint256,uint256[] memory,uint256[] memory),function (uint256[] memory,uint256[] memory) view)"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"56571:265:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2196,"nodeType":"ExpressionStatement","src":"56571:265:0"},{"expression":{"components":[{"id":2197,"name":"bptIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"57068:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2198,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"57075:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"57067:19:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"functionReturnParameters":2175,"id":2200,"nodeType":"Return","src":"57060:26:0"}]},"documentation":{"id":2153,"nodeType":"StructuredDocumentation","src":"55537:621:0","text":" @dev Returns the amount of BPT that would be burned from `sender` if the `onExitPool` hook were called by the\n Vault with the same arguments, along with the number of tokens `recipient` would receive.\n This function is not meant to be called directly, but rather from a helper contract that fetches current Vault\n data, such as the protocol swap fee percentage and Pool balances.\n Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must\n explicitly use eth_call instead of eth_sendTransaction."},"functionSelector":"6028bfd4","id":2202,"implemented":true,"kind":"function","modifiers":[],"name":"queryExit","nodeType":"FunctionDefinition","parameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":2202,"src":"56193:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"56193:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2157,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":2202,"src":"56218:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2156,"name":"address","nodeType":"ElementaryTypeName","src":"56218:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2159,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2202,"src":"56243:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2158,"name":"address","nodeType":"ElementaryTypeName","src":"56243:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2162,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":2202,"src":"56271:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2160,"name":"uint256","nodeType":"ElementaryTypeName","src":"56271:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2161,"nodeType":"ArrayTypeName","src":"56271:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2164,"mutability":"mutable","name":"lastChangeBlock","nodeType":"VariableDeclaration","scope":2202,"src":"56307:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2163,"name":"uint256","nodeType":"ElementaryTypeName","src":"56307:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2166,"mutability":"mutable","name":"protocolSwapFeePercentage","nodeType":"VariableDeclaration","scope":2202,"src":"56341:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2165,"name":"uint256","nodeType":"ElementaryTypeName","src":"56341:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2168,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":2202,"src":"56385:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2167,"name":"bytes","nodeType":"ElementaryTypeName","src":"56385:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"56182:231:0"},"returnParameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2171,"mutability":"mutable","name":"bptIn","nodeType":"VariableDeclaration","scope":2202,"src":"56432:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2170,"name":"uint256","nodeType":"ElementaryTypeName","src":"56432:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2174,"mutability":"mutable","name":"amountsOut","nodeType":"VariableDeclaration","scope":2202,"src":"56447:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2172,"name":"uint256","nodeType":"ElementaryTypeName","src":"56447:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2173,"nodeType":"ArrayTypeName","src":"56447:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"56431:44:0"},"scope":2691,"src":"56164:930:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2203,"nodeType":"StructuredDocumentation","src":"57240:817:0","text":" @dev Called when the Pool is joined for the first time; that is, when the BPT total supply is zero.\n Returns the amount of BPT to mint, and the token amounts the Pool will receive in return.\n Minted BPT will be sent to `recipient`, except for _getMinimumBpt(), which will be deducted from this amount and\n sent to the zero address instead. This will cause that BPT to remain forever locked there, preventing total BTP\n from ever dropping below that value, and ensuring `_onInitializePool` can only be called once in the entire\n Pool's lifetime.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault."},"id":2222,"implemented":false,"kind":"function","modifiers":[],"name":"_onInitializePool","nodeType":"FunctionDefinition","parameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2205,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":2222,"src":"58100:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"58100:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2207,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":2222,"src":"58125:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2206,"name":"address","nodeType":"ElementaryTypeName","src":"58125:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2209,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2222,"src":"58150:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2208,"name":"address","nodeType":"ElementaryTypeName","src":"58150:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"scalingFactors","nodeType":"VariableDeclaration","scope":2222,"src":"58178:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2210,"name":"uint256","nodeType":"ElementaryTypeName","src":"58178:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2211,"nodeType":"ArrayTypeName","src":"58178:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2214,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":2222,"src":"58220:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2213,"name":"bytes","nodeType":"ElementaryTypeName","src":"58220:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"58089:159:0"},"returnParameters":{"id":2221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"bptAmountOut","nodeType":"VariableDeclaration","scope":2222,"src":"58275:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2216,"name":"uint256","nodeType":"ElementaryTypeName","src":"58275:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2220,"mutability":"mutable","name":"amountsIn","nodeType":"VariableDeclaration","scope":2222,"src":"58297:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2218,"name":"uint256","nodeType":"ElementaryTypeName","src":"58297:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2219,"nodeType":"ArrayTypeName","src":"58297:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"58274:50:0"},"scope":2691,"src":"58063:262:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":2223,"nodeType":"StructuredDocumentation","src":"58333:1021:0","text":" @dev Called whenever the Pool is joined after the first initialization join (see `_onInitializePool`).\n Returns the amount of BPT to mint, the token amounts that the Pool will receive in return, and the number of\n tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n Minted BPT will be sent to `recipient`.\n The tokens granted to the Pool will be transferred from `sender`. These amounts are considered upscaled and will\n be downscaled (rounding up) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onJoinPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault."},"id":2252,"implemented":false,"kind":"function","modifiers":[],"name":"_onJoinPool","nodeType":"FunctionDefinition","parameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":2252,"src":"59391:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"59391:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2227,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":2252,"src":"59416:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2226,"name":"address","nodeType":"ElementaryTypeName","src":"59416:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2229,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2252,"src":"59441:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2228,"name":"address","nodeType":"ElementaryTypeName","src":"59441:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2232,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":2252,"src":"59469:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"59469:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2231,"nodeType":"ArrayTypeName","src":"59469:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2234,"mutability":"mutable","name":"lastChangeBlock","nodeType":"VariableDeclaration","scope":2252,"src":"59505:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"59505:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2236,"mutability":"mutable","name":"protocolSwapFeePercentage","nodeType":"VariableDeclaration","scope":2252,"src":"59539:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"59539:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2239,"mutability":"mutable","name":"scalingFactors","nodeType":"VariableDeclaration","scope":2252,"src":"59583:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2237,"name":"uint256","nodeType":"ElementaryTypeName","src":"59583:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2238,"nodeType":"ArrayTypeName","src":"59583:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2241,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":2252,"src":"59625:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2240,"name":"bytes","nodeType":"ElementaryTypeName","src":"59625:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"59380:273:0"},"returnParameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"bptAmountOut","nodeType":"VariableDeclaration","scope":2252,"src":"59721:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2243,"name":"uint256","nodeType":"ElementaryTypeName","src":"59721:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2247,"mutability":"mutable","name":"amountsIn","nodeType":"VariableDeclaration","scope":2252,"src":"59756:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2245,"name":"uint256","nodeType":"ElementaryTypeName","src":"59756:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2246,"nodeType":"ArrayTypeName","src":"59756:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2250,"mutability":"mutable","name":"dueProtocolFeeAmounts","nodeType":"VariableDeclaration","scope":2252,"src":"59797:38:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"59797:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2249,"nodeType":"ArrayTypeName","src":"59797:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"59706:140:0"},"scope":2691,"src":"59360:487:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":2253,"nodeType":"StructuredDocumentation","src":"59855:949:0","text":" @dev Called whenever the Pool is exited.\n Returns the amount of BPT to burn, the token amounts for each Pool token that the Pool will grant in return, and\n the number of tokens to pay in protocol swap fees.\n Implementations of this function might choose to mutate the `balances` array to save gas (e.g. when\n performing intermediate calculations, such as subtraction of due protocol fees). This can be done safely.\n BPT will be burnt from `sender`.\n The Pool will grant tokens to `recipient`. These amounts are considered upscaled and will be downscaled\n (rounding down) before being returned to the Vault.\n Due protocol swap fees will be taken from the Pool's balance in the Vault (see `IBasePool.onExitPool`). These\n amounts are considered upscaled and will be downscaled (rounding down) before being returned to the Vault."},"id":2282,"implemented":false,"kind":"function","modifiers":[],"name":"_onExitPool","nodeType":"FunctionDefinition","parameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":2282,"src":"60841:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60841:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2257,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":2282,"src":"60866:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2256,"name":"address","nodeType":"ElementaryTypeName","src":"60866:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2259,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2282,"src":"60891:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"60891:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2262,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":2282,"src":"60919:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2260,"name":"uint256","nodeType":"ElementaryTypeName","src":"60919:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2261,"nodeType":"ArrayTypeName","src":"60919:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2264,"mutability":"mutable","name":"lastChangeBlock","nodeType":"VariableDeclaration","scope":2282,"src":"60955:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2263,"name":"uint256","nodeType":"ElementaryTypeName","src":"60955:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2266,"mutability":"mutable","name":"protocolSwapFeePercentage","nodeType":"VariableDeclaration","scope":2282,"src":"60989:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2265,"name":"uint256","nodeType":"ElementaryTypeName","src":"60989:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2269,"mutability":"mutable","name":"scalingFactors","nodeType":"VariableDeclaration","scope":2282,"src":"61033:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2267,"name":"uint256","nodeType":"ElementaryTypeName","src":"61033:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2268,"nodeType":"ArrayTypeName","src":"61033:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2271,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":2282,"src":"61075:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2270,"name":"bytes","nodeType":"ElementaryTypeName","src":"61075:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"60830:273:0"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"mutability":"mutable","name":"bptAmountIn","nodeType":"VariableDeclaration","scope":2282,"src":"61171:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2273,"name":"uint256","nodeType":"ElementaryTypeName","src":"61171:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2277,"mutability":"mutable","name":"amountsOut","nodeType":"VariableDeclaration","scope":2282,"src":"61205:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2275,"name":"uint256","nodeType":"ElementaryTypeName","src":"61205:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2276,"nodeType":"ArrayTypeName","src":"61205:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2280,"mutability":"mutable","name":"dueProtocolFeeAmounts","nodeType":"VariableDeclaration","scope":2282,"src":"61247:38:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"61247:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2279,"nodeType":"ArrayTypeName","src":"61247:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"61156:140:0"},"scope":2691,"src":"60810:487:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2300,"nodeType":"Block","src":"61500:175:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2295,"name":"getSwapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"61643:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"61643:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2292,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"61624:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$5377_$","typeString":"type(library FixedPoint)"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ONE","nodeType":"MemberAccess","referencedDeclaration":5042,"src":"61624:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"61624:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"61624:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2290,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"61611:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divUp","nodeType":"MemberAccess","referencedDeclaration":5280,"src":"61611:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"61611:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2289,"id":2299,"nodeType":"Return","src":"61604:63:0"}]},"documentation":{"id":2283,"nodeType":"StructuredDocumentation","src":"61334:85:0","text":" @dev Adds swap fee amount to `amount`, returning a higher value."},"id":2301,"implemented":true,"kind":"function","modifiers":[],"name":"_addSwapFeeAmount","nodeType":"FunctionDefinition","parameters":{"id":2286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2301,"src":"61452:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2284,"name":"uint256","nodeType":"ElementaryTypeName","src":"61452:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61451:16:0"},"returnParameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2301,"src":"61491:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2287,"name":"uint256","nodeType":"ElementaryTypeName","src":"61491:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61490:9:0"},"scope":2691,"src":"61425:250:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2322,"nodeType":"Block","src":"61860:207:0","statements":[{"assignments":[2310],"declarations":[{"constant":false,"id":2310,"mutability":"mutable","name":"feeAmount","nodeType":"VariableDeclaration","scope":2322,"src":"61964:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint256","nodeType":"ElementaryTypeName","src":"61964:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2316,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2313,"name":"getSwapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"61997:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"61997:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2311,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"61984:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulUp","nodeType":"MemberAccess","referencedDeclaration":5182,"src":"61984:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"61984:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"61964:56:0"},{"expression":{"arguments":[{"id":2319,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"62049:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2317,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"62038:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"62038:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"62038:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2308,"id":2321,"nodeType":"Return","src":"62031:28:0"}]},"documentation":{"id":2302,"nodeType":"StructuredDocumentation","src":"61683:91:0","text":" @dev Subtracts swap fee amount from `amount`, returning a lower value."},"id":2323,"implemented":true,"kind":"function","modifiers":[],"name":"_subtractSwapFeeAmount","nodeType":"FunctionDefinition","parameters":{"id":2305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2323,"src":"61812:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2303,"name":"uint256","nodeType":"ElementaryTypeName","src":"61812:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61811:16:0"},"returnParameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2323,"src":"61851:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2306,"name":"uint256","nodeType":"ElementaryTypeName","src":"61851:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61850:9:0"},"scope":2691,"src":"61780:287:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2371,"nodeType":"Block","src":"62336:444:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2333,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"62359:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}],"id":2332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"62351:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2331,"name":"address","nodeType":"ElementaryTypeName","src":"62351:7:0","typeDescriptions":{}}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"62351:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":2337,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"62377:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BasePool_$2691","typeString":"contract BasePool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePool_$2691","typeString":"contract BasePool"}],"id":2336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"62369:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2335,"name":"address","nodeType":"ElementaryTypeName","src":"62369:7:0","typeDescriptions":{}}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"62369:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"62351:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2344,"nodeType":"IfStatement","src":"62347:85:0","trueBody":{"id":2343,"nodeType":"Block","src":"62384:48:0","statements":[{"expression":{"expression":{"id":2340,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"62406:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$5377_$","typeString":"type(library FixedPoint)"}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ONE","nodeType":"MemberAccess","referencedDeclaration":5042,"src":"62406:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2330,"id":2342,"nodeType":"Return","src":"62399:21:0"}]}},{"assignments":[2346],"declarations":[{"constant":false,"id":2346,"mutability":"mutable","name":"tokenDecimals","nodeType":"VariableDeclaration","scope":2371,"src":"62525:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"62525:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2355,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":2350,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"62563:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}],"id":2349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"62555:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2348,"name":"address","nodeType":"ElementaryTypeName","src":"62555:7:0","typeDescriptions":{}}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"62555:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2347,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"62549:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$960_$","typeString":"type(contract ERC20)"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"62549:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$960","typeString":"contract ERC20"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":559,"src":"62549:30:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"62549:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"62525:56:0"},{"assignments":[2357],"declarations":[{"constant":false,"id":2357,"mutability":"mutable","name":"decimalsDifference","nodeType":"VariableDeclaration","scope":2371,"src":"62659:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2356,"name":"uint256","nodeType":"ElementaryTypeName","src":"62659:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2363,"initialValue":{"arguments":[{"hexValue":"3138","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"62697:2:0","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},{"id":2361,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"62701:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2358,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"62688:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8037_$","typeString":"type(library Math)"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":7847,"src":"62688:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"62688:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"62659:56:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2364,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"62733:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$5377_$","typeString":"type(library FixedPoint)"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ONE","nodeType":"MemberAccess","referencedDeclaration":5042,"src":"62733:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"62750:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2367,"name":"decimalsDifference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"62754:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"62750:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"62733:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2330,"id":2370,"nodeType":"Return","src":"62726:46:0"}]},"documentation":{"id":2324,"nodeType":"StructuredDocumentation","src":"62093:160:0","text":" @dev Returns a scaling factor that, when multiplied to a token amount for `token`, normalizes its balance as if\n it had 18 decimals."},"id":2372,"implemented":true,"kind":"function","modifiers":[],"name":"_computeScalingFactor","nodeType":"FunctionDefinition","parameters":{"id":2327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2326,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":2372,"src":"62290:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":2325,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"62290:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"62289:14:0"},"returnParameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2372,"src":"62327:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2328,"name":"uint256","nodeType":"ElementaryTypeName","src":"62327:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62326:9:0"},"scope":2691,"src":"62259:521:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"documentation":{"id":2373,"nodeType":"StructuredDocumentation","src":"62788:762:0","text":" @dev Returns the scaling factor for one of the Pool's tokens. Reverts if `token` is not a token registered by the\n Pool.\n All scaling factors are fixed-point values with 18 decimals, to allow for this function to be overridden by\n derived contracts that need to apply further scaling, making these factors potentially non-integer.\n The largest 'base' scaling factor (i.e. in tokens with less than 18 decimals) is 10**18, which in fixed-point is\n 10**36. This value can be multiplied with a 112 bit Vault balance with no overflow by a factor of ~1e7, making\n even relatively 'large' factors safe to use.\n The 1e7 figure is the result of 2**256 / (1e18 * 1e18 * 2**112)."},"id":2380,"implemented":false,"kind":"function","modifiers":[],"name":"_scalingFactor","nodeType":"FunctionDefinition","parameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":2380,"src":"63580:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":2374,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"63580:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"63579:14:0"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2380,"src":"63625:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2377,"name":"uint256","nodeType":"ElementaryTypeName","src":"63625:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63624:9:0"},"scope":2691,"src":"63556:78:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":2381,"nodeType":"StructuredDocumentation","src":"63642:215:0","text":" @dev Same as `_scalingFactor()`, except for all registered tokens (in the same order as registered). The Vault\n will always pass balances in this order when calling any of the Pool hooks."},"id":2387,"implemented":false,"kind":"function","modifiers":[],"name":"_scalingFactors","nodeType":"FunctionDefinition","parameters":{"id":2382,"nodeType":"ParameterList","parameters":[],"src":"63887:2:0"},"returnParameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2387,"src":"63921:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"63921:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2384,"nodeType":"ArrayTypeName","src":"63921:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"63920:18:0"},"scope":2691,"src":"63863:76:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2396,"nodeType":"Block","src":"64017:43:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2393,"name":"_scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"64035:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"64035:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2392,"id":2395,"nodeType":"Return","src":"64028:24:0"}]},"functionSelector":"1dd746ea","id":2397,"implemented":true,"kind":"function","modifiers":[],"name":"getScalingFactors","nodeType":"FunctionDefinition","parameters":{"id":2388,"nodeType":"ParameterList","parameters":[],"src":"63973:2:0"},"returnParameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2397,"src":"63999:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2389,"name":"uint256","nodeType":"ElementaryTypeName","src":"63999:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2390,"nodeType":"ArrayTypeName","src":"63999:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"63998:18:0"},"scope":2691,"src":"63947:113:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2413,"nodeType":"Block","src":"64317:496:0","statements":[{"expression":{"arguments":[{"id":2409,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"64783:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2410,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"64791:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2407,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"64764:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$5377_$","typeString":"type(library FixedPoint)"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDown","nodeType":"MemberAccess","referencedDeclaration":5134,"src":"64764:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"64764:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2406,"id":2412,"nodeType":"Return","src":"64757:48:0"}]},"documentation":{"id":2398,"nodeType":"StructuredDocumentation","src":"64068:154:0","text":" @dev Applies `scalingFactor` to `amount`, resulting in a larger or equal value depending on whether it needed\n scaling or not."},"id":2414,"implemented":true,"kind":"function","modifiers":[],"name":"_upscale","nodeType":"FunctionDefinition","parameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2400,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2414,"src":"64246:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2399,"name":"uint256","nodeType":"ElementaryTypeName","src":"64246:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2402,"mutability":"mutable","name":"scalingFactor","nodeType":"VariableDeclaration","scope":2414,"src":"64262:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2401,"name":"uint256","nodeType":"ElementaryTypeName","src":"64262:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64245:39:0"},"returnParameters":{"id":2406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2405,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2414,"src":"64308:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2404,"name":"uint256","nodeType":"ElementaryTypeName","src":"64308:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64307:9:0"},"scope":2691,"src":"64228:585:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2451,"nodeType":"Block","src":"65084:155:0","statements":[{"body":{"id":2449,"nodeType":"Block","src":"65143:89:0","statements":[{"expression":{"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2435,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"65158:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2437,"indexExpression":{"id":2436,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"65166:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"65158:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":2440,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"65190:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2442,"indexExpression":{"id":2441,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"65198:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"65190:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2443,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"65202:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2445,"indexExpression":{"id":2444,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"65217:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"65202:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2438,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"65171:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$5377_$","typeString":"type(library FixedPoint)"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDown","nodeType":"MemberAccess","referencedDeclaration":5134,"src":"65171:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"65171:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"65158:62:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2448,"nodeType":"ExpressionStatement","src":"65158:62:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2428,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"65115:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2429,"name":"_getTotalTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"65119:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"65119:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"65115:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2450,"initializationExpression":{"assignments":[2425],"declarations":[{"constant":false,"id":2425,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":2450,"src":"65100:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"65100:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2427,"initialValue":{"hexValue":"30","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"65112:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"65100:13:0"},"loopExpression":{"expression":{"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"65138:3:0","subExpression":{"id":2432,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"65140:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2434,"nodeType":"ExpressionStatement","src":"65138:3:0"},"nodeType":"ForStatement","src":"65095:137:0"}]},"documentation":{"id":2415,"nodeType":"StructuredDocumentation","src":"64821:161:0","text":" @dev Same as `_upscale`, but for an entire array. This function does not return anything, but instead *mutates*\n the `amounts` array."},"id":2452,"implemented":true,"kind":"function","modifiers":[],"name":"_upscaleArray","nodeType":"FunctionDefinition","parameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2418,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":2452,"src":"65011:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2416,"name":"uint256","nodeType":"ElementaryTypeName","src":"65011:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2417,"nodeType":"ArrayTypeName","src":"65011:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2421,"mutability":"mutable","name":"scalingFactors","nodeType":"VariableDeclaration","scope":2452,"src":"65037:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2419,"name":"uint256","nodeType":"ElementaryTypeName","src":"65037:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2420,"nodeType":"ArrayTypeName","src":"65037:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"65010:59:0"},"returnParameters":{"id":2423,"nodeType":"ParameterList","parameters":[],"src":"65084:0:0"},"scope":2691,"src":"64988:251:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2468,"nodeType":"Block","src":"65544:67:0","statements":[{"expression":{"arguments":[{"id":2464,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"65581:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2465,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"65589:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2462,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"65562:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$5377_$","typeString":"type(library FixedPoint)"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divDown","nodeType":"MemberAccess","referencedDeclaration":5228,"src":"65562:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"65562:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2461,"id":2467,"nodeType":"Return","src":"65555:48:0"}]},"documentation":{"id":2453,"nodeType":"StructuredDocumentation","src":"65247:196:0","text":" @dev Reverses the `scalingFactor` applied to `amount`, resulting in a smaller or equal value depending on\n whether it needed scaling or not. The result is rounded down."},"id":2469,"implemented":true,"kind":"function","modifiers":[],"name":"_downscaleDown","nodeType":"FunctionDefinition","parameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2455,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2469,"src":"65473:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2454,"name":"uint256","nodeType":"ElementaryTypeName","src":"65473:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2457,"mutability":"mutable","name":"scalingFactor","nodeType":"VariableDeclaration","scope":2469,"src":"65489:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2456,"name":"uint256","nodeType":"ElementaryTypeName","src":"65489:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65472:39:0"},"returnParameters":{"id":2461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2469,"src":"65535:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2459,"name":"uint256","nodeType":"ElementaryTypeName","src":"65535:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65534:9:0"},"scope":2691,"src":"65449:162:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2506,"nodeType":"Block","src":"65894:155:0","statements":[{"body":{"id":2504,"nodeType":"Block","src":"65953:89:0","statements":[{"expression":{"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2490,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"65968:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2492,"indexExpression":{"id":2491,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"65976:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"65968:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":2495,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"66000:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2497,"indexExpression":{"id":2496,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"66008:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"66000:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2498,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"66012:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2500,"indexExpression":{"id":2499,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"66027:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"66012:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2493,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"65981:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$5377_$","typeString":"type(library FixedPoint)"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divDown","nodeType":"MemberAccess","referencedDeclaration":5228,"src":"65981:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"65981:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"65968:62:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2503,"nodeType":"ExpressionStatement","src":"65968:62:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2483,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"65925:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2484,"name":"_getTotalTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"65929:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"65929:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"65925:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2505,"initializationExpression":{"assignments":[2480],"declarations":[{"constant":false,"id":2480,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":2505,"src":"65910:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2479,"name":"uint256","nodeType":"ElementaryTypeName","src":"65910:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2482,"initialValue":{"hexValue":"30","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"65922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"65910:13:0"},"loopExpression":{"expression":{"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"65948:3:0","subExpression":{"id":2487,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"65950:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2489,"nodeType":"ExpressionStatement","src":"65948:3:0"},"nodeType":"ForStatement","src":"65905:137:0"}]},"documentation":{"id":2470,"nodeType":"StructuredDocumentation","src":"65619:167:0","text":" @dev Same as `_downscaleDown`, but for an entire array. This function does not return anything, but instead\n *mutates* the `amounts` array."},"id":2507,"implemented":true,"kind":"function","modifiers":[],"name":"_downscaleDownArray","nodeType":"FunctionDefinition","parameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2473,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":2507,"src":"65821:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2471,"name":"uint256","nodeType":"ElementaryTypeName","src":"65821:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2472,"nodeType":"ArrayTypeName","src":"65821:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2476,"mutability":"mutable","name":"scalingFactors","nodeType":"VariableDeclaration","scope":2507,"src":"65847:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2474,"name":"uint256","nodeType":"ElementaryTypeName","src":"65847:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2475,"nodeType":"ArrayTypeName","src":"65847:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"65820:59:0"},"returnParameters":{"id":2478,"nodeType":"ParameterList","parameters":[],"src":"65894:0:0"},"scope":2691,"src":"65792:257:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2523,"nodeType":"Block","src":"66350:65:0","statements":[{"expression":{"arguments":[{"id":2519,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"66385:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2520,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"66393:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2517,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"66368:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$5377_$","typeString":"type(library FixedPoint)"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divUp","nodeType":"MemberAccess","referencedDeclaration":5280,"src":"66368:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"66368:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2516,"id":2522,"nodeType":"Return","src":"66361:46:0"}]},"documentation":{"id":2508,"nodeType":"StructuredDocumentation","src":"66057:194:0","text":" @dev Reverses the `scalingFactor` applied to `amount`, resulting in a smaller or equal value depending on\n whether it needed scaling or not. The result is rounded up."},"id":2524,"implemented":true,"kind":"function","modifiers":[],"name":"_downscaleUp","nodeType":"FunctionDefinition","parameters":{"id":2513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2524,"src":"66279:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"66279:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2512,"mutability":"mutable","name":"scalingFactor","nodeType":"VariableDeclaration","scope":2524,"src":"66295:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2511,"name":"uint256","nodeType":"ElementaryTypeName","src":"66295:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66278:39:0"},"returnParameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2524,"src":"66341:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2514,"name":"uint256","nodeType":"ElementaryTypeName","src":"66341:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66340:9:0"},"scope":2691,"src":"66257:158:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2561,"nodeType":"Block","src":"66694:153:0","statements":[{"body":{"id":2559,"nodeType":"Block","src":"66753:87:0","statements":[{"expression":{"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2545,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"66768:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2547,"indexExpression":{"id":2546,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"66776:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"66768:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":2550,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"66798:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2552,"indexExpression":{"id":2551,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"66806:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"66798:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2553,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"66810:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2555,"indexExpression":{"id":2554,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"66825:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"66810:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2548,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"66781:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$5377_$","typeString":"type(library FixedPoint)"}},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divUp","nodeType":"MemberAccess","referencedDeclaration":5280,"src":"66781:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"66781:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"66768:60:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2558,"nodeType":"ExpressionStatement","src":"66768:60:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2538,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"66725:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2539,"name":"_getTotalTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"66729:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"66729:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"66725:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2560,"initializationExpression":{"assignments":[2535],"declarations":[{"constant":false,"id":2535,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":2560,"src":"66710:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2534,"name":"uint256","nodeType":"ElementaryTypeName","src":"66710:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2537,"initialValue":{"hexValue":"30","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"66722:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"66710:13:0"},"loopExpression":{"expression":{"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"66748:3:0","subExpression":{"id":2542,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"66750:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2544,"nodeType":"ExpressionStatement","src":"66748:3:0"},"nodeType":"ForStatement","src":"66705:135:0"}]},"documentation":{"id":2525,"nodeType":"StructuredDocumentation","src":"66423:165:0","text":" @dev Same as `_downscaleUp`, but for an entire array. This function does not return anything, but instead\n *mutates* the `amounts` array."},"id":2562,"implemented":true,"kind":"function","modifiers":[],"name":"_downscaleUpArray","nodeType":"FunctionDefinition","parameters":{"id":2532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":2562,"src":"66621:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2526,"name":"uint256","nodeType":"ElementaryTypeName","src":"66621:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2527,"nodeType":"ArrayTypeName","src":"66621:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2531,"mutability":"mutable","name":"scalingFactors","nodeType":"VariableDeclaration","scope":2562,"src":"66647:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"66647:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2530,"nodeType":"ArrayTypeName","src":"66647:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"66620:59:0"},"returnParameters":{"id":2533,"nodeType":"ParameterList","parameters":[],"src":"66694:0:0"},"scope":2691,"src":"66594:253:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[281],"body":{"id":2573,"nodeType":"Block","src":"66926:423:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2568,"name":"getVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"67315:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IVault_$9483_$","typeString":"function () view returns (contract IVault)"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"67315:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAuthorizer","nodeType":"MemberAccess","referencedDeclaration":9043,"src":"67315:24:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IAuthorizer_$9665_$","typeString":"function () view external returns (contract IAuthorizer)"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"67315:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$9665","typeString":"contract IAuthorizer"}},"functionReturnParameters":2567,"id":2572,"nodeType":"Return","src":"67308:33:0"}]},"id":2574,"implemented":true,"kind":"function","modifiers":[],"name":"_getAuthorizer","nodeType":"FunctionDefinition","overrides":{"id":2564,"nodeType":"OverrideSpecifier","overrides":[],"src":"66895:8:0"},"parameters":{"id":2563,"nodeType":"ParameterList","parameters":[],"src":"66878:2:0"},"returnParameters":{"id":2567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2574,"src":"66913:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$9665","typeString":"contract IAuthorizer"},"typeName":{"id":2565,"name":"IAuthorizer","nodeType":"UserDefinedTypeName","referencedDeclaration":9665,"src":"66913:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$9665","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"66912:13:0"},"scope":2691,"src":"66855:494:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2689,"nodeType":"Block","src":"67914:6448:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2632,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"68072:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"68072:10:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":2636,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"68094:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BasePool_$2691","typeString":"contract BasePool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePool_$2691","typeString":"contract BasePool"}],"id":2635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"68086:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2634,"name":"address","nodeType":"ElementaryTypeName","src":"68086:7:0","typeDescriptions":{}}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"68086:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"68072:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2687,"nodeType":"Block","src":"72281:2074:0","statements":[{"assignments":[2656],"declarations":[{"constant":false,"id":2656,"mutability":"mutable","name":"scalingFactors","nodeType":"VariableDeclaration","scope":2687,"src":"72296:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2654,"name":"uint256","nodeType":"ElementaryTypeName","src":"72296:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2655,"nodeType":"ArrayTypeName","src":"72296:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2659,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2657,"name":"_scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"72330:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"72330:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"72296:51:0"},{"expression":{"arguments":[{"id":2661,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"72376:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2662,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"72386:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2660,"name":"_upscaleArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"72362:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory,uint256[] memory) view"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"72362:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2664,"nodeType":"ExpressionStatement","src":"72362:39:0"},{"assignments":[2666,2669,null],"declarations":[{"constant":false,"id":2666,"mutability":"mutable","name":"bptAmount","nodeType":"VariableDeclaration","scope":2687,"src":"72419:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2665,"name":"uint256","nodeType":"ElementaryTypeName","src":"72419:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2669,"mutability":"mutable","name":"tokenAmounts","nodeType":"VariableDeclaration","scope":2687,"src":"72438:29:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2667,"name":"uint256","nodeType":"ElementaryTypeName","src":"72438:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2668,"nodeType":"ArrayTypeName","src":"72438:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},null],"id":2680,"initialValue":{"arguments":[{"id":2671,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"72499:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2672,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"72524:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2673,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"72549:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2674,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"72577:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2675,"name":"lastChangeBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"72604:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2676,"name":"protocolSwapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"72638:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2677,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"72682:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2678,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"72715:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2670,"name":"_action","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"72473:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32,address,address,uint256[] memory,uint256,uint256,uint256[] memory,bytes memory) returns (uint256,uint256[] memory,uint256[] memory)"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"72473:265:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"72418:320:0"},{"expression":{"arguments":[{"id":2682,"name":"tokenAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"72771:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2683,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"72785:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2681,"name":"_downscaleArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"72755:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory,uint256[] memory) view"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"72755:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2685,"nodeType":"ExpressionStatement","src":"72755:45:0"},{"AST":{"nodeType":"YulBlock","src":"72887:1457:0","statements":[{"nodeType":"YulVariableDeclaration","src":"73272:40:0","value":{"arguments":[{"arguments":[{"name":"tokenAmounts","nodeType":"YulIdentifier","src":"73294:12:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"73288:5:0"},"nodeType":"YulFunctionCall","src":"73288:19:0"},{"kind":"number","nodeType":"YulLiteral","src":"73309:2:0","type":"","value":"32"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"73284:3:0"},"nodeType":"YulFunctionCall","src":"73284:28:0"},"variables":[{"name":"size","nodeType":"YulTypedName","src":"73276:4:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"73667:36:0","value":{"arguments":[{"name":"tokenAmounts","nodeType":"YulIdentifier","src":"73684:12:0"},{"kind":"number","nodeType":"YulLiteral","src":"73698:4:0","type":"","value":"0x20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"73680:3:0"},"nodeType":"YulFunctionCall","src":"73680:23:0"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"73671:5:0","type":""}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"73728:5:0"},{"name":"bptAmount","nodeType":"YulIdentifier","src":"73735:9:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"73721:6:0"},"nodeType":"YulFunctionCall","src":"73721:24:0"},"nodeType":"YulExpressionStatement","src":"73721:24:0"},{"expression":{"arguments":[{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"73957:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"73964:4:0","type":"","value":"0x20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"73953:3:0"},"nodeType":"YulFunctionCall","src":"73953:16:0"},{"kind":"number","nodeType":"YulLiteral","src":"73971:66:0","type":"","value":"0x0000000000000000000000000000000000000000000000000000000043adbafb"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"73946:6:0"},"nodeType":"YulFunctionCall","src":"73946:92:0"},"nodeType":"YulExpressionStatement","src":"73946:92:0"},{"nodeType":"YulAssignment","src":"74056:25:0","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"74069:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"74076:4:0","type":"","value":"0x04"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"74065:3:0"},"nodeType":"YulFunctionCall","src":"74065:16:0"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"74056:5:0"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"74308:5:0"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"74319:4:0"},{"kind":"number","nodeType":"YulLiteral","src":"74325:2:0","type":"","value":"68"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"74315:3:0"},"nodeType":"YulFunctionCall","src":"74315:13:0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"74301:6:0"},"nodeType":"YulFunctionCall","src":"74301:28:0"},"nodeType":"YulExpressionStatement","src":"74301:28:0"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2666,"isOffset":false,"isSlot":false,"src":"73735:9:0","valueSize":1},{"declaration":2669,"isOffset":false,"isSlot":false,"src":"73294:12:0","valueSize":1},{"declaration":2669,"isOffset":false,"isSlot":false,"src":"73684:12:0","valueSize":1}],"id":2686,"nodeType":"InlineAssembly","src":"72878:1466:0"}]},"id":2688,"nodeType":"IfStatement","src":"68068:6287:0","trueBody":{"id":2651,"nodeType":"Block","src":"68101:4174:0","statements":[{"assignments":[2640,null],"declarations":[{"constant":false,"id":2640,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":2651,"src":"68373:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2639,"name":"bool","nodeType":"ElementaryTypeName","src":"68373:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2649,"initialValue":{"arguments":[{"expression":{"id":2646,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"68410:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"68410:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":2643,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"68399:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BasePool_$2691","typeString":"contract BasePool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePool_$2691","typeString":"contract BasePool"}],"id":2642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"68391:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2641,"name":"address","nodeType":"ElementaryTypeName","src":"68391:7:0","typeDescriptions":{}}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"68391:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"68391:18:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"68391:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"68372:47:0"},{"AST":{"nodeType":"YulBlock","src":"68506:3758:0","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"68678:3376:0","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"69147:1:0","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"69150:1:0","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"69153:4:0","type":"","value":"0x04"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"69132:14:0"},"nodeType":"YulFunctionCall","src":"69132:26:0"},"nodeType":"YulExpressionStatement","src":"69132:26:0"},{"nodeType":"YulVariableDeclaration","src":"69184:94:0","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"69207:1:0","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"69201:5:0"},"nodeType":"YulFunctionCall","src":"69201:8:0"},{"kind":"number","nodeType":"YulLiteral","src":"69211:66:0","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"69197:3:0"},"nodeType":"YulFunctionCall","src":"69197:81:0"},"variables":[{"name":"error","nodeType":"YulTypedName","src":"69188:5:0","type":""}]},{"body":{"nodeType":"YulBlock","src":"69514:153:0","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"69560:1:0","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"69563:1:0","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"69566:14:0"},"nodeType":"YulFunctionCall","src":"69566:16:0"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"69545:14:0"},"nodeType":"YulFunctionCall","src":"69545:38:0"},"nodeType":"YulExpressionStatement","src":"69545:38:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"69620:1:0","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"69623:14:0"},"nodeType":"YulFunctionCall","src":"69623:16:0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"69613:6:0"},"nodeType":"YulFunctionCall","src":"69613:27:0"},"nodeType":"YulExpressionStatement","src":"69613:27:0"}]},"condition":{"arguments":[{"arguments":[{"name":"error","nodeType":"YulIdentifier","src":"69435:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"69442:66:0","type":"","value":"0x43adbafb00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"69432:2:0"},"nodeType":"YulFunctionCall","src":"69432:77:0"},{"kind":"number","nodeType":"YulLiteral","src":"69511:1:0","type":"","value":"0"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"69429:2:0"},"nodeType":"YulFunctionCall","src":"69429:84:0"},"nodeType":"YulIf","src":"69426:2:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"71045:1:0","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"71048:4:0","type":"","value":"0x04"},{"kind":"number","nodeType":"YulLiteral","src":"71054:2:0","type":"","value":"32"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"71030:14:0"},"nodeType":"YulFunctionCall","src":"71030:27:0"},"nodeType":"YulExpressionStatement","src":"71030:27:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"71249:4:0","type":"","value":"0x20"},{"kind":"number","nodeType":"YulLiteral","src":"71255:2:0","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"71242:6:0"},"nodeType":"YulFunctionCall","src":"71242:16:0"},"nodeType":"YulExpressionStatement","src":"71242:16:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"71650:4:0","type":"","value":"0x40"},{"kind":"number","nodeType":"YulLiteral","src":"71656:4:0","type":"","value":"0x24"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"71666:14:0"},"nodeType":"YulFunctionCall","src":"71666:16:0"},{"kind":"number","nodeType":"YulLiteral","src":"71684:2:0","type":"","value":"36"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"71662:3:0"},"nodeType":"YulFunctionCall","src":"71662:25:0"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"71635:14:0"},"nodeType":"YulFunctionCall","src":"71635:53:0"},"nodeType":"YulExpressionStatement","src":"71635:53:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"72002:1:0","type":"","value":"0"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"72009:14:0"},"nodeType":"YulFunctionCall","src":"72009:16:0"},{"kind":"number","nodeType":"YulLiteral","src":"72027:2:0","type":"","value":"28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"72005:3:0"},"nodeType":"YulFunctionCall","src":"72005:25:0"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"71995:6:0"},"nodeType":"YulFunctionCall","src":"71995:36:0"},"nodeType":"YulExpressionStatement","src":"71995:36:0"}]},"nodeType":"YulCase","src":"68671:3383:0","value":{"kind":"number","nodeType":"YulLiteral","src":"68676:1:0","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"72084:165:0","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"72217:7:0"},"nodeType":"YulFunctionCall","src":"72217:9:0"},"nodeType":"YulExpressionStatement","src":"72217:9:0"}]},"nodeType":"YulCase","src":"72076:173:0","value":"default"}],"expression":{"name":"success","nodeType":"YulIdentifier","src":"68642:7:0"},"nodeType":"YulSwitch","src":"68635:3614:0"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2640,"isOffset":false,"isSlot":false,"src":"68642:7:0","valueSize":1}],"id":2650,"nodeType":"InlineAssembly","src":"68497:3767:0"}]}}]},"id":2690,"implemented":true,"kind":"function","modifiers":[],"name":"_queryAction","nodeType":"FunctionDefinition","parameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2576,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":2690,"src":"67389:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67389:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2578,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":2690,"src":"67414:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2577,"name":"address","nodeType":"ElementaryTypeName","src":"67414:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2580,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2690,"src":"67439:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2579,"name":"address","nodeType":"ElementaryTypeName","src":"67439:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2583,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":2690,"src":"67467:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"67467:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2582,"nodeType":"ArrayTypeName","src":"67467:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2585,"mutability":"mutable","name":"lastChangeBlock","nodeType":"VariableDeclaration","scope":2690,"src":"67503:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"67503:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2587,"mutability":"mutable","name":"protocolSwapFeePercentage","nodeType":"VariableDeclaration","scope":2690,"src":"67537:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2586,"name":"uint256","nodeType":"ElementaryTypeName","src":"67537:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2589,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":2690,"src":"67581:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2588,"name":"bytes","nodeType":"ElementaryTypeName","src":"67581:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2619,"mutability":"mutable","name":"_action","nodeType":"VariableDeclaration","scope":2690,"src":"67613:200:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32,address,address,uint256[],uint256,uint256,uint256[],bytes) returns (uint256,uint256[],uint256[])"},"typeName":{"id":2618,"nodeType":"FunctionTypeName","parameterTypes":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2591,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2618,"src":"67622:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67622:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2593,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2618,"src":"67631:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2592,"name":"address","nodeType":"ElementaryTypeName","src":"67631:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2595,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2618,"src":"67640:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2594,"name":"address","nodeType":"ElementaryTypeName","src":"67640:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2598,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2618,"src":"67649:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2596,"name":"uint256","nodeType":"ElementaryTypeName","src":"67649:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2597,"nodeType":"ArrayTypeName","src":"67649:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2600,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2618,"src":"67667:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"67667:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2602,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2618,"src":"67676:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint256","nodeType":"ElementaryTypeName","src":"67676:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2605,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2618,"src":"67685:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2603,"name":"uint256","nodeType":"ElementaryTypeName","src":"67685:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2604,"nodeType":"ArrayTypeName","src":"67685:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2607,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2618,"src":"67703:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2606,"name":"bytes","nodeType":"ElementaryTypeName","src":"67703:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"67621:95:0"},"returnParameterTypes":{"id":2617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2618,"src":"67761:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2609,"name":"uint256","nodeType":"ElementaryTypeName","src":"67761:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2613,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2618,"src":"67770:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2611,"name":"uint256","nodeType":"ElementaryTypeName","src":"67770:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2612,"nodeType":"ArrayTypeName","src":"67770:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2616,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2618,"src":"67788:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"67788:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2615,"nodeType":"ArrayTypeName","src":"67788:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"67760:45:0"},"src":"67613:200:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32,address,address,uint256[],uint256,uint256,uint256[],bytes) returns (uint256,uint256[],uint256[])"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":2629,"mutability":"mutable","name":"_downscaleArray","nodeType":"VariableDeclaration","scope":2690,"src":"67824:74:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[],uint256[]) view"},"typeName":{"id":2628,"nodeType":"FunctionTypeName","parameterTypes":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2628,"src":"67833:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2620,"name":"uint256","nodeType":"ElementaryTypeName","src":"67833:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2621,"nodeType":"ArrayTypeName","src":"67833:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2625,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2628,"src":"67851:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2623,"name":"uint256","nodeType":"ElementaryTypeName","src":"67851:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2624,"nodeType":"ArrayTypeName","src":"67851:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"67832:36:0"},"returnParameterTypes":{"id":2627,"nodeType":"ParameterList","parameters":[],"src":"67883:0:0"},"src":"67824:74:0","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[],uint256[]) view"},"visibility":"internal"},"visibility":"internal"}],"src":"67378:527:0"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[],"src":"67914:0:0"},"scope":2691,"src":"67357:7005:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":10227,"src":"44011:30354:0"},{"id":2692,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"74373:23:0"},{"abstract":true,"baseContracts":[{"baseName":{"id":2694,"name":"BasePool","nodeType":"UserDefinedTypeName","referencedDeclaration":2691,"src":"75886:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_BasePool_$2691","typeString":"contract BasePool"}},"id":2695,"nodeType":"InheritanceSpecifier","src":"75886:8:0"},{"baseName":{"id":2696,"name":"IGeneralPool","nodeType":"UserDefinedTypeName","referencedDeclaration":109,"src":"75896:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IGeneralPool_$109","typeString":"contract IGeneralPool"}},"id":2697,"nodeType":"InheritanceSpecifier","src":"75896:12:0"},{"baseName":{"id":2698,"name":"IRateProvider","nodeType":"UserDefinedTypeName","referencedDeclaration":9,"src":"75910:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IRateProvider_$9","typeString":"contract IRateProvider"}},"id":2699,"nodeType":"InheritanceSpecifier","src":"75910:13:0"}],"contractDependencies":[9,30,90,109,119,193,282,317,409,486,960,1109,1315,1333,1523,2691],"contractKind":"contract","documentation":{"id":2693,"nodeType":"StructuredDocumentation","src":"74400:1452:0","text":" @dev Linear Pools are designed to hold two assets: \"main\" and \"wrapped\" tokens that have an equal value underlying\n token (e.g., DAI and waDAI). There must be an external feed available to provide an exact, non-manipulable exchange\n rate between the tokens. In particular, any reversible manipulation (e.g. causing the rate to increase and then\n decrease) can lead to severe issues and loss of funds.\n The Pool will register three tokens in the Vault however: the two assets and the BPT itself,\n so that BPT can be exchanged (effectively joining and exiting) via swaps.\n Despite inheriting from BasePool, much of the basic behavior changes. This Pool does not support regular joins and\n exits, as the entire BPT supply is 'preminted' during initialization.\n Unlike most other Pools, this one does not attempt to create revenue by charging fees: value is derived by holding\n the wrapped, yield-bearing asset. However, the 'swap fee percentage' value is still used, albeit with a different\n meaning. This Pool attempts to hold a certain amount of \"main\" tokens, between a lower and upper target value.\n The pool charges fees on trades that move the balance outside that range, which are then paid back as incentives to\n traders whose swaps return the balance to the desired region.\n The net revenue via fees is expected to be zero: all collected fees are used to pay for this 'rebalancing'."},"fullyImplemented":false,"id":4244,"linearizedBaseContracts":[4244,9,109,2691,1523,1333,1315,1109,409,317,960,486,282,193,119,90,30],"name":"LinearPool","nodeType":"ContractDefinition","nodes":[{"id":2702,"libraryName":{"id":2700,"name":"WordCodec","nodeType":"UserDefinedTypeName","referencedDeclaration":9014,"src":"75937:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_WordCodec_$9014","typeString":"library WordCodec"}},"nodeType":"UsingForDirective","src":"75931:28:0","typeName":{"id":2701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75951:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"id":2705,"libraryName":{"id":2703,"name":"FixedPoint","nodeType":"UserDefinedTypeName","referencedDeclaration":5377,"src":"75971:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_FixedPoint_$5377","typeString":"library FixedPoint"}},"nodeType":"UsingForDirective","src":"75965:29:0","typeName":{"id":2704,"name":"uint256","nodeType":"ElementaryTypeName","src":"75986:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":2708,"libraryName":{"id":2706,"name":"PriceRateCache","nodeType":"UserDefinedTypeName","referencedDeclaration":5524,"src":"76006:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_PriceRateCache_$5524","typeString":"library PriceRateCache"}},"nodeType":"UsingForDirective","src":"76000:33:0","typeName":{"id":2707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"76025:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"id":2711,"libraryName":{"id":2709,"name":"LinearPoolUserData","nodeType":"UserDefinedTypeName","referencedDeclaration":6428,"src":"76045:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPoolUserData_$6428","typeString":"library LinearPoolUserData"}},"nodeType":"UsingForDirective","src":"76039:35:0","typeName":{"id":2710,"name":"bytes","nodeType":"ElementaryTypeName","src":"76068:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"constant":true,"id":2714,"mutability":"constant","name":"_TOTAL_TOKENS","nodeType":"VariableDeclaration","scope":4244,"src":"76082:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2712,"name":"uint256","nodeType":"ElementaryTypeName","src":"76082:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"76123:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":2722,"mutability":"constant","name":"_INITIAL_BPT_SUPPLY","nodeType":"VariableDeclaration","scope":4244,"src":"77077:59:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2715,"name":"uint256","nodeType":"ElementaryTypeName","src":"77077:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_5192296858534827628530496329220095_by_1","typeString":"int_const 5192...(26 digits omitted)...0095"},"id":2721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5192296858534827628530496329220096_by_1","typeString":"int_const 5192...(26 digits omitted)...0096"},"id":2719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"77124:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"hexValue":"313132","id":2717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"77128:3:0","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"}],"id":2718,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"77127:5:0","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"}},"src":"77124:8:0","typeDescriptions":{"typeIdentifier":"t_rational_5192296858534827628530496329220096_by_1","typeString":"int_const 5192...(26 digits omitted)...0096"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"77135:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"77124:12:0","typeDescriptions":{"typeIdentifier":"t_rational_5192296858534827628530496329220095_by_1","typeString":"int_const 5192...(26 digits omitted)...0095"}},"visibility":"private"},{"constant":false,"id":2724,"mutability":"immutable","name":"_mainToken","nodeType":"VariableDeclaration","scope":4244,"src":"77145:35:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":2723,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"77145:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"private"},{"constant":false,"id":2726,"mutability":"immutable","name":"_wrappedToken","nodeType":"VariableDeclaration","scope":4244,"src":"77187:38:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":2725,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"77187:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"private"},{"constant":false,"id":2728,"mutability":"immutable","name":"_bptIndex","nodeType":"VariableDeclaration","scope":4244,"src":"77338:35:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2727,"name":"uint256","nodeType":"ElementaryTypeName","src":"77338:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2730,"mutability":"immutable","name":"_mainIndex","nodeType":"VariableDeclaration","scope":4244,"src":"77380:36:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2729,"name":"uint256","nodeType":"ElementaryTypeName","src":"77380:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2732,"mutability":"immutable","name":"_wrappedIndex","nodeType":"VariableDeclaration","scope":4244,"src":"77423:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2731,"name":"uint256","nodeType":"ElementaryTypeName","src":"77423:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2734,"mutability":"immutable","name":"_scalingFactorMainToken","nodeType":"VariableDeclaration","scope":4244,"src":"78045:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2733,"name":"uint256","nodeType":"ElementaryTypeName","src":"78045:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2736,"mutability":"immutable","name":"_scalingFactorWrappedToken","nodeType":"VariableDeclaration","scope":4244,"src":"78101:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"78101:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":true,"id":2739,"mutability":"constant","name":"_LOWER_TARGET_OFFSET","nodeType":"VariableDeclaration","scope":4244,"src":"78854:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2737,"name":"uint256","nodeType":"ElementaryTypeName","src":"78854:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"78902:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"constant":true,"id":2742,"mutability":"constant","name":"_UPPER_TARGET_OFFSET","nodeType":"VariableDeclaration","scope":4244,"src":"78910:50:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"78910:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3936","id":2741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"78958:2:0","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"visibility":"private"},{"constant":true,"id":2750,"mutability":"constant","name":"_MAX_UPPER_TARGET","nodeType":"VariableDeclaration","scope":4244,"src":"78969:56:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2743,"name":"uint256","nodeType":"ElementaryTypeName","src":"78969:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_79228162514264337593543950335_by_1","typeString":"int_const 79228162514264337593543950335"},"id":2749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_79228162514264337593543950336_by_1","typeString":"int_const 79228162514264337593543950336"},"id":2747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"79014:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"hexValue":"3936","id":2745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"79018:2:0","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"}],"id":2746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"79017:4:0","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"}},"src":"79014:7:0","typeDescriptions":{"typeIdentifier":"t_rational_79228162514264337593543950336_by_1","typeString":"int_const 79228162514264337593543950336"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"79024:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"79014:11:0","typeDescriptions":{"typeIdentifier":"t_rational_79228162514264337593543950335_by_1","typeString":"int_const 79228162514264337593543950335"}},"visibility":"private"},{"anonymous":false,"id":2758,"name":"TargetsSet","nodeType":"EventDefinition","parameters":{"id":2757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2752,"indexed":true,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":2758,"src":"79051:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":2751,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"79051:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2754,"indexed":false,"mutability":"mutable","name":"lowerTarget","nodeType":"VariableDeclaration","scope":2758,"src":"79073:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2753,"name":"uint256","nodeType":"ElementaryTypeName","src":"79073:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2756,"indexed":false,"mutability":"mutable","name":"upperTarget","nodeType":"VariableDeclaration","scope":2758,"src":"79094:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2755,"name":"uint256","nodeType":"ElementaryTypeName","src":"79094:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79050:64:0"},"src":"79034:81:0"},{"body":{"id":2857,"nodeType":"Block","src":"79812:893:0","statements":[{"expression":{"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2803,"name":"_mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"79846:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2804,"name":"mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"79859:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"79846:22:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":2806,"nodeType":"ExpressionStatement","src":"79846:22:0"},{"expression":{"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2807,"name":"_wrappedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"79879:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2808,"name":"wrappedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"79895:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"79879:28:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":2810,"nodeType":"ExpressionStatement","src":"79879:28:0"},{"assignments":[2812,2814,2816],"declarations":[{"constant":false,"id":2812,"mutability":"mutable","name":"mainIndex","nodeType":"VariableDeclaration","scope":2857,"src":"79951:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2811,"name":"uint256","nodeType":"ElementaryTypeName","src":"79951:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2814,"mutability":"mutable","name":"wrappedIndex","nodeType":"VariableDeclaration","scope":2857,"src":"79970:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2813,"name":"uint256","nodeType":"ElementaryTypeName","src":"79970:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2816,"mutability":"mutable","name":"bptIndex","nodeType":"VariableDeclaration","scope":2857,"src":"79992:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"79992:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2822,"initialValue":{"arguments":[{"id":2818,"name":"mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"80049:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},{"id":2819,"name":"wrappedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"80073:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},{"id":2820,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"80100:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}],"id":2817,"name":"_getSortedTokenIndexes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"80012:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20_$486_$_t_contract$_IERC20_$486_$_t_contract$_IERC20_$486_$returns$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (contract IERC20,contract IERC20,contract IERC20) pure returns (uint256,uint256,uint256)"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"80012:103:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"79950:165:0"},{"expression":{"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2823,"name":"_bptIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"80126:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2824,"name":"bptIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"80138:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"80126:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2826,"nodeType":"ExpressionStatement","src":"80126:20:0"},{"expression":{"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2827,"name":"_mainIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"80157:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2828,"name":"mainIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"80170:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"80157:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2830,"nodeType":"ExpressionStatement","src":"80157:22:0"},{"expression":{"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2831,"name":"_wrappedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"80190:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2832,"name":"wrappedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"80206:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"80190:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2834,"nodeType":"ExpressionStatement","src":"80190:28:0"},{"expression":{"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2835,"name":"_scalingFactorMainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"80263:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2837,"name":"mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"80311:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}],"id":2836,"name":"_computeScalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"80289:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IERC20_$486_$returns$_t_uint256_$","typeString":"function (contract IERC20) view returns (uint256)"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"80289:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"80263:58:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2840,"nodeType":"ExpressionStatement","src":"80263:58:0"},{"expression":{"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2841,"name":"_scalingFactorWrappedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"80332:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2843,"name":"wrappedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"80383:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}],"id":2842,"name":"_computeScalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"80361:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IERC20_$486_$returns$_t_uint256_$","typeString":"function (contract IERC20) view returns (uint256)"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"80361:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"80332:64:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2846,"nodeType":"ExpressionStatement","src":"80332:64:0"},{"assignments":[2848],"declarations":[{"constant":false,"id":2848,"mutability":"mutable","name":"lowerTarget","nodeType":"VariableDeclaration","scope":2857,"src":"80615:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2847,"name":"uint256","nodeType":"ElementaryTypeName","src":"80615:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2850,"initialValue":{"hexValue":"30","id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"80637:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"80615:23:0"},{"expression":{"arguments":[{"id":2852,"name":"mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"80661:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},{"id":2853,"name":"lowerTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"80672:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2854,"name":"upperTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"80685:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2851,"name":"_setTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"80649:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$486_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256,uint256)"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"80649:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2856,"nodeType":"ExpressionStatement","src":"80649:48:0"}]},"id":2858,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2781,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"79481:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},{"expression":{"expression":{"id":2782,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9483,"src":"79501:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVault_$9483_$","typeString":"type(contract IVault)"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"PoolSpecialization","nodeType":"MemberAccess","referencedDeclaration":9142,"src":"79501:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PoolSpecialization_$9142_$","typeString":"type(enum IVault.PoolSpecialization)"}},"id":2784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"GENERAL","nodeType":"MemberAccess","src":"79501:33:0","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$9142","typeString":"enum IVault.PoolSpecialization"}},{"id":2785,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"79549:4:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2786,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"79568:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":2788,"name":"mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"79601:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},{"id":2789,"name":"wrappedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"79612:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},{"id":2790,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"79626:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}],"id":2787,"name":"_sortTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"79589:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20_$486_$_t_contract$_IERC20_$486_$_t_contract$_IERC20_$486_$returns$_t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr_$","typeString":"function (contract IERC20,contract IERC20,contract IERC20) pure returns (contract IERC20[] memory)"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"79589:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},{"arguments":[{"id":2795,"name":"_TOTAL_TOKENS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"79660:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"79646:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2792,"name":"address","nodeType":"ElementaryTypeName","src":"79650:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2793,"nodeType":"ArrayTypeName","src":"79650:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"79646:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":2797,"name":"swapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"79689:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2798,"name":"pauseWindowDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"79721:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2799,"name":"bufferPeriodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"79755:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2800,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"79790:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2801,"modifierName":{"id":2780,"name":"BasePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"79458:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BasePool_$2691_$","typeString":"type(contract BasePool)"}},"nodeType":"ModifierInvocation","src":"79458:348:0"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"vault","nodeType":"VariableDeclaration","scope":2858,"src":"79145:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"},"typeName":{"id":2759,"name":"IVault","nodeType":"UserDefinedTypeName","referencedDeclaration":9483,"src":"79145:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"visibility":"internal"},{"constant":false,"id":2762,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":2858,"src":"79168:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2761,"name":"string","nodeType":"ElementaryTypeName","src":"79168:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2764,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":2858,"src":"79197:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2763,"name":"string","nodeType":"ElementaryTypeName","src":"79197:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2766,"mutability":"mutable","name":"mainToken","nodeType":"VariableDeclaration","scope":2858,"src":"79228:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":2765,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"79228:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2768,"mutability":"mutable","name":"wrappedToken","nodeType":"VariableDeclaration","scope":2858,"src":"79255:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":2767,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"79255:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2770,"mutability":"mutable","name":"upperTarget","nodeType":"VariableDeclaration","scope":2858,"src":"79285:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2769,"name":"uint256","nodeType":"ElementaryTypeName","src":"79285:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2772,"mutability":"mutable","name":"swapFeePercentage","nodeType":"VariableDeclaration","scope":2858,"src":"79315:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2771,"name":"uint256","nodeType":"ElementaryTypeName","src":"79315:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2774,"mutability":"mutable","name":"pauseWindowDuration","nodeType":"VariableDeclaration","scope":2858,"src":"79351:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2773,"name":"uint256","nodeType":"ElementaryTypeName","src":"79351:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2776,"mutability":"mutable","name":"bufferPeriodDuration","nodeType":"VariableDeclaration","scope":2858,"src":"79389:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2775,"name":"uint256","nodeType":"ElementaryTypeName","src":"79389:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2778,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":2858,"src":"79428:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2777,"name":"address","nodeType":"ElementaryTypeName","src":"79428:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"79134:314:0"},"returnParameters":{"id":2802,"nodeType":"ParameterList","parameters":[],"src":"79812:0:0"},"scope":4244,"src":"79123:1582:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2868,"nodeType":"Block","src":"80767:45:0","statements":[{"expression":{"arguments":[{"id":2865,"name":"_mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"80793:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}],"id":2864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"80785:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2863,"name":"address","nodeType":"ElementaryTypeName","src":"80785:7:0","typeDescriptions":{}}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"80785:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2862,"id":2867,"nodeType":"Return","src":"80778:26:0"}]},"functionSelector":"4de046d5","id":2869,"implemented":true,"kind":"function","modifiers":[],"name":"getMainToken","nodeType":"FunctionDefinition","parameters":{"id":2859,"nodeType":"ParameterList","parameters":[],"src":"80734:2:0"},"returnParameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2869,"src":"80758:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2860,"name":"address","nodeType":"ElementaryTypeName","src":"80758:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80757:9:0"},"scope":4244,"src":"80713:99:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2879,"nodeType":"Block","src":"80879:48:0","statements":[{"expression":{"arguments":[{"id":2876,"name":"_wrappedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"80905:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}],"id":2875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"80897:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2874,"name":"address","nodeType":"ElementaryTypeName","src":"80897:7:0","typeDescriptions":{}}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"80897:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2873,"id":2878,"nodeType":"Return","src":"80890:29:0"}]},"functionSelector":"f174e241","id":2880,"implemented":true,"kind":"function","modifiers":[],"name":"getWrappedToken","nodeType":"FunctionDefinition","parameters":{"id":2870,"nodeType":"ParameterList","parameters":[],"src":"80844:2:0"},"returnParameters":{"id":2873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2872,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2880,"src":"80870:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2871,"name":"address","nodeType":"ElementaryTypeName","src":"80870:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80869:9:0"},"scope":4244,"src":"80820:107:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2887,"nodeType":"Block","src":"80990:35:0","statements":[{"expression":{"id":2885,"name":"_bptIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"81008:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2884,"id":2886,"nodeType":"Return","src":"81001:16:0"}]},"functionSelector":"82687a56","id":2888,"implemented":true,"kind":"function","modifiers":[],"name":"getBptIndex","nodeType":"FunctionDefinition","parameters":{"id":2881,"nodeType":"ParameterList","parameters":[],"src":"80955:2:0"},"returnParameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2888,"src":"80981:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint256","nodeType":"ElementaryTypeName","src":"80981:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80980:9:0"},"scope":4244,"src":"80935:90:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2895,"nodeType":"Block","src":"81089:36:0","statements":[{"expression":{"id":2893,"name":"_mainIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"81107:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2892,"id":2894,"nodeType":"Return","src":"81100:17:0"}]},"functionSelector":"4d64cd74","id":2896,"implemented":true,"kind":"function","modifiers":[],"name":"getMainIndex","nodeType":"FunctionDefinition","parameters":{"id":2889,"nodeType":"ParameterList","parameters":[],"src":"81054:2:0"},"returnParameters":{"id":2892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2896,"src":"81080:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2890,"name":"uint256","nodeType":"ElementaryTypeName","src":"81080:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81079:9:0"},"scope":4244,"src":"81033:92:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2903,"nodeType":"Block","src":"81192:39:0","statements":[{"expression":{"id":2901,"name":"_wrappedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"81210:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2900,"id":2902,"nodeType":"Return","src":"81203:20:0"}]},"functionSelector":"16b8d6ff","id":2904,"implemented":true,"kind":"function","modifiers":[],"name":"getWrappedIndex","nodeType":"FunctionDefinition","parameters":{"id":2897,"nodeType":"ParameterList","parameters":[],"src":"81157:2:0"},"returnParameters":{"id":2900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2899,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2904,"src":"81183:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2898,"name":"uint256","nodeType":"ElementaryTypeName","src":"81183:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81182:9:0"},"scope":4244,"src":"81133:98:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2969,"nodeType":"Block","src":"81977:1007:0","statements":[{"assignments":[2909],"declarations":[{"constant":false,"id":2909,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":2969,"src":"81988:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"81988:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2912,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2910,"name":"getPoolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"82005:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"82005:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"81988:28:0"},{"assignments":[2916,null,null],"declarations":[{"constant":false,"id":2916,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":2969,"src":"82028:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":2914,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"82028:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":2915,"nodeType":"ArrayTypeName","src":"82028:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},null,null],"id":2922,"initialValue":{"arguments":[{"id":2920,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"82083:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2917,"name":"getVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"82058:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IVault_$9483_$","typeString":"function () view returns (contract IVault)"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"82058:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPoolTokens","nodeType":"MemberAccess","referencedDeclaration":9239,"src":"82058:24:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"function (bytes32) view external returns (contract IERC20[] memory,uint256[] memory,uint256)"}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"82058:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"tuple(contract IERC20[] memory,uint256[] memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"82027:63:0"},{"assignments":[2927],"declarations":[{"constant":false,"id":2927,"mutability":"mutable","name":"maxAmountsIn","nodeType":"VariableDeclaration","scope":2969,"src":"82310:29:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2925,"name":"uint256","nodeType":"ElementaryTypeName","src":"82310:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2926,"nodeType":"ArrayTypeName","src":"82310:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2933,"initialValue":{"arguments":[{"id":2931,"name":"_TOTAL_TOKENS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"82356:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"82342:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2928,"name":"uint256","nodeType":"ElementaryTypeName","src":"82346:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2929,"nodeType":"ArrayTypeName","src":"82346:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"82342:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"82310:60:0"},{"expression":{"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2934,"name":"maxAmountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"82381:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2936,"indexExpression":{"id":2935,"name":"_bptIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"82394:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"82381:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2937,"name":"_INITIAL_BPT_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"82407:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"82381:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2939,"nodeType":"ExpressionStatement","src":"82381:45:0"},{"assignments":[2943],"declarations":[{"constant":false,"id":2943,"mutability":"mutable","name":"request","nodeType":"VariableDeclaration","scope":2969,"src":"82673:37:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_JoinPoolRequest_$9262_memory_ptr","typeString":"struct IVault.JoinPoolRequest"},"typeName":{"id":2942,"name":"IVault.JoinPoolRequest","nodeType":"UserDefinedTypeName","referencedDeclaration":9262,"src":"82673:22:0","typeDescriptions":{"typeIdentifier":"t_struct$_JoinPoolRequest_$9262_storage_ptr","typeString":"struct IVault.JoinPoolRequest"}},"visibility":"internal"}],"id":2953,"initialValue":{"arguments":[{"arguments":[{"id":2947,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"82769:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}],"id":2946,"name":"_asIAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"82759:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr_$returns$_t_array$_t_contract$_IAsset_$6431_$dyn_memory_ptr_$","typeString":"function (contract IERC20[] memory) pure returns (contract IAsset[] memory)"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"82759:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$6431_$dyn_memory_ptr","typeString":"contract IAsset[] memory"}},{"id":2949,"name":"maxAmountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"82805:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"82842:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"66616c7365","id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"82880:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_contract$_IAsset_$6431_$dyn_memory_ptr","typeString":"contract IAsset[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2944,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9483,"src":"82713:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVault_$9483_$","typeString":"type(contract IVault)"}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"JoinPoolRequest","nodeType":"MemberAccess","referencedDeclaration":9262,"src":"82713:22:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_JoinPoolRequest_$9262_storage_ptr_$","typeString":"type(struct IVault.JoinPoolRequest storage pointer)"}},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["assets","maxAmountsIn","userData","fromInternalBalance"],"nodeType":"FunctionCall","src":"82713:184:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_JoinPoolRequest_$9262_memory_ptr","typeString":"struct IVault.JoinPoolRequest memory"}},"nodeType":"VariableDeclarationStatement","src":"82673:224:0"},{"expression":{"arguments":[{"id":2957,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"82930:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2960,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"82946:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}],"id":2959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"82938:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2958,"name":"address","nodeType":"ElementaryTypeName","src":"82938:7:0","typeDescriptions":{}}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"82938:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2964,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"82961:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}],"id":2963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"82953:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2962,"name":"address","nodeType":"ElementaryTypeName","src":"82953:7:0","typeDescriptions":{}}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"82953:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2966,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"82968:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_JoinPoolRequest_$9262_memory_ptr","typeString":"struct IVault.JoinPoolRequest memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_JoinPoolRequest_$9262_memory_ptr","typeString":"struct IVault.JoinPoolRequest memory"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2954,"name":"getVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"82910:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IVault_$9483_$","typeString":"function () view returns (contract IVault)"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"82910:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"joinPool","nodeType":"MemberAccess","referencedDeclaration":9251,"src":"82910:19:0","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes32_$_t_address_$_t_address_$_t_struct$_JoinPoolRequest_$9262_memory_ptr_$returns$__$","typeString":"function (bytes32,address,address,struct IVault.JoinPoolRequest memory) payable external"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"82910:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2968,"nodeType":"ExpressionStatement","src":"82910:66:0"}]},"documentation":{"id":2905,"nodeType":"StructuredDocumentation","src":"81239:701:0","text":" @dev Finishes initialization of the Linear Pool: it is unusable before calling this function as no BPT will have\n been minted.\n Since Linear Pools have preminted BPT stored in the Vault, they require an initial join to deposit said BPT as\n their balance. Unfortunately, this cannot be performed during construction, as a join involves calling the\n `onJoinPool` function on the Pool, and the Pool will not have any code until construction finishes. Therefore,\n this must happen in a separate call.\n It is highly recommended to create Linear pools using the LinearPoolFactory, which calls `initialize`\n automatically."},"functionSelector":"8129fc1c","id":2970,"implemented":true,"kind":"function","modifiers":[],"name":"initialize","nodeType":"FunctionDefinition","parameters":{"id":2906,"nodeType":"ParameterList","parameters":[],"src":"81965:2:0"},"returnParameters":{"id":2907,"nodeType":"ParameterList","parameters":[],"src":"81977:0:0"},"scope":4244,"src":"81946:1038:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[108],"body":{"id":3099,"nodeType":"Block","src":"83296:2279:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2993,"name":"indexIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"83974:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2994,"name":"_TOTAL_TOKENS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"83984:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"83974:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2996,"name":"indexOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"84001:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2997,"name":"_TOTAL_TOKENS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"84012:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"84001:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"83974:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3000,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"84027:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"OUT_OF_BOUNDS","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"84027:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2992,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"83965:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"83965:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3003,"nodeType":"ExpressionStatement","src":"83965:83:0"},{"assignments":[3008],"declarations":[{"constant":false,"id":3008,"mutability":"mutable","name":"scalingFactors","nodeType":"VariableDeclaration","scope":3099,"src":"84330:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3006,"name":"uint256","nodeType":"ElementaryTypeName","src":"84330:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3007,"nodeType":"ArrayTypeName","src":"84330:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3011,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3009,"name":"_scalingFactors","nodeType":"Identifier","overloadedDeclarations":[3884],"referencedDeclaration":3884,"src":"84364:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"84364:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"84330:51:0"},{"expression":{"arguments":[{"id":3013,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"84406:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3014,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"84416:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3012,"name":"_upscaleArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"84392:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory,uint256[] memory) view"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"84392:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3016,"nodeType":"ExpressionStatement","src":"84392:39:0"},{"assignments":[3018,3020],"declarations":[{"constant":false,"id":3018,"mutability":"mutable","name":"lowerTarget","nodeType":"VariableDeclaration","scope":3099,"src":"84445:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3017,"name":"uint256","nodeType":"ElementaryTypeName","src":"84445:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3020,"mutability":"mutable","name":"upperTarget","nodeType":"VariableDeclaration","scope":3099,"src":"84466:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3019,"name":"uint256","nodeType":"ElementaryTypeName","src":"84466:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3023,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3021,"name":"getTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"84489:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$","typeString":"function () view returns (uint256,uint256)"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"84489:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"84444:57:0"},{"assignments":[3027],"declarations":[{"constant":false,"id":3027,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":3099,"src":"84512:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":3026,"name":"LinearMath.Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"84512:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"id":3035,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3030,"name":"getSwapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"84584:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"84584:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3032,"name":"lowerTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"84634:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3033,"name":"upperTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"84673:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3028,"name":"LinearMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"84546:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinearMath_$6389_$","typeString":"type(library LinearMath)"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Params","nodeType":"MemberAccess","referencedDeclaration":5535,"src":"84546:17:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Params_$5535_storage_ptr_$","typeString":"type(struct LinearMath.Params storage pointer)"}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["fee","lowerTarget","upperTarget"],"nodeType":"FunctionCall","src":"84546:150:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}},"nodeType":"VariableDeclarationStatement","src":"84512:184:0"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_SwapKind_$9307","typeString":"enum IVault.SwapKind"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3036,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"84713:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"kind","nodeType":"MemberAccess","referencedDeclaration":12,"src":"84713:12:0","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$9307","typeString":"enum IVault.SwapKind"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":3038,"name":"IVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9483,"src":"84729:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVault_$9483_$","typeString":"type(contract IVault)"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SwapKind","nodeType":"MemberAccess","referencedDeclaration":9307,"src":"84729:15:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SwapKind_$9307_$","typeString":"type(enum IVault.SwapKind)"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"GIVEN_IN","nodeType":"MemberAccess","src":"84729:24:0","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$9307","typeString":"enum IVault.SwapKind"}},"src":"84713:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3097,"nodeType":"Block","src":"85167:401:0","statements":[{"expression":{"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3070,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"85271:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3072,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":18,"src":"85271:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3074,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"85297:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":18,"src":"85297:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3076,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"85313:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3078,"indexExpression":{"id":3077,"name":"indexOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"85328:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"85313:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3073,"name":"_upscale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"85288:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"85288:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"85271:67:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3081,"nodeType":"ExpressionStatement","src":"85271:67:0"},{"assignments":[3083],"declarations":[{"constant":false,"id":3083,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":3097,"src":"85353:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3082,"name":"uint256","nodeType":"ElementaryTypeName","src":"85353:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3089,"initialValue":{"arguments":[{"id":3085,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"85388:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},{"id":3086,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"85397:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3087,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"85407:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":3084,"name":"_onSwapGivenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"85372:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_SwapRequest_$29_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct IPoolSwapStructs.SwapRequest memory,uint256[] memory,struct LinearMath.Params memory) view returns (uint256)"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"85372:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"85353:61:0"},{"expression":{"arguments":[{"id":3091,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"85522:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3092,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"85532:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3094,"indexExpression":{"id":3093,"name":"indexIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"85547:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"85532:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3090,"name":"_downscaleUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"85509:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"85509:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2991,"id":3096,"nodeType":"Return","src":"85502:54:0"}]},"id":3098,"nodeType":"IfStatement","src":"84709:859:0","trueBody":{"id":3069,"nodeType":"Block","src":"84755:406:0","statements":[{"expression":{"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3042,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"84859:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3044,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":18,"src":"84859:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3046,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"84885:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":18,"src":"84885:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3048,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"84901:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3050,"indexExpression":{"id":3049,"name":"indexIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"84916:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"84901:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3045,"name":"_upscale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"84876:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"84876:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"84859:66:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3053,"nodeType":"ExpressionStatement","src":"84859:66:0"},{"assignments":[3055],"declarations":[{"constant":false,"id":3055,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":3069,"src":"84940:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3054,"name":"uint256","nodeType":"ElementaryTypeName","src":"84940:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3061,"initialValue":{"arguments":[{"id":3057,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"84975:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},{"id":3058,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"84984:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3059,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"84994:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":3056,"name":"_onSwapGivenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"84960:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_SwapRequest_$29_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct IPoolSwapStructs.SwapRequest memory,uint256[] memory,struct LinearMath.Params memory) view returns (uint256)"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"84960:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"84940:61:0"},{"expression":{"arguments":[{"id":3063,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"85113:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3064,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"85124:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3066,"indexExpression":{"id":3065,"name":"indexOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"85139:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"85124:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3062,"name":"_downscaleDown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"85098:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"85098:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2991,"id":3068,"nodeType":"Return","src":"85091:58:0"}]}}]},"documentation":{"id":2971,"nodeType":"StructuredDocumentation","src":"82992:70:0","text":" @dev Implementation of onSwap, from IGeneralPool."},"functionSelector":"01ec954a","id":3100,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":2984,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"83248:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":2985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"poolId","nodeType":"MemberAccess","referencedDeclaration":20,"src":"83248:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2986,"modifierName":{"id":2983,"name":"onlyVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"83238:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes32_$","typeString":"modifier (bytes32)"}},"nodeType":"ModifierInvocation","src":"83238:25:0"},{"id":2988,"modifierName":{"id":2987,"name":"whenNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"83264:13:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"83264:13:0"}],"name":"onSwap","nodeType":"FunctionDefinition","overrides":{"id":2982,"nodeType":"OverrideSpecifier","overrides":[],"src":"83229:8:0"},"parameters":{"id":2981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2973,"mutability":"mutable","name":"request","nodeType":"VariableDeclaration","scope":3100,"src":"83094:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest"},"typeName":{"id":2972,"name":"SwapRequest","nodeType":"UserDefinedTypeName","referencedDeclaration":29,"src":"83094:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_storage_ptr","typeString":"struct IPoolSwapStructs.SwapRequest"}},"visibility":"internal"},{"constant":false,"id":2976,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":3100,"src":"83131:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2974,"name":"uint256","nodeType":"ElementaryTypeName","src":"83131:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2975,"nodeType":"ArrayTypeName","src":"83131:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2978,"mutability":"mutable","name":"indexIn","nodeType":"VariableDeclaration","scope":3100,"src":"83167:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2977,"name":"uint256","nodeType":"ElementaryTypeName","src":"83167:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2980,"mutability":"mutable","name":"indexOut","nodeType":"VariableDeclaration","scope":3100,"src":"83193:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2979,"name":"uint256","nodeType":"ElementaryTypeName","src":"83193:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83083:133:0"},"returnParameters":{"id":2991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2990,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3100,"src":"83287:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2989,"name":"uint256","nodeType":"ElementaryTypeName","src":"83287:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83286:9:0"},"scope":4244,"src":"83068:2507:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3154,"nodeType":"Block","src":"85761:427:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3112,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"85776:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":14,"src":"85776:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3114,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"85795:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}},"src":"85776:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3123,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"85887:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3124,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":14,"src":"85887:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3125,"name":"_mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"85906:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"85887:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3134,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"86005:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3135,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":14,"src":"86005:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3136,"name":"_wrappedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"86024:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"86005:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3150,"nodeType":"Block","src":"86125:56:0","statements":[{"expression":{"arguments":[{"expression":{"id":3146,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"86148:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_TOKEN","nodeType":"MemberAccess","referencedDeclaration":4499,"src":"86148:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3145,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"86140:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"86140:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3149,"nodeType":"ExpressionStatement","src":"86140:29:0"}]},"id":3151,"nodeType":"IfStatement","src":"86001:180:0","trueBody":{"id":3144,"nodeType":"Block","src":"86039:80:0","statements":[{"expression":{"arguments":[{"id":3139,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"86081:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},{"id":3140,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"86090:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3141,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"86100:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":3138,"name":"_swapGivenWrappedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"86061:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_SwapRequest_$29_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct IPoolSwapStructs.SwapRequest memory,uint256[] memory,struct LinearMath.Params memory) view returns (uint256)"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"86061:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3111,"id":3143,"nodeType":"Return","src":"86054:53:0"}]}},"id":3152,"nodeType":"IfStatement","src":"85883:298:0","trueBody":{"id":3133,"nodeType":"Block","src":"85918:77:0","statements":[{"expression":{"arguments":[{"id":3128,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"85957:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},{"id":3129,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"85966:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3130,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"85976:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":3127,"name":"_swapGivenMainIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"85940:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_SwapRequest_$29_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct IPoolSwapStructs.SwapRequest memory,uint256[] memory,struct LinearMath.Params memory) view returns (uint256)"}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"85940:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3111,"id":3132,"nodeType":"Return","src":"85933:50:0"}]}},"id":3153,"nodeType":"IfStatement","src":"85772:409:0","trueBody":{"id":3122,"nodeType":"Block","src":"85801:76:0","statements":[{"expression":{"arguments":[{"id":3117,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"85839:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},{"id":3118,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"85848:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3119,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"85858:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":3116,"name":"_swapGivenBptIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"85823:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_SwapRequest_$29_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct IPoolSwapStructs.SwapRequest memory,uint256[] memory,struct LinearMath.Params memory) view returns (uint256)"}},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"85823:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3111,"id":3121,"nodeType":"Return","src":"85816:49:0"}]}}]},"id":3155,"implemented":true,"kind":"function","modifiers":[],"name":"_onSwapGivenIn","nodeType":"FunctionDefinition","parameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3102,"mutability":"mutable","name":"request","nodeType":"VariableDeclaration","scope":3155,"src":"85617:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest"},"typeName":{"id":3101,"name":"SwapRequest","nodeType":"UserDefinedTypeName","referencedDeclaration":29,"src":"85617:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_storage_ptr","typeString":"struct IPoolSwapStructs.SwapRequest"}},"visibility":"internal"},{"constant":false,"id":3105,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":3155,"src":"85654:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3103,"name":"uint256","nodeType":"ElementaryTypeName","src":"85654:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3104,"nodeType":"ArrayTypeName","src":"85654:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3107,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":3155,"src":"85690:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":3106,"name":"LinearMath.Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"85690:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"85606:122:0"},"returnParameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3155,"src":"85752:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3109,"name":"uint256","nodeType":"ElementaryTypeName","src":"85752:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85751:9:0"},"scope":4244,"src":"85583:605:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3207,"nodeType":"Block","src":"86375:474:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3168,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"86395:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":16,"src":"86395:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3170,"name":"_mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"86415:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"86395:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3172,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"86429:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3173,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":16,"src":"86429:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3174,"name":"_wrappedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"86449:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"86429:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"86395:67:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3177,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"86464:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_TOKEN","nodeType":"MemberAccess","referencedDeclaration":4499,"src":"86464:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3167,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"86386:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"86386:99:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3180,"nodeType":"ExpressionStatement","src":"86386:99:0"},{"expression":{"arguments":[{"expression":{"id":3191,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"86638:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":18,"src":"86638:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3193,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"86671:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3195,"indexExpression":{"id":3194,"name":"_mainIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"86680:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"86671:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3196,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"86710:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3198,"indexExpression":{"id":3197,"name":"_wrappedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"86719:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"86710:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"baseExpression":{"id":3200,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"86781:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3202,"indexExpression":{"id":3201,"name":"_bptIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"86790:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"86781:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3199,"name":"_getApproximateVirtualSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"86752:28:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"86752:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3204,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"86820:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"components":[{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3181,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"86517:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":16,"src":"86517:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3183,"name":"_mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"86537:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"86517:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":3187,"name":"LinearMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"86584:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinearMath_$6389_$","typeString":"type(library LinearMath)"}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_calcWrappedOutPerBptIn","nodeType":"MemberAccess","referencedDeclaration":6185,"src":"86584:34:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"86517:101:0","trueExpression":{"expression":{"id":3185,"name":"LinearMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"86550:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinearMath_$6389_$","typeString":"type(library LinearMath)"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_calcMainOutPerBptIn","nodeType":"MemberAccess","referencedDeclaration":5859,"src":"86550:31:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,struct LinearMath.Params memory) pure returns (uint256)"}}],"id":3190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"86516:103:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"86516:325:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3166,"id":3206,"nodeType":"Return","src":"86496:345:0"}]},"id":3208,"implemented":true,"kind":"function","modifiers":[],"name":"_swapGivenBptIn","nodeType":"FunctionDefinition","parameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"request","nodeType":"VariableDeclaration","scope":3208,"src":"86231:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest"},"typeName":{"id":3156,"name":"SwapRequest","nodeType":"UserDefinedTypeName","referencedDeclaration":29,"src":"86231:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_storage_ptr","typeString":"struct IPoolSwapStructs.SwapRequest"}},"visibility":"internal"},{"constant":false,"id":3160,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":3208,"src":"86268:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3158,"name":"uint256","nodeType":"ElementaryTypeName","src":"86268:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3159,"nodeType":"ArrayTypeName","src":"86268:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3162,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":3208,"src":"86304:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":3161,"name":"LinearMath.Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"86304:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"86220:122:0"},"returnParameters":{"id":3166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3208,"src":"86366:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3164,"name":"uint256","nodeType":"ElementaryTypeName","src":"86366:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86365:9:0"},"scope":4244,"src":"86196:653:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3266,"nodeType":"Block","src":"87037:565:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3221,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"87057:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":16,"src":"87057:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3223,"name":"_wrappedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"87077:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"87057:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3225,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"87094:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":16,"src":"87094:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3227,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"87114:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}},"src":"87094:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"87057:61:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3230,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"87120:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_TOKEN","nodeType":"MemberAccess","referencedDeclaration":4499,"src":"87120:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3220,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"87048:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"87048:93:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3233,"nodeType":"ExpressionStatement","src":"87048:93:0"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3234,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"87172:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":16,"src":"87172:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3236,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"87192:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}},"src":"87172:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"expression":{"id":3257,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"87549:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":18,"src":"87549:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3259,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"87565:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3261,"indexExpression":{"id":3260,"name":"_mainIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"87574:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"87565:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3262,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"87587:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"expression":{"id":3255,"name":"LinearMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"87513:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinearMath_$6389_$","typeString":"type(library LinearMath)"}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_calcWrappedOutPerMainIn","nodeType":"MemberAccess","referencedDeclaration":5693,"src":"87513:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"87513:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"87172:422:0","trueExpression":{"arguments":[{"expression":{"id":3240,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"87270:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":18,"src":"87270:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3242,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"87307:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3244,"indexExpression":{"id":3243,"name":"_mainIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"87316:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"87307:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3245,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"87350:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3247,"indexExpression":{"id":3246,"name":"_wrappedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"87359:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"87350:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"baseExpression":{"id":3249,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"87425:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3251,"indexExpression":{"id":3250,"name":"_bptIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"87434:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"87425:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3248,"name":"_getApproximateVirtualSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"87396:28:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"87396:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3253,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"87468:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"expression":{"id":3238,"name":"LinearMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"87216:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinearMath_$6389_$","typeString":"type(library LinearMath)"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_calcBptOutPerMainIn","nodeType":"MemberAccess","referencedDeclaration":5602,"src":"87216:31:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"87216:277:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3219,"id":3265,"nodeType":"Return","src":"87152:442:0"}]},"id":3267,"implemented":true,"kind":"function","modifiers":[],"name":"_swapGivenMainIn","nodeType":"FunctionDefinition","parameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3210,"mutability":"mutable","name":"request","nodeType":"VariableDeclaration","scope":3267,"src":"86893:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest"},"typeName":{"id":3209,"name":"SwapRequest","nodeType":"UserDefinedTypeName","referencedDeclaration":29,"src":"86893:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_storage_ptr","typeString":"struct IPoolSwapStructs.SwapRequest"}},"visibility":"internal"},{"constant":false,"id":3213,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":3267,"src":"86930:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"86930:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3212,"nodeType":"ArrayTypeName","src":"86930:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3215,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":3267,"src":"86966:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":3214,"name":"LinearMath.Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"86966:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"86882:122:0"},"returnParameters":{"id":3219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3218,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3267,"src":"87028:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3217,"name":"uint256","nodeType":"ElementaryTypeName","src":"87028:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87027:9:0"},"scope":4244,"src":"86857:745:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3325,"nodeType":"Block","src":"87793:565:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3280,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"87813:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":16,"src":"87813:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3282,"name":"_mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"87833:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"87813:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3284,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"87847:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":16,"src":"87847:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3286,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"87867:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}},"src":"87847:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"87813:58:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3289,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"87873:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_TOKEN","nodeType":"MemberAccess","referencedDeclaration":4499,"src":"87873:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3279,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"87804:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"87804:90:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3292,"nodeType":"ExpressionStatement","src":"87804:90:0"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3293,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"87925:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":16,"src":"87925:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3295,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"87945:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}},"src":"87925:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"expression":{"id":3316,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"88305:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":18,"src":"88305:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3318,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"88321:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3320,"indexExpression":{"id":3319,"name":"_mainIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"88330:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"88321:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3321,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"88343:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"expression":{"id":3314,"name":"LinearMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"88269:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinearMath_$6389_$","typeString":"type(library LinearMath)"}},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_calcMainOutPerWrappedIn","nodeType":"MemberAccess","referencedDeclaration":5897,"src":"88269:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"88269:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"87925:425:0","trueExpression":{"arguments":[{"expression":{"id":3299,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"88026:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":18,"src":"88026:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3301,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"88063:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3303,"indexExpression":{"id":3302,"name":"_mainIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"88072:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"88063:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3304,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"88106:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3306,"indexExpression":{"id":3305,"name":"_wrappedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"88115:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"88106:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"baseExpression":{"id":3308,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"88181:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3310,"indexExpression":{"id":3309,"name":"_bptIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"88190:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"88181:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3307,"name":"_getApproximateVirtualSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"88152:28:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"88152:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3312,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"88224:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"expression":{"id":3297,"name":"LinearMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"87969:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinearMath_$6389_$","typeString":"type(library LinearMath)"}},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_calcBptOutPerWrappedIn","nodeType":"MemberAccess","referencedDeclaration":6003,"src":"87969:34:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"87969:280:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3278,"id":3324,"nodeType":"Return","src":"87905:445:0"}]},"id":3326,"implemented":true,"kind":"function","modifiers":[],"name":"_swapGivenWrappedIn","nodeType":"FunctionDefinition","parameters":{"id":3275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3269,"mutability":"mutable","name":"request","nodeType":"VariableDeclaration","scope":3326,"src":"87649:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest"},"typeName":{"id":3268,"name":"SwapRequest","nodeType":"UserDefinedTypeName","referencedDeclaration":29,"src":"87649:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_storage_ptr","typeString":"struct IPoolSwapStructs.SwapRequest"}},"visibility":"internal"},{"constant":false,"id":3272,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":3326,"src":"87686:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3270,"name":"uint256","nodeType":"ElementaryTypeName","src":"87686:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3271,"nodeType":"ArrayTypeName","src":"87686:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3274,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":3326,"src":"87722:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":3273,"name":"LinearMath.Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"87722:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"87638:122:0"},"returnParameters":{"id":3278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3277,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3326,"src":"87784:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"87784:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87783:9:0"},"scope":4244,"src":"87610:748:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3380,"nodeType":"Block","src":"88545:433:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3338,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"88560:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":16,"src":"88560:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3340,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"88580:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}},"src":"88560:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3349,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"88673:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":16,"src":"88673:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3351,"name":"_mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"88693:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"88673:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3360,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"88793:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":16,"src":"88793:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3362,"name":"_wrappedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"88813:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"88793:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3376,"nodeType":"Block","src":"88915:56:0","statements":[{"expression":{"arguments":[{"expression":{"id":3372,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"88938:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_TOKEN","nodeType":"MemberAccess","referencedDeclaration":4499,"src":"88938:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3371,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"88930:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"88930:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3375,"nodeType":"ExpressionStatement","src":"88930:29:0"}]},"id":3377,"nodeType":"IfStatement","src":"88789:182:0","trueBody":{"id":3370,"nodeType":"Block","src":"88828:81:0","statements":[{"expression":{"arguments":[{"id":3365,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"88871:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},{"id":3366,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"88880:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3367,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"88890:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":3364,"name":"_swapGivenWrappedOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"88850:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_SwapRequest_$29_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct IPoolSwapStructs.SwapRequest memory,uint256[] memory,struct LinearMath.Params memory) view returns (uint256)"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"88850:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3337,"id":3369,"nodeType":"Return","src":"88843:54:0"}]}},"id":3378,"nodeType":"IfStatement","src":"88669:302:0","trueBody":{"id":3359,"nodeType":"Block","src":"88705:78:0","statements":[{"expression":{"arguments":[{"id":3354,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"88745:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},{"id":3355,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"88754:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3356,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"88764:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":3353,"name":"_swapGivenMainOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"88727:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_SwapRequest_$29_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct IPoolSwapStructs.SwapRequest memory,uint256[] memory,struct LinearMath.Params memory) view returns (uint256)"}},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"88727:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3337,"id":3358,"nodeType":"Return","src":"88720:51:0"}]}},"id":3379,"nodeType":"IfStatement","src":"88556:415:0","trueBody":{"id":3348,"nodeType":"Block","src":"88586:77:0","statements":[{"expression":{"arguments":[{"id":3343,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"88625:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},{"id":3344,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"88634:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3345,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"88644:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":3342,"name":"_swapGivenBptOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"88608:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_SwapRequest_$29_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct IPoolSwapStructs.SwapRequest memory,uint256[] memory,struct LinearMath.Params memory) view returns (uint256)"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"88608:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3337,"id":3347,"nodeType":"Return","src":"88601:50:0"}]}}]},"id":3381,"implemented":true,"kind":"function","modifiers":[],"name":"_onSwapGivenOut","nodeType":"FunctionDefinition","parameters":{"id":3334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3328,"mutability":"mutable","name":"request","nodeType":"VariableDeclaration","scope":3381,"src":"88401:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest"},"typeName":{"id":3327,"name":"SwapRequest","nodeType":"UserDefinedTypeName","referencedDeclaration":29,"src":"88401:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_storage_ptr","typeString":"struct IPoolSwapStructs.SwapRequest"}},"visibility":"internal"},{"constant":false,"id":3331,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":3381,"src":"88438:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3329,"name":"uint256","nodeType":"ElementaryTypeName","src":"88438:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3330,"nodeType":"ArrayTypeName","src":"88438:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3333,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":3381,"src":"88474:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":3332,"name":"LinearMath.Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"88474:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"88390:122:0"},"returnParameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3336,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3381,"src":"88536:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3335,"name":"uint256","nodeType":"ElementaryTypeName","src":"88536:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88535:9:0"},"scope":4244,"src":"88366:612:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3433,"nodeType":"Block","src":"89166:471:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3394,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"89186:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":14,"src":"89186:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3396,"name":"_mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"89205:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"89186:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3398,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"89219:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":14,"src":"89219:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3400,"name":"_wrappedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"89238:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"89219:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"89186:65:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3403,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"89253:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_TOKEN","nodeType":"MemberAccess","referencedDeclaration":4499,"src":"89253:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3393,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"89177:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"89177:97:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3406,"nodeType":"ExpressionStatement","src":"89177:97:0"},{"expression":{"arguments":[{"expression":{"id":3417,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"89426:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":18,"src":"89426:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3419,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"89459:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3421,"indexExpression":{"id":3420,"name":"_mainIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"89468:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"89459:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3422,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"89498:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3424,"indexExpression":{"id":3423,"name":"_wrappedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"89507:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"89498:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"baseExpression":{"id":3426,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"89569:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3428,"indexExpression":{"id":3427,"name":"_bptIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"89578:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"89569:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3425,"name":"_getApproximateVirtualSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"89540:28:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"89540:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3430,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"89608:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"components":[{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3407,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"89306:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":14,"src":"89306:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3409,"name":"_mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"89325:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"89306:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":3413,"name":"LinearMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"89372:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinearMath_$6389_$","typeString":"type(library LinearMath)"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_calcWrappedInPerBptOut","nodeType":"MemberAccess","referencedDeclaration":6128,"src":"89372:34:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"89306:100:0","trueExpression":{"expression":{"id":3411,"name":"LinearMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"89338:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinearMath_$6389_$","typeString":"type(library LinearMath)"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_calcMainInPerBptOut","nodeType":"MemberAccess","referencedDeclaration":5798,"src":"89338:31:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,struct LinearMath.Params memory) pure returns (uint256)"}}],"id":3416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"89305:102:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"89305:324:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3392,"id":3432,"nodeType":"Return","src":"89285:344:0"}]},"id":3434,"implemented":true,"kind":"function","modifiers":[],"name":"_swapGivenBptOut","nodeType":"FunctionDefinition","parameters":{"id":3389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3383,"mutability":"mutable","name":"request","nodeType":"VariableDeclaration","scope":3434,"src":"89022:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest"},"typeName":{"id":3382,"name":"SwapRequest","nodeType":"UserDefinedTypeName","referencedDeclaration":29,"src":"89022:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_storage_ptr","typeString":"struct IPoolSwapStructs.SwapRequest"}},"visibility":"internal"},{"constant":false,"id":3386,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":3434,"src":"89059:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3384,"name":"uint256","nodeType":"ElementaryTypeName","src":"89059:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3385,"nodeType":"ArrayTypeName","src":"89059:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3388,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":3434,"src":"89095:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":3387,"name":"LinearMath.Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"89095:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"89011:122:0"},"returnParameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3391,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3434,"src":"89157:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3390,"name":"uint256","nodeType":"ElementaryTypeName","src":"89157:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89156:9:0"},"scope":4244,"src":"88986:651:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3492,"nodeType":"Block","src":"89826:562:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3447,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"89846:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":14,"src":"89846:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3449,"name":"_wrappedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"89865:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"89846:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3451,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"89882:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3452,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":14,"src":"89882:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3453,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"89901:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}},"src":"89882:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"89846:59:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3456,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"89907:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_TOKEN","nodeType":"MemberAccess","referencedDeclaration":4499,"src":"89907:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3446,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"89837:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"89837:91:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3459,"nodeType":"ExpressionStatement","src":"89837:91:0"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3460,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"89959:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":14,"src":"89959:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3462,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"89978:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}},"src":"89959:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"expression":{"id":3483,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"90335:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":18,"src":"90335:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3485,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"90351:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3487,"indexExpression":{"id":3486,"name":"_mainIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"90360:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"90351:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3488,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"90373:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"expression":{"id":3481,"name":"LinearMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"90299:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinearMath_$6389_$","typeString":"type(library LinearMath)"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_calcWrappedInPerMainOut","nodeType":"MemberAccess","referencedDeclaration":5727,"src":"90299:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"90299:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"89959:421:0","trueExpression":{"arguments":[{"expression":{"id":3466,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"90056:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":18,"src":"90056:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3468,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"90093:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3470,"indexExpression":{"id":3469,"name":"_mainIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"90102:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"90093:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3471,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"90136:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3473,"indexExpression":{"id":3472,"name":"_wrappedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"90145:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"90136:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"baseExpression":{"id":3475,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"90211:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3477,"indexExpression":{"id":3476,"name":"_bptIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"90220:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"90211:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3474,"name":"_getApproximateVirtualSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"90182:28:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"90182:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3479,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3441,"src":"90254:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"expression":{"id":3464,"name":"LinearMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"90002:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinearMath_$6389_$","typeString":"type(library LinearMath)"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_calcBptInPerMainOut","nodeType":"MemberAccess","referencedDeclaration":5659,"src":"90002:31:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"90002:277:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3445,"id":3491,"nodeType":"Return","src":"89939:441:0"}]},"id":3493,"implemented":true,"kind":"function","modifiers":[],"name":"_swapGivenMainOut","nodeType":"FunctionDefinition","parameters":{"id":3442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3436,"mutability":"mutable","name":"request","nodeType":"VariableDeclaration","scope":3493,"src":"89682:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest"},"typeName":{"id":3435,"name":"SwapRequest","nodeType":"UserDefinedTypeName","referencedDeclaration":29,"src":"89682:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_storage_ptr","typeString":"struct IPoolSwapStructs.SwapRequest"}},"visibility":"internal"},{"constant":false,"id":3439,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":3493,"src":"89719:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"89719:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3438,"nodeType":"ArrayTypeName","src":"89719:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3441,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":3493,"src":"89755:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":3440,"name":"LinearMath.Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"89755:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"89671:122:0"},"returnParameters":{"id":3445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3444,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3493,"src":"89817:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3443,"name":"uint256","nodeType":"ElementaryTypeName","src":"89817:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89816:9:0"},"scope":4244,"src":"89645:743:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3551,"nodeType":"Block","src":"90580:562:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3506,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"90600:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":14,"src":"90600:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3508,"name":"_mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"90619:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"90600:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3510,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"90633:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":14,"src":"90633:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3512,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"90652:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}},"src":"90633:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"90600:56:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3515,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"90658:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_TOKEN","nodeType":"MemberAccess","referencedDeclaration":4499,"src":"90658:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3505,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"90591:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"90591:88:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3518,"nodeType":"ExpressionStatement","src":"90591:88:0"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3519,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"90710:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":14,"src":"90710:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3521,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"90729:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}},"src":"90710:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"expression":{"id":3542,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"91089:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":18,"src":"91089:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3544,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"91105:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3546,"indexExpression":{"id":3545,"name":"_mainIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"91114:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"91105:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3547,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"91127:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"expression":{"id":3540,"name":"LinearMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"91053:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinearMath_$6389_$","typeString":"type(library LinearMath)"}},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_calcMainInPerWrappedOut","nodeType":"MemberAccess","referencedDeclaration":5935,"src":"91053:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"91053:81:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"90710:424:0","trueExpression":{"arguments":[{"expression":{"id":3525,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"90810:7:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest memory"}},"id":3526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":18,"src":"90810:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3527,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"90847:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3529,"indexExpression":{"id":3528,"name":"_mainIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"90856:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"90847:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3530,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"90890:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3532,"indexExpression":{"id":3531,"name":"_wrappedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"90899:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"90890:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"baseExpression":{"id":3534,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"90965:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3536,"indexExpression":{"id":3535,"name":"_bptIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"90974:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"90965:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3533,"name":"_getApproximateVirtualSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"90936:28:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"90936:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3538,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"91008:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"expression":{"id":3523,"name":"LinearMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"90753:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinearMath_$6389_$","typeString":"type(library LinearMath)"}},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_calcBptInPerWrappedOut","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"90753:34:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"90753:280:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3504,"id":3550,"nodeType":"Return","src":"90690:444:0"}]},"id":3552,"implemented":true,"kind":"function","modifiers":[],"name":"_swapGivenWrappedOut","nodeType":"FunctionDefinition","parameters":{"id":3501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3495,"mutability":"mutable","name":"request","nodeType":"VariableDeclaration","scope":3552,"src":"90436:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_memory_ptr","typeString":"struct IPoolSwapStructs.SwapRequest"},"typeName":{"id":3494,"name":"SwapRequest","nodeType":"UserDefinedTypeName","referencedDeclaration":29,"src":"90436:11:0","typeDescriptions":{"typeIdentifier":"t_struct$_SwapRequest_$29_storage_ptr","typeString":"struct IPoolSwapStructs.SwapRequest"}},"visibility":"internal"},{"constant":false,"id":3498,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":3552,"src":"90473:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3496,"name":"uint256","nodeType":"ElementaryTypeName","src":"90473:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3497,"nodeType":"ArrayTypeName","src":"90473:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3500,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":3552,"src":"90509:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":3499,"name":"LinearMath.Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"90509:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"90425:122:0"},"returnParameters":{"id":3504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3503,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3552,"src":"90571:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3502,"name":"uint256","nodeType":"ElementaryTypeName","src":"90571:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"90570:9:0"},"scope":4244,"src":"90396:746:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[2222],"body":{"id":3621,"nodeType":"Block","src":"91378:680:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3575,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"91518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3578,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"91536:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}],"id":3577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"91528:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3576,"name":"address","nodeType":"ElementaryTypeName","src":"91528:7:0","typeDescriptions":{}}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"91528:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"91518:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3581,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"91543:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_INITIALIZATION","nodeType":"MemberAccess","referencedDeclaration":4598,"src":"91543:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3574,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"91509:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"91509:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3584,"nodeType":"ExpressionStatement","src":"91509:64:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3586,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"91593:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3589,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"91614:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}],"id":3588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"91606:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3587,"name":"address","nodeType":"ElementaryTypeName","src":"91606:7:0","typeDescriptions":{}}},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"91606:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"91593:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3592,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"91621:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_INITIALIZATION","nodeType":"MemberAccess","referencedDeclaration":4598,"src":"91621:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3585,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"91584:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"91584:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3595,"nodeType":"ExpressionStatement","src":"91584:67:0"},{"assignments":[3597],"declarations":[{"constant":false,"id":3597,"mutability":"mutable","name":"bptAmountOut","nodeType":"VariableDeclaration","scope":3621,"src":"91840:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3596,"name":"uint256","nodeType":"ElementaryTypeName","src":"91840:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3599,"initialValue":{"id":3598,"name":"_INITIAL_BPT_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"91863:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"91840:42:0"},{"assignments":[3604],"declarations":[{"constant":false,"id":3604,"mutability":"mutable","name":"amountsIn","nodeType":"VariableDeclaration","scope":3621,"src":"91895:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3602,"name":"uint256","nodeType":"ElementaryTypeName","src":"91895:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3603,"nodeType":"ArrayTypeName","src":"91895:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3610,"initialValue":{"arguments":[{"id":3608,"name":"_TOTAL_TOKENS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"91938:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"91924:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3605,"name":"uint256","nodeType":"ElementaryTypeName","src":"91928:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3606,"nodeType":"ArrayTypeName","src":"91928:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"91924:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"91895:57:0"},{"expression":{"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3611,"name":"amountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"91963:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3613,"indexExpression":{"id":3612,"name":"_bptIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"91973:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"91963:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3614,"name":"_INITIAL_BPT_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"91986:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"91963:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3616,"nodeType":"ExpressionStatement","src":"91963:42:0"},{"expression":{"components":[{"id":3617,"name":"bptAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"92026:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3618,"name":"amountsIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"92040:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"92025:25:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"functionReturnParameters":3573,"id":3620,"nodeType":"Return","src":"92018:32:0"}]},"id":3622,"implemented":true,"kind":"function","modifiers":[{"id":3567,"modifierName":{"id":3566,"name":"whenNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"91328:13:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"91328:13:0"}],"name":"_onInitializePool","nodeType":"FunctionDefinition","overrides":{"id":3565,"nodeType":"OverrideSpecifier","overrides":[],"src":"91319:8:0"},"parameters":{"id":3564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3554,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3622,"src":"91187:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3553,"name":"bytes32","nodeType":"ElementaryTypeName","src":"91187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3556,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":3622,"src":"91205:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3555,"name":"address","nodeType":"ElementaryTypeName","src":"91205:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3558,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":3622,"src":"91230:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3557,"name":"address","nodeType":"ElementaryTypeName","src":"91230:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3561,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3622,"src":"91258:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3559,"name":"uint256","nodeType":"ElementaryTypeName","src":"91258:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3560,"nodeType":"ArrayTypeName","src":"91258:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3563,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3622,"src":"91285:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3562,"name":"bytes","nodeType":"ElementaryTypeName","src":"91285:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"91176:128:0"},"returnParameters":{"id":3573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3569,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3622,"src":"91351:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3568,"name":"uint256","nodeType":"ElementaryTypeName","src":"91351:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3572,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3622,"src":"91360:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3570,"name":"uint256","nodeType":"ElementaryTypeName","src":"91360:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3571,"nodeType":"ArrayTypeName","src":"91360:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"91350:27:0"},"scope":4244,"src":"91150:908:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[2252],"body":{"id":3657,"nodeType":"Block","src":"92429:59:0","statements":[{"expression":{"arguments":[{"expression":{"id":3653,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"92448:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"UNHANDLED_BY_LINEAR_POOL","nodeType":"MemberAccess","referencedDeclaration":4574,"src":"92448:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3652,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"92440:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"92440:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3656,"nodeType":"ExpressionStatement","src":"92440:40:0"}]},"id":3658,"implemented":true,"kind":"function","modifiers":[],"name":"_onJoinPool","nodeType":"FunctionDefinition","overrides":{"id":3642,"nodeType":"OverrideSpecifier","overrides":[],"src":"92302:8:0"},"parameters":{"id":3641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3658,"src":"92097:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92097:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3626,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3658,"src":"92115:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3625,"name":"address","nodeType":"ElementaryTypeName","src":"92115:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3628,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3658,"src":"92133:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3627,"name":"address","nodeType":"ElementaryTypeName","src":"92133:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3631,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3658,"src":"92151:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"92151:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3630,"nodeType":"ArrayTypeName","src":"92151:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3633,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3658,"src":"92178:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3632,"name":"uint256","nodeType":"ElementaryTypeName","src":"92178:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3635,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3658,"src":"92196:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3634,"name":"uint256","nodeType":"ElementaryTypeName","src":"92196:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3638,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3658,"src":"92214:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"92214:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3637,"nodeType":"ArrayTypeName","src":"92214:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3640,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3658,"src":"92241:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3639,"name":"bytes","nodeType":"ElementaryTypeName","src":"92241:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"92086:174:0"},"returnParameters":{"id":3651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3644,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3658,"src":"92343:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3643,"name":"uint256","nodeType":"ElementaryTypeName","src":"92343:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3647,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3658,"src":"92365:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3645,"name":"uint256","nodeType":"ElementaryTypeName","src":"92365:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3646,"nodeType":"ArrayTypeName","src":"92365:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3650,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3658,"src":"92396:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3648,"name":"uint256","nodeType":"ElementaryTypeName","src":"92396:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3649,"nodeType":"ArrayTypeName","src":"92396:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"92328:95:0"},"scope":4244,"src":"92066:422:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[2282],"body":{"id":3730,"nodeType":"Block","src":"92922:1446:0","statements":[{"assignments":[3691],"declarations":[{"constant":false,"id":3691,"mutability":"mutable","name":"kind","nodeType":"VariableDeclaration","scope":3730,"src":"93509:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ExitKind_$6392","typeString":"enum LinearPoolUserData.ExitKind"},"typeName":{"id":3690,"name":"LinearPoolUserData.ExitKind","nodeType":"UserDefinedTypeName","referencedDeclaration":6392,"src":"93509:27:0","typeDescriptions":{"typeIdentifier":"t_enum$_ExitKind_$6392","typeString":"enum LinearPoolUserData.ExitKind"}},"visibility":"internal"}],"id":3695,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3692,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"93544:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exitKind","nodeType":"MemberAccess","referencedDeclaration":6407,"src":"93544:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_enum$_ExitKind_$6392_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (enum LinearPoolUserData.ExitKind)"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"93544:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_ExitKind_$6392","typeString":"enum LinearPoolUserData.ExitKind"}},"nodeType":"VariableDeclarationStatement","src":"93509:54:0"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_ExitKind_$6392","typeString":"enum LinearPoolUserData.ExitKind"},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3696,"name":"kind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"93578:4:0","typeDescriptions":{"typeIdentifier":"t_enum$_ExitKind_$6392","typeString":"enum LinearPoolUserData.ExitKind"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":3697,"name":"LinearPoolUserData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"93586:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinearPoolUserData_$6428_$","typeString":"type(library LinearPoolUserData)"}},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ExitKind","nodeType":"MemberAccess","referencedDeclaration":6392,"src":"93586:27:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ExitKind_$6392_$","typeString":"type(enum LinearPoolUserData.ExitKind)"}},"id":3699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"EMERGENCY_EXACT_BPT_IN_FOR_TOKENS_OUT","nodeType":"MemberAccess","src":"93586:65:0","typeDescriptions":{"typeIdentifier":"t_enum$_ExitKind_$6392","typeString":"enum LinearPoolUserData.ExitKind"}},"src":"93578:73:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3728,"nodeType":"Block","src":"93726:635:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3707,"name":"_ensurePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"93741:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"93741:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3709,"nodeType":"ExpressionStatement","src":"93741:15:0"},{"expression":{"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3710,"name":"bptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"94097:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3711,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"94110:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3712,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"94096:25:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3714,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"94151:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3715,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"94161:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3713,"name":"_emergencyProportionalExit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"94124:26:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,bytes memory) view returns (uint256,uint256[] memory)"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"94124:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"src":"94096:74:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3718,"nodeType":"ExpressionStatement","src":"94096:74:0"},{"expression":{"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3719,"name":"dueProtocolFeeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"94293:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3723,"name":"_getTotalTokens","nodeType":"Identifier","overloadedDeclarations":[3799],"referencedDeclaration":3799,"src":"94331:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"94331:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"94317:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"94321:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3721,"nodeType":"ArrayTypeName","src":"94321:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"94317:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"94293:56:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3727,"nodeType":"ExpressionStatement","src":"94293:56:0"}]},"id":3729,"nodeType":"IfStatement","src":"93574:787:0","trueBody":{"id":3706,"nodeType":"Block","src":"93653:67:0","statements":[{"expression":{"arguments":[{"expression":{"id":3702,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"93676:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"UNHANDLED_BY_LINEAR_POOL","nodeType":"MemberAccess","referencedDeclaration":4574,"src":"93676:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3701,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"93668:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"93668:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3705,"nodeType":"ExpressionStatement","src":"93668:40:0"}]}}]},"id":3731,"implemented":true,"kind":"function","modifiers":[],"name":"_onExitPool","nodeType":"FunctionDefinition","overrides":{"id":3678,"nodeType":"OverrideSpecifier","overrides":[],"src":"92750:8:0"},"parameters":{"id":3677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3660,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3731,"src":"92527:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"92527:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3662,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3731,"src":"92545:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3661,"name":"address","nodeType":"ElementaryTypeName","src":"92545:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3664,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3731,"src":"92563:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3663,"name":"address","nodeType":"ElementaryTypeName","src":"92563:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3667,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":3731,"src":"92581:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3665,"name":"uint256","nodeType":"ElementaryTypeName","src":"92581:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3666,"nodeType":"ArrayTypeName","src":"92581:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3669,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3731,"src":"92617:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"92617:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3671,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3731,"src":"92635:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"92635:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3674,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3731,"src":"92653:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3672,"name":"uint256","nodeType":"ElementaryTypeName","src":"92653:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3673,"nodeType":"ArrayTypeName","src":"92653:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3676,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":3731,"src":"92680:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3675,"name":"bytes","nodeType":"ElementaryTypeName","src":"92680:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"92516:192:0"},"returnParameters":{"id":3687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3680,"mutability":"mutable","name":"bptAmountIn","nodeType":"VariableDeclaration","scope":3731,"src":"92791:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3679,"name":"uint256","nodeType":"ElementaryTypeName","src":"92791:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3683,"mutability":"mutable","name":"amountsOut","nodeType":"VariableDeclaration","scope":3731,"src":"92825:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3681,"name":"uint256","nodeType":"ElementaryTypeName","src":"92825:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3682,"nodeType":"ArrayTypeName","src":"92825:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3686,"mutability":"mutable","name":"dueProtocolFeeAmounts","nodeType":"VariableDeclaration","scope":3731,"src":"92867:38:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"92867:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3685,"nodeType":"ArrayTypeName","src":"92867:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"92776:140:0"},"scope":4244,"src":"92496:1872:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3771,"nodeType":"Block","src":"94543:924:0","statements":[{"assignments":[3745],"declarations":[{"constant":false,"id":3745,"mutability":"mutable","name":"bptAmountIn","nodeType":"VariableDeclaration","scope":3771,"src":"94918:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3744,"name":"uint256","nodeType":"ElementaryTypeName","src":"94918:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3749,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3746,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"94940:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exactBptInForTokensOut","nodeType":"MemberAccess","referencedDeclaration":6427,"src":"94940:31:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (uint256)"}},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"94940:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"94918:55:0"},{"assignments":[3754],"declarations":[{"constant":false,"id":3754,"mutability":"mutable","name":"amountsOut","nodeType":"VariableDeclaration","scope":3771,"src":"95207:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3752,"name":"uint256","nodeType":"ElementaryTypeName","src":"95207:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3753,"nodeType":"ArrayTypeName","src":"95207:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3766,"initialValue":{"arguments":[{"id":3757,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"95292:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3758,"name":"bptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"95315:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"baseExpression":{"id":3760,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"95359:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3762,"indexExpression":{"id":3761,"name":"_bptIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"95368:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"95359:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3759,"name":"_getVirtualSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"95341:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"95341:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3764,"name":"_bptIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"95394:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3755,"name":"LinearMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"95237:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinearMath_$6389_$","typeString":"type(library LinearMath)"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_calcTokensOutGivenExactBptIn","nodeType":"MemberAccess","referencedDeclaration":6388,"src":"95237:40:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256,uint256,uint256) pure returns (uint256[] memory)"}},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"95237:177:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"95207:207:0"},{"expression":{"components":[{"id":3767,"name":"bptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"95435:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3768,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"95448:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3769,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"95434:25:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"functionReturnParameters":3743,"id":3770,"nodeType":"Return","src":"95427:32:0"}]},"id":3772,"implemented":true,"kind":"function","modifiers":[],"name":"_emergencyProportionalExit","nodeType":"FunctionDefinition","parameters":{"id":3737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3734,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":3772,"src":"94412:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3732,"name":"uint256","nodeType":"ElementaryTypeName","src":"94412:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3733,"nodeType":"ArrayTypeName","src":"94412:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3736,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":3772,"src":"94439:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3735,"name":"bytes","nodeType":"ElementaryTypeName","src":"94439:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"94411:50:0"},"returnParameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3772,"src":"94511:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3738,"name":"uint256","nodeType":"ElementaryTypeName","src":"94511:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3742,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3772,"src":"94520:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3740,"name":"uint256","nodeType":"ElementaryTypeName","src":"94520:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3741,"nodeType":"ArrayTypeName","src":"94520:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"94510:27:0"},"scope":4244,"src":"94376:1091:0","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[1677],"body":{"id":3780,"nodeType":"Block","src":"95541:39:0","statements":[{"expression":{"id":3778,"name":"_TOTAL_TOKENS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"95559:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3777,"id":3779,"nodeType":"Return","src":"95552:20:0"}]},"id":3781,"implemented":true,"kind":"function","modifiers":[],"name":"_getMaxTokens","nodeType":"FunctionDefinition","overrides":{"id":3774,"nodeType":"OverrideSpecifier","overrides":[],"src":"95514:8:0"},"parameters":{"id":3773,"nodeType":"ParameterList","parameters":[],"src":"95497:2:0"},"returnParameters":{"id":3777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3776,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3781,"src":"95532:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3775,"name":"uint256","nodeType":"ElementaryTypeName","src":"95532:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95531:9:0"},"scope":4244,"src":"95475:105:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[1686],"body":{"id":3789,"nodeType":"Block","src":"95655:212:0","statements":[{"expression":{"hexValue":"30","id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"95858:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3786,"id":3788,"nodeType":"Return","src":"95851:8:0"}]},"id":3790,"implemented":true,"kind":"function","modifiers":[],"name":"_getMinimumBpt","nodeType":"FunctionDefinition","overrides":{"id":3783,"nodeType":"OverrideSpecifier","overrides":[],"src":"95628:8:0"},"parameters":{"id":3782,"nodeType":"ParameterList","parameters":[],"src":"95611:2:0"},"returnParameters":{"id":3786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3790,"src":"95646:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3784,"name":"uint256","nodeType":"ElementaryTypeName","src":"95646:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95645:9:0"},"scope":4244,"src":"95588:279:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[1672],"body":{"id":3798,"nodeType":"Block","src":"95951:39:0","statements":[{"expression":{"id":3796,"name":"_TOTAL_TOKENS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"95969:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3795,"id":3797,"nodeType":"Return","src":"95962:20:0"}]},"id":3799,"implemented":true,"kind":"function","modifiers":[],"name":"_getTotalTokens","nodeType":"FunctionDefinition","overrides":{"id":3792,"nodeType":"OverrideSpecifier","overrides":[],"src":"95924:8:0"},"parameters":{"id":3791,"nodeType":"ParameterList","parameters":[],"src":"95899:2:0"},"returnParameters":{"id":3795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3794,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3799,"src":"95942:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"95942:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"95941:9:0"},"scope":4244,"src":"95875:115:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2380],"body":{"id":3839,"nodeType":"Block","src":"96085:510:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3807,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"96100:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3808,"name":"_mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"96109:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"96100:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3813,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"96188:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3814,"name":"_wrappedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"96197:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"96188:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3823,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"96463:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3824,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"96472:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}},"src":"96463:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3835,"nodeType":"Block","src":"96532:56:0","statements":[{"expression":{"arguments":[{"expression":{"id":3831,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"96555:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_TOKEN","nodeType":"MemberAccess","referencedDeclaration":4499,"src":"96555:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3830,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"96547:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"96547:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3834,"nodeType":"ExpressionStatement","src":"96547:29:0"}]},"id":3836,"nodeType":"IfStatement","src":"96459:129:0","trueBody":{"id":3829,"nodeType":"Block","src":"96478:48:0","statements":[{"expression":{"expression":{"id":3826,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"96500:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$5377_$","typeString":"type(library FixedPoint)"}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ONE","nodeType":"MemberAccess","referencedDeclaration":5042,"src":"96500:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3806,"id":3828,"nodeType":"Return","src":"96493:21:0"}]}},"id":3837,"nodeType":"IfStatement","src":"96184:404:0","trueBody":{"id":3822,"nodeType":"Block","src":"96212:241:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3818,"name":"_getWrappedTokenRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"96418:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"96418:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3816,"name":"_scalingFactorWrappedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"96383:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDown","nodeType":"MemberAccess","referencedDeclaration":5134,"src":"96383:34:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"96383:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3806,"id":3821,"nodeType":"Return","src":"96376:65:0"}]}},"id":3838,"nodeType":"IfStatement","src":"96096:492:0","trueBody":{"id":3812,"nodeType":"Block","src":"96121:57:0","statements":[{"expression":{"id":3810,"name":"_scalingFactorMainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"96143:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3806,"id":3811,"nodeType":"Return","src":"96136:30:0"}]}}]},"id":3840,"implemented":true,"kind":"function","modifiers":[],"name":"_scalingFactor","nodeType":"FunctionDefinition","overrides":{"id":3803,"nodeType":"OverrideSpecifier","overrides":[],"src":"96058:8:0"},"parameters":{"id":3802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3801,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":3840,"src":"96022:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":3800,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"96022:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"96021:14:0"},"returnParameters":{"id":3806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3840,"src":"96076:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"96076:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"96075:9:0"},"scope":4244,"src":"95998:597:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2387],"body":{"id":3883,"nodeType":"Block","src":"96688:475:0","statements":[{"assignments":[3851],"declarations":[{"constant":false,"id":3851,"mutability":"mutable","name":"scalingFactors","nodeType":"VariableDeclaration","scope":3883,"src":"96699:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3849,"name":"uint256","nodeType":"ElementaryTypeName","src":"96699:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3850,"nodeType":"ArrayTypeName","src":"96699:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3857,"initialValue":{"arguments":[{"id":3855,"name":"_TOTAL_TOKENS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"96747:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"96733:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3852,"name":"uint256","nodeType":"ElementaryTypeName","src":"96737:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3853,"nodeType":"ArrayTypeName","src":"96737:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"96733:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"96699:62:0"},{"expression":{"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3858,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"96915:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3860,"indexExpression":{"id":3859,"name":"_mainIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"96930:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"96915:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3861,"name":"_scalingFactorMainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"96944:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"96915:52:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3863,"nodeType":"ExpressionStatement","src":"96915:52:0"},{"expression":{"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3864,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"96978:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3866,"indexExpression":{"id":3865,"name":"_wrappedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"96993:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"96978:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3869,"name":"_getWrappedTokenRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"97045:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"97045:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3867,"name":"_scalingFactorWrappedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"97010:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDown","nodeType":"MemberAccess","referencedDeclaration":5134,"src":"97010:34:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"97010:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"96978:90:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3873,"nodeType":"ExpressionStatement","src":"96978:90:0"},{"expression":{"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3874,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"97079:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3876,"indexExpression":{"id":3875,"name":"_bptIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"97094:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"97079:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3877,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"97107:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$5377_$","typeString":"type(library FixedPoint)"}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ONE","nodeType":"MemberAccess","referencedDeclaration":5042,"src":"97107:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"97079:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3880,"nodeType":"ExpressionStatement","src":"97079:42:0"},{"expression":{"id":3881,"name":"scalingFactors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"97141:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3846,"id":3882,"nodeType":"Return","src":"97134:21:0"}]},"id":3884,"implemented":true,"kind":"function","modifiers":[],"name":"_scalingFactors","nodeType":"FunctionDefinition","overrides":{"id":3842,"nodeType":"OverrideSpecifier","overrides":[],"src":"96652:8:0"},"parameters":{"id":3841,"nodeType":"ParameterList","parameters":[],"src":"96627:2:0"},"returnParameters":{"id":3846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3845,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3884,"src":"96670:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3843,"name":"uint256","nodeType":"ElementaryTypeName","src":"96670:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3844,"nodeType":"ArrayTypeName","src":"96670:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"96669:18:0"},"scope":4244,"src":"96603:560:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[8],"body":{"id":3957,"nodeType":"Block","src":"97464:975:0","statements":[{"assignments":[3892],"declarations":[{"constant":false,"id":3892,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":3957,"src":"97475:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3891,"name":"bytes32","nodeType":"ElementaryTypeName","src":"97475:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3895,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3893,"name":"getPoolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"97492:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"97492:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"97475:28:0"},{"assignments":[null,3900,null],"declarations":[null,{"constant":false,"id":3900,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":3957,"src":"97517:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3898,"name":"uint256","nodeType":"ElementaryTypeName","src":"97517:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3899,"nodeType":"ArrayTypeName","src":"97517:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},null],"id":3906,"initialValue":{"arguments":[{"id":3904,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"97573:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3901,"name":"getVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"97548:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IVault_$9483_$","typeString":"function () view returns (contract IVault)"}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"97548:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPoolTokens","nodeType":"MemberAccess","referencedDeclaration":9239,"src":"97548:24:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"function (bytes32) view external returns (contract IERC20[] memory,uint256[] memory,uint256)"}},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"97548:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"tuple(contract IERC20[] memory,uint256[] memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"97514:66:0"},{"expression":{"arguments":[{"id":3908,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"97605:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3909,"name":"_scalingFactors","nodeType":"Identifier","overloadedDeclarations":[3884],"referencedDeclaration":3884,"src":"97615:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"97615:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3907,"name":"_upscaleArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"97591:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory,uint256[] memory) view"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"97591:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3912,"nodeType":"ExpressionStatement","src":"97591:42:0"},{"assignments":[3914,3916],"declarations":[{"constant":false,"id":3914,"mutability":"mutable","name":"lowerTarget","nodeType":"VariableDeclaration","scope":3957,"src":"97647:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3913,"name":"uint256","nodeType":"ElementaryTypeName","src":"97647:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3916,"mutability":"mutable","name":"upperTarget","nodeType":"VariableDeclaration","scope":3957,"src":"97668:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"97668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3919,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3917,"name":"getTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"97691:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$","typeString":"function () view returns (uint256,uint256)"}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"97691:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"97646:57:0"},{"assignments":[3923],"declarations":[{"constant":false,"id":3923,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":3957,"src":"97714:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":3922,"name":"LinearMath.Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"97714:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"id":3931,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3926,"name":"getSwapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"97786:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"97786:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3928,"name":"lowerTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"97836:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3929,"name":"upperTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"97875:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3924,"name":"LinearMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"97748:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinearMath_$6389_$","typeString":"type(library LinearMath)"}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Params","nodeType":"MemberAccess","referencedDeclaration":5535,"src":"97748:17:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Params_$5535_storage_ptr_$","typeString":"type(struct LinearMath.Params storage pointer)"}},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["fee","lowerTarget","upperTarget"],"nodeType":"FunctionCall","src":"97748:150:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}},"nodeType":"VariableDeclarationStatement","src":"97714:184:0"},{"assignments":[3933],"declarations":[{"constant":false,"id":3933,"mutability":"mutable","name":"totalBalance","nodeType":"VariableDeclaration","scope":3957,"src":"97911:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3932,"name":"uint256","nodeType":"ElementaryTypeName","src":"97911:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3947,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":3938,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"97996:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3940,"indexExpression":{"id":3939,"name":"_mainIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"98005:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"97996:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3941,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"98018:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"expression":{"id":3936,"name":"LinearMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"97974:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinearMath_$6389_$","typeString":"type(library LinearMath)"}},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_toNominal","nodeType":"MemberAccess","referencedDeclaration":6259,"src":"97974:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"97974:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3943,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"98040:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3945,"indexExpression":{"id":3944,"name":"_wrappedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"98049:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"98040:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3934,"name":"LinearMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"97934:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinearMath_$6389_$","typeString":"type(library LinearMath)"}},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_calcInvariant","nodeType":"MemberAccess","referencedDeclaration":6200,"src":"97934:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"97934:140:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"97911:163:0"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":3951,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"98410:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3953,"indexExpression":{"id":3952,"name":"_bptIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"98419:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"98410:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3950,"name":"_getApproximateVirtualSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"98381:28:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"98381:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3948,"name":"totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"98362:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divUp","nodeType":"MemberAccess","referencedDeclaration":5280,"src":"98362:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"98362:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3890,"id":3956,"nodeType":"Return","src":"98355:76:0"}]},"documentation":{"id":3885,"nodeType":"StructuredDocumentation","src":"97193:205:0","text":" @dev For a Linear Pool, the rate represents the appreciation of BPT with respect to the underlying tokens. This\n rate increases slowly as the wrapped token appreciates in value."},"functionSelector":"679aefce","id":3958,"implemented":true,"kind":"function","modifiers":[],"name":"getRate","nodeType":"FunctionDefinition","overrides":{"id":3887,"nodeType":"OverrideSpecifier","overrides":[],"src":"97437:8:0"},"parameters":{"id":3886,"nodeType":"ParameterList","parameters":[],"src":"97420:2:0"},"returnParameters":{"id":3890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3889,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3958,"src":"97455:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3888,"name":"uint256","nodeType":"ElementaryTypeName","src":"97455:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"97454:9:0"},"scope":4244,"src":"97404:1035:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3966,"nodeType":"Block","src":"98510:48:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3963,"name":"_getWrappedTokenRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"98528:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"98528:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3962,"id":3965,"nodeType":"Return","src":"98521:29:0"}]},"functionSelector":"f5431aa8","id":3967,"implemented":true,"kind":"function","modifiers":[],"name":"getWrappedTokenRate","nodeType":"FunctionDefinition","parameters":{"id":3959,"nodeType":"ParameterList","parameters":[],"src":"98475:2:0"},"returnParameters":{"id":3962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3961,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3967,"src":"98501:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3960,"name":"uint256","nodeType":"ElementaryTypeName","src":"98501:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"98500:9:0"},"scope":4244,"src":"98447:111:0","stateMutability":"view","virtual":false,"visibility":"external"},{"id":3972,"implemented":false,"kind":"function","modifiers":[],"name":"_getWrappedTokenRate","nodeType":"FunctionDefinition","parameters":{"id":3968,"nodeType":"ParameterList","parameters":[],"src":"98595:2:0"},"returnParameters":{"id":3971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3970,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3972,"src":"98629:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3969,"name":"uint256","nodeType":"ElementaryTypeName","src":"98629:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"98628:9:0"},"scope":4244,"src":"98566:72:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3998,"nodeType":"Block","src":"98731:188:0","statements":[{"assignments":[3980],"declarations":[{"constant":false,"id":3980,"mutability":"mutable","name":"miscData","nodeType":"VariableDeclaration","scope":3998,"src":"98742:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"98742:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3983,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3981,"name":"_getMiscData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"98761:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"98761:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"98742:33:0"},{"expression":{"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3984,"name":"lowerTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"98786:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3987,"name":"_LOWER_TARGET_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"98822:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3985,"name":"miscData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"98800:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decodeUint96","nodeType":"MemberAccess","referencedDeclaration":8915,"src":"98800:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_uint256_$bound_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (uint256)"}},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"98800:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"98786:57:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3990,"nodeType":"ExpressionStatement","src":"98786:57:0"},{"expression":{"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3991,"name":"upperTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"98854:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3994,"name":"_UPPER_TARGET_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"98890:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3992,"name":"miscData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"98868:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decodeUint96","nodeType":"MemberAccess","referencedDeclaration":8915,"src":"98868:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_uint256_$bound_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (uint256)"}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"98868:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"98854:57:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3997,"nodeType":"ExpressionStatement","src":"98854:57:0"}]},"functionSelector":"63fe3b56","id":3999,"implemented":true,"kind":"function","modifiers":[],"name":"getTargets","nodeType":"FunctionDefinition","parameters":{"id":3973,"nodeType":"ParameterList","parameters":[],"src":"98665:2:0"},"returnParameters":{"id":3978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3975,"mutability":"mutable","name":"lowerTarget","nodeType":"VariableDeclaration","scope":3999,"src":"98689:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3974,"name":"uint256","nodeType":"ElementaryTypeName","src":"98689:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3977,"mutability":"mutable","name":"upperTarget","nodeType":"VariableDeclaration","scope":3999,"src":"98710:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3976,"name":"uint256","nodeType":"ElementaryTypeName","src":"98710:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"98688:42:0"},"scope":4244,"src":"98646:273:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4044,"nodeType":"Block","src":"99050:596:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4009,"name":"lowerTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"99070:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4010,"name":"upperTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"99085:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"99070:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4012,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"99098:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"LOWER_GREATER_THAN_UPPER_TARGET","nodeType":"MemberAccess","referencedDeclaration":4568,"src":"99098:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4008,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"99061:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"99061:76:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4015,"nodeType":"ExpressionStatement","src":"99061:76:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4017,"name":"upperTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"99157:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4018,"name":"_MAX_UPPER_TARGET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"99172:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"99157:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4020,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"99191:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"UPPER_TARGET_TOO_HIGH","nodeType":"MemberAccess","referencedDeclaration":4571,"src":"99191:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4016,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"99148:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"99148:72:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4023,"nodeType":"ExpressionStatement","src":"99148:72:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4027,"name":"lowerTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"99453:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4028,"name":"_LOWER_TARGET_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"99466:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4025,"name":"WordCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9014,"src":"99432:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WordCodec_$9014_$","typeString":"type(library WordCodec)"}},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encodeUint","nodeType":"MemberAccess","referencedDeclaration":8684,"src":"99432:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256,uint256) pure returns (bytes32)"}},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"99432:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":4032,"name":"upperTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"99528:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4033,"name":"_UPPER_TARGET_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"99541:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4030,"name":"WordCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9014,"src":"99507:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WordCodec_$9014_$","typeString":"type(library WordCodec)"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encodeUint","nodeType":"MemberAccess","referencedDeclaration":8684,"src":"99507:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256,uint256) pure returns (bytes32)"}},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"99507:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"99432:130:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4024,"name":"_setMiscData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"99405:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"99405:168:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4037,"nodeType":"ExpressionStatement","src":"99405:168:0"},{"eventCall":{"arguments":[{"id":4039,"name":"mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"99602:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},{"id":4040,"name":"lowerTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"99613:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4041,"name":"upperTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"99626:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4038,"name":"TargetsSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"99591:10:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_contract$_IERC20_$486_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256,uint256)"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"99591:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4043,"nodeType":"EmitStatement","src":"99586:52:0"}]},"id":4045,"implemented":true,"kind":"function","modifiers":[],"name":"_setTargets","nodeType":"FunctionDefinition","parameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4001,"mutability":"mutable","name":"mainToken","nodeType":"VariableDeclaration","scope":4045,"src":"98958:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":4000,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"98958:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4003,"mutability":"mutable","name":"lowerTarget","nodeType":"VariableDeclaration","scope":4045,"src":"98985:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4002,"name":"uint256","nodeType":"ElementaryTypeName","src":"98985:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4005,"mutability":"mutable","name":"upperTarget","nodeType":"VariableDeclaration","scope":4045,"src":"99015:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4004,"name":"uint256","nodeType":"ElementaryTypeName","src":"99015:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"98947:94:0"},"returnParameters":{"id":4007,"nodeType":"ParameterList","parameters":[],"src":"99050:0:0"},"scope":4244,"src":"98927:719:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4085,"nodeType":"Block","src":"99744:894:0","statements":[{"assignments":[4055,4057],"declarations":[{"constant":false,"id":4055,"mutability":"mutable","name":"currentLowerTarget","nodeType":"VariableDeclaration","scope":4085,"src":"100264:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4054,"name":"uint256","nodeType":"ElementaryTypeName","src":"100264:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4057,"mutability":"mutable","name":"currentUpperTarget","nodeType":"VariableDeclaration","scope":4085,"src":"100292:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4056,"name":"uint256","nodeType":"ElementaryTypeName","src":"100292:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4060,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4058,"name":"getTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"100322:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$","typeString":"function () view returns (uint256,uint256)"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"100322:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"100263:71:0"},{"expression":{"arguments":[{"arguments":[{"id":4063,"name":"currentLowerTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"100382:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4064,"name":"currentUpperTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"100402:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4062,"name":"_isMainBalanceWithinTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"100354:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) view returns (bool)"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"100354:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4066,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"100423:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"OUT_OF_TARGET_RANGE","nodeType":"MemberAccess","referencedDeclaration":4577,"src":"100423:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4061,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"100345:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"100345:105:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4069,"nodeType":"ExpressionStatement","src":"100345:105:0"},{"expression":{"arguments":[{"arguments":[{"id":4072,"name":"newLowerTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"100498:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4073,"name":"newUpperTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"100514:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4071,"name":"_isMainBalanceWithinTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"100470:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) view returns (bool)"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"100470:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4075,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"100531:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"OUT_OF_NEW_TARGET_RANGE","nodeType":"MemberAccess","referencedDeclaration":4601,"src":"100531:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4070,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"100461:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"100461:101:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4078,"nodeType":"ExpressionStatement","src":"100461:101:0"},{"expression":{"arguments":[{"id":4080,"name":"_mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"100587:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},{"id":4081,"name":"newLowerTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"100599:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4082,"name":"newUpperTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"100615:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4079,"name":"_setTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"100575:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$486_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,uint256,uint256)"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"100575:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4084,"nodeType":"ExpressionStatement","src":"100575:55:0"}]},"functionSelector":"9f11080e","id":4086,"implemented":true,"kind":"function","modifiers":[{"id":4052,"modifierName":{"id":4051,"name":"authenticate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"99731:12:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"99731:12:0"}],"name":"setTargets","nodeType":"FunctionDefinition","parameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4047,"mutability":"mutable","name":"newLowerTarget","nodeType":"VariableDeclaration","scope":4086,"src":"99674:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4046,"name":"uint256","nodeType":"ElementaryTypeName","src":"99674:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4049,"mutability":"mutable","name":"newUpperTarget","nodeType":"VariableDeclaration","scope":4086,"src":"99698:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4048,"name":"uint256","nodeType":"ElementaryTypeName","src":"99698:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"99673:48:0"},"returnParameters":{"id":4053,"nodeType":"ParameterList","parameters":[],"src":"99744:0:0"},"scope":4244,"src":"99654:984:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1711],"body":{"id":4114,"nodeType":"Block","src":"100719:771:0","statements":[{"assignments":[4093,4095],"declarations":[{"constant":false,"id":4093,"mutability":"mutable","name":"lowerTarget","nodeType":"VariableDeclaration","scope":4114,"src":"101266:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4092,"name":"uint256","nodeType":"ElementaryTypeName","src":"101266:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4095,"mutability":"mutable","name":"upperTarget","nodeType":"VariableDeclaration","scope":4114,"src":"101287:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4094,"name":"uint256","nodeType":"ElementaryTypeName","src":"101287:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4098,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4096,"name":"getTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"101310:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$","typeString":"function () view returns (uint256,uint256)"}},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"101310:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"101265:57:0"},{"expression":{"arguments":[{"arguments":[{"id":4101,"name":"lowerTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"101370:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4102,"name":"upperTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"101383:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4100,"name":"_isMainBalanceWithinTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"101342:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) view returns (bool)"}},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"101342:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4104,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"101397:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"OUT_OF_TARGET_RANGE","nodeType":"MemberAccess","referencedDeclaration":4577,"src":"101397:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4099,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"101333:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"101333:91:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4107,"nodeType":"ExpressionStatement","src":"101333:91:0"},{"expression":{"arguments":[{"id":4111,"name":"swapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4088,"src":"101464:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4108,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"101437:5:0","typeDescriptions":{"typeIdentifier":"t_super$_LinearPool_$4244","typeString":"contract super LinearPool"}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setSwapFeePercentage","nodeType":"MemberAccess","referencedDeclaration":1711,"src":"101437:26:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"101437:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4113,"nodeType":"ExpressionStatement","src":"101437:45:0"}]},"functionSelector":"38e9922e","id":4115,"implemented":true,"kind":"function","modifiers":[],"name":"setSwapFeePercentage","nodeType":"FunctionDefinition","overrides":{"id":4090,"nodeType":"OverrideSpecifier","overrides":[],"src":"100710:8:0"},"parameters":{"id":4089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4088,"mutability":"mutable","name":"swapFeePercentage","nodeType":"VariableDeclaration","scope":4115,"src":"100676:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4087,"name":"uint256","nodeType":"ElementaryTypeName","src":"100676:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100675:27:0"},"returnParameters":{"id":4091,"nodeType":"ParameterList","parameters":[],"src":"100719:0:0"},"scope":4244,"src":"100646:844:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4159,"nodeType":"Block","src":"101605:306:0","statements":[{"assignments":[4125],"declarations":[{"constant":false,"id":4125,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":4159,"src":"101616:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"101616:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4128,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4126,"name":"getPoolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"101633:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"101633:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"101616:28:0"},{"assignments":[null,4133,null],"declarations":[null,{"constant":false,"id":4133,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":4159,"src":"101658:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4131,"name":"uint256","nodeType":"ElementaryTypeName","src":"101658:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4132,"nodeType":"ArrayTypeName","src":"101658:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},null],"id":4139,"initialValue":{"arguments":[{"id":4137,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"101714:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4134,"name":"getVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"101689:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IVault_$9483_$","typeString":"function () view returns (contract IVault)"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"101689:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPoolTokens","nodeType":"MemberAccess","referencedDeclaration":9239,"src":"101689:24:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"function (bytes32) view external returns (contract IERC20[] memory,uint256[] memory,uint256)"}},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"101689:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"tuple(contract IERC20[] memory,uint256[] memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"101655:66:0"},{"assignments":[4141],"declarations":[{"constant":false,"id":4141,"mutability":"mutable","name":"mainTokenBalance","nodeType":"VariableDeclaration","scope":4159,"src":"101732:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4140,"name":"uint256","nodeType":"ElementaryTypeName","src":"101732:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4150,"initialValue":{"arguments":[{"baseExpression":{"id":4143,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"101768:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4145,"indexExpression":{"id":4144,"name":"_mainIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"101777:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"101768:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4147,"name":"_mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"101805:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}],"id":4146,"name":"_scalingFactor","nodeType":"Identifier","overloadedDeclarations":[3840],"referencedDeclaration":3840,"src":"101790:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IERC20_$486_$returns$_t_uint256_$","typeString":"function (contract IERC20) view returns (uint256)"}},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"101790:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4142,"name":"_upscale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"101759:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"101759:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"101732:85:0"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4151,"name":"mainTokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"101837:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4152,"name":"lowerTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"101857:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"101837:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4154,"name":"mainTokenBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"101872:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4155,"name":"upperTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"101892:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"101872:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"101837:66:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4123,"id":4158,"nodeType":"Return","src":"101830:73:0"}]},"id":4160,"implemented":true,"kind":"function","modifiers":[],"name":"_isMainBalanceWithinTargets","nodeType":"FunctionDefinition","parameters":{"id":4120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4117,"mutability":"mutable","name":"lowerTarget","nodeType":"VariableDeclaration","scope":4160,"src":"101535:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4116,"name":"uint256","nodeType":"ElementaryTypeName","src":"101535:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4119,"mutability":"mutable","name":"upperTarget","nodeType":"VariableDeclaration","scope":4160,"src":"101556:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4118,"name":"uint256","nodeType":"ElementaryTypeName","src":"101556:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"101534:42:0"},"returnParameters":{"id":4123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4122,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4160,"src":"101599:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4121,"name":"bool","nodeType":"ElementaryTypeName","src":"101599:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"101598:6:0"},"scope":4244,"src":"101498:413:0","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[1831],"body":{"id":4181,"nodeType":"Block","src":"102011:113:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4168,"name":"actionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"102029:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"expression":{"id":4170,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"102053:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setTargets","nodeType":"MemberAccess","referencedDeclaration":4086,"src":"102053:15:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":4172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"102053:24:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":4169,"name":"getActionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"102041:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bytes32_$","typeString":"function (bytes4) view returns (bytes32)"}},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"102041:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"102029:49:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":4177,"name":"actionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"102107:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4175,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"102082:5:0","typeDescriptions":{"typeIdentifier":"t_super$_LinearPool_$4244","typeString":"contract super LinearPool"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_isOwnerOnlyAction","nodeType":"MemberAccess","referencedDeclaration":1831,"src":"102082:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) view returns (bool)"}},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"102082:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"102029:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4167,"id":4180,"nodeType":"Return","src":"102022:94:0"}]},"id":4182,"implemented":true,"kind":"function","modifiers":[],"name":"_isOwnerOnlyAction","nodeType":"FunctionDefinition","overrides":{"id":4164,"nodeType":"OverrideSpecifier","overrides":[],"src":"101987:8:0"},"parameters":{"id":4163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4162,"mutability":"mutable","name":"actionId","nodeType":"VariableDeclaration","scope":4182,"src":"101947:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"101947:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"101946:18:0"},"returnParameters":{"id":4167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4166,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4182,"src":"102005:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4165,"name":"bool","nodeType":"ElementaryTypeName","src":"102005:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"102004:6:0"},"scope":4244,"src":"101919:205:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4215,"nodeType":"Block","src":"102508:397:0","statements":[{"assignments":[null,4192,null],"declarations":[null,{"constant":false,"id":4192,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":4215,"src":"102522:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4190,"name":"uint256","nodeType":"ElementaryTypeName","src":"102522:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4191,"nodeType":"ArrayTypeName","src":"102522:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},null],"id":4199,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4196,"name":"getPoolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"102578:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"102578:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4193,"name":"getVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"102553:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IVault_$9483_$","typeString":"function () view returns (contract IVault)"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"102553:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPoolTokens","nodeType":"MemberAccess","referencedDeclaration":9239,"src":"102553:24:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"function (bytes32) view external returns (contract IERC20[] memory,uint256[] memory,uint256)"}},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"102553:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"tuple(contract IERC20[] memory,uint256[] memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"102519:71:0"},{"assignments":[4201],"declarations":[{"constant":false,"id":4201,"mutability":"mutable","name":"bptBalance","nodeType":"VariableDeclaration","scope":4215,"src":"102776:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4200,"name":"uint256","nodeType":"ElementaryTypeName","src":"102776:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4210,"initialValue":{"arguments":[{"baseExpression":{"id":4203,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"102806:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4205,"indexExpression":{"id":4204,"name":"_bptIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"102815:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"102806:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4207,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"102842:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}],"id":4206,"name":"_scalingFactor","nodeType":"Identifier","overloadedDeclarations":[3840],"referencedDeclaration":3840,"src":"102827:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IERC20_$486_$returns$_t_uint256_$","typeString":"function (contract IERC20) view returns (uint256)"}},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"102827:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4202,"name":"_upscale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"102797:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"102797:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"102776:72:0"},{"expression":{"arguments":[{"id":4212,"name":"bptBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"102886:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4211,"name":"_getVirtualSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"102868:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"102868:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4187,"id":4214,"nodeType":"Return","src":"102861:36:0"}]},"documentation":{"id":4183,"nodeType":"StructuredDocumentation","src":"102132:310:0","text":" @dev Returns the number of tokens in circulation.\n In other pools, this would be the same as `totalSupply`, but since this pool pre-mints all BPT, `totalSupply`\n remains constant, whereas `virtualSupply` increases as users join the pool and decreases as they exit it."},"functionSelector":"de82cd34","id":4216,"implemented":true,"kind":"function","modifiers":[],"name":"getVirtualSupply","nodeType":"FunctionDefinition","parameters":{"id":4184,"nodeType":"ParameterList","parameters":[],"src":"102473:2:0"},"returnParameters":{"id":4187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4186,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4216,"src":"102499:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4185,"name":"uint256","nodeType":"ElementaryTypeName","src":"102499:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"102498:9:0"},"scope":4244,"src":"102448:457:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4229,"nodeType":"Block","src":"102992:55:0","statements":[{"expression":{"arguments":[{"id":4226,"name":"bptBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"103028:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4223,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"103010:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"103010:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"103010:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"103010:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4222,"id":4228,"nodeType":"Return","src":"103003:36:0"}]},"id":4230,"implemented":true,"kind":"function","modifiers":[],"name":"_getVirtualSupply","nodeType":"FunctionDefinition","parameters":{"id":4219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4218,"mutability":"mutable","name":"bptBalance","nodeType":"VariableDeclaration","scope":4230,"src":"102940:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"102940:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"102939:20:0"},"returnParameters":{"id":4222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4221,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4230,"src":"102983:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4220,"name":"uint256","nodeType":"ElementaryTypeName","src":"102983:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"102982:9:0"},"scope":4244,"src":"102913:134:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4242,"nodeType":"Block","src":"103426:176:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4238,"name":"_INITIAL_BPT_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"103562:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4239,"name":"bptBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"103584:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"103562:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4237,"id":4241,"nodeType":"Return","src":"103555:39:0"}]},"documentation":{"id":4231,"nodeType":"StructuredDocumentation","src":"103055:275:0","text":" @dev Computes an approximation of virtual supply, which costs less gas than `_getVirtualSupply` and returns the\n same value in all cases except when the emergency pause has been enabled and BPT burned as part of the emergency\n exit process."},"id":4243,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproximateVirtualSupply","nodeType":"FunctionDefinition","parameters":{"id":4234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4233,"mutability":"mutable","name":"bptBalance","nodeType":"VariableDeclaration","scope":4243,"src":"103374:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4232,"name":"uint256","nodeType":"ElementaryTypeName","src":"103374:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"103373:20:0"},"returnParameters":{"id":4237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4236,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4243,"src":"103417:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4235,"name":"uint256","nodeType":"ElementaryTypeName","src":"103417:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"103416:9:0"},"scope":4244,"src":"103336:266:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10227,"src":"75854:27751:0"},{"id":4245,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"103615:23:0"},{"abstract":false,"baseContracts":[{"baseName":{"id":4246,"name":"LinearPool","nodeType":"UserDefinedTypeName","referencedDeclaration":4244,"src":"103669:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}},"id":4247,"nodeType":"InheritanceSpecifier","src":"103669:10:0"}],"contractDependencies":[9,30,90,109,119,193,282,317,409,486,960,1109,1315,1333,1523,2691,4244],"contractKind":"contract","fullyImplemented":true,"id":4336,"linearizedBaseContracts":[4336,4244,9,109,2691,1523,1333,1315,1109,409,317,960,486,282,193,119,90,30],"name":"AaveLinearPool","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4249,"mutability":"immutable","name":"_lendingPool","nodeType":"VariableDeclaration","scope":4336,"src":"103687:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$4366","typeString":"contract ILendingPool"},"typeName":{"id":4248,"name":"ILendingPool","nodeType":"UserDefinedTypeName","referencedDeclaration":4366,"src":"103687:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$4366","typeString":"contract ILendingPool"}},"visibility":"private"},{"body":{"id":4313,"nodeType":"Block","src":"104359:196:0","statements":[{"expression":{"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4284,"name":"_lendingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"104370:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$4366","typeString":"contract ILendingPool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":4288,"name":"wrappedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"104407:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}],"id":4287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"104399:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4286,"name":"address","nodeType":"ElementaryTypeName","src":"104399:7:0","typeDescriptions":{}}},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"104399:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4285,"name":"IStaticAToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"104385:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStaticAToken_$4356_$","typeString":"type(contract IStaticAToken)"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"104385:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStaticAToken_$4356","typeString":"contract IStaticAToken"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"LENDING_POOL","nodeType":"MemberAccess","referencedDeclaration":4349,"src":"104385:49:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_ILendingPool_$4366_$","typeString":"function () view external returns (contract ILendingPool)"}},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"104385:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$4366","typeString":"contract ILendingPool"}},"src":"104370:66:0","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$4366","typeString":"contract ILendingPool"}},"id":4294,"nodeType":"ExpressionStatement","src":"104370:66:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4298,"name":"mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"104464:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}],"id":4297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"104456:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4296,"name":"address","nodeType":"ElementaryTypeName","src":"104456:7:0","typeDescriptions":{}}},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"104456:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":4303,"name":"wrappedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"104500:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}],"id":4302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"104492:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4301,"name":"address","nodeType":"ElementaryTypeName","src":"104492:7:0","typeDescriptions":{}}},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"104492:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4300,"name":"IStaticAToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"104478:13:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStaticAToken_$4356_$","typeString":"type(contract IStaticAToken)"}},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"104478:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStaticAToken_$4356","typeString":"contract IStaticAToken"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ASSET","nodeType":"MemberAccess","referencedDeclaration":4343,"src":"104478:42:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"104478:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"104456:66:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4309,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"104524:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"TOKENS_MISMATCH","nodeType":"MemberAccess","referencedDeclaration":4772,"src":"104524:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4295,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"104447:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"104447:100:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4312,"nodeType":"ExpressionStatement","src":"104447:100:0"}]},"id":4314,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4272,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"104099:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},{"id":4273,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"104119:4:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4274,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"104138:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4275,"name":"mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"104159:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},{"id":4276,"name":"wrappedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"104183:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},{"id":4277,"name":"upperTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4261,"src":"104210:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4278,"name":"swapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"104236:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4279,"name":"pauseWindowDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"104268:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4280,"name":"bufferPeriodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"104302:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4281,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"104337:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4282,"modifierName":{"id":4271,"name":"LinearPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"104074:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinearPool_$4244_$","typeString":"type(contract LinearPool)"}},"nodeType":"ModifierInvocation","src":"104074:279:0"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":4270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4251,"mutability":"mutable","name":"vault","nodeType":"VariableDeclaration","scope":4314,"src":"103761:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"},"typeName":{"id":4250,"name":"IVault","nodeType":"UserDefinedTypeName","referencedDeclaration":9483,"src":"103761:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"visibility":"internal"},{"constant":false,"id":4253,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":4314,"src":"103784:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4252,"name":"string","nodeType":"ElementaryTypeName","src":"103784:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4255,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":4314,"src":"103813:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4254,"name":"string","nodeType":"ElementaryTypeName","src":"103813:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4257,"mutability":"mutable","name":"mainToken","nodeType":"VariableDeclaration","scope":4314,"src":"103844:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":4256,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"103844:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4259,"mutability":"mutable","name":"wrappedToken","nodeType":"VariableDeclaration","scope":4314,"src":"103871:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":4258,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"103871:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4261,"mutability":"mutable","name":"upperTarget","nodeType":"VariableDeclaration","scope":4314,"src":"103901:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4260,"name":"uint256","nodeType":"ElementaryTypeName","src":"103901:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4263,"mutability":"mutable","name":"swapFeePercentage","nodeType":"VariableDeclaration","scope":4314,"src":"103931:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4262,"name":"uint256","nodeType":"ElementaryTypeName","src":"103931:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4265,"mutability":"mutable","name":"pauseWindowDuration","nodeType":"VariableDeclaration","scope":4314,"src":"103967:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4264,"name":"uint256","nodeType":"ElementaryTypeName","src":"103967:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4267,"mutability":"mutable","name":"bufferPeriodDuration","nodeType":"VariableDeclaration","scope":4314,"src":"104005:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4266,"name":"uint256","nodeType":"ElementaryTypeName","src":"104005:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4269,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":4314,"src":"104044:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4268,"name":"address","nodeType":"ElementaryTypeName","src":"104044:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"103750:314:0"},"returnParameters":{"id":4283,"nodeType":"ParameterList","parameters":[],"src":"104359:0:0"},"scope":4336,"src":"103739:816:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3972],"body":{"id":4334,"nodeType":"Block","src":"104636:660:0","statements":[{"assignments":[4321],"declarations":[{"constant":false,"id":4321,"mutability":"mutable","name":"rate","nodeType":"VariableDeclaration","scope":4334,"src":"105033:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4320,"name":"uint256","nodeType":"ElementaryTypeName","src":"105033:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4327,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4324,"name":"getMainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"105088:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"105088:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4322,"name":"_lendingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"105048:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$4366","typeString":"contract ILendingPool"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getReserveNormalizedIncome","nodeType":"MemberAccess","referencedDeclaration":4365,"src":"105048:39:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"105048:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"105033:70:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4328,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"105276:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"id":4331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"105283:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"39","id":4330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"105287:1:0","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"105283:5:0","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"}},"src":"105276:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4319,"id":4333,"nodeType":"Return","src":"105269:19:0"}]},"id":4335,"implemented":true,"kind":"function","modifiers":[],"name":"_getWrappedTokenRate","nodeType":"FunctionDefinition","overrides":{"id":4316,"nodeType":"OverrideSpecifier","overrides":[],"src":"104609:8:0"},"parameters":{"id":4315,"nodeType":"ParameterList","parameters":[],"src":"104592:2:0"},"returnParameters":{"id":4319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4318,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4335,"src":"104627:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4317,"name":"uint256","nodeType":"ElementaryTypeName","src":"104627:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"104626:9:0"},"scope":4336,"src":"104563:733:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":10227,"src":"103642:1657:0"},{"id":4337,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"105305:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4356,"linearizedBaseContracts":[4356],"name":"IStaticAToken","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4338,"nodeType":"StructuredDocumentation","src":"105365:84:0","text":" @dev returns the address of the staticAToken's underlying asset"},"functionSelector":"4800d97f","id":4343,"implemented":false,"kind":"function","modifiers":[],"name":"ASSET","nodeType":"FunctionDefinition","parameters":{"id":4339,"nodeType":"ParameterList","parameters":[],"src":"105523:2:0"},"returnParameters":{"id":4342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4341,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4343,"src":"105549:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4340,"name":"address","nodeType":"ElementaryTypeName","src":"105549:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"105548:9:0"},"scope":4356,"src":"105509:49:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4344,"nodeType":"StructuredDocumentation","src":"105566:80:0","text":" @dev returns the address of the staticAToken's lending pool"},"functionSelector":"b4dcfc77","id":4349,"implemented":false,"kind":"function","modifiers":[],"name":"LENDING_POOL","nodeType":"FunctionDefinition","parameters":{"id":4345,"nodeType":"ParameterList","parameters":[],"src":"105727:2:0"},"returnParameters":{"id":4348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4347,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4349,"src":"105753:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$4366","typeString":"contract ILendingPool"},"typeName":{"id":4346,"name":"ILendingPool","nodeType":"UserDefinedTypeName","referencedDeclaration":4366,"src":"105753:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_ILendingPool_$4366","typeString":"contract ILendingPool"}},"visibility":"internal"}],"src":"105752:14:0"},"scope":4356,"src":"105706:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4350,"nodeType":"StructuredDocumentation","src":"105775:108:0","text":" @dev returns a 27 decimal fixed point 'ray' value so a rate of 1 is represented as 1e27"},"functionSelector":"2c4e722e","id":4355,"implemented":false,"kind":"function","modifiers":[],"name":"rate","nodeType":"FunctionDefinition","parameters":{"id":4351,"nodeType":"ParameterList","parameters":[],"src":"105902:2:0"},"returnParameters":{"id":4354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4353,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4355,"src":"105928:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4352,"name":"uint256","nodeType":"ElementaryTypeName","src":"105928:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"105927:9:0"},"scope":4356,"src":"105889:48:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10227,"src":"105334:606:0"},{"id":4357,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"105946:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4366,"linearizedBaseContracts":[4366],"name":"ILendingPool","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4358,"nodeType":"StructuredDocumentation","src":"106003:108:0","text":" @dev returns a 27 decimal fixed point 'ray' value so a rate of 1 is represented as 1e27"},"functionSelector":"d15e0053","id":4365,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveNormalizedIncome","nodeType":"FunctionDefinition","parameters":{"id":4361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4360,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":4365,"src":"106153:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4359,"name":"address","nodeType":"ElementaryTypeName","src":"106153:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"106152:15:0"},"returnParameters":{"id":4364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4363,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4365,"src":"106191:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4362,"name":"uint256","nodeType":"ElementaryTypeName","src":"106191:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106190:9:0"},"scope":4366,"src":"106117:83:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10227,"src":"105973:230:0"},{"id":4367,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"106207:23:0"},{"body":{"id":4382,"nodeType":"Block","src":"106451:45:0","statements":[{"condition":{"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"106462:10:0","subExpression":{"id":4375,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"106463:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4381,"nodeType":"IfStatement","src":"106458:34:0","trueBody":{"expression":{"arguments":[{"id":4378,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"106482:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4377,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"106474:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"106474:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4380,"nodeType":"ExpressionStatement","src":"106474:18:0"}}]},"documentation":{"id":4368,"nodeType":"StructuredDocumentation","src":"106256:135:0","text":" @dev Reverts if `condition` is false, with a revert reason containing `errorCode`. Only codes up to 999 are\n supported."},"id":4383,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_require","nodeType":"FunctionDefinition","parameters":{"id":4373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4370,"mutability":"mutable","name":"condition","nodeType":"VariableDeclaration","scope":4383,"src":"106411:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4369,"name":"bool","nodeType":"ElementaryTypeName","src":"106411:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4372,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","scope":4383,"src":"106427:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4371,"name":"uint256","nodeType":"ElementaryTypeName","src":"106427:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106410:35:0"},"returnParameters":{"id":4374,"nodeType":"ParameterList","parameters":[],"src":"106451:0:0"},"scope":10227,"src":"106393:103:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4390,"nodeType":"Block","src":"106649:3182:0","statements":[{"AST":{"nodeType":"YulBlock","src":"107449:2379:0","statements":[{"nodeType":"YulVariableDeclaration","src":"107728:42:0","value":{"arguments":[{"arguments":[{"name":"errorCode","nodeType":"YulIdentifier","src":"107749:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"107760:2:0","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"107745:3:0"},"nodeType":"YulFunctionCall","src":"107745:18:0"},{"kind":"number","nodeType":"YulLiteral","src":"107765:4:0","type":"","value":"0x30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"107741:3:0"},"nodeType":"YulFunctionCall","src":"107741:29:0"},"variables":[{"name":"units","nodeType":"YulTypedName","src":"107732:5:0","type":""}]},{"nodeType":"YulAssignment","src":"107782:31:0","value":{"arguments":[{"name":"errorCode","nodeType":"YulIdentifier","src":"107799:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"107810:2:0","type":"","value":"10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"107795:3:0"},"nodeType":"YulFunctionCall","src":"107795:18:0"},"variableNames":[{"name":"errorCode","nodeType":"YulIdentifier","src":"107782:9:0"}]},{"nodeType":"YulVariableDeclaration","src":"107823:43:0","value":{"arguments":[{"arguments":[{"name":"errorCode","nodeType":"YulIdentifier","src":"107845:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"107856:2:0","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"107841:3:0"},"nodeType":"YulFunctionCall","src":"107841:18:0"},{"kind":"number","nodeType":"YulLiteral","src":"107861:4:0","type":"","value":"0x30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"107837:3:0"},"nodeType":"YulFunctionCall","src":"107837:29:0"},"variables":[{"name":"tenths","nodeType":"YulTypedName","src":"107827:6:0","type":""}]},{"nodeType":"YulAssignment","src":"107878:31:0","value":{"arguments":[{"name":"errorCode","nodeType":"YulIdentifier","src":"107895:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"107906:2:0","type":"","value":"10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"107891:3:0"},"nodeType":"YulFunctionCall","src":"107891:18:0"},"variableNames":[{"name":"errorCode","nodeType":"YulIdentifier","src":"107878:9:0"}]},{"nodeType":"YulVariableDeclaration","src":"107919:45:0","value":{"arguments":[{"arguments":[{"name":"errorCode","nodeType":"YulIdentifier","src":"107943:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"107954:2:0","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"107939:3:0"},"nodeType":"YulFunctionCall","src":"107939:18:0"},{"kind":"number","nodeType":"YulLiteral","src":"107959:4:0","type":"","value":"0x30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"107935:3:0"},"nodeType":"YulFunctionCall","src":"107935:29:0"},"variables":[{"name":"hundreds","nodeType":"YulTypedName","src":"107923:8:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"108535:103:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"108559:3:0","type":"","value":"200"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"108568:16:0","type":"","value":"0x42414c23000000"},{"arguments":[{"arguments":[{"name":"units","nodeType":"YulIdentifier","src":"108594:5:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"108605:1:0","type":"","value":"8"},{"name":"tenths","nodeType":"YulIdentifier","src":"108608:6:0"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"108601:3:0"},"nodeType":"YulFunctionCall","src":"108601:14:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"108590:3:0"},"nodeType":"YulFunctionCall","src":"108590:26:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"108622:2:0","type":"","value":"16"},{"name":"hundreds","nodeType":"YulIdentifier","src":"108626:8:0"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"108618:3:0"},"nodeType":"YulFunctionCall","src":"108618:17:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"108586:3:0"},"nodeType":"YulFunctionCall","src":"108586:50:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"108564:3:0"},"nodeType":"YulFunctionCall","src":"108564:73:0"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"108555:3:0"},"nodeType":"YulFunctionCall","src":"108555:83:0"},"variables":[{"name":"revertReason","nodeType":"YulTypedName","src":"108539:12:0","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"109161:3:0","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"109166:66:0","type":"","value":"0x08c379a000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"109154:6:0"},"nodeType":"YulFunctionCall","src":"109154:79:0"},"nodeType":"YulExpressionStatement","src":"109154:79:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"109368:4:0","type":"","value":"0x04"},{"kind":"number","nodeType":"YulLiteral","src":"109374:66:0","type":"","value":"0x0000000000000000000000000000000000000000000000000000000000000020"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"109361:6:0"},"nodeType":"YulFunctionCall","src":"109361:80:0"},"nodeType":"YulExpressionStatement","src":"109361:80:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"109512:4:0","type":"","value":"0x24"},{"kind":"number","nodeType":"YulLiteral","src":"109518:1:0","type":"","value":"7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"109505:6:0"},"nodeType":"YulFunctionCall","src":"109505:15:0"},"nodeType":"YulExpressionStatement","src":"109505:15:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"109587:4:0","type":"","value":"0x44"},{"name":"revertReason","nodeType":"YulIdentifier","src":"109593:12:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"109580:6:0"},"nodeType":"YulFunctionCall","src":"109580:26:0"},"nodeType":"YulExpressionStatement","src":"109580:26:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"109814:1:0","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"109817:3:0","type":"","value":"100"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"109807:6:0"},"nodeType":"YulFunctionCall","src":"109807:14:0"},"nodeType":"YulExpressionStatement","src":"109807:14:0"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4386,"isOffset":false,"isSlot":false,"src":"107749:9:0","valueSize":1},{"declaration":4386,"isOffset":false,"isSlot":false,"src":"107782:9:0","valueSize":1},{"declaration":4386,"isOffset":false,"isSlot":false,"src":"107799:9:0","valueSize":1},{"declaration":4386,"isOffset":false,"isSlot":false,"src":"107845:9:0","valueSize":1},{"declaration":4386,"isOffset":false,"isSlot":false,"src":"107878:9:0","valueSize":1},{"declaration":4386,"isOffset":false,"isSlot":false,"src":"107895:9:0","valueSize":1},{"declaration":4386,"isOffset":false,"isSlot":false,"src":"107943:9:0","valueSize":1}],"id":4389,"nodeType":"InlineAssembly","src":"107440:2388:0"}]},"documentation":{"id":4384,"nodeType":"StructuredDocumentation","src":"106500:106:0","text":" @dev Reverts with a revert reason containing `errorCode`. Only codes up to 999 are supported."},"id":4391,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_revert","nodeType":"FunctionDefinition","parameters":{"id":4387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4386,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","scope":4391,"src":"106625:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4385,"name":"uint256","nodeType":"ElementaryTypeName","src":"106625:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106624:19:0"},"returnParameters":{"id":4388,"nodeType":"ParameterList","parameters":[],"src":"106649:0:0"},"scope":10227,"src":"106608:3223:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":4806,"linearizedBaseContracts":[4806],"name":"Errors","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4394,"mutability":"constant","name":"ADD_OVERFLOW","nodeType":"VariableDeclaration","scope":4806,"src":"109870:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4392,"name":"uint256","nodeType":"ElementaryTypeName","src":"109870:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"109911:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":4397,"mutability":"constant","name":"SUB_OVERFLOW","nodeType":"VariableDeclaration","scope":4806,"src":"109919:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4395,"name":"uint256","nodeType":"ElementaryTypeName","src":"109919:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"109960:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":4400,"mutability":"constant","name":"SUB_UNDERFLOW","nodeType":"VariableDeclaration","scope":4806,"src":"109968:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4398,"name":"uint256","nodeType":"ElementaryTypeName","src":"109968:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":4399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110010:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":4403,"mutability":"constant","name":"MUL_OVERFLOW","nodeType":"VariableDeclaration","scope":4806,"src":"110018:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4401,"name":"uint256","nodeType":"ElementaryTypeName","src":"110018:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":4402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110059:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"id":4406,"mutability":"constant","name":"ZERO_DIVISION","nodeType":"VariableDeclaration","scope":4806,"src":"110067:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4404,"name":"uint256","nodeType":"ElementaryTypeName","src":"110067:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"34","id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110109:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"internal"},{"constant":true,"id":4409,"mutability":"constant","name":"DIV_INTERNAL","nodeType":"VariableDeclaration","scope":4806,"src":"110117:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4407,"name":"uint256","nodeType":"ElementaryTypeName","src":"110117:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35","id":4408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110158:1:0","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"internal"},{"constant":true,"id":4412,"mutability":"constant","name":"X_OUT_OF_BOUNDS","nodeType":"VariableDeclaration","scope":4806,"src":"110166:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4410,"name":"uint256","nodeType":"ElementaryTypeName","src":"110166:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"36","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110210:1:0","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"visibility":"internal"},{"constant":true,"id":4415,"mutability":"constant","name":"Y_OUT_OF_BOUNDS","nodeType":"VariableDeclaration","scope":4806,"src":"110218:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4413,"name":"uint256","nodeType":"ElementaryTypeName","src":"110218:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110262:1:0","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"visibility":"internal"},{"constant":true,"id":4418,"mutability":"constant","name":"PRODUCT_OUT_OF_BOUNDS","nodeType":"VariableDeclaration","scope":4806,"src":"110270:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4416,"name":"uint256","nodeType":"ElementaryTypeName","src":"110270:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"38","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110320:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"visibility":"internal"},{"constant":true,"id":4421,"mutability":"constant","name":"INVALID_EXPONENT","nodeType":"VariableDeclaration","scope":4806,"src":"110328:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4419,"name":"uint256","nodeType":"ElementaryTypeName","src":"110328:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"39","id":4420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110373:1:0","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"visibility":"internal"},{"constant":true,"id":4424,"mutability":"constant","name":"OUT_OF_BOUNDS","nodeType":"VariableDeclaration","scope":4806,"src":"110397:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4422,"name":"uint256","nodeType":"ElementaryTypeName","src":"110397:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110439:3:0","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"constant":true,"id":4427,"mutability":"constant","name":"UNSORTED_ARRAY","nodeType":"VariableDeclaration","scope":4806,"src":"110449:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4425,"name":"uint256","nodeType":"ElementaryTypeName","src":"110449:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313031","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110492:3:0","typeDescriptions":{"typeIdentifier":"t_rational_101_by_1","typeString":"int_const 101"},"value":"101"},"visibility":"internal"},{"constant":true,"id":4430,"mutability":"constant","name":"UNSORTED_TOKENS","nodeType":"VariableDeclaration","scope":4806,"src":"110502:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4428,"name":"uint256","nodeType":"ElementaryTypeName","src":"110502:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313032","id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110546:3:0","typeDescriptions":{"typeIdentifier":"t_rational_102_by_1","typeString":"int_const 102"},"value":"102"},"visibility":"internal"},{"constant":true,"id":4433,"mutability":"constant","name":"INPUT_LENGTH_MISMATCH","nodeType":"VariableDeclaration","scope":4806,"src":"110556:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4431,"name":"uint256","nodeType":"ElementaryTypeName","src":"110556:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313033","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110606:3:0","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"visibility":"internal"},{"constant":true,"id":4436,"mutability":"constant","name":"ZERO_TOKEN","nodeType":"VariableDeclaration","scope":4806,"src":"110616:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4434,"name":"uint256","nodeType":"ElementaryTypeName","src":"110616:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313034","id":4435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110655:3:0","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},"visibility":"internal"},{"constant":true,"id":4439,"mutability":"constant","name":"MIN_TOKENS","nodeType":"VariableDeclaration","scope":4806,"src":"110688:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4437,"name":"uint256","nodeType":"ElementaryTypeName","src":"110688:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323030","id":4438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110727:3:0","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"visibility":"internal"},{"constant":true,"id":4442,"mutability":"constant","name":"MAX_TOKENS","nodeType":"VariableDeclaration","scope":4806,"src":"110737:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4440,"name":"uint256","nodeType":"ElementaryTypeName","src":"110737:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323031","id":4441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110776:3:0","typeDescriptions":{"typeIdentifier":"t_rational_201_by_1","typeString":"int_const 201"},"value":"201"},"visibility":"internal"},{"constant":true,"id":4445,"mutability":"constant","name":"MAX_SWAP_FEE_PERCENTAGE","nodeType":"VariableDeclaration","scope":4806,"src":"110786:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4443,"name":"uint256","nodeType":"ElementaryTypeName","src":"110786:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323032","id":4444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110838:3:0","typeDescriptions":{"typeIdentifier":"t_rational_202_by_1","typeString":"int_const 202"},"value":"202"},"visibility":"internal"},{"constant":true,"id":4448,"mutability":"constant","name":"MIN_SWAP_FEE_PERCENTAGE","nodeType":"VariableDeclaration","scope":4806,"src":"110848:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4446,"name":"uint256","nodeType":"ElementaryTypeName","src":"110848:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323033","id":4447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110900:3:0","typeDescriptions":{"typeIdentifier":"t_rational_203_by_1","typeString":"int_const 203"},"value":"203"},"visibility":"internal"},{"constant":true,"id":4451,"mutability":"constant","name":"MINIMUM_BPT","nodeType":"VariableDeclaration","scope":4806,"src":"110910:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4449,"name":"uint256","nodeType":"ElementaryTypeName","src":"110910:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323034","id":4450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"110950:3:0","typeDescriptions":{"typeIdentifier":"t_rational_204_by_1","typeString":"int_const 204"},"value":"204"},"visibility":"internal"},{"constant":true,"id":4454,"mutability":"constant","name":"CALLER_NOT_VAULT","nodeType":"VariableDeclaration","scope":4806,"src":"110960:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4452,"name":"uint256","nodeType":"ElementaryTypeName","src":"110960:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323035","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"111005:3:0","typeDescriptions":{"typeIdentifier":"t_rational_205_by_1","typeString":"int_const 205"},"value":"205"},"visibility":"internal"},{"constant":true,"id":4457,"mutability":"constant","name":"UNINITIALIZED","nodeType":"VariableDeclaration","scope":4806,"src":"111015:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4455,"name":"uint256","nodeType":"ElementaryTypeName","src":"111015:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323036","id":4456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"111057:3:0","typeDescriptions":{"typeIdentifier":"t_rational_206_by_1","typeString":"int_const 206"},"value":"206"},"visibility":"internal"},{"constant":true,"id":4460,"mutability":"constant","name":"BPT_IN_MAX_AMOUNT","nodeType":"VariableDeclaration","scope":4806,"src":"111067:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4458,"name":"uint256","nodeType":"ElementaryTypeName","src":"111067:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323037","id":4459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"111113:3:0","typeDescriptions":{"typeIdentifier":"t_rational_207_by_1","typeString":"int_const 207"},"value":"207"},"visibility":"internal"},{"constant":true,"id":4463,"mutability":"constant","name":"BPT_OUT_MIN_AMOUNT","nodeType":"VariableDeclaration","scope":4806,"src":"111123:50:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4461,"name":"uint256","nodeType":"ElementaryTypeName","src":"111123:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323038","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"111170:3:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},"visibility":"internal"},{"constant":true,"id":4466,"mutability":"constant","name":"EXPIRED_PERMIT","nodeType":"VariableDeclaration","scope":4806,"src":"111180:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4464,"name":"uint256","nodeType":"ElementaryTypeName","src":"111180:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323039","id":4465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"111223:3:0","typeDescriptions":{"typeIdentifier":"t_rational_209_by_1","typeString":"int_const 209"},"value":"209"},"visibility":"internal"},{"constant":true,"id":4469,"mutability":"constant","name":"NOT_TWO_TOKENS","nodeType":"VariableDeclaration","scope":4806,"src":"111233:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4467,"name":"uint256","nodeType":"ElementaryTypeName","src":"111233:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323130","id":4468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"111276:3:0","typeDescriptions":{"typeIdentifier":"t_rational_210_by_1","typeString":"int_const 210"},"value":"210"},"visibility":"internal"},{"constant":true,"id":4472,"mutability":"constant","name":"MIN_AMP","nodeType":"VariableDeclaration","scope":4806,"src":"111302:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4470,"name":"uint256","nodeType":"ElementaryTypeName","src":"111302:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333030","id":4471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"111338:3:0","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"300"},"visibility":"internal"},{"constant":true,"id":4475,"mutability":"constant","name":"MAX_AMP","nodeType":"VariableDeclaration","scope":4806,"src":"111348:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4473,"name":"uint256","nodeType":"ElementaryTypeName","src":"111348:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333031","id":4474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"111384:3:0","typeDescriptions":{"typeIdentifier":"t_rational_301_by_1","typeString":"int_const 301"},"value":"301"},"visibility":"internal"},{"constant":true,"id":4478,"mutability":"constant","name":"MIN_WEIGHT","nodeType":"VariableDeclaration","scope":4806,"src":"111394:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4476,"name":"uint256","nodeType":"ElementaryTypeName","src":"111394:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333032","id":4477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"111433:3:0","typeDescriptions":{"typeIdentifier":"t_rational_302_by_1","typeString":"int_const 302"},"value":"302"},"visibility":"internal"},{"constant":true,"id":4481,"mutability":"constant","name":"MAX_STABLE_TOKENS","nodeType":"VariableDeclaration","scope":4806,"src":"111443:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4479,"name":"uint256","nodeType":"ElementaryTypeName","src":"111443:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333033","id":4480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"111489:3:0","typeDescriptions":{"typeIdentifier":"t_rational_303_by_1","typeString":"int_const 303"},"value":"303"},"visibility":"internal"},{"constant":true,"id":4484,"mutability":"constant","name":"MAX_IN_RATIO","nodeType":"VariableDeclaration","scope":4806,"src":"111499:44:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4482,"name":"uint256","nodeType":"ElementaryTypeName","src":"111499:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333034","id":4483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"111540:3:0","typeDescriptions":{"typeIdentifier":"t_rational_304_by_1","typeString":"int_const 304"},"value":"304"},"visibility":"internal"},{"constant":true,"id":4487,"mutability":"constant","name":"MAX_OUT_RATIO","nodeType":"VariableDeclaration","scope":4806,"src":"111550:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4485,"name":"uint256","nodeType":"ElementaryTypeName","src":"111550:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333035","id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"111592:3:0","typeDescriptions":{"typeIdentifier":"t_rational_305_by_1","typeString":"int_const 305"},"value":"305"},"visibility":"internal"},{"constant":true,"id":4490,"mutability":"constant","name":"MIN_BPT_IN_FOR_TOKEN_OUT","nodeType":"VariableDeclaration","scope":4806,"src":"111602:56:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4488,"name":"uint256","nodeType":"ElementaryTypeName","src":"111602:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333036","id":4489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"111655:3:0","typeDescriptions":{"typeIdentifier":"t_rational_306_by_1","typeString":"int_const 306"},"value":"306"},"visibility":"internal"},{"constant":true,"id":4493,"mutability":"constant","name":"MAX_OUT_BPT_FOR_TOKEN_IN","nodeType":"VariableDeclaration","scope":4806,"src":"111665:56:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4491,"name":"uint256","nodeType":"ElementaryTypeName","src":"111665:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333037","id":4492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"111718:3:0","typeDescriptions":{"typeIdentifier":"t_rational_307_by_1","typeString":"int_const 307"},"value":"307"},"visibility":"internal"},{"constant":true,"id":4496,"mutability":"constant","name":"NORMALIZED_WEIGHT_INVARIANT","nodeType":"VariableDeclaration","scope":4806,"src":"111728:59:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"111728:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333038","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"111784:3:0","typeDescriptions":{"typeIdentifier":"t_rational_308_by_1","typeString":"int_const 308"},"value":"308"},"visibility":"internal"},{"constant":true,"id":4499,"mutability":"constant","name":"INVALID_TOKEN","nodeType":"VariableDeclaration","scope":4806,"src":"111794:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"111794:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333039","id":4498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"111836:3:0","typeDescriptions":{"typeIdentifier":"t_rational_309_by_1","typeString":"int_const 309"},"value":"309"},"visibility":"internal"},{"constant":true,"id":4502,"mutability":"constant","name":"UNHANDLED_JOIN_KIND","nodeType":"VariableDeclaration","scope":4806,"src":"111846:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4500,"name":"uint256","nodeType":"ElementaryTypeName","src":"111846:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333130","id":4501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"111894:3:0","typeDescriptions":{"typeIdentifier":"t_rational_310_by_1","typeString":"int_const 310"},"value":"310"},"visibility":"internal"},{"constant":true,"id":4505,"mutability":"constant","name":"ZERO_INVARIANT","nodeType":"VariableDeclaration","scope":4806,"src":"111904:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4503,"name":"uint256","nodeType":"ElementaryTypeName","src":"111904:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333131","id":4504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"111947:3:0","typeDescriptions":{"typeIdentifier":"t_rational_311_by_1","typeString":"int_const 311"},"value":"311"},"visibility":"internal"},{"constant":true,"id":4508,"mutability":"constant","name":"ORACLE_INVALID_SECONDS_QUERY","nodeType":"VariableDeclaration","scope":4806,"src":"111957:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4506,"name":"uint256","nodeType":"ElementaryTypeName","src":"111957:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333132","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"112014:3:0","typeDescriptions":{"typeIdentifier":"t_rational_312_by_1","typeString":"int_const 312"},"value":"312"},"visibility":"internal"},{"constant":true,"id":4511,"mutability":"constant","name":"ORACLE_NOT_INITIALIZED","nodeType":"VariableDeclaration","scope":4806,"src":"112024:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4509,"name":"uint256","nodeType":"ElementaryTypeName","src":"112024:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333133","id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"112075:3:0","typeDescriptions":{"typeIdentifier":"t_rational_313_by_1","typeString":"int_const 313"},"value":"313"},"visibility":"internal"},{"constant":true,"id":4514,"mutability":"constant","name":"ORACLE_QUERY_TOO_OLD","nodeType":"VariableDeclaration","scope":4806,"src":"112085:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4512,"name":"uint256","nodeType":"ElementaryTypeName","src":"112085:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333134","id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"112134:3:0","typeDescriptions":{"typeIdentifier":"t_rational_314_by_1","typeString":"int_const 314"},"value":"314"},"visibility":"internal"},{"constant":true,"id":4517,"mutability":"constant","name":"ORACLE_INVALID_INDEX","nodeType":"VariableDeclaration","scope":4806,"src":"112144:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4515,"name":"uint256","nodeType":"ElementaryTypeName","src":"112144:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333135","id":4516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"112193:3:0","typeDescriptions":{"typeIdentifier":"t_rational_315_by_1","typeString":"int_const 315"},"value":"315"},"visibility":"internal"},{"constant":true,"id":4520,"mutability":"constant","name":"ORACLE_BAD_SECS","nodeType":"VariableDeclaration","scope":4806,"src":"112203:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4518,"name":"uint256","nodeType":"ElementaryTypeName","src":"112203:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333136","id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"112247:3:0","typeDescriptions":{"typeIdentifier":"t_rational_316_by_1","typeString":"int_const 316"},"value":"316"},"visibility":"internal"},{"constant":true,"id":4523,"mutability":"constant","name":"AMP_END_TIME_TOO_CLOSE","nodeType":"VariableDeclaration","scope":4806,"src":"112257:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4521,"name":"uint256","nodeType":"ElementaryTypeName","src":"112257:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333137","id":4522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"112308:3:0","typeDescriptions":{"typeIdentifier":"t_rational_317_by_1","typeString":"int_const 317"},"value":"317"},"visibility":"internal"},{"constant":true,"id":4526,"mutability":"constant","name":"AMP_ONGOING_UPDATE","nodeType":"VariableDeclaration","scope":4806,"src":"112318:50:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4524,"name":"uint256","nodeType":"ElementaryTypeName","src":"112318:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333138","id":4525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"112365:3:0","typeDescriptions":{"typeIdentifier":"t_rational_318_by_1","typeString":"int_const 318"},"value":"318"},"visibility":"internal"},{"constant":true,"id":4529,"mutability":"constant","name":"AMP_RATE_TOO_HIGH","nodeType":"VariableDeclaration","scope":4806,"src":"112375:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4527,"name":"uint256","nodeType":"ElementaryTypeName","src":"112375:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333139","id":4528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"112421:3:0","typeDescriptions":{"typeIdentifier":"t_rational_319_by_1","typeString":"int_const 319"},"value":"319"},"visibility":"internal"},{"constant":true,"id":4532,"mutability":"constant","name":"AMP_NO_ONGOING_UPDATE","nodeType":"VariableDeclaration","scope":4806,"src":"112431:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4530,"name":"uint256","nodeType":"ElementaryTypeName","src":"112431:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333230","id":4531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"112481:3:0","typeDescriptions":{"typeIdentifier":"t_rational_320_by_1","typeString":"int_const 320"},"value":"320"},"visibility":"internal"},{"constant":true,"id":4535,"mutability":"constant","name":"STABLE_INVARIANT_DIDNT_CONVERGE","nodeType":"VariableDeclaration","scope":4806,"src":"112491:63:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4533,"name":"uint256","nodeType":"ElementaryTypeName","src":"112491:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333231","id":4534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"112551:3:0","typeDescriptions":{"typeIdentifier":"t_rational_321_by_1","typeString":"int_const 321"},"value":"321"},"visibility":"internal"},{"constant":true,"id":4538,"mutability":"constant","name":"STABLE_GET_BALANCE_DIDNT_CONVERGE","nodeType":"VariableDeclaration","scope":4806,"src":"112561:65:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4536,"name":"uint256","nodeType":"ElementaryTypeName","src":"112561:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333232","id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"112623:3:0","typeDescriptions":{"typeIdentifier":"t_rational_322_by_1","typeString":"int_const 322"},"value":"322"},"visibility":"internal"},{"constant":true,"id":4541,"mutability":"constant","name":"RELAYER_NOT_CONTRACT","nodeType":"VariableDeclaration","scope":4806,"src":"112633:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4539,"name":"uint256","nodeType":"ElementaryTypeName","src":"112633:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333233","id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"112682:3:0","typeDescriptions":{"typeIdentifier":"t_rational_323_by_1","typeString":"int_const 323"},"value":"323"},"visibility":"internal"},{"constant":true,"id":4544,"mutability":"constant","name":"BASE_POOL_RELAYER_NOT_CALLED","nodeType":"VariableDeclaration","scope":4806,"src":"112692:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4542,"name":"uint256","nodeType":"ElementaryTypeName","src":"112692:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333234","id":4543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"112749:3:0","typeDescriptions":{"typeIdentifier":"t_rational_324_by_1","typeString":"int_const 324"},"value":"324"},"visibility":"internal"},{"constant":true,"id":4547,"mutability":"constant","name":"REBALANCING_RELAYER_REENTERED","nodeType":"VariableDeclaration","scope":4806,"src":"112759:61:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4545,"name":"uint256","nodeType":"ElementaryTypeName","src":"112759:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333235","id":4546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"112817:3:0","typeDescriptions":{"typeIdentifier":"t_rational_325_by_1","typeString":"int_const 325"},"value":"325"},"visibility":"internal"},{"constant":true,"id":4550,"mutability":"constant","name":"GRADUAL_UPDATE_TIME_TRAVEL","nodeType":"VariableDeclaration","scope":4806,"src":"112827:58:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4548,"name":"uint256","nodeType":"ElementaryTypeName","src":"112827:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333236","id":4549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"112882:3:0","typeDescriptions":{"typeIdentifier":"t_rational_326_by_1","typeString":"int_const 326"},"value":"326"},"visibility":"internal"},{"constant":true,"id":4553,"mutability":"constant","name":"SWAPS_DISABLED","nodeType":"VariableDeclaration","scope":4806,"src":"112892:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4551,"name":"uint256","nodeType":"ElementaryTypeName","src":"112892:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333237","id":4552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"112935:3:0","typeDescriptions":{"typeIdentifier":"t_rational_327_by_1","typeString":"int_const 327"},"value":"327"},"visibility":"internal"},{"constant":true,"id":4556,"mutability":"constant","name":"CALLER_IS_NOT_LBP_OWNER","nodeType":"VariableDeclaration","scope":4806,"src":"112945:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4554,"name":"uint256","nodeType":"ElementaryTypeName","src":"112945:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333238","id":4555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"112997:3:0","typeDescriptions":{"typeIdentifier":"t_rational_328_by_1","typeString":"int_const 328"},"value":"328"},"visibility":"internal"},{"constant":true,"id":4559,"mutability":"constant","name":"PRICE_RATE_OVERFLOW","nodeType":"VariableDeclaration","scope":4806,"src":"113007:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4557,"name":"uint256","nodeType":"ElementaryTypeName","src":"113007:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333239","id":4558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"113055:3:0","typeDescriptions":{"typeIdentifier":"t_rational_329_by_1","typeString":"int_const 329"},"value":"329"},"visibility":"internal"},{"constant":true,"id":4562,"mutability":"constant","name":"INVALID_JOIN_EXIT_KIND_WHILE_SWAPS_DISABLED","nodeType":"VariableDeclaration","scope":4806,"src":"113065:75:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4560,"name":"uint256","nodeType":"ElementaryTypeName","src":"113065:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333330","id":4561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"113137:3:0","typeDescriptions":{"typeIdentifier":"t_rational_330_by_1","typeString":"int_const 330"},"value":"330"},"visibility":"internal"},{"constant":true,"id":4565,"mutability":"constant","name":"WEIGHT_CHANGE_TOO_FAST","nodeType":"VariableDeclaration","scope":4806,"src":"113147:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"113147:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333331","id":4564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"113198:3:0","typeDescriptions":{"typeIdentifier":"t_rational_331_by_1","typeString":"int_const 331"},"value":"331"},"visibility":"internal"},{"constant":true,"id":4568,"mutability":"constant","name":"LOWER_GREATER_THAN_UPPER_TARGET","nodeType":"VariableDeclaration","scope":4806,"src":"113208:63:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4566,"name":"uint256","nodeType":"ElementaryTypeName","src":"113208:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333332","id":4567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"113268:3:0","typeDescriptions":{"typeIdentifier":"t_rational_332_by_1","typeString":"int_const 332"},"value":"332"},"visibility":"internal"},{"constant":true,"id":4571,"mutability":"constant","name":"UPPER_TARGET_TOO_HIGH","nodeType":"VariableDeclaration","scope":4806,"src":"113278:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4569,"name":"uint256","nodeType":"ElementaryTypeName","src":"113278:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333333","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"113328:3:0","typeDescriptions":{"typeIdentifier":"t_rational_333_by_1","typeString":"int_const 333"},"value":"333"},"visibility":"internal"},{"constant":true,"id":4574,"mutability":"constant","name":"UNHANDLED_BY_LINEAR_POOL","nodeType":"VariableDeclaration","scope":4806,"src":"113338:56:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4572,"name":"uint256","nodeType":"ElementaryTypeName","src":"113338:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333334","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"113391:3:0","typeDescriptions":{"typeIdentifier":"t_rational_334_by_1","typeString":"int_const 334"},"value":"334"},"visibility":"internal"},{"constant":true,"id":4577,"mutability":"constant","name":"OUT_OF_TARGET_RANGE","nodeType":"VariableDeclaration","scope":4806,"src":"113401:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4575,"name":"uint256","nodeType":"ElementaryTypeName","src":"113401:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333335","id":4576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"113449:3:0","typeDescriptions":{"typeIdentifier":"t_rational_335_by_1","typeString":"int_const 335"},"value":"335"},"visibility":"internal"},{"constant":true,"id":4580,"mutability":"constant","name":"UNHANDLED_EXIT_KIND","nodeType":"VariableDeclaration","scope":4806,"src":"113459:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4578,"name":"uint256","nodeType":"ElementaryTypeName","src":"113459:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333336","id":4579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"113507:3:0","typeDescriptions":{"typeIdentifier":"t_rational_336_by_1","typeString":"int_const 336"},"value":"336"},"visibility":"internal"},{"constant":true,"id":4583,"mutability":"constant","name":"UNAUTHORIZED_EXIT","nodeType":"VariableDeclaration","scope":4806,"src":"113517:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4581,"name":"uint256","nodeType":"ElementaryTypeName","src":"113517:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333337","id":4582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"113563:3:0","typeDescriptions":{"typeIdentifier":"t_rational_337_by_1","typeString":"int_const 337"},"value":"337"},"visibility":"internal"},{"constant":true,"id":4586,"mutability":"constant","name":"MAX_MANAGEMENT_SWAP_FEE_PERCENTAGE","nodeType":"VariableDeclaration","scope":4806,"src":"113573:66:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4584,"name":"uint256","nodeType":"ElementaryTypeName","src":"113573:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333338","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"113636:3:0","typeDescriptions":{"typeIdentifier":"t_rational_338_by_1","typeString":"int_const 338"},"value":"338"},"visibility":"internal"},{"constant":true,"id":4589,"mutability":"constant","name":"UNHANDLED_BY_MANAGED_POOL","nodeType":"VariableDeclaration","scope":4806,"src":"113646:57:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4587,"name":"uint256","nodeType":"ElementaryTypeName","src":"113646:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333339","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"113700:3:0","typeDescriptions":{"typeIdentifier":"t_rational_339_by_1","typeString":"int_const 339"},"value":"339"},"visibility":"internal"},{"constant":true,"id":4592,"mutability":"constant","name":"UNHANDLED_BY_PHANTOM_POOL","nodeType":"VariableDeclaration","scope":4806,"src":"113710:57:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4590,"name":"uint256","nodeType":"ElementaryTypeName","src":"113710:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333430","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"113764:3:0","typeDescriptions":{"typeIdentifier":"t_rational_340_by_1","typeString":"int_const 340"},"value":"340"},"visibility":"internal"},{"constant":true,"id":4595,"mutability":"constant","name":"TOKEN_DOES_NOT_HAVE_RATE_PROVIDER","nodeType":"VariableDeclaration","scope":4806,"src":"113774:65:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4593,"name":"uint256","nodeType":"ElementaryTypeName","src":"113774:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333431","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"113836:3:0","typeDescriptions":{"typeIdentifier":"t_rational_341_by_1","typeString":"int_const 341"},"value":"341"},"visibility":"internal"},{"constant":true,"id":4598,"mutability":"constant","name":"INVALID_INITIALIZATION","nodeType":"VariableDeclaration","scope":4806,"src":"113846:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4596,"name":"uint256","nodeType":"ElementaryTypeName","src":"113846:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333432","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"113897:3:0","typeDescriptions":{"typeIdentifier":"t_rational_342_by_1","typeString":"int_const 342"},"value":"342"},"visibility":"internal"},{"constant":true,"id":4601,"mutability":"constant","name":"OUT_OF_NEW_TARGET_RANGE","nodeType":"VariableDeclaration","scope":4806,"src":"113907:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4599,"name":"uint256","nodeType":"ElementaryTypeName","src":"113907:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333433","id":4600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"113959:3:0","typeDescriptions":{"typeIdentifier":"t_rational_343_by_1","typeString":"int_const 343"},"value":"343"},"visibility":"internal"},{"constant":true,"id":4604,"mutability":"constant","name":"UNAUTHORIZED_OPERATION","nodeType":"VariableDeclaration","scope":4806,"src":"113969:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4602,"name":"uint256","nodeType":"ElementaryTypeName","src":"113969:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333434","id":4603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"114020:3:0","typeDescriptions":{"typeIdentifier":"t_rational_344_by_1","typeString":"int_const 344"},"value":"344"},"visibility":"internal"},{"constant":true,"id":4607,"mutability":"constant","name":"UNINITIALIZED_POOL_CONTROLLER","nodeType":"VariableDeclaration","scope":4806,"src":"114030:61:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4605,"name":"uint256","nodeType":"ElementaryTypeName","src":"114030:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333435","id":4606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"114088:3:0","typeDescriptions":{"typeIdentifier":"t_rational_345_by_1","typeString":"int_const 345"},"value":"345"},"visibility":"internal"},{"constant":true,"id":4610,"mutability":"constant","name":"REENTRANCY","nodeType":"VariableDeclaration","scope":4806,"src":"114112:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4608,"name":"uint256","nodeType":"ElementaryTypeName","src":"114112:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343030","id":4609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"114151:3:0","typeDescriptions":{"typeIdentifier":"t_rational_400_by_1","typeString":"int_const 400"},"value":"400"},"visibility":"internal"},{"constant":true,"id":4613,"mutability":"constant","name":"SENDER_NOT_ALLOWED","nodeType":"VariableDeclaration","scope":4806,"src":"114161:50:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4611,"name":"uint256","nodeType":"ElementaryTypeName","src":"114161:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343031","id":4612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"114208:3:0","typeDescriptions":{"typeIdentifier":"t_rational_401_by_1","typeString":"int_const 401"},"value":"401"},"visibility":"internal"},{"constant":true,"id":4616,"mutability":"constant","name":"PAUSED","nodeType":"VariableDeclaration","scope":4806,"src":"114218:38:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4614,"name":"uint256","nodeType":"ElementaryTypeName","src":"114218:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343032","id":4615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"114253:3:0","typeDescriptions":{"typeIdentifier":"t_rational_402_by_1","typeString":"int_const 402"},"value":"402"},"visibility":"internal"},{"constant":true,"id":4619,"mutability":"constant","name":"PAUSE_WINDOW_EXPIRED","nodeType":"VariableDeclaration","scope":4806,"src":"114263:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4617,"name":"uint256","nodeType":"ElementaryTypeName","src":"114263:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343033","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"114312:3:0","typeDescriptions":{"typeIdentifier":"t_rational_403_by_1","typeString":"int_const 403"},"value":"403"},"visibility":"internal"},{"constant":true,"id":4622,"mutability":"constant","name":"MAX_PAUSE_WINDOW_DURATION","nodeType":"VariableDeclaration","scope":4806,"src":"114322:57:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4620,"name":"uint256","nodeType":"ElementaryTypeName","src":"114322:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343034","id":4621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"114376:3:0","typeDescriptions":{"typeIdentifier":"t_rational_404_by_1","typeString":"int_const 404"},"value":"404"},"visibility":"internal"},{"constant":true,"id":4625,"mutability":"constant","name":"MAX_BUFFER_PERIOD_DURATION","nodeType":"VariableDeclaration","scope":4806,"src":"114386:58:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4623,"name":"uint256","nodeType":"ElementaryTypeName","src":"114386:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343035","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"114441:3:0","typeDescriptions":{"typeIdentifier":"t_rational_405_by_1","typeString":"int_const 405"},"value":"405"},"visibility":"internal"},{"constant":true,"id":4628,"mutability":"constant","name":"INSUFFICIENT_BALANCE","nodeType":"VariableDeclaration","scope":4806,"src":"114451:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4626,"name":"uint256","nodeType":"ElementaryTypeName","src":"114451:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343036","id":4627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"114500:3:0","typeDescriptions":{"typeIdentifier":"t_rational_406_by_1","typeString":"int_const 406"},"value":"406"},"visibility":"internal"},{"constant":true,"id":4631,"mutability":"constant","name":"INSUFFICIENT_ALLOWANCE","nodeType":"VariableDeclaration","scope":4806,"src":"114510:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4629,"name":"uint256","nodeType":"ElementaryTypeName","src":"114510:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343037","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"114561:3:0","typeDescriptions":{"typeIdentifier":"t_rational_407_by_1","typeString":"int_const 407"},"value":"407"},"visibility":"internal"},{"constant":true,"id":4634,"mutability":"constant","name":"ERC20_TRANSFER_FROM_ZERO_ADDRESS","nodeType":"VariableDeclaration","scope":4806,"src":"114571:64:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4632,"name":"uint256","nodeType":"ElementaryTypeName","src":"114571:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343038","id":4633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"114632:3:0","typeDescriptions":{"typeIdentifier":"t_rational_408_by_1","typeString":"int_const 408"},"value":"408"},"visibility":"internal"},{"constant":true,"id":4637,"mutability":"constant","name":"ERC20_TRANSFER_TO_ZERO_ADDRESS","nodeType":"VariableDeclaration","scope":4806,"src":"114642:62:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4635,"name":"uint256","nodeType":"ElementaryTypeName","src":"114642:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343039","id":4636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"114701:3:0","typeDescriptions":{"typeIdentifier":"t_rational_409_by_1","typeString":"int_const 409"},"value":"409"},"visibility":"internal"},{"constant":true,"id":4640,"mutability":"constant","name":"ERC20_MINT_TO_ZERO_ADDRESS","nodeType":"VariableDeclaration","scope":4806,"src":"114711:58:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4638,"name":"uint256","nodeType":"ElementaryTypeName","src":"114711:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343130","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"114766:3:0","typeDescriptions":{"typeIdentifier":"t_rational_410_by_1","typeString":"int_const 410"},"value":"410"},"visibility":"internal"},{"constant":true,"id":4643,"mutability":"constant","name":"ERC20_BURN_FROM_ZERO_ADDRESS","nodeType":"VariableDeclaration","scope":4806,"src":"114776:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4641,"name":"uint256","nodeType":"ElementaryTypeName","src":"114776:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343131","id":4642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"114833:3:0","typeDescriptions":{"typeIdentifier":"t_rational_411_by_1","typeString":"int_const 411"},"value":"411"},"visibility":"internal"},{"constant":true,"id":4646,"mutability":"constant","name":"ERC20_APPROVE_FROM_ZERO_ADDRESS","nodeType":"VariableDeclaration","scope":4806,"src":"114843:63:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4644,"name":"uint256","nodeType":"ElementaryTypeName","src":"114843:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343132","id":4645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"114903:3:0","typeDescriptions":{"typeIdentifier":"t_rational_412_by_1","typeString":"int_const 412"},"value":"412"},"visibility":"internal"},{"constant":true,"id":4649,"mutability":"constant","name":"ERC20_APPROVE_TO_ZERO_ADDRESS","nodeType":"VariableDeclaration","scope":4806,"src":"114913:61:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4647,"name":"uint256","nodeType":"ElementaryTypeName","src":"114913:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343133","id":4648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"114971:3:0","typeDescriptions":{"typeIdentifier":"t_rational_413_by_1","typeString":"int_const 413"},"value":"413"},"visibility":"internal"},{"constant":true,"id":4652,"mutability":"constant","name":"ERC20_TRANSFER_EXCEEDS_ALLOWANCE","nodeType":"VariableDeclaration","scope":4806,"src":"114981:64:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4650,"name":"uint256","nodeType":"ElementaryTypeName","src":"114981:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343134","id":4651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115042:3:0","typeDescriptions":{"typeIdentifier":"t_rational_414_by_1","typeString":"int_const 414"},"value":"414"},"visibility":"internal"},{"constant":true,"id":4655,"mutability":"constant","name":"ERC20_DECREASED_ALLOWANCE_BELOW_ZERO","nodeType":"VariableDeclaration","scope":4806,"src":"115052:68:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4653,"name":"uint256","nodeType":"ElementaryTypeName","src":"115052:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343135","id":4654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115117:3:0","typeDescriptions":{"typeIdentifier":"t_rational_415_by_1","typeString":"int_const 415"},"value":"415"},"visibility":"internal"},{"constant":true,"id":4658,"mutability":"constant","name":"ERC20_TRANSFER_EXCEEDS_BALANCE","nodeType":"VariableDeclaration","scope":4806,"src":"115127:62:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4656,"name":"uint256","nodeType":"ElementaryTypeName","src":"115127:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343136","id":4657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115186:3:0","typeDescriptions":{"typeIdentifier":"t_rational_416_by_1","typeString":"int_const 416"},"value":"416"},"visibility":"internal"},{"constant":true,"id":4661,"mutability":"constant","name":"ERC20_BURN_EXCEEDS_ALLOWANCE","nodeType":"VariableDeclaration","scope":4806,"src":"115196:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4659,"name":"uint256","nodeType":"ElementaryTypeName","src":"115196:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343137","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115253:3:0","typeDescriptions":{"typeIdentifier":"t_rational_417_by_1","typeString":"int_const 417"},"value":"417"},"visibility":"internal"},{"constant":true,"id":4664,"mutability":"constant","name":"SAFE_ERC20_CALL_FAILED","nodeType":"VariableDeclaration","scope":4806,"src":"115263:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4662,"name":"uint256","nodeType":"ElementaryTypeName","src":"115263:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343138","id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115314:3:0","typeDescriptions":{"typeIdentifier":"t_rational_418_by_1","typeString":"int_const 418"},"value":"418"},"visibility":"internal"},{"constant":true,"id":4667,"mutability":"constant","name":"ADDRESS_INSUFFICIENT_BALANCE","nodeType":"VariableDeclaration","scope":4806,"src":"115324:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4665,"name":"uint256","nodeType":"ElementaryTypeName","src":"115324:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343139","id":4666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115381:3:0","typeDescriptions":{"typeIdentifier":"t_rational_419_by_1","typeString":"int_const 419"},"value":"419"},"visibility":"internal"},{"constant":true,"id":4670,"mutability":"constant","name":"ADDRESS_CANNOT_SEND_VALUE","nodeType":"VariableDeclaration","scope":4806,"src":"115391:57:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4668,"name":"uint256","nodeType":"ElementaryTypeName","src":"115391:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343230","id":4669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115445:3:0","typeDescriptions":{"typeIdentifier":"t_rational_420_by_1","typeString":"int_const 420"},"value":"420"},"visibility":"internal"},{"constant":true,"id":4673,"mutability":"constant","name":"SAFE_CAST_VALUE_CANT_FIT_INT256","nodeType":"VariableDeclaration","scope":4806,"src":"115455:63:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4671,"name":"uint256","nodeType":"ElementaryTypeName","src":"115455:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343231","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115515:3:0","typeDescriptions":{"typeIdentifier":"t_rational_421_by_1","typeString":"int_const 421"},"value":"421"},"visibility":"internal"},{"constant":true,"id":4676,"mutability":"constant","name":"GRANT_SENDER_NOT_ADMIN","nodeType":"VariableDeclaration","scope":4806,"src":"115525:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4674,"name":"uint256","nodeType":"ElementaryTypeName","src":"115525:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343232","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115576:3:0","typeDescriptions":{"typeIdentifier":"t_rational_422_by_1","typeString":"int_const 422"},"value":"422"},"visibility":"internal"},{"constant":true,"id":4679,"mutability":"constant","name":"REVOKE_SENDER_NOT_ADMIN","nodeType":"VariableDeclaration","scope":4806,"src":"115586:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4677,"name":"uint256","nodeType":"ElementaryTypeName","src":"115586:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343233","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115638:3:0","typeDescriptions":{"typeIdentifier":"t_rational_423_by_1","typeString":"int_const 423"},"value":"423"},"visibility":"internal"},{"constant":true,"id":4682,"mutability":"constant","name":"RENOUNCE_SENDER_NOT_ALLOWED","nodeType":"VariableDeclaration","scope":4806,"src":"115648:59:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4680,"name":"uint256","nodeType":"ElementaryTypeName","src":"115648:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343234","id":4681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115704:3:0","typeDescriptions":{"typeIdentifier":"t_rational_424_by_1","typeString":"int_const 424"},"value":"424"},"visibility":"internal"},{"constant":true,"id":4685,"mutability":"constant","name":"BUFFER_PERIOD_EXPIRED","nodeType":"VariableDeclaration","scope":4806,"src":"115714:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4683,"name":"uint256","nodeType":"ElementaryTypeName","src":"115714:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343235","id":4684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115764:3:0","typeDescriptions":{"typeIdentifier":"t_rational_425_by_1","typeString":"int_const 425"},"value":"425"},"visibility":"internal"},{"constant":true,"id":4688,"mutability":"constant","name":"CALLER_IS_NOT_OWNER","nodeType":"VariableDeclaration","scope":4806,"src":"115774:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4686,"name":"uint256","nodeType":"ElementaryTypeName","src":"115774:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343236","id":4687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115822:3:0","typeDescriptions":{"typeIdentifier":"t_rational_426_by_1","typeString":"int_const 426"},"value":"426"},"visibility":"internal"},{"constant":true,"id":4691,"mutability":"constant","name":"NEW_OWNER_IS_ZERO","nodeType":"VariableDeclaration","scope":4806,"src":"115832:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4689,"name":"uint256","nodeType":"ElementaryTypeName","src":"115832:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343237","id":4690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115878:3:0","typeDescriptions":{"typeIdentifier":"t_rational_427_by_1","typeString":"int_const 427"},"value":"427"},"visibility":"internal"},{"constant":true,"id":4694,"mutability":"constant","name":"CODE_DEPLOYMENT_FAILED","nodeType":"VariableDeclaration","scope":4806,"src":"115888:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4692,"name":"uint256","nodeType":"ElementaryTypeName","src":"115888:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343238","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115939:3:0","typeDescriptions":{"typeIdentifier":"t_rational_428_by_1","typeString":"int_const 428"},"value":"428"},"visibility":"internal"},{"constant":true,"id":4697,"mutability":"constant","name":"CALL_TO_NON_CONTRACT","nodeType":"VariableDeclaration","scope":4806,"src":"115949:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4695,"name":"uint256","nodeType":"ElementaryTypeName","src":"115949:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343239","id":4696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"115998:3:0","typeDescriptions":{"typeIdentifier":"t_rational_429_by_1","typeString":"int_const 429"},"value":"429"},"visibility":"internal"},{"constant":true,"id":4700,"mutability":"constant","name":"LOW_LEVEL_CALL_FAILED","nodeType":"VariableDeclaration","scope":4806,"src":"116008:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4698,"name":"uint256","nodeType":"ElementaryTypeName","src":"116008:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343330","id":4699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"116058:3:0","typeDescriptions":{"typeIdentifier":"t_rational_430_by_1","typeString":"int_const 430"},"value":"430"},"visibility":"internal"},{"constant":true,"id":4703,"mutability":"constant","name":"NOT_PAUSED","nodeType":"VariableDeclaration","scope":4806,"src":"116068:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4701,"name":"uint256","nodeType":"ElementaryTypeName","src":"116068:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343331","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"116107:3:0","typeDescriptions":{"typeIdentifier":"t_rational_431_by_1","typeString":"int_const 431"},"value":"431"},"visibility":"internal"},{"constant":true,"id":4706,"mutability":"constant","name":"ADDRESS_ALREADY_ALLOWLISTED","nodeType":"VariableDeclaration","scope":4806,"src":"116117:59:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4704,"name":"uint256","nodeType":"ElementaryTypeName","src":"116117:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343332","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"116173:3:0","typeDescriptions":{"typeIdentifier":"t_rational_432_by_1","typeString":"int_const 432"},"value":"432"},"visibility":"internal"},{"constant":true,"id":4709,"mutability":"constant","name":"ADDRESS_NOT_ALLOWLISTED","nodeType":"VariableDeclaration","scope":4806,"src":"116183:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4707,"name":"uint256","nodeType":"ElementaryTypeName","src":"116183:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343333","id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"116235:3:0","typeDescriptions":{"typeIdentifier":"t_rational_433_by_1","typeString":"int_const 433"},"value":"433"},"visibility":"internal"},{"constant":true,"id":4712,"mutability":"constant","name":"INVALID_POOL_ID","nodeType":"VariableDeclaration","scope":4806,"src":"116261:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4710,"name":"uint256","nodeType":"ElementaryTypeName","src":"116261:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353030","id":4711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"116305:3:0","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"visibility":"internal"},{"constant":true,"id":4715,"mutability":"constant","name":"CALLER_NOT_POOL","nodeType":"VariableDeclaration","scope":4806,"src":"116315:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4713,"name":"uint256","nodeType":"ElementaryTypeName","src":"116315:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353031","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"116359:3:0","typeDescriptions":{"typeIdentifier":"t_rational_501_by_1","typeString":"int_const 501"},"value":"501"},"visibility":"internal"},{"constant":true,"id":4718,"mutability":"constant","name":"SENDER_NOT_ASSET_MANAGER","nodeType":"VariableDeclaration","scope":4806,"src":"116369:56:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4716,"name":"uint256","nodeType":"ElementaryTypeName","src":"116369:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353032","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"116422:3:0","typeDescriptions":{"typeIdentifier":"t_rational_502_by_1","typeString":"int_const 502"},"value":"502"},"visibility":"internal"},{"constant":true,"id":4721,"mutability":"constant","name":"USER_DOESNT_ALLOW_RELAYER","nodeType":"VariableDeclaration","scope":4806,"src":"116432:57:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4719,"name":"uint256","nodeType":"ElementaryTypeName","src":"116432:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353033","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"116486:3:0","typeDescriptions":{"typeIdentifier":"t_rational_503_by_1","typeString":"int_const 503"},"value":"503"},"visibility":"internal"},{"constant":true,"id":4724,"mutability":"constant","name":"INVALID_SIGNATURE","nodeType":"VariableDeclaration","scope":4806,"src":"116496:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4722,"name":"uint256","nodeType":"ElementaryTypeName","src":"116496:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353034","id":4723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"116542:3:0","typeDescriptions":{"typeIdentifier":"t_rational_504_by_1","typeString":"int_const 504"},"value":"504"},"visibility":"internal"},{"constant":true,"id":4727,"mutability":"constant","name":"EXIT_BELOW_MIN","nodeType":"VariableDeclaration","scope":4806,"src":"116552:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4725,"name":"uint256","nodeType":"ElementaryTypeName","src":"116552:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353035","id":4726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"116595:3:0","typeDescriptions":{"typeIdentifier":"t_rational_505_by_1","typeString":"int_const 505"},"value":"505"},"visibility":"internal"},{"constant":true,"id":4730,"mutability":"constant","name":"JOIN_ABOVE_MAX","nodeType":"VariableDeclaration","scope":4806,"src":"116605:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4728,"name":"uint256","nodeType":"ElementaryTypeName","src":"116605:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353036","id":4729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"116648:3:0","typeDescriptions":{"typeIdentifier":"t_rational_506_by_1","typeString":"int_const 506"},"value":"506"},"visibility":"internal"},{"constant":true,"id":4733,"mutability":"constant","name":"SWAP_LIMIT","nodeType":"VariableDeclaration","scope":4806,"src":"116658:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4731,"name":"uint256","nodeType":"ElementaryTypeName","src":"116658:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353037","id":4732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"116697:3:0","typeDescriptions":{"typeIdentifier":"t_rational_507_by_1","typeString":"int_const 507"},"value":"507"},"visibility":"internal"},{"constant":true,"id":4736,"mutability":"constant","name":"SWAP_DEADLINE","nodeType":"VariableDeclaration","scope":4806,"src":"116707:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4734,"name":"uint256","nodeType":"ElementaryTypeName","src":"116707:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353038","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"116749:3:0","typeDescriptions":{"typeIdentifier":"t_rational_508_by_1","typeString":"int_const 508"},"value":"508"},"visibility":"internal"},{"constant":true,"id":4739,"mutability":"constant","name":"CANNOT_SWAP_SAME_TOKEN","nodeType":"VariableDeclaration","scope":4806,"src":"116759:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4737,"name":"uint256","nodeType":"ElementaryTypeName","src":"116759:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353039","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"116810:3:0","typeDescriptions":{"typeIdentifier":"t_rational_509_by_1","typeString":"int_const 509"},"value":"509"},"visibility":"internal"},{"constant":true,"id":4742,"mutability":"constant","name":"UNKNOWN_AMOUNT_IN_FIRST_SWAP","nodeType":"VariableDeclaration","scope":4806,"src":"116820:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4740,"name":"uint256","nodeType":"ElementaryTypeName","src":"116820:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353130","id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"116877:3:0","typeDescriptions":{"typeIdentifier":"t_rational_510_by_1","typeString":"int_const 510"},"value":"510"},"visibility":"internal"},{"constant":true,"id":4745,"mutability":"constant","name":"MALCONSTRUCTED_MULTIHOP_SWAP","nodeType":"VariableDeclaration","scope":4806,"src":"116887:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4743,"name":"uint256","nodeType":"ElementaryTypeName","src":"116887:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353131","id":4744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"116944:3:0","typeDescriptions":{"typeIdentifier":"t_rational_511_by_1","typeString":"int_const 511"},"value":"511"},"visibility":"internal"},{"constant":true,"id":4748,"mutability":"constant","name":"INTERNAL_BALANCE_OVERFLOW","nodeType":"VariableDeclaration","scope":4806,"src":"116954:57:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4746,"name":"uint256","nodeType":"ElementaryTypeName","src":"116954:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353132","id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117008:3:0","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"value":"512"},"visibility":"internal"},{"constant":true,"id":4751,"mutability":"constant","name":"INSUFFICIENT_INTERNAL_BALANCE","nodeType":"VariableDeclaration","scope":4806,"src":"117018:61:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4749,"name":"uint256","nodeType":"ElementaryTypeName","src":"117018:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353133","id":4750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117076:3:0","typeDescriptions":{"typeIdentifier":"t_rational_513_by_1","typeString":"int_const 513"},"value":"513"},"visibility":"internal"},{"constant":true,"id":4754,"mutability":"constant","name":"INVALID_ETH_INTERNAL_BALANCE","nodeType":"VariableDeclaration","scope":4806,"src":"117086:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4752,"name":"uint256","nodeType":"ElementaryTypeName","src":"117086:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353134","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117143:3:0","typeDescriptions":{"typeIdentifier":"t_rational_514_by_1","typeString":"int_const 514"},"value":"514"},"visibility":"internal"},{"constant":true,"id":4757,"mutability":"constant","name":"INVALID_POST_LOAN_BALANCE","nodeType":"VariableDeclaration","scope":4806,"src":"117153:57:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4755,"name":"uint256","nodeType":"ElementaryTypeName","src":"117153:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353135","id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117207:3:0","typeDescriptions":{"typeIdentifier":"t_rational_515_by_1","typeString":"int_const 515"},"value":"515"},"visibility":"internal"},{"constant":true,"id":4760,"mutability":"constant","name":"INSUFFICIENT_ETH","nodeType":"VariableDeclaration","scope":4806,"src":"117217:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4758,"name":"uint256","nodeType":"ElementaryTypeName","src":"117217:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353136","id":4759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117262:3:0","typeDescriptions":{"typeIdentifier":"t_rational_516_by_1","typeString":"int_const 516"},"value":"516"},"visibility":"internal"},{"constant":true,"id":4763,"mutability":"constant","name":"UNALLOCATED_ETH","nodeType":"VariableDeclaration","scope":4806,"src":"117272:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4761,"name":"uint256","nodeType":"ElementaryTypeName","src":"117272:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353137","id":4762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117316:3:0","typeDescriptions":{"typeIdentifier":"t_rational_517_by_1","typeString":"int_const 517"},"value":"517"},"visibility":"internal"},{"constant":true,"id":4766,"mutability":"constant","name":"ETH_TRANSFER","nodeType":"VariableDeclaration","scope":4806,"src":"117326:44:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4764,"name":"uint256","nodeType":"ElementaryTypeName","src":"117326:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353138","id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117367:3:0","typeDescriptions":{"typeIdentifier":"t_rational_518_by_1","typeString":"int_const 518"},"value":"518"},"visibility":"internal"},{"constant":true,"id":4769,"mutability":"constant","name":"CANNOT_USE_ETH_SENTINEL","nodeType":"VariableDeclaration","scope":4806,"src":"117377:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4767,"name":"uint256","nodeType":"ElementaryTypeName","src":"117377:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353139","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117429:3:0","typeDescriptions":{"typeIdentifier":"t_rational_519_by_1","typeString":"int_const 519"},"value":"519"},"visibility":"internal"},{"constant":true,"id":4772,"mutability":"constant","name":"TOKENS_MISMATCH","nodeType":"VariableDeclaration","scope":4806,"src":"117439:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4770,"name":"uint256","nodeType":"ElementaryTypeName","src":"117439:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353230","id":4771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117483:3:0","typeDescriptions":{"typeIdentifier":"t_rational_520_by_1","typeString":"int_const 520"},"value":"520"},"visibility":"internal"},{"constant":true,"id":4775,"mutability":"constant","name":"TOKEN_NOT_REGISTERED","nodeType":"VariableDeclaration","scope":4806,"src":"117493:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4773,"name":"uint256","nodeType":"ElementaryTypeName","src":"117493:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353231","id":4774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117542:3:0","typeDescriptions":{"typeIdentifier":"t_rational_521_by_1","typeString":"int_const 521"},"value":"521"},"visibility":"internal"},{"constant":true,"id":4778,"mutability":"constant","name":"TOKEN_ALREADY_REGISTERED","nodeType":"VariableDeclaration","scope":4806,"src":"117552:56:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4776,"name":"uint256","nodeType":"ElementaryTypeName","src":"117552:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353232","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117605:3:0","typeDescriptions":{"typeIdentifier":"t_rational_522_by_1","typeString":"int_const 522"},"value":"522"},"visibility":"internal"},{"constant":true,"id":4781,"mutability":"constant","name":"TOKENS_ALREADY_SET","nodeType":"VariableDeclaration","scope":4806,"src":"117615:50:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4779,"name":"uint256","nodeType":"ElementaryTypeName","src":"117615:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353233","id":4780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117662:3:0","typeDescriptions":{"typeIdentifier":"t_rational_523_by_1","typeString":"int_const 523"},"value":"523"},"visibility":"internal"},{"constant":true,"id":4784,"mutability":"constant","name":"TOKENS_LENGTH_MUST_BE_2","nodeType":"VariableDeclaration","scope":4806,"src":"117672:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4782,"name":"uint256","nodeType":"ElementaryTypeName","src":"117672:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353234","id":4783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117724:3:0","typeDescriptions":{"typeIdentifier":"t_rational_524_by_1","typeString":"int_const 524"},"value":"524"},"visibility":"internal"},{"constant":true,"id":4787,"mutability":"constant","name":"NONZERO_TOKEN_BALANCE","nodeType":"VariableDeclaration","scope":4806,"src":"117734:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4785,"name":"uint256","nodeType":"ElementaryTypeName","src":"117734:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353235","id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117784:3:0","typeDescriptions":{"typeIdentifier":"t_rational_525_by_1","typeString":"int_const 525"},"value":"525"},"visibility":"internal"},{"constant":true,"id":4790,"mutability":"constant","name":"BALANCE_TOTAL_OVERFLOW","nodeType":"VariableDeclaration","scope":4806,"src":"117794:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4788,"name":"uint256","nodeType":"ElementaryTypeName","src":"117794:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353236","id":4789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117845:3:0","typeDescriptions":{"typeIdentifier":"t_rational_526_by_1","typeString":"int_const 526"},"value":"526"},"visibility":"internal"},{"constant":true,"id":4793,"mutability":"constant","name":"POOL_NO_TOKENS","nodeType":"VariableDeclaration","scope":4806,"src":"117855:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4791,"name":"uint256","nodeType":"ElementaryTypeName","src":"117855:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353237","id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117898:3:0","typeDescriptions":{"typeIdentifier":"t_rational_527_by_1","typeString":"int_const 527"},"value":"527"},"visibility":"internal"},{"constant":true,"id":4796,"mutability":"constant","name":"INSUFFICIENT_FLASH_LOAN_BALANCE","nodeType":"VariableDeclaration","scope":4806,"src":"117908:63:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4794,"name":"uint256","nodeType":"ElementaryTypeName","src":"117908:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353238","id":4795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"117968:3:0","typeDescriptions":{"typeIdentifier":"t_rational_528_by_1","typeString":"int_const 528"},"value":"528"},"visibility":"internal"},{"constant":true,"id":4799,"mutability":"constant","name":"SWAP_FEE_PERCENTAGE_TOO_HIGH","nodeType":"VariableDeclaration","scope":4806,"src":"117993:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4797,"name":"uint256","nodeType":"ElementaryTypeName","src":"117993:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"363030","id":4798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"118050:3:0","typeDescriptions":{"typeIdentifier":"t_rational_600_by_1","typeString":"int_const 600"},"value":"600"},"visibility":"internal"},{"constant":true,"id":4802,"mutability":"constant","name":"FLASH_LOAN_FEE_PERCENTAGE_TOO_HIGH","nodeType":"VariableDeclaration","scope":4806,"src":"118060:66:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4800,"name":"uint256","nodeType":"ElementaryTypeName","src":"118060:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"363031","id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"118123:3:0","typeDescriptions":{"typeIdentifier":"t_rational_601_by_1","typeString":"int_const 601"},"value":"601"},"visibility":"internal"},{"constant":true,"id":4805,"mutability":"constant","name":"INSUFFICIENT_FLASH_LOAN_FEE_AMOUNT","nodeType":"VariableDeclaration","scope":4806,"src":"118133:66:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4803,"name":"uint256","nodeType":"ElementaryTypeName","src":"118133:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"363032","id":4804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"118196:3:0","typeDescriptions":{"typeIdentifier":"t_rational_602_by_1","typeString":"int_const 602"},"value":"602"},"visibility":"internal"}],"scope":10227,"src":"109835:8368:0"},{"id":4807,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"118211:23:0"},{"body":{"id":4817,"nodeType":"Block","src":"118345:106:0","statements":[{"AST":{"nodeType":"YulBlock","src":"118414:34:0","statements":[{"nodeType":"YulAssignment","src":"118425:16:0","value":{"name":"tokens","nodeType":"YulIdentifier","src":"118435:6:0"},"variableNames":[{"name":"assets","nodeType":"YulIdentifier","src":"118425:6:0"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":4814,"isOffset":false,"isSlot":false,"src":"118425:6:0","valueSize":1},{"declaration":4810,"isOffset":false,"isSlot":false,"src":"118435:6:0","valueSize":1}],"id":4816,"nodeType":"InlineAssembly","src":"118405:43:0"}]},"id":4818,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_asIAsset","nodeType":"FunctionDefinition","parameters":{"id":4811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4810,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":4818,"src":"118283:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":4808,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"118283:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":4809,"nodeType":"ArrayTypeName","src":"118283:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"118282:24:0"},"returnParameters":{"id":4815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4814,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":4818,"src":"118321:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$6431_$dyn_memory_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":4812,"name":"IAsset","nodeType":"UserDefinedTypeName","referencedDeclaration":6431,"src":"118321:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$6431","typeString":"contract IAsset"}},"id":4813,"nodeType":"ArrayTypeName","src":"118321:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$6431_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"}],"src":"118320:24:0"},"scope":10227,"src":"118264:187:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4868,"nodeType":"Block","src":"118577:259:0","statements":[{"assignments":[4831,4833,4835],"declarations":[{"constant":false,"id":4831,"mutability":"mutable","name":"indexTokenA","nodeType":"VariableDeclaration","scope":4868,"src":"118585:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4830,"name":"uint256","nodeType":"ElementaryTypeName","src":"118585:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4833,"mutability":"mutable","name":"indexTokenB","nodeType":"VariableDeclaration","scope":4868,"src":"118606:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"118606:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4835,"mutability":"mutable","name":"indexTokenC","nodeType":"VariableDeclaration","scope":4868,"src":"118627:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4834,"name":"uint256","nodeType":"ElementaryTypeName","src":"118627:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4841,"initialValue":{"arguments":[{"id":4837,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"118673:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},{"id":4838,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"118681:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},{"id":4839,"name":"tokenC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"118689:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}],"id":4836,"name":"_getSortedTokenIndexes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"118650:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_contract$_IERC20_$486_$_t_contract$_IERC20_$486_$_t_contract$_IERC20_$486_$returns$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (contract IERC20,contract IERC20,contract IERC20) pure returns (uint256,uint256,uint256)"}},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"118650:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"118584:112:0"},{"expression":{"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4842,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"118703:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"33","id":4846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"118725:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":4845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"118712:12:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (contract IERC20[] memory)"},"typeName":{"baseType":{"id":4843,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"118716:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":4844,"nodeType":"ArrayTypeName","src":"118716:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_storage_ptr","typeString":"contract IERC20[]"}}},"id":4847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"118712:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"src":"118703:24:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":4849,"nodeType":"ExpressionStatement","src":"118703:24:0"},{"expression":{"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4850,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"118734:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":4852,"indexExpression":{"id":4851,"name":"indexTokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"118741:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"118734:19:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4853,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"118756:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"118734:28:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":4855,"nodeType":"ExpressionStatement","src":"118734:28:0"},{"expression":{"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4856,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"118769:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":4858,"indexExpression":{"id":4857,"name":"indexTokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"118776:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"118769:19:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4859,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"118791:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"118769:28:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":4861,"nodeType":"ExpressionStatement","src":"118769:28:0"},{"expression":{"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4862,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"118804:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":4864,"indexExpression":{"id":4863,"name":"indexTokenC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"118811:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"118804:19:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4865,"name":"tokenC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"118826:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"118804:28:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":4867,"nodeType":"ExpressionStatement","src":"118804:28:0"}]},"id":4869,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_sortTokens","nodeType":"FunctionDefinition","parameters":{"id":4825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4820,"mutability":"mutable","name":"tokenA","nodeType":"VariableDeclaration","scope":4869,"src":"118482:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":4819,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"118482:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4822,"mutability":"mutable","name":"tokenB","nodeType":"VariableDeclaration","scope":4869,"src":"118502:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":4821,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"118502:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4824,"mutability":"mutable","name":"tokenC","nodeType":"VariableDeclaration","scope":4869,"src":"118522:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":4823,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"118522:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"118475:63:0"},"returnParameters":{"id":4829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4828,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":4869,"src":"118553:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":4826,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"118553:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":4827,"nodeType":"ArrayTypeName","src":"118553:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"118552:24:0"},"scope":10227,"src":"118455:381:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4963,"nodeType":"Block","src":"118939:338:0","statements":[{"expression":{"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4880,"name":"sorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"118946:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4884,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"118968:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"118968:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"118984:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"118968:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"118955:12:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (contract IERC20[] memory)"},"typeName":{"baseType":{"id":4881,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"118959:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":4882,"nodeType":"ArrayTypeName","src":"118959:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_storage_ptr","typeString":"contract IERC20[]"}}},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"118955:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"src":"118946:40:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":4890,"nodeType":"ExpressionStatement","src":"118946:40:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4891,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"118999:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"118999:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"119016:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"118999:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4904,"nodeType":"IfStatement","src":"118995:84:0","trueBody":{"id":4903,"nodeType":"Block","src":"119019:60:0","statements":[{"expression":{"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4895,"name":"sorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"119030:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":4897,"indexExpression":{"hexValue":"30","id":4896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"119037:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"119030:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4898,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"119042:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"119030:17:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":4900,"nodeType":"ExpressionStatement","src":"119030:17:0"},{"expression":{"id":4901,"name":"sorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"119065:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"functionReturnParameters":4879,"id":4902,"nodeType":"Return","src":"119058:13:0"}]}},{"assignments":[4906],"declarations":[{"constant":false,"id":4906,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":4963,"src":"119087:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4905,"name":"uint256","nodeType":"ElementaryTypeName","src":"119087:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4907,"nodeType":"VariableDeclarationStatement","src":"119087:9:0"},{"body":{"expression":{"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4927,"name":"sorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"119164:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":4929,"indexExpression":{"id":4928,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"119171:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"119164:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4930,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"119176:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":4934,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4931,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"119183:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"119187:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"119183:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"119176:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"119164:25:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":4936,"nodeType":"ExpressionStatement","src":"119164:25:0"},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4913,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"119127:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"119131:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"119127:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4916,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"119136:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":4920,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4917,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"119143:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"119147:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"119143:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"119136:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4921,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"119152:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"119136:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"119127:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4937,"initializationExpression":{"expression":{"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4908,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"119108:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4909,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"119112:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"119112:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"119108:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4912,"nodeType":"ExpressionStatement","src":"119108:17:0"},"loopExpression":{"expression":{"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"119159:3:0","subExpression":{"id":4924,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"119159:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4926,"nodeType":"ExpressionStatement","src":"119159:3:0"},"nodeType":"ForStatement","src":"119103:86:0"},{"body":{"expression":{"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4948,"name":"sorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"119228:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":4950,"indexExpression":{"id":4949,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"119235:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"119228:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4951,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"119240:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":4953,"indexExpression":{"id":4952,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"119247:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"119240:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"119228:21:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":4955,"nodeType":"ExpressionStatement","src":"119228:21:0"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4942,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"119216:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4943,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"119220:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"119216:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4956,"initializationExpression":{"assignments":[4939],"declarations":[{"constant":false,"id":4939,"mutability":"mutable","name":"j","nodeType":"VariableDeclaration","scope":4956,"src":"119201:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4938,"name":"uint256","nodeType":"ElementaryTypeName","src":"119201:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4941,"initialValue":{"hexValue":"30","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"119213:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"119201:13:0"},"loopExpression":{"expression":{"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"119223:3:0","subExpression":{"id":4945,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"119223:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4947,"nodeType":"ExpressionStatement","src":"119223:3:0"},"nodeType":"ForStatement","src":"119196:53:0"},{"expression":{"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4957,"name":"sorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"119256:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"id":4959,"indexExpression":{"id":4958,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"119263:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"119256:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4960,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"119268:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"119256:17:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":4962,"nodeType":"ExpressionStatement","src":"119256:17:0"}]},"id":4964,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_insertSorted","nodeType":"FunctionDefinition","parameters":{"id":4875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4872,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":4964,"src":"118863:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":4870,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"118863:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":4871,"nodeType":"ArrayTypeName","src":"118863:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":4874,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":4964,"src":"118887:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":4873,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"118887:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"118862:38:0"},"returnParameters":{"id":4879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4878,"mutability":"mutable","name":"sorted","nodeType":"VariableDeclaration","scope":4964,"src":"118915:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":4876,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"118915:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":4877,"nodeType":"ArrayTypeName","src":"118915:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"118914:24:0"},"scope":10227,"src":"118840:437:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5037,"nodeType":"Block","src":"119498:713:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4979,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"119509:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4980,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"119518:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"119509:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5035,"nodeType":"Block","src":"119856:352:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5009,"name":"tokenC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"119899:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5010,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"119908:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"119899:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5018,"name":"tokenC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"120010:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5019,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"120019:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"120010:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5032,"nodeType":"Block","src":"120117:84:0","statements":[{"expression":{"components":[{"hexValue":"31","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"120181:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"30","id":5028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"120184:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"32","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"120187:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"id":5030,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"120180:9:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_1_by_1_$_t_rational_0_by_1_$_t_rational_2_by_1_$","typeString":"tuple(int_const 1,int_const 0,int_const 2)"}},"functionReturnParameters":4978,"id":5031,"nodeType":"Return","src":"120173:16:0"}]},"id":5033,"nodeType":"IfStatement","src":"120006:195:0","trueBody":{"id":5026,"nodeType":"Block","src":"120027:84:0","statements":[{"expression":{"components":[{"hexValue":"32","id":5021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"120091:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},{"hexValue":"30","id":5022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"120094:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"31","id":5023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"120097:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"id":5024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"120090:9:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_2_by_1_$_t_rational_0_by_1_$_t_rational_1_by_1_$","typeString":"tuple(int_const 2,int_const 0,int_const 1)"}},"functionReturnParameters":4978,"id":5025,"nodeType":"Return","src":"120083:16:0"}]}},"id":5034,"nodeType":"IfStatement","src":"119895:306:0","trueBody":{"id":5017,"nodeType":"Block","src":"119916:84:0","statements":[{"expression":{"components":[{"hexValue":"32","id":5012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"119980:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},{"hexValue":"31","id":5013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"119983:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"30","id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"119986:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5015,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"119979:9:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_2_by_1_$_t_rational_1_by_1_$_t_rational_0_by_1_$","typeString":"tuple(int_const 2,int_const 1,int_const 0)"}},"functionReturnParameters":4978,"id":5016,"nodeType":"Return","src":"119972:16:0"}]}}]},"id":5036,"nodeType":"IfStatement","src":"119505:703:0","trueBody":{"id":5008,"nodeType":"Block","src":"119526:324:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4982,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"119541:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4983,"name":"tokenC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"119550:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"119541:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4991,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"119652:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4992,"name":"tokenC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"119661:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"src":"119652:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5005,"nodeType":"Block","src":"119759:84:0","statements":[{"expression":{"components":[{"hexValue":"31","id":5000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"119823:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"32","id":5001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"119826:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},{"hexValue":"30","id":5002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"119829:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5003,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"119822:9:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_1_by_1_$_t_rational_2_by_1_$_t_rational_0_by_1_$","typeString":"tuple(int_const 1,int_const 2,int_const 0)"}},"functionReturnParameters":4978,"id":5004,"nodeType":"Return","src":"119815:16:0"}]},"id":5006,"nodeType":"IfStatement","src":"119648:195:0","trueBody":{"id":4999,"nodeType":"Block","src":"119669:84:0","statements":[{"expression":{"components":[{"hexValue":"30","id":4994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"119733:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"32","id":4995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"119736:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},{"hexValue":"31","id":4996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"119739:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"id":4997,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"119732:9:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_rational_2_by_1_$_t_rational_1_by_1_$","typeString":"tuple(int_const 0,int_const 2,int_const 1)"}},"functionReturnParameters":4978,"id":4998,"nodeType":"Return","src":"119725:16:0"}]}},"id":5007,"nodeType":"IfStatement","src":"119537:306:0","trueBody":{"id":4990,"nodeType":"Block","src":"119558:84:0","statements":[{"expression":{"components":[{"hexValue":"30","id":4985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"119622:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"31","id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"119625:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"32","id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"119628:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"id":4988,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"119621:9:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_rational_1_by_1_$_t_rational_2_by_1_$","typeString":"tuple(int_const 0,int_const 1,int_const 2)"}},"functionReturnParameters":4978,"id":4989,"nodeType":"Return","src":"119614:16:0"}]}}]}}]},"id":5038,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_getSortedTokenIndexes","nodeType":"FunctionDefinition","parameters":{"id":4971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4966,"mutability":"mutable","name":"tokenA","nodeType":"VariableDeclaration","scope":5038,"src":"119319:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":4965,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"119319:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4968,"mutability":"mutable","name":"tokenB","nodeType":"VariableDeclaration","scope":5038,"src":"119339:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":4967,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"119339:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":4970,"mutability":"mutable","name":"tokenC","nodeType":"VariableDeclaration","scope":5038,"src":"119359:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":4969,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"119359:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"119312:63:0"},"returnParameters":{"id":4978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4973,"mutability":"mutable","name":"indexTokenA","nodeType":"VariableDeclaration","scope":5038,"src":"119410:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4972,"name":"uint256","nodeType":"ElementaryTypeName","src":"119410:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4975,"mutability":"mutable","name":"indexTokenB","nodeType":"VariableDeclaration","scope":5038,"src":"119440:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4974,"name":"uint256","nodeType":"ElementaryTypeName","src":"119440:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4977,"mutability":"mutable","name":"indexTokenC","nodeType":"VariableDeclaration","scope":5038,"src":"119470:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4976,"name":"uint256","nodeType":"ElementaryTypeName","src":"119470:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"119399:97:0"},"scope":10227,"src":"119281:930:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":5039,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"120221:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":5377,"linearizedBaseContracts":[5377],"name":"FixedPoint","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5042,"mutability":"constant","name":"ONE","nodeType":"VariableDeclaration","scope":5377,"src":"120333:36:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5040,"name":"uint256","nodeType":"ElementaryTypeName","src":"120333:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653138","id":5041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"120365:4:0","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"internal"},{"constant":true,"id":5045,"mutability":"constant","name":"MAX_POW_RELATIVE_ERROR","nodeType":"VariableDeclaration","scope":5377,"src":"120397:56:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5043,"name":"uint256","nodeType":"ElementaryTypeName","src":"120397:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":5044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"120448:5:0","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"internal"},{"constant":true,"id":5048,"mutability":"constant","name":"MIN_POW_BASE_FREE_EXPONENT","nodeType":"VariableDeclaration","scope":5377,"src":"120565:61:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5046,"name":"uint256","nodeType":"ElementaryTypeName","src":"120565:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e37653138","id":5047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"120620:6:0","typeDescriptions":{"typeIdentifier":"t_rational_700000000000000000_by_1","typeString":"int_const 700000000000000000"},"value":"0.7e18"},"visibility":"internal"},{"body":{"id":5073,"nodeType":"Block","src":"120702:178:0","statements":[{"assignments":[5058],"declarations":[{"constant":false,"id":5058,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":5073,"src":"120788:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5057,"name":"uint256","nodeType":"ElementaryTypeName","src":"120788:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5062,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5059,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"120800:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5060,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"120804:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"120800:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"120788:17:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5064,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5058,"src":"120825:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5065,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"120830:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"120825:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5067,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"120833:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ADD_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4394,"src":"120833:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5063,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"120816:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"120816:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5070,"nodeType":"ExpressionStatement","src":"120816:37:0"},{"expression":{"id":5071,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5058,"src":"120871:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5056,"id":5072,"nodeType":"Return","src":"120864:8:0"}]},"id":5074,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":5053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5050,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5074,"src":"120648:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5049,"name":"uint256","nodeType":"ElementaryTypeName","src":"120648:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5052,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5074,"src":"120659:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5051,"name":"uint256","nodeType":"ElementaryTypeName","src":"120659:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"120647:22:0"},"returnParameters":{"id":5056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5055,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5074,"src":"120693:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5054,"name":"uint256","nodeType":"ElementaryTypeName","src":"120693:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"120692:9:0"},"scope":5377,"src":"120635:245:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5099,"nodeType":"Block","src":"120955:178:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5084,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"121050:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5085,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"121055:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121050:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5087,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"121058:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SUB_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4397,"src":"121058:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5083,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"121041:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"121041:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5090,"nodeType":"ExpressionStatement","src":"121041:37:0"},{"assignments":[5092],"declarations":[{"constant":false,"id":5092,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":5099,"src":"121089:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5091,"name":"uint256","nodeType":"ElementaryTypeName","src":"121089:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5096,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5093,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"121101:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5094,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"121105:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121101:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"121089:17:0"},{"expression":{"id":5097,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"121124:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5082,"id":5098,"nodeType":"Return","src":"121117:8:0"}]},"id":5100,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":5079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5076,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5100,"src":"120901:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5075,"name":"uint256","nodeType":"ElementaryTypeName","src":"120901:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5078,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5100,"src":"120912:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5077,"name":"uint256","nodeType":"ElementaryTypeName","src":"120912:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"120900:22:0"},"returnParameters":{"id":5082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5081,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5100,"src":"120946:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5080,"name":"uint256","nodeType":"ElementaryTypeName","src":"120946:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"120945:9:0"},"scope":5377,"src":"120888:245:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5133,"nodeType":"Block","src":"121212:143:0","statements":[{"assignments":[5110],"declarations":[{"constant":false,"id":5110,"mutability":"mutable","name":"product","nodeType":"VariableDeclaration","scope":5133,"src":"121223:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5109,"name":"uint256","nodeType":"ElementaryTypeName","src":"121223:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5114,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5111,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"121241:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5112,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"121245:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121241:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"121223:23:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5116,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"121266:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"121271:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"121266:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5119,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"121276:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5120,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"121286:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121276:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5122,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"121291:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121276:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"121266:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5125,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"121294:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MUL_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4403,"src":"121294:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5115,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"121257:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"121257:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5128,"nodeType":"ExpressionStatement","src":"121257:57:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5129,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"121334:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5130,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"121344:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121334:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5108,"id":5132,"nodeType":"Return","src":"121327:20:0"}]},"id":5134,"implemented":true,"kind":"function","modifiers":[],"name":"mulDown","nodeType":"FunctionDefinition","parameters":{"id":5105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5102,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5134,"src":"121158:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5101,"name":"uint256","nodeType":"ElementaryTypeName","src":"121158:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5104,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5134,"src":"121169:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5103,"name":"uint256","nodeType":"ElementaryTypeName","src":"121169:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"121157:22:0"},"returnParameters":{"id":5108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5107,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5134,"src":"121203:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5106,"name":"uint256","nodeType":"ElementaryTypeName","src":"121203:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"121202:9:0"},"scope":5377,"src":"121141:214:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5181,"nodeType":"Block","src":"121432:563:0","statements":[{"assignments":[5144],"declarations":[{"constant":false,"id":5144,"mutability":"mutable","name":"product","nodeType":"VariableDeclaration","scope":5181,"src":"121443:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5143,"name":"uint256","nodeType":"ElementaryTypeName","src":"121443:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5148,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5145,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"121461:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5146,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"121465:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121461:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"121443:23:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5150,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"121486:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"121491:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"121486:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5153,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"121496:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5154,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"121506:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121496:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5156,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"121511:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121496:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"121486:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5159,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"121514:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MUL_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4403,"src":"121514:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5149,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"121477:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"121477:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5162,"nodeType":"ExpressionStatement","src":"121477:57:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5163,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"121551:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"121562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"121551:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5179,"nodeType":"Block","src":"121606:382:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5169,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"121953:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"121963:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"121953:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5172,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"121952:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5173,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"121968:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"121952:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5175,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"121951:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"121975:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"121951:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5142,"id":5178,"nodeType":"Return","src":"121944:32:0"}]},"id":5180,"nodeType":"IfStatement","src":"121547:441:0","trueBody":{"id":5168,"nodeType":"Block","src":"121565:35:0","statements":[{"expression":{"hexValue":"30","id":5166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"121587:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5142,"id":5167,"nodeType":"Return","src":"121580:8:0"}]}}]},"id":5182,"implemented":true,"kind":"function","modifiers":[],"name":"mulUp","nodeType":"FunctionDefinition","parameters":{"id":5139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5136,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5182,"src":"121378:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5135,"name":"uint256","nodeType":"ElementaryTypeName","src":"121378:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5138,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5182,"src":"121389:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5137,"name":"uint256","nodeType":"ElementaryTypeName","src":"121389:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"121377:22:0"},"returnParameters":{"id":5142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5141,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5182,"src":"121423:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5140,"name":"uint256","nodeType":"ElementaryTypeName","src":"121423:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"121422:9:0"},"scope":5377,"src":"121363:632:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5227,"nodeType":"Block","src":"122074:295:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5192,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"122094:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"122099:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"122094:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5195,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"122102:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ZERO_DIVISION","nodeType":"MemberAccess","referencedDeclaration":4406,"src":"122102:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5191,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"122085:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"122085:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5198,"nodeType":"ExpressionStatement","src":"122085:38:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5199,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"122140:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"122145:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"122140:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5225,"nodeType":"Block","src":"122189:173:0","statements":[{"assignments":[5206],"declarations":[{"constant":false,"id":5206,"mutability":"mutable","name":"aInflated","nodeType":"VariableDeclaration","scope":5225,"src":"122204:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5205,"name":"uint256","nodeType":"ElementaryTypeName","src":"122204:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5210,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5207,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"122224:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5208,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"122228:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"122224:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"122204:27:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5212,"name":"aInflated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"122255:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5213,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"122267:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"122255:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5215,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"122272:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"122255:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5217,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"122277:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"DIV_INTERNAL","nodeType":"MemberAccess","referencedDeclaration":4409,"src":"122277:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5211,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"122246:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"122246:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5220,"nodeType":"ExpressionStatement","src":"122246:51:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5221,"name":"aInflated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"122337:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5222,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5186,"src":"122349:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"122337:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5190,"id":5224,"nodeType":"Return","src":"122330:20:0"}]},"id":5226,"nodeType":"IfStatement","src":"122136:226:0","trueBody":{"id":5204,"nodeType":"Block","src":"122148:35:0","statements":[{"expression":{"hexValue":"30","id":5202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"122170:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5190,"id":5203,"nodeType":"Return","src":"122163:8:0"}]}}]},"id":5228,"implemented":true,"kind":"function","modifiers":[],"name":"divDown","nodeType":"FunctionDefinition","parameters":{"id":5187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5184,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5228,"src":"122020:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5183,"name":"uint256","nodeType":"ElementaryTypeName","src":"122020:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5186,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5228,"src":"122031:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5185,"name":"uint256","nodeType":"ElementaryTypeName","src":"122031:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"122019:22:0"},"returnParameters":{"id":5190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5189,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5228,"src":"122065:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5188,"name":"uint256","nodeType":"ElementaryTypeName","src":"122065:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"122064:9:0"},"scope":5377,"src":"122003:366:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5279,"nodeType":"Block","src":"122446:630:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5238,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"122466:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"122471:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"122466:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5241,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"122474:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ZERO_DIVISION","nodeType":"MemberAccess","referencedDeclaration":4406,"src":"122474:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5237,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"122457:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"122457:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5244,"nodeType":"ExpressionStatement","src":"122457:38:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5245,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"122512:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"122517:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"122512:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5277,"nodeType":"Block","src":"122561:508:0","statements":[{"assignments":[5252],"declarations":[{"constant":false,"id":5252,"mutability":"mutable","name":"aInflated","nodeType":"VariableDeclaration","scope":5277,"src":"122576:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5251,"name":"uint256","nodeType":"ElementaryTypeName","src":"122576:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5256,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5253,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"122596:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5254,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"122600:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"122596:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"122576:27:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5258,"name":"aInflated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"122627:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5259,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"122639:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"122627:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5261,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"122644:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"122627:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5263,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"122649:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"DIV_INTERNAL","nodeType":"MemberAccess","referencedDeclaration":4409,"src":"122649:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5257,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"122618:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"122618:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5266,"nodeType":"ExpressionStatement","src":"122618:51:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5267,"name":"aInflated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"123034:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"123046:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"123034:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5270,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"123033:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5271,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"123051:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"123033:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5273,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"123032:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"123056:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"123032:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5236,"id":5276,"nodeType":"Return","src":"123025:32:0"}]},"id":5278,"nodeType":"IfStatement","src":"122508:561:0","trueBody":{"id":5250,"nodeType":"Block","src":"122520:35:0","statements":[{"expression":{"hexValue":"30","id":5248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"122542:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5236,"id":5249,"nodeType":"Return","src":"122535:8:0"}]}}]},"id":5280,"implemented":true,"kind":"function","modifiers":[],"name":"divUp","nodeType":"FunctionDefinition","parameters":{"id":5233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5230,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5280,"src":"122392:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5229,"name":"uint256","nodeType":"ElementaryTypeName","src":"122392:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5232,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":5280,"src":"122403:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5231,"name":"uint256","nodeType":"ElementaryTypeName","src":"122403:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"122391:22:0"},"returnParameters":{"id":5236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5235,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5280,"src":"122437:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5234,"name":"uint256","nodeType":"ElementaryTypeName","src":"122437:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"122436:9:0"},"scope":5377,"src":"122377:699:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5321,"nodeType":"Block","src":"123385:250:0","statements":[{"assignments":[5291],"declarations":[{"constant":false,"id":5291,"mutability":"mutable","name":"raw","nodeType":"VariableDeclaration","scope":5321,"src":"123396:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5290,"name":"uint256","nodeType":"ElementaryTypeName","src":"123396:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5297,"initialValue":{"arguments":[{"id":5294,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"123425:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5295,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"123428:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5292,"name":"LogExpMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7727,"src":"123410:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LogExpMath_$7727_$","typeString":"type(library LogExpMath)"}},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pow","nodeType":"MemberAccess","referencedDeclaration":6671,"src":"123410:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"123410:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"123396:34:0"},{"assignments":[5299],"declarations":[{"constant":false,"id":5299,"mutability":"mutable","name":"maxError","nodeType":"VariableDeclaration","scope":5321,"src":"123441:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5298,"name":"uint256","nodeType":"ElementaryTypeName","src":"123441:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5307,"initialValue":{"arguments":[{"arguments":[{"id":5302,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"123470:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5303,"name":"MAX_POW_RELATIVE_ERROR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"123475:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5301,"name":"mulUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"123464:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"123464:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":5305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"123500:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":5300,"name":"add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"123460:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"123460:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"123441:61:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5308,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"123519:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5309,"name":"maxError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5299,"src":"123525:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"123519:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5319,"nodeType":"Block","src":"123576:52:0","statements":[{"expression":{"arguments":[{"id":5315,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"123602:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5316,"name":"maxError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5299,"src":"123607:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5314,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"123598:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"123598:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5289,"id":5318,"nodeType":"Return","src":"123591:25:0"}]},"id":5320,"nodeType":"IfStatement","src":"123515:113:0","trueBody":{"id":5313,"nodeType":"Block","src":"123535:35:0","statements":[{"expression":{"hexValue":"30","id":5311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"123557:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5289,"id":5312,"nodeType":"Return","src":"123550:8:0"}]}}]},"documentation":{"id":5281,"nodeType":"StructuredDocumentation","src":"123084:224:0","text":" @dev Returns x^y, assuming both are fixed point numbers, rounding down. The result is guaranteed to not be above\n the true value (that is, the error function expected - actual is always positive)."},"id":5322,"implemented":true,"kind":"function","modifiers":[],"name":"powDown","nodeType":"FunctionDefinition","parameters":{"id":5286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5283,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":5322,"src":"123331:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5282,"name":"uint256","nodeType":"ElementaryTypeName","src":"123331:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5285,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":5322,"src":"123342:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5284,"name":"uint256","nodeType":"ElementaryTypeName","src":"123342:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"123330:22:0"},"returnParameters":{"id":5289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5288,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5322,"src":"123376:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5287,"name":"uint256","nodeType":"ElementaryTypeName","src":"123376:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"123375:9:0"},"scope":5377,"src":"123314:321:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5355,"nodeType":"Block","src":"123940:163:0","statements":[{"assignments":[5333],"declarations":[{"constant":false,"id":5333,"mutability":"mutable","name":"raw","nodeType":"VariableDeclaration","scope":5355,"src":"123951:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5332,"name":"uint256","nodeType":"ElementaryTypeName","src":"123951:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5339,"initialValue":{"arguments":[{"id":5336,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"123980:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5337,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5327,"src":"123983:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5334,"name":"LogExpMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7727,"src":"123965:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LogExpMath_$7727_$","typeString":"type(library LogExpMath)"}},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pow","nodeType":"MemberAccess","referencedDeclaration":6671,"src":"123965:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"123965:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"123951:34:0"},{"assignments":[5341],"declarations":[{"constant":false,"id":5341,"mutability":"mutable","name":"maxError","nodeType":"VariableDeclaration","scope":5355,"src":"123996:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5340,"name":"uint256","nodeType":"ElementaryTypeName","src":"123996:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5349,"initialValue":{"arguments":[{"arguments":[{"id":5344,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"124025:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5345,"name":"MAX_POW_RELATIVE_ERROR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"124030:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5343,"name":"mulUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"124019:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"124019:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":5347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"124055:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":5342,"name":"add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"124015:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"124015:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"123996:61:0"},{"expression":{"arguments":[{"id":5351,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"124081:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5352,"name":"maxError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5341,"src":"124086:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5350,"name":"add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"124077:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"124077:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5331,"id":5354,"nodeType":"Return","src":"124070:25:0"}]},"documentation":{"id":5323,"nodeType":"StructuredDocumentation","src":"123643:222:0","text":" @dev Returns x^y, assuming both are fixed point numbers, rounding up. The result is guaranteed to not be below\n the true value (that is, the error function expected - actual is always negative)."},"id":5356,"implemented":true,"kind":"function","modifiers":[],"name":"powUp","nodeType":"FunctionDefinition","parameters":{"id":5328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5325,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":5356,"src":"123886:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5324,"name":"uint256","nodeType":"ElementaryTypeName","src":"123886:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5327,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":5356,"src":"123897:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5326,"name":"uint256","nodeType":"ElementaryTypeName","src":"123897:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"123885:22:0"},"returnParameters":{"id":5331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5330,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5356,"src":"123931:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5329,"name":"uint256","nodeType":"ElementaryTypeName","src":"123931:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"123930:9:0"},"scope":5377,"src":"123871:232:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5375,"nodeType":"Block","src":"124457:51:0","statements":[{"expression":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5364,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"124476:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5365,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"124480:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"124476:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5367,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"124475:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"124499:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"124475:25:0","trueExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5368,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"124488:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5369,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5359,"src":"124494:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"124488:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"124487:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5363,"id":5374,"nodeType":"Return","src":"124468:32:0"}]},"documentation":{"id":5357,"nodeType":"StructuredDocumentation","src":"124111:277:0","text":" @dev Returns the complement of a value (1 - x), capped to 0 if x is larger than 1.\n Useful when computing the complement for values with some level of relative error, as it strips this error and\n prevents intermediate negative values."},"id":5376,"implemented":true,"kind":"function","modifiers":[],"name":"complement","nodeType":"FunctionDefinition","parameters":{"id":5360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5359,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":5376,"src":"124414:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5358,"name":"uint256","nodeType":"ElementaryTypeName","src":"124414:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"124413:11:0"},"returnParameters":{"id":5363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5362,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5376,"src":"124448:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5361,"name":"uint256","nodeType":"ElementaryTypeName","src":"124448:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"124447:9:0"},"scope":5377,"src":"124394:114:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10227,"src":"120307:4204:0"},{"id":5378,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"124521:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":5379,"nodeType":"StructuredDocumentation","src":"124550:644:0","text":" Price rate caches are used to avoid querying the price rate for a token every time we need to work with it. It is\n useful for slow changing rates, such as those that arise from interest-bearing tokens (e.g. waDAI into DAI).\n The cache data is packed into a single bytes32 value with the following structure:\n [   expires   | duration | price rate value ]\n [   uint64    |  uint64  |      uint128     ]\n [ MSB                                   LSB ]\n 'rate' is an 18 decimal fixed point number, supporting rates of up to ~3e20. 'expires' is a Unix timestamp, and\n 'duration' is expressed in seconds."},"fullyImplemented":true,"id":5524,"linearizedBaseContracts":[5524],"name":"PriceRateCache","nodeType":"ContractDefinition","nodes":[{"id":5382,"libraryName":{"id":5380,"name":"WordCodec","nodeType":"UserDefinedTypeName","referencedDeclaration":9014,"src":"125232:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_WordCodec_$9014","typeString":"library WordCodec"}},"nodeType":"UsingForDirective","src":"125226:28:0","typeName":{"id":5381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"125246:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":true,"id":5385,"mutability":"constant","name":"_PRICE_RATE_CACHE_VALUE_OFFSET","nodeType":"VariableDeclaration","scope":5524,"src":"125262:59:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5383,"name":"uint256","nodeType":"ElementaryTypeName","src":"125262:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":5384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"125320:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"constant":true,"id":5388,"mutability":"constant","name":"_PRICE_RATE_CACHE_DURATION_OFFSET","nodeType":"VariableDeclaration","scope":5524,"src":"125328:64:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5386,"name":"uint256","nodeType":"ElementaryTypeName","src":"125328:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313238","id":5387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"125389:3:0","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"visibility":"private"},{"constant":true,"id":5393,"mutability":"constant","name":"_PRICE_RATE_CACHE_EXPIRES_OFFSET","nodeType":"VariableDeclaration","scope":5524,"src":"125399:68:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5389,"name":"uint256","nodeType":"ElementaryTypeName","src":"125399:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"id":5392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":5390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"125459:3:0","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3634","id":5391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"125465:2:0","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"125459:8:0","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"}},"visibility":"private"},{"body":{"id":5406,"nodeType":"Block","src":"125611:77:0","statements":[{"expression":{"arguments":[{"id":5403,"name":"_PRICE_RATE_CACHE_VALUE_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"125649:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5401,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5396,"src":"125629:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decodeUint128","nodeType":"MemberAccess","referencedDeclaration":8935,"src":"125629:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_uint256_$bound_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (uint256)"}},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"125629:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5400,"id":5405,"nodeType":"Return","src":"125622:58:0"}]},"documentation":{"id":5394,"nodeType":"StructuredDocumentation","src":"125476:65:0","text":" @dev Returns the rate of a price rate cache."},"id":5407,"implemented":true,"kind":"function","modifiers":[],"name":"getRate","nodeType":"FunctionDefinition","parameters":{"id":5397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5396,"mutability":"mutable","name":"cache","nodeType":"VariableDeclaration","scope":5407,"src":"125564:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5395,"name":"bytes32","nodeType":"ElementaryTypeName","src":"125564:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"125563:15:0"},"returnParameters":{"id":5400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5399,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5407,"src":"125602:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5398,"name":"uint256","nodeType":"ElementaryTypeName","src":"125602:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"125601:9:0"},"scope":5524,"src":"125547:141:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5420,"nodeType":"Block","src":"125839:79:0","statements":[{"expression":{"arguments":[{"id":5417,"name":"_PRICE_RATE_CACHE_DURATION_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"125876:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5415,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"125857:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decodeUint64","nodeType":"MemberAccess","referencedDeclaration":8895,"src":"125857:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_uint256_$bound_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (uint256)"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"125857:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5414,"id":5419,"nodeType":"Return","src":"125850:60:0"}]},"documentation":{"id":5408,"nodeType":"StructuredDocumentation","src":"125696:69:0","text":" @dev Returns the duration of a price rate cache."},"id":5421,"implemented":true,"kind":"function","modifiers":[],"name":"getDuration","nodeType":"FunctionDefinition","parameters":{"id":5411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5410,"mutability":"mutable","name":"cache","nodeType":"VariableDeclaration","scope":5421,"src":"125792:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"125792:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"125791:15:0"},"returnParameters":{"id":5414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5413,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5421,"src":"125830:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5412,"name":"uint256","nodeType":"ElementaryTypeName","src":"125830:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"125829:9:0"},"scope":5524,"src":"125771:147:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5444,"nodeType":"Block","src":"126117:121:0","statements":[{"expression":{"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5431,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"126128:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5433,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"126151:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5432,"name":"getDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"126139:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"126139:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"126128:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5436,"nodeType":"ExpressionStatement","src":"126128:29:0"},{"expression":{"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5437,"name":"expires","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5429,"src":"126168:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5440,"name":"_PRICE_RATE_CACHE_EXPIRES_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"126197:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5438,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"126178:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decodeUint64","nodeType":"MemberAccess","referencedDeclaration":8895,"src":"126178:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_uint256_$bound_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (uint256)"}},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"126178:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"126168:62:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5443,"nodeType":"ExpressionStatement","src":"126168:62:0"}]},"documentation":{"id":5422,"nodeType":"StructuredDocumentation","src":"125926:89:0","text":" @dev Returns the duration and expiration time of a price rate cache."},"id":5445,"implemented":true,"kind":"function","modifiers":[],"name":"getTimestamps","nodeType":"FunctionDefinition","parameters":{"id":5425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5424,"mutability":"mutable","name":"cache","nodeType":"VariableDeclaration","scope":5445,"src":"126044:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"126044:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"126043:15:0"},"returnParameters":{"id":5430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5427,"mutability":"mutable","name":"duration","nodeType":"VariableDeclaration","scope":5445,"src":"126082:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5426,"name":"uint256","nodeType":"ElementaryTypeName","src":"126082:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5429,"mutability":"mutable","name":"expires","nodeType":"VariableDeclaration","scope":5445,"src":"126100:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5428,"name":"uint256","nodeType":"ElementaryTypeName","src":"126100:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"126081:35:0"},"scope":5524,"src":"126021:217:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5495,"nodeType":"Block","src":"126495:410:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5456,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"126515:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"126522:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"313238","id":5458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"126525:3:0","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"126522:6:0","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"126515:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5461,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"126530:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"PRICE_RATE_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4559,"src":"126530:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5455,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"126506:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"126506:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5464,"nodeType":"ExpressionStatement","src":"126506:51:0"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5469,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"126664:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"126656:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5467,"name":"uint128","nodeType":"ElementaryTypeName","src":"126656:7:0","typeDescriptions":{}}},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"126656:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":5471,"name":"_PRICE_RATE_CACHE_VALUE_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5385,"src":"126671:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5465,"name":"WordCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9014,"src":"126635:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WordCodec_$9014_$","typeString":"type(library WordCodec)"}},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encodeUint","nodeType":"MemberAccess","referencedDeclaration":8684,"src":"126635:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256,uint256) pure returns (bytes32)"}},"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"126635:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"arguments":[{"id":5477,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"126746:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"126739:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5475,"name":"uint64","nodeType":"ElementaryTypeName","src":"126739:6:0","typeDescriptions":{}}},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"126739:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":5479,"name":"_PRICE_RATE_CACHE_DURATION_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"126757:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5473,"name":"WordCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9014,"src":"126718:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WordCodec_$9014_$","typeString":"type(library WordCodec)"}},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encodeUint","nodeType":"MemberAccess","referencedDeclaration":8684,"src":"126718:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256,uint256) pure returns (bytes32)"}},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"126718:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"126635:156:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5486,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"126835:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"126835:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5488,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"126853:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"126835:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"126828:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5484,"name":"uint64","nodeType":"ElementaryTypeName","src":"126828:6:0","typeDescriptions":{}}},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"126828:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":5491,"name":"_PRICE_RATE_CACHE_EXPIRES_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"126864:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5482,"name":"WordCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9014,"src":"126807:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_WordCodec_$9014_$","typeString":"type(library WordCodec)"}},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encodeUint","nodeType":"MemberAccess","referencedDeclaration":8684,"src":"126807:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256,uint256) pure returns (bytes32)"}},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"126807:90:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"126635:262:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5454,"id":5494,"nodeType":"Return","src":"126615:282:0"}]},"documentation":{"id":5446,"nodeType":"StructuredDocumentation","src":"126246:163:0","text":" @dev Encodes rate and duration into a price rate cache. The expiration time is computed automatically, counting\n from the current time."},"id":5496,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nodeType":"FunctionDefinition","parameters":{"id":5451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5448,"mutability":"mutable","name":"rate","nodeType":"VariableDeclaration","scope":5496,"src":"126431:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5447,"name":"uint256","nodeType":"ElementaryTypeName","src":"126431:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5450,"mutability":"mutable","name":"duration","nodeType":"VariableDeclaration","scope":5496,"src":"126445:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5449,"name":"uint256","nodeType":"ElementaryTypeName","src":"126445:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"126430:32:0"},"returnParameters":{"id":5454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5453,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5496,"src":"126486:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5452,"name":"bytes32","nodeType":"ElementaryTypeName","src":"126486:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"126485:9:0"},"scope":5524,"src":"126415:490:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5522,"nodeType":"Block","src":"127195:93:0","statements":[{"expression":{"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5508,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"127206:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5510,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"127221:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5509,"name":"getRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5407,"src":"127213:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"127213:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"127206:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5513,"nodeType":"ExpressionStatement","src":"127206:21:0"},{"expression":{"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5514,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"127239:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5515,"name":"expires","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"127249:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5516,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"127238:19:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5518,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"127274:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5517,"name":"getTimestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"127260:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256,uint256)"}},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"127260:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"127238:42:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5521,"nodeType":"ExpressionStatement","src":"127238:42:0"}]},"documentation":{"id":5497,"nodeType":"StructuredDocumentation","src":"126913:91:0","text":" @dev Returns rate, duration and expiration time of a price rate cache."},"id":5523,"implemented":true,"kind":"function","modifiers":[],"name":"decode","nodeType":"FunctionDefinition","parameters":{"id":5500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5499,"mutability":"mutable","name":"cache","nodeType":"VariableDeclaration","scope":5523,"src":"127026:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"127026:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"127025:15:0"},"returnParameters":{"id":5507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5502,"mutability":"mutable","name":"rate","nodeType":"VariableDeclaration","scope":5523,"src":"127105:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5501,"name":"uint256","nodeType":"ElementaryTypeName","src":"127105:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5504,"mutability":"mutable","name":"duration","nodeType":"VariableDeclaration","scope":5523,"src":"127132:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5503,"name":"uint256","nodeType":"ElementaryTypeName","src":"127132:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5506,"mutability":"mutable","name":"expires","nodeType":"VariableDeclaration","scope":5523,"src":"127163:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5505,"name":"uint256","nodeType":"ElementaryTypeName","src":"127163:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"127090:99:0"},"scope":5524,"src":"127010:278:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10227,"src":"125196:2095:0"},{"id":5525,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"127297:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":6389,"linearizedBaseContracts":[6389],"name":"LinearMath","nodeType":"ContractDefinition","nodes":[{"id":5528,"libraryName":{"id":5526,"name":"FixedPoint","nodeType":"UserDefinedTypeName","referencedDeclaration":5377,"src":"127552:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_FixedPoint_$5377","typeString":"library FixedPoint"}},"nodeType":"UsingForDirective","src":"127546:29:0","typeName":{"id":5527,"name":"uint256","nodeType":"ElementaryTypeName","src":"127567:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"canonicalName":"LinearMath.Params","id":5535,"members":[{"constant":false,"id":5530,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":5535,"src":"129704:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5529,"name":"uint256","nodeType":"ElementaryTypeName","src":"129704:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5532,"mutability":"mutable","name":"lowerTarget","nodeType":"VariableDeclaration","scope":5535,"src":"129726:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5531,"name":"uint256","nodeType":"ElementaryTypeName","src":"129726:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5534,"mutability":"mutable","name":"upperTarget","nodeType":"VariableDeclaration","scope":5535,"src":"129756:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5533,"name":"uint256","nodeType":"ElementaryTypeName","src":"129756:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Params","nodeType":"StructDefinition","scope":6389,"src":"129679:104:0","visibility":"public"},{"body":{"id":5601,"nodeType":"Block","src":"130007:834:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5550,"name":"bptSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"130074:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"130087:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"130074:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5559,"nodeType":"IfStatement","src":"130070:368:0","trueBody":{"id":5558,"nodeType":"Block","src":"130090:348:0","statements":[{"expression":{"arguments":[{"id":5554,"name":"mainIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"130411:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5555,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"130419:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":5553,"name":"_toNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"130400:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"130400:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5549,"id":5557,"nodeType":"Return","src":"130393:33:0"}]}},{"assignments":[5561],"declarations":[{"constant":false,"id":5561,"mutability":"mutable","name":"previousNominalMain","nodeType":"VariableDeclaration","scope":5601,"src":"130450:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5560,"name":"uint256","nodeType":"ElementaryTypeName","src":"130450:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5566,"initialValue":{"arguments":[{"id":5563,"name":"mainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"130491:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5564,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"130504:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":5562,"name":"_toNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"130480:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"130480:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"130450:61:0"},{"assignments":[5568],"declarations":[{"constant":false,"id":5568,"mutability":"mutable","name":"afterNominalMain","nodeType":"VariableDeclaration","scope":5601,"src":"130522:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5567,"name":"uint256","nodeType":"ElementaryTypeName","src":"130522:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5576,"initialValue":{"arguments":[{"arguments":[{"id":5572,"name":"mainIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"130576:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5570,"name":"mainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"130560:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":5074,"src":"130560:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"130560:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5574,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"130585:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":5569,"name":"_toNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"130549:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"130549:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"130522:70:0"},{"assignments":[5578],"declarations":[{"constant":false,"id":5578,"mutability":"mutable","name":"deltaNominalMain","nodeType":"VariableDeclaration","scope":5601,"src":"130603:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5577,"name":"uint256","nodeType":"ElementaryTypeName","src":"130603:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5583,"initialValue":{"arguments":[{"id":5581,"name":"previousNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"130651:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5579,"name":"afterNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"130630:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"130630:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"130630:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"130603:68:0"},{"assignments":[5585],"declarations":[{"constant":false,"id":5585,"mutability":"mutable","name":"invariant","nodeType":"VariableDeclaration","scope":5601,"src":"130682:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5584,"name":"uint256","nodeType":"ElementaryTypeName","src":"130682:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5590,"initialValue":{"arguments":[{"id":5587,"name":"previousNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"130717:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5588,"name":"wrappedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"130738:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5586,"name":"_calcInvariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"130702:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"130702:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"130682:71:0"},{"expression":{"arguments":[{"arguments":[{"id":5595,"name":"bptSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"130793:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5596,"name":"deltaNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5578,"src":"130804:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5593,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"130784:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8037_$","typeString":"type(library Math)"}},"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":7956,"src":"130784:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"130784:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5598,"name":"invariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"130823:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5591,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"130771:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8037_$","typeString":"type(library Math)"}},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divDown","nodeType":"MemberAccess","referencedDeclaration":8001,"src":"130771:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"130771:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5549,"id":5600,"nodeType":"Return","src":"130764:69:0"}]},"id":5602,"implemented":true,"kind":"function","modifiers":[],"name":"_calcBptOutPerMainIn","nodeType":"FunctionDefinition","parameters":{"id":5546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5537,"mutability":"mutable","name":"mainIn","nodeType":"VariableDeclaration","scope":5602,"src":"129831:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5536,"name":"uint256","nodeType":"ElementaryTypeName","src":"129831:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5539,"mutability":"mutable","name":"mainBalance","nodeType":"VariableDeclaration","scope":5602,"src":"129856:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5538,"name":"uint256","nodeType":"ElementaryTypeName","src":"129856:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5541,"mutability":"mutable","name":"wrappedBalance","nodeType":"VariableDeclaration","scope":5602,"src":"129886:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5540,"name":"uint256","nodeType":"ElementaryTypeName","src":"129886:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5543,"mutability":"mutable","name":"bptSupply","nodeType":"VariableDeclaration","scope":5602,"src":"129919:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5542,"name":"uint256","nodeType":"ElementaryTypeName","src":"129919:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5545,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":5602,"src":"129947:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":5544,"name":"Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"129947:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"129820:154:0"},"returnParameters":{"id":5549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5548,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5602,"src":"129998:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5547,"name":"uint256","nodeType":"ElementaryTypeName","src":"129998:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"129997:9:0"},"scope":6389,"src":"129791:1050:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5658,"nodeType":"Block","src":"131066:450:0","statements":[{"assignments":[5618],"declarations":[{"constant":false,"id":5618,"mutability":"mutable","name":"previousNominalMain","nodeType":"VariableDeclaration","scope":5658,"src":"131126:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5617,"name":"uint256","nodeType":"ElementaryTypeName","src":"131126:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5623,"initialValue":{"arguments":[{"id":5620,"name":"mainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"131167:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5621,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"131180:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":5619,"name":"_toNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"131156:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"131156:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"131126:61:0"},{"assignments":[5625],"declarations":[{"constant":false,"id":5625,"mutability":"mutable","name":"afterNominalMain","nodeType":"VariableDeclaration","scope":5658,"src":"131198:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5624,"name":"uint256","nodeType":"ElementaryTypeName","src":"131198:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5633,"initialValue":{"arguments":[{"arguments":[{"id":5629,"name":"mainOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"131252:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5627,"name":"mainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"131236:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"131236:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"131236:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5631,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"131262:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":5626,"name":"_toNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"131225:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"131225:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"131198:71:0"},{"assignments":[5635],"declarations":[{"constant":false,"id":5635,"mutability":"mutable","name":"deltaNominalMain","nodeType":"VariableDeclaration","scope":5658,"src":"131280:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5634,"name":"uint256","nodeType":"ElementaryTypeName","src":"131280:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5640,"initialValue":{"arguments":[{"id":5638,"name":"afterNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"131331:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5636,"name":"previousNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5618,"src":"131307:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"131307:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"131307:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"131280:68:0"},{"assignments":[5642],"declarations":[{"constant":false,"id":5642,"mutability":"mutable","name":"invariant","nodeType":"VariableDeclaration","scope":5658,"src":"131359:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5641,"name":"uint256","nodeType":"ElementaryTypeName","src":"131359:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5647,"initialValue":{"arguments":[{"id":5644,"name":"previousNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5618,"src":"131394:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5645,"name":"wrappedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5608,"src":"131415:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5643,"name":"_calcInvariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"131379:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"131379:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"131359:71:0"},{"expression":{"arguments":[{"arguments":[{"id":5652,"name":"bptSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"131468:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5653,"name":"deltaNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5635,"src":"131479:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5650,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"131459:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8037_$","typeString":"type(library Math)"}},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":7956,"src":"131459:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"131459:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5655,"name":"invariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5642,"src":"131498:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5648,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"131448:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8037_$","typeString":"type(library Math)"}},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divUp","nodeType":"MemberAccess","referencedDeclaration":8036,"src":"131448:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"131448:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5616,"id":5657,"nodeType":"Return","src":"131441:67:0"}]},"id":5659,"implemented":true,"kind":"function","modifiers":[],"name":"_calcBptInPerMainOut","nodeType":"FunctionDefinition","parameters":{"id":5613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5604,"mutability":"mutable","name":"mainOut","nodeType":"VariableDeclaration","scope":5659,"src":"130889:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5603,"name":"uint256","nodeType":"ElementaryTypeName","src":"130889:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5606,"mutability":"mutable","name":"mainBalance","nodeType":"VariableDeclaration","scope":5659,"src":"130915:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5605,"name":"uint256","nodeType":"ElementaryTypeName","src":"130915:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5608,"mutability":"mutable","name":"wrappedBalance","nodeType":"VariableDeclaration","scope":5659,"src":"130945:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5607,"name":"uint256","nodeType":"ElementaryTypeName","src":"130945:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5610,"mutability":"mutable","name":"bptSupply","nodeType":"VariableDeclaration","scope":5659,"src":"130978:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5609,"name":"uint256","nodeType":"ElementaryTypeName","src":"130978:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5612,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":5659,"src":"131006:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":5611,"name":"Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"131006:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"130878:155:0"},"returnParameters":{"id":5616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5615,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5659,"src":"131057:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5614,"name":"uint256","nodeType":"ElementaryTypeName","src":"131057:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"131056:9:0"},"scope":6389,"src":"130849:667:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5692,"nodeType":"Block","src":"131683:272:0","statements":[{"assignments":[5671],"declarations":[{"constant":false,"id":5671,"mutability":"mutable","name":"previousNominalMain","nodeType":"VariableDeclaration","scope":5692,"src":"131746:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5670,"name":"uint256","nodeType":"ElementaryTypeName","src":"131746:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5676,"initialValue":{"arguments":[{"id":5673,"name":"mainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"131787:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5674,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5665,"src":"131800:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":5672,"name":"_toNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"131776:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"131776:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"131746:61:0"},{"assignments":[5678],"declarations":[{"constant":false,"id":5678,"mutability":"mutable","name":"afterNominalMain","nodeType":"VariableDeclaration","scope":5692,"src":"131818:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5677,"name":"uint256","nodeType":"ElementaryTypeName","src":"131818:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5686,"initialValue":{"arguments":[{"arguments":[{"id":5682,"name":"mainIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"131872:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5680,"name":"mainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5663,"src":"131856:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":5074,"src":"131856:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"131856:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5684,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5665,"src":"131881:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":5679,"name":"_toNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"131845:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"131845:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"131818:70:0"},{"expression":{"arguments":[{"id":5689,"name":"previousNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"131927:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5687,"name":"afterNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"131906:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"131906:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"131906:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5669,"id":5691,"nodeType":"Return","src":"131899:48:0"}]},"id":5693,"implemented":true,"kind":"function","modifiers":[],"name":"_calcWrappedOutPerMainIn","nodeType":"FunctionDefinition","parameters":{"id":5666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5661,"mutability":"mutable","name":"mainIn","nodeType":"VariableDeclaration","scope":5693,"src":"131568:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5660,"name":"uint256","nodeType":"ElementaryTypeName","src":"131568:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5663,"mutability":"mutable","name":"mainBalance","nodeType":"VariableDeclaration","scope":5693,"src":"131593:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5662,"name":"uint256","nodeType":"ElementaryTypeName","src":"131593:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5665,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":5693,"src":"131623:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":5664,"name":"Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"131623:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"131557:93:0"},"returnParameters":{"id":5669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5668,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5693,"src":"131674:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5667,"name":"uint256","nodeType":"ElementaryTypeName","src":"131674:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"131673:9:0"},"scope":6389,"src":"131524:431:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5726,"nodeType":"Block","src":"132123:270:0","statements":[{"assignments":[5705],"declarations":[{"constant":false,"id":5705,"mutability":"mutable","name":"previousNominalMain","nodeType":"VariableDeclaration","scope":5726,"src":"132183:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5704,"name":"uint256","nodeType":"ElementaryTypeName","src":"132183:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5710,"initialValue":{"arguments":[{"id":5707,"name":"mainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"132224:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5708,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"132237:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":5706,"name":"_toNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"132213:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"132213:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"132183:61:0"},{"assignments":[5712],"declarations":[{"constant":false,"id":5712,"mutability":"mutable","name":"afterNominalMain","nodeType":"VariableDeclaration","scope":5726,"src":"132255:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5711,"name":"uint256","nodeType":"ElementaryTypeName","src":"132255:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5720,"initialValue":{"arguments":[{"arguments":[{"id":5716,"name":"mainOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"132309:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5714,"name":"mainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"132293:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"132293:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"132293:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5718,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"132319:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":5713,"name":"_toNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"132282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"132282:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"132255:71:0"},{"expression":{"arguments":[{"id":5723,"name":"afterNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"132368:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5721,"name":"previousNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"132344:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"132344:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"132344:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5703,"id":5725,"nodeType":"Return","src":"132337:48:0"}]},"id":5727,"implemented":true,"kind":"function","modifiers":[],"name":"_calcWrappedInPerMainOut","nodeType":"FunctionDefinition","parameters":{"id":5700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5695,"mutability":"mutable","name":"mainOut","nodeType":"VariableDeclaration","scope":5727,"src":"132007:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5694,"name":"uint256","nodeType":"ElementaryTypeName","src":"132007:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5697,"mutability":"mutable","name":"mainBalance","nodeType":"VariableDeclaration","scope":5727,"src":"132033:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5696,"name":"uint256","nodeType":"ElementaryTypeName","src":"132033:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5699,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":5727,"src":"132063:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":5698,"name":"Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"132063:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"131996:94:0"},"returnParameters":{"id":5703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5702,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5727,"src":"132114:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5701,"name":"uint256","nodeType":"ElementaryTypeName","src":"132114:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"132113:9:0"},"scope":6389,"src":"131963:430:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5797,"nodeType":"Block","src":"132617:883:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5742,"name":"bptSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"132681:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"132694:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"132681:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5751,"nodeType":"IfStatement","src":"132677:370:0","trueBody":{"id":5750,"nodeType":"Block","src":"132697:350:0","statements":[{"expression":{"arguments":[{"id":5746,"name":"bptOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"133020:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5747,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"133028:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":5745,"name":"_fromNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"133007:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"133007:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5741,"id":5749,"nodeType":"Return","src":"133000:35:0"}]}},{"assignments":[5753],"declarations":[{"constant":false,"id":5753,"mutability":"mutable","name":"previousNominalMain","nodeType":"VariableDeclaration","scope":5797,"src":"133059:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5752,"name":"uint256","nodeType":"ElementaryTypeName","src":"133059:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5758,"initialValue":{"arguments":[{"id":5755,"name":"mainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"133100:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5756,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"133113:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":5754,"name":"_toNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"133089:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"133089:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"133059:61:0"},{"assignments":[5760],"declarations":[{"constant":false,"id":5760,"mutability":"mutable","name":"invariant","nodeType":"VariableDeclaration","scope":5797,"src":"133131:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5759,"name":"uint256","nodeType":"ElementaryTypeName","src":"133131:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5765,"initialValue":{"arguments":[{"id":5762,"name":"previousNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"133166:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5763,"name":"wrappedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"133187:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5761,"name":"_calcInvariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"133151:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"133151:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"133131:71:0"},{"assignments":[5767],"declarations":[{"constant":false,"id":5767,"mutability":"mutable","name":"deltaNominalMain","nodeType":"VariableDeclaration","scope":5797,"src":"133213:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5766,"name":"uint256","nodeType":"ElementaryTypeName","src":"133213:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5777,"initialValue":{"arguments":[{"arguments":[{"id":5772,"name":"invariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5760,"src":"133260:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5773,"name":"bptOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"133271:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5770,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"133251:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8037_$","typeString":"type(library Math)"}},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":7956,"src":"133251:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"133251:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5775,"name":"bptSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"133280:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5768,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"133240:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8037_$","typeString":"type(library Math)"}},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divUp","nodeType":"MemberAccess","referencedDeclaration":8036,"src":"133240:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"133240:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"133213:77:0"},{"assignments":[5779],"declarations":[{"constant":false,"id":5779,"mutability":"mutable","name":"afterNominalMain","nodeType":"VariableDeclaration","scope":5797,"src":"133301:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5778,"name":"uint256","nodeType":"ElementaryTypeName","src":"133301:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5784,"initialValue":{"arguments":[{"id":5782,"name":"deltaNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"133352:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5780,"name":"previousNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"133328:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":5074,"src":"133328:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"133328:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"133301:68:0"},{"assignments":[5786],"declarations":[{"constant":false,"id":5786,"mutability":"mutable","name":"newMainBalance","nodeType":"VariableDeclaration","scope":5797,"src":"133380:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5785,"name":"uint256","nodeType":"ElementaryTypeName","src":"133380:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5791,"initialValue":{"arguments":[{"id":5788,"name":"afterNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5779,"src":"133418:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5789,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"133436:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":5787,"name":"_fromNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"133405:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"133405:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"133380:63:0"},{"expression":{"arguments":[{"id":5794,"name":"mainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"133480:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5792,"name":"newMainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"133461:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"133461:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"133461:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5741,"id":5796,"nodeType":"Return","src":"133454:38:0"}]},"id":5798,"implemented":true,"kind":"function","modifiers":[],"name":"_calcMainInPerBptOut","nodeType":"FunctionDefinition","parameters":{"id":5738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5729,"mutability":"mutable","name":"bptOut","nodeType":"VariableDeclaration","scope":5798,"src":"132441:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5728,"name":"uint256","nodeType":"ElementaryTypeName","src":"132441:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5731,"mutability":"mutable","name":"mainBalance","nodeType":"VariableDeclaration","scope":5798,"src":"132466:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5730,"name":"uint256","nodeType":"ElementaryTypeName","src":"132466:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5733,"mutability":"mutable","name":"wrappedBalance","nodeType":"VariableDeclaration","scope":5798,"src":"132496:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5732,"name":"uint256","nodeType":"ElementaryTypeName","src":"132496:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5735,"mutability":"mutable","name":"bptSupply","nodeType":"VariableDeclaration","scope":5798,"src":"132529:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5734,"name":"uint256","nodeType":"ElementaryTypeName","src":"132529:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5737,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":5798,"src":"132557:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":5736,"name":"Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"132557:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"132430:154:0"},"returnParameters":{"id":5741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5740,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5798,"src":"132608:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5739,"name":"uint256","nodeType":"ElementaryTypeName","src":"132608:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"132607:9:0"},"scope":6389,"src":"132401:1099:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5858,"nodeType":"Block","src":"133723:505:0","statements":[{"assignments":[5814],"declarations":[{"constant":false,"id":5814,"mutability":"mutable","name":"previousNominalMain","nodeType":"VariableDeclaration","scope":5858,"src":"133786:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5813,"name":"uint256","nodeType":"ElementaryTypeName","src":"133786:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5819,"initialValue":{"arguments":[{"id":5816,"name":"mainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"133827:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5817,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"133840:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":5815,"name":"_toNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"133816:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":5818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"133816:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"133786:61:0"},{"assignments":[5821],"declarations":[{"constant":false,"id":5821,"mutability":"mutable","name":"invariant","nodeType":"VariableDeclaration","scope":5858,"src":"133858:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5820,"name":"uint256","nodeType":"ElementaryTypeName","src":"133858:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5826,"initialValue":{"arguments":[{"id":5823,"name":"previousNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"133893:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5824,"name":"wrappedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5804,"src":"133914:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5822,"name":"_calcInvariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"133878:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"133878:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"133858:71:0"},{"assignments":[5828],"declarations":[{"constant":false,"id":5828,"mutability":"mutable","name":"deltaNominalMain","nodeType":"VariableDeclaration","scope":5858,"src":"133940:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5827,"name":"uint256","nodeType":"ElementaryTypeName","src":"133940:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5838,"initialValue":{"arguments":[{"arguments":[{"id":5833,"name":"invariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"133989:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5834,"name":"bptIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"134000:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5831,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"133980:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8037_$","typeString":"type(library Math)"}},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":7956,"src":"133980:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"133980:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5836,"name":"bptSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"134008:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5829,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"133967:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8037_$","typeString":"type(library Math)"}},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divDown","nodeType":"MemberAccess","referencedDeclaration":8001,"src":"133967:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"133967:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"133940:78:0"},{"assignments":[5840],"declarations":[{"constant":false,"id":5840,"mutability":"mutable","name":"afterNominalMain","nodeType":"VariableDeclaration","scope":5858,"src":"134029:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5839,"name":"uint256","nodeType":"ElementaryTypeName","src":"134029:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5845,"initialValue":{"arguments":[{"id":5843,"name":"deltaNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"134080:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5841,"name":"previousNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"134056:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"134056:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"134056:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"134029:68:0"},{"assignments":[5847],"declarations":[{"constant":false,"id":5847,"mutability":"mutable","name":"newMainBalance","nodeType":"VariableDeclaration","scope":5858,"src":"134108:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5846,"name":"uint256","nodeType":"ElementaryTypeName","src":"134108:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5852,"initialValue":{"arguments":[{"id":5849,"name":"afterNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"134146:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5850,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"134164:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":5848,"name":"_fromNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"134133:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"134133:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"134108:63:0"},{"expression":{"arguments":[{"id":5855,"name":"newMainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"134205:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5853,"name":"mainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"134189:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"134189:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"134189:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5812,"id":5857,"nodeType":"Return","src":"134182:38:0"}]},"id":5859,"implemented":true,"kind":"function","modifiers":[],"name":"_calcMainOutPerBptIn","nodeType":"FunctionDefinition","parameters":{"id":5809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5800,"mutability":"mutable","name":"bptIn","nodeType":"VariableDeclaration","scope":5859,"src":"133548:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5799,"name":"uint256","nodeType":"ElementaryTypeName","src":"133548:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5802,"mutability":"mutable","name":"mainBalance","nodeType":"VariableDeclaration","scope":5859,"src":"133572:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5801,"name":"uint256","nodeType":"ElementaryTypeName","src":"133572:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5804,"mutability":"mutable","name":"wrappedBalance","nodeType":"VariableDeclaration","scope":5859,"src":"133602:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5803,"name":"uint256","nodeType":"ElementaryTypeName","src":"133602:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5806,"mutability":"mutable","name":"bptSupply","nodeType":"VariableDeclaration","scope":5859,"src":"133635:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5805,"name":"uint256","nodeType":"ElementaryTypeName","src":"133635:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5808,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":5859,"src":"133663:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":5807,"name":"Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"133663:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"133537:153:0"},"returnParameters":{"id":5812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5811,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5859,"src":"133714:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5810,"name":"uint256","nodeType":"ElementaryTypeName","src":"133714:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"133713:9:0"},"scope":6389,"src":"133508:720:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5896,"nodeType":"Block","src":"134398:327:0","statements":[{"assignments":[5871],"declarations":[{"constant":false,"id":5871,"mutability":"mutable","name":"previousNominalMain","nodeType":"VariableDeclaration","scope":5896,"src":"134461:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5870,"name":"uint256","nodeType":"ElementaryTypeName","src":"134461:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5876,"initialValue":{"arguments":[{"id":5873,"name":"mainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"134502:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5874,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"134515:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":5872,"name":"_toNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"134491:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"134491:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"134461:61:0"},{"assignments":[5878],"declarations":[{"constant":false,"id":5878,"mutability":"mutable","name":"afterNominalMain","nodeType":"VariableDeclaration","scope":5896,"src":"134533:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5877,"name":"uint256","nodeType":"ElementaryTypeName","src":"134533:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5883,"initialValue":{"arguments":[{"id":5881,"name":"wrappedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"134584:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5879,"name":"previousNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"134560:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"134560:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"134560:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"134533:61:0"},{"assignments":[5885],"declarations":[{"constant":false,"id":5885,"mutability":"mutable","name":"newMainBalance","nodeType":"VariableDeclaration","scope":5896,"src":"134605:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5884,"name":"uint256","nodeType":"ElementaryTypeName","src":"134605:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5890,"initialValue":{"arguments":[{"id":5887,"name":"afterNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"134643:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5888,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"134661:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":5886,"name":"_fromNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"134630:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"134630:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"134605:63:0"},{"expression":{"arguments":[{"id":5893,"name":"newMainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"134702:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5891,"name":"mainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"134686:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"134686:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"134686:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5869,"id":5895,"nodeType":"Return","src":"134679:38:0"}]},"id":5897,"implemented":true,"kind":"function","modifiers":[],"name":"_calcMainOutPerWrappedIn","nodeType":"FunctionDefinition","parameters":{"id":5866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5861,"mutability":"mutable","name":"wrappedIn","nodeType":"VariableDeclaration","scope":5897,"src":"134280:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5860,"name":"uint256","nodeType":"ElementaryTypeName","src":"134280:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5863,"mutability":"mutable","name":"mainBalance","nodeType":"VariableDeclaration","scope":5897,"src":"134308:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5862,"name":"uint256","nodeType":"ElementaryTypeName","src":"134308:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5865,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":5897,"src":"134338:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":5864,"name":"Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"134338:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"134269:96:0"},"returnParameters":{"id":5869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5868,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5897,"src":"134389:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5867,"name":"uint256","nodeType":"ElementaryTypeName","src":"134389:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"134388:9:0"},"scope":6389,"src":"134236:489:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5934,"nodeType":"Block","src":"134896:325:0","statements":[{"assignments":[5909],"declarations":[{"constant":false,"id":5909,"mutability":"mutable","name":"previousNominalMain","nodeType":"VariableDeclaration","scope":5934,"src":"134956:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5908,"name":"uint256","nodeType":"ElementaryTypeName","src":"134956:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5914,"initialValue":{"arguments":[{"id":5911,"name":"mainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"134997:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5912,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"135010:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":5910,"name":"_toNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"134986:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":5913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"134986:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"134956:61:0"},{"assignments":[5916],"declarations":[{"constant":false,"id":5916,"mutability":"mutable","name":"afterNominalMain","nodeType":"VariableDeclaration","scope":5934,"src":"135028:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5915,"name":"uint256","nodeType":"ElementaryTypeName","src":"135028:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5921,"initialValue":{"arguments":[{"id":5919,"name":"wrappedOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"135079:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5917,"name":"previousNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5909,"src":"135055:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":5074,"src":"135055:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"135055:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"135028:62:0"},{"assignments":[5923],"declarations":[{"constant":false,"id":5923,"mutability":"mutable","name":"newMainBalance","nodeType":"VariableDeclaration","scope":5934,"src":"135101:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5922,"name":"uint256","nodeType":"ElementaryTypeName","src":"135101:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5928,"initialValue":{"arguments":[{"id":5925,"name":"afterNominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"135139:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5926,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"135157:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":5924,"name":"_fromNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"135126:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"135126:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"135101:63:0"},{"expression":{"arguments":[{"id":5931,"name":"mainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"135201:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5929,"name":"newMainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5923,"src":"135182:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"135182:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"135182:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5907,"id":5933,"nodeType":"Return","src":"135175:38:0"}]},"id":5935,"implemented":true,"kind":"function","modifiers":[],"name":"_calcMainInPerWrappedOut","nodeType":"FunctionDefinition","parameters":{"id":5904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5899,"mutability":"mutable","name":"wrappedOut","nodeType":"VariableDeclaration","scope":5935,"src":"134777:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5898,"name":"uint256","nodeType":"ElementaryTypeName","src":"134777:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5901,"mutability":"mutable","name":"mainBalance","nodeType":"VariableDeclaration","scope":5935,"src":"134806:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5900,"name":"uint256","nodeType":"ElementaryTypeName","src":"134806:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5903,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":5935,"src":"134836:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":5902,"name":"Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"134836:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"134766:97:0"},"returnParameters":{"id":5907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5906,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5935,"src":"134887:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5905,"name":"uint256","nodeType":"ElementaryTypeName","src":"134887:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"134886:9:0"},"scope":6389,"src":"134733:488:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6002,"nodeType":"Block","src":"135451:862:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5950,"name":"bptSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"135518:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"135531:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"135518:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5956,"nodeType":"IfStatement","src":"135514:343:0","trueBody":{"id":5955,"nodeType":"Block","src":"135534:323:0","statements":[{"expression":{"id":5953,"name":"wrappedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"135836:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5949,"id":5954,"nodeType":"Return","src":"135829:16:0"}]}},{"assignments":[5958],"declarations":[{"constant":false,"id":5958,"mutability":"mutable","name":"nominalMain","nodeType":"VariableDeclaration","scope":6002,"src":"135869:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5957,"name":"uint256","nodeType":"ElementaryTypeName","src":"135869:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5963,"initialValue":{"arguments":[{"id":5960,"name":"mainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5939,"src":"135902:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5961,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"135915:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":5959,"name":"_toNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"135891:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"135891:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"135869:53:0"},{"assignments":[5965],"declarations":[{"constant":false,"id":5965,"mutability":"mutable","name":"previousInvariant","nodeType":"VariableDeclaration","scope":6002,"src":"135933:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5964,"name":"uint256","nodeType":"ElementaryTypeName","src":"135933:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5970,"initialValue":{"arguments":[{"id":5967,"name":"nominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"135976:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5968,"name":"wrappedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"135989:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5966,"name":"_calcInvariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"135961:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"135961:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"135933:71:0"},{"assignments":[5972],"declarations":[{"constant":false,"id":5972,"mutability":"mutable","name":"newWrappedBalance","nodeType":"VariableDeclaration","scope":6002,"src":"136017:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5971,"name":"uint256","nodeType":"ElementaryTypeName","src":"136017:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5977,"initialValue":{"arguments":[{"id":5975,"name":"wrappedIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5937,"src":"136064:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5973,"name":"wrappedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"136045:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":5074,"src":"136045:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"136045:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"136017:57:0"},{"assignments":[5979],"declarations":[{"constant":false,"id":5979,"mutability":"mutable","name":"newInvariant","nodeType":"VariableDeclaration","scope":6002,"src":"136085:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5978,"name":"uint256","nodeType":"ElementaryTypeName","src":"136085:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5984,"initialValue":{"arguments":[{"id":5981,"name":"nominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"136123:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5982,"name":"newWrappedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"136136:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5980,"name":"_calcInvariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"136108:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"136108:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"136085:69:0"},{"assignments":[5986],"declarations":[{"constant":false,"id":5986,"mutability":"mutable","name":"newBptBalance","nodeType":"VariableDeclaration","scope":6002,"src":"136167:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5985,"name":"uint256","nodeType":"ElementaryTypeName","src":"136167:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5996,"initialValue":{"arguments":[{"arguments":[{"id":5991,"name":"bptSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"136213:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5992,"name":"newInvariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5979,"src":"136224:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5989,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"136204:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8037_$","typeString":"type(library Math)"}},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":7956,"src":"136204:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"136204:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5994,"name":"previousInvariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"136239:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5987,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"136191:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8037_$","typeString":"type(library Math)"}},"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divDown","nodeType":"MemberAccess","referencedDeclaration":8001,"src":"136191:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"136191:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"136167:90:0"},{"expression":{"arguments":[{"id":5999,"name":"bptSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"136295:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5997,"name":"newBptBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"136277:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"136277:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"136277:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5949,"id":6001,"nodeType":"Return","src":"136270:35:0"}]},"id":6003,"implemented":true,"kind":"function","modifiers":[],"name":"_calcBptOutPerWrappedIn","nodeType":"FunctionDefinition","parameters":{"id":5946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5937,"mutability":"mutable","name":"wrappedIn","nodeType":"VariableDeclaration","scope":6003,"src":"135272:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5936,"name":"uint256","nodeType":"ElementaryTypeName","src":"135272:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5939,"mutability":"mutable","name":"mainBalance","nodeType":"VariableDeclaration","scope":6003,"src":"135300:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5938,"name":"uint256","nodeType":"ElementaryTypeName","src":"135300:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5941,"mutability":"mutable","name":"wrappedBalance","nodeType":"VariableDeclaration","scope":6003,"src":"135330:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5940,"name":"uint256","nodeType":"ElementaryTypeName","src":"135330:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5943,"mutability":"mutable","name":"bptSupply","nodeType":"VariableDeclaration","scope":6003,"src":"135363:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5942,"name":"uint256","nodeType":"ElementaryTypeName","src":"135363:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5945,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":6003,"src":"135391:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":5944,"name":"Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"135391:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"135261:157:0"},"returnParameters":{"id":5949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5948,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6003,"src":"135442:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5947,"name":"uint256","nodeType":"ElementaryTypeName","src":"135442:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"135441:9:0"},"scope":6389,"src":"135229:1084:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6063,"nodeType":"Block","src":"136544:505:0","statements":[{"assignments":[6019],"declarations":[{"constant":false,"id":6019,"mutability":"mutable","name":"nominalMain","nodeType":"VariableDeclaration","scope":6063,"src":"136604:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6018,"name":"uint256","nodeType":"ElementaryTypeName","src":"136604:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6024,"initialValue":{"arguments":[{"id":6021,"name":"mainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"136637:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6022,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"136650:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":6020,"name":"_toNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"136626:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"136626:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"136604:53:0"},{"assignments":[6026],"declarations":[{"constant":false,"id":6026,"mutability":"mutable","name":"previousInvariant","nodeType":"VariableDeclaration","scope":6063,"src":"136668:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6025,"name":"uint256","nodeType":"ElementaryTypeName","src":"136668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6031,"initialValue":{"arguments":[{"id":6028,"name":"nominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"136711:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6029,"name":"wrappedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"136724:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6027,"name":"_calcInvariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"136696:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"136696:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"136668:71:0"},{"assignments":[6033],"declarations":[{"constant":false,"id":6033,"mutability":"mutable","name":"newWrappedBalance","nodeType":"VariableDeclaration","scope":6063,"src":"136752:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6032,"name":"uint256","nodeType":"ElementaryTypeName","src":"136752:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6038,"initialValue":{"arguments":[{"id":6036,"name":"wrappedOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"136799:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6034,"name":"wrappedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"136780:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"136780:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"136780:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"136752:58:0"},{"assignments":[6040],"declarations":[{"constant":false,"id":6040,"mutability":"mutable","name":"newInvariant","nodeType":"VariableDeclaration","scope":6063,"src":"136821:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6039,"name":"uint256","nodeType":"ElementaryTypeName","src":"136821:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6045,"initialValue":{"arguments":[{"id":6042,"name":"nominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"136859:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6043,"name":"newWrappedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"136872:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6041,"name":"_calcInvariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"136844:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"136844:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"136821:69:0"},{"assignments":[6047],"declarations":[{"constant":false,"id":6047,"mutability":"mutable","name":"newBptBalance","nodeType":"VariableDeclaration","scope":6063,"src":"136903:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6046,"name":"uint256","nodeType":"ElementaryTypeName","src":"136903:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6057,"initialValue":{"arguments":[{"arguments":[{"id":6052,"name":"bptSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"136949:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6053,"name":"newInvariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"136960:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6050,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"136940:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8037_$","typeString":"type(library Math)"}},"id":6051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":7956,"src":"136940:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"136940:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6055,"name":"previousInvariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6026,"src":"136975:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6048,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"136927:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8037_$","typeString":"type(library Math)"}},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divDown","nodeType":"MemberAccess","referencedDeclaration":8001,"src":"136927:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"136927:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"136903:90:0"},{"expression":{"arguments":[{"id":6060,"name":"newBptBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"137027:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6058,"name":"bptSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"137013:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"137013:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"137013:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6017,"id":6062,"nodeType":"Return","src":"137006:35:0"}]},"id":6064,"implemented":true,"kind":"function","modifiers":[],"name":"_calcBptInPerWrappedOut","nodeType":"FunctionDefinition","parameters":{"id":6014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6005,"mutability":"mutable","name":"wrappedOut","nodeType":"VariableDeclaration","scope":6064,"src":"136364:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6004,"name":"uint256","nodeType":"ElementaryTypeName","src":"136364:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6007,"mutability":"mutable","name":"mainBalance","nodeType":"VariableDeclaration","scope":6064,"src":"136393:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6006,"name":"uint256","nodeType":"ElementaryTypeName","src":"136393:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6009,"mutability":"mutable","name":"wrappedBalance","nodeType":"VariableDeclaration","scope":6064,"src":"136423:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6008,"name":"uint256","nodeType":"ElementaryTypeName","src":"136423:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6011,"mutability":"mutable","name":"bptSupply","nodeType":"VariableDeclaration","scope":6064,"src":"136456:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6010,"name":"uint256","nodeType":"ElementaryTypeName","src":"136456:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6013,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":6064,"src":"136484:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":6012,"name":"Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"136484:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"136353:158:0"},"returnParameters":{"id":6017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6016,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6064,"src":"136535:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6015,"name":"uint256","nodeType":"ElementaryTypeName","src":"136535:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"136534:9:0"},"scope":6389,"src":"136321:728:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6127,"nodeType":"Block","src":"137276:791:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6079,"name":"bptSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"137340:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"137353:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"137340:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6085,"nodeType":"IfStatement","src":"137336:340:0","trueBody":{"id":6084,"nodeType":"Block","src":"137356:320:0","statements":[{"expression":{"id":6082,"name":"bptOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"137658:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6078,"id":6083,"nodeType":"Return","src":"137651:13:0"}]}},{"assignments":[6087],"declarations":[{"constant":false,"id":6087,"mutability":"mutable","name":"nominalMain","nodeType":"VariableDeclaration","scope":6127,"src":"137688:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6086,"name":"uint256","nodeType":"ElementaryTypeName","src":"137688:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6092,"initialValue":{"arguments":[{"id":6089,"name":"mainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"137721:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6090,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"137734:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":6088,"name":"_toNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"137710:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":6091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"137710:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"137688:53:0"},{"assignments":[6094],"declarations":[{"constant":false,"id":6094,"mutability":"mutable","name":"previousInvariant","nodeType":"VariableDeclaration","scope":6127,"src":"137752:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6093,"name":"uint256","nodeType":"ElementaryTypeName","src":"137752:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6099,"initialValue":{"arguments":[{"id":6096,"name":"nominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"137795:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6097,"name":"wrappedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"137808:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6095,"name":"_calcInvariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"137780:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"137780:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"137752:71:0"},{"assignments":[6101],"declarations":[{"constant":false,"id":6101,"mutability":"mutable","name":"newBptBalance","nodeType":"VariableDeclaration","scope":6127,"src":"137836:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6100,"name":"uint256","nodeType":"ElementaryTypeName","src":"137836:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6106,"initialValue":{"arguments":[{"id":6104,"name":"bptOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"137874:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6102,"name":"bptSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"137860:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":5074,"src":"137860:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"137860:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"137836:45:0"},{"assignments":[6108],"declarations":[{"constant":false,"id":6108,"mutability":"mutable","name":"newWrappedBalance","nodeType":"VariableDeclaration","scope":6127,"src":"137892:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6107,"name":"uint256","nodeType":"ElementaryTypeName","src":"137892:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6121,"initialValue":{"arguments":[{"id":6119,"name":"nominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"137990:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":6113,"name":"newBptBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"137940:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6114,"name":"previousInvariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"137955:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6111,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"137931:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8037_$","typeString":"type(library Math)"}},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":7956,"src":"137931:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"137931:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6116,"name":"bptSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"137975:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6109,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"137920:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8037_$","typeString":"type(library Math)"}},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divUp","nodeType":"MemberAccess","referencedDeclaration":8036,"src":"137920:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"137920:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"137920:69:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"137920:82:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"137892:110:0"},{"expression":{"arguments":[{"id":6124,"name":"wrappedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"138044:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6122,"name":"newWrappedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"138022:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"138022:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"138022:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6078,"id":6126,"nodeType":"Return","src":"138015:44:0"}]},"id":6128,"implemented":true,"kind":"function","modifiers":[],"name":"_calcWrappedInPerBptOut","nodeType":"FunctionDefinition","parameters":{"id":6075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6066,"mutability":"mutable","name":"bptOut","nodeType":"VariableDeclaration","scope":6128,"src":"137100:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6065,"name":"uint256","nodeType":"ElementaryTypeName","src":"137100:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6068,"mutability":"mutable","name":"mainBalance","nodeType":"VariableDeclaration","scope":6128,"src":"137125:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6067,"name":"uint256","nodeType":"ElementaryTypeName","src":"137125:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6070,"mutability":"mutable","name":"wrappedBalance","nodeType":"VariableDeclaration","scope":6128,"src":"137155:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6069,"name":"uint256","nodeType":"ElementaryTypeName","src":"137155:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6072,"mutability":"mutable","name":"bptSupply","nodeType":"VariableDeclaration","scope":6128,"src":"137188:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6071,"name":"uint256","nodeType":"ElementaryTypeName","src":"137188:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6074,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":6128,"src":"137216:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":6073,"name":"Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"137216:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"137089:154:0"},"returnParameters":{"id":6078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6077,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6128,"src":"137267:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6076,"name":"uint256","nodeType":"ElementaryTypeName","src":"137267:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"137266:9:0"},"scope":6389,"src":"137057:1010:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6184,"nodeType":"Block","src":"138293:441:0","statements":[{"assignments":[6144],"declarations":[{"constant":false,"id":6144,"mutability":"mutable","name":"nominalMain","nodeType":"VariableDeclaration","scope":6184,"src":"138356:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6143,"name":"uint256","nodeType":"ElementaryTypeName","src":"138356:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6149,"initialValue":{"arguments":[{"id":6146,"name":"mainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"138389:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6147,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"138402:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}],"id":6145,"name":"_toNominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"138378:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_Params_$5535_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct LinearMath.Params memory) pure returns (uint256)"}},"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"138378:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"138356:53:0"},{"assignments":[6151],"declarations":[{"constant":false,"id":6151,"mutability":"mutable","name":"previousInvariant","nodeType":"VariableDeclaration","scope":6184,"src":"138420:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6150,"name":"uint256","nodeType":"ElementaryTypeName","src":"138420:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6156,"initialValue":{"arguments":[{"id":6153,"name":"nominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"138463:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6154,"name":"wrappedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"138476:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6152,"name":"_calcInvariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"138448:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"138448:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"138420:71:0"},{"assignments":[6158],"declarations":[{"constant":false,"id":6158,"mutability":"mutable","name":"newBptBalance","nodeType":"VariableDeclaration","scope":6184,"src":"138504:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6157,"name":"uint256","nodeType":"ElementaryTypeName","src":"138504:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6163,"initialValue":{"arguments":[{"id":6161,"name":"bptIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"138542:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6159,"name":"bptSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"138528:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"138528:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"138528:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"138504:44:0"},{"assignments":[6165],"declarations":[{"constant":false,"id":6165,"mutability":"mutable","name":"newWrappedBalance","nodeType":"VariableDeclaration","scope":6184,"src":"138559:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6164,"name":"uint256","nodeType":"ElementaryTypeName","src":"138559:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6178,"initialValue":{"arguments":[{"id":6176,"name":"nominalMain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"138657:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":6170,"name":"newBptBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"138607:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6171,"name":"previousInvariant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"138622:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6168,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"138598:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8037_$","typeString":"type(library Math)"}},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":7956,"src":"138598:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"138598:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6173,"name":"bptSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"138642:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6166,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"138587:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8037_$","typeString":"type(library Math)"}},"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divUp","nodeType":"MemberAccess","referencedDeclaration":8036,"src":"138587:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"138587:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"138587:69:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"138587:82:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"138559:110:0"},{"expression":{"arguments":[{"id":6181,"name":"newWrappedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"138708:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6179,"name":"wrappedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"138689:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"138689:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"138689:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6142,"id":6183,"nodeType":"Return","src":"138682:44:0"}]},"id":6185,"implemented":true,"kind":"function","modifiers":[],"name":"_calcWrappedOutPerBptIn","nodeType":"FunctionDefinition","parameters":{"id":6139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6130,"mutability":"mutable","name":"bptIn","nodeType":"VariableDeclaration","scope":6185,"src":"138118:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6129,"name":"uint256","nodeType":"ElementaryTypeName","src":"138118:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6132,"mutability":"mutable","name":"mainBalance","nodeType":"VariableDeclaration","scope":6185,"src":"138142:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6131,"name":"uint256","nodeType":"ElementaryTypeName","src":"138142:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6134,"mutability":"mutable","name":"wrappedBalance","nodeType":"VariableDeclaration","scope":6185,"src":"138172:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6133,"name":"uint256","nodeType":"ElementaryTypeName","src":"138172:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6136,"mutability":"mutable","name":"bptSupply","nodeType":"VariableDeclaration","scope":6185,"src":"138205:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6135,"name":"uint256","nodeType":"ElementaryTypeName","src":"138205:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6138,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":6185,"src":"138233:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":6137,"name":"Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"138233:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"138107:153:0"},"returnParameters":{"id":6142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6141,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6185,"src":"138284:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6140,"name":"uint256","nodeType":"ElementaryTypeName","src":"138284:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"138283:9:0"},"scope":6389,"src":"138075:659:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6199,"nodeType":"Block","src":"138850:64:0","statements":[{"expression":{"arguments":[{"id":6196,"name":"wrappedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6189,"src":"138891:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6194,"name":"nominalMainBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"138868:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":5074,"src":"138868:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"138868:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6193,"id":6198,"nodeType":"Return","src":"138861:45:0"}]},"id":6200,"implemented":true,"kind":"function","modifiers":[],"name":"_calcInvariant","nodeType":"FunctionDefinition","parameters":{"id":6190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6187,"mutability":"mutable","name":"nominalMainBalance","nodeType":"VariableDeclaration","scope":6200,"src":"138766:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6186,"name":"uint256","nodeType":"ElementaryTypeName","src":"138766:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6189,"mutability":"mutable","name":"wrappedBalance","nodeType":"VariableDeclaration","scope":6200,"src":"138794:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6188,"name":"uint256","nodeType":"ElementaryTypeName","src":"138794:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"138765:52:0"},"returnParameters":{"id":6193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6192,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6200,"src":"138841:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6191,"name":"uint256","nodeType":"ElementaryTypeName","src":"138841:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"138840:9:0"},"scope":6389,"src":"138742:172:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6258,"nodeType":"Block","src":"139010:528:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6209,"name":"real","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"139172:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6210,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"139179:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}},"id":6211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lowerTarget","nodeType":"MemberAccess","referencedDeclaration":5532,"src":"139179:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"139172:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6231,"name":"real","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"139334:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":6232,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"139342:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}},"id":6233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"upperTarget","nodeType":"MemberAccess","referencedDeclaration":5534,"src":"139342:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"139334:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6255,"nodeType":"Block","src":"139406:125:0","statements":[{"assignments":[6239],"declarations":[{"constant":false,"id":6239,"mutability":"mutable","name":"fees","nodeType":"VariableDeclaration","scope":6255,"src":"139421:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6238,"name":"uint256","nodeType":"ElementaryTypeName","src":"139421:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6249,"initialValue":{"arguments":[{"expression":{"id":6246,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"139472:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}},"id":6247,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fee","nodeType":"MemberAccess","referencedDeclaration":5530,"src":"139472:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6240,"name":"real","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"139437:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":6241,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"139444:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}},"id":6242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"upperTarget","nodeType":"MemberAccess","referencedDeclaration":5534,"src":"139444:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"139437:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6244,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"139436:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDown","nodeType":"MemberAccess","referencedDeclaration":5134,"src":"139436:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"139436:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"139421:62:0"},{"expression":{"arguments":[{"id":6252,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"139514:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6250,"name":"real","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"139505:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"139505:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"139505:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6208,"id":6254,"nodeType":"Return","src":"139498:21:0"}]},"id":6256,"nodeType":"IfStatement","src":"139330:201:0","trueBody":{"id":6237,"nodeType":"Block","src":"139362:38:0","statements":[{"expression":{"id":6235,"name":"real","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"139384:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6208,"id":6236,"nodeType":"Return","src":"139377:11:0"}]}},"id":6257,"nodeType":"IfStatement","src":"139168:363:0","trueBody":{"id":6230,"nodeType":"Block","src":"139199:125:0","statements":[{"assignments":[6214],"declarations":[{"constant":false,"id":6214,"mutability":"mutable","name":"fees","nodeType":"VariableDeclaration","scope":6230,"src":"139214:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6213,"name":"uint256","nodeType":"ElementaryTypeName","src":"139214:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6224,"initialValue":{"arguments":[{"expression":{"id":6221,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"139265:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}},"id":6222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fee","nodeType":"MemberAccess","referencedDeclaration":5530,"src":"139265:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6215,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"139230:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}},"id":6216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lowerTarget","nodeType":"MemberAccess","referencedDeclaration":5532,"src":"139230:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6217,"name":"real","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"139251:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"139230:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6219,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"139229:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDown","nodeType":"MemberAccess","referencedDeclaration":5134,"src":"139229:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"139229:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"139214:62:0"},{"expression":{"arguments":[{"id":6227,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"139307:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6225,"name":"real","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"139298:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"139298:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"139298:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6208,"id":6229,"nodeType":"Return","src":"139291:21:0"}]}}]},"id":6259,"implemented":true,"kind":"function","modifiers":[],"name":"_toNominal","nodeType":"FunctionDefinition","parameters":{"id":6205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6202,"mutability":"mutable","name":"real","nodeType":"VariableDeclaration","scope":6259,"src":"138942:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6201,"name":"uint256","nodeType":"ElementaryTypeName","src":"138942:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6204,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":6259,"src":"138956:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":6203,"name":"Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"138956:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"138941:36:0"},"returnParameters":{"id":6208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6207,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6259,"src":"139001:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6206,"name":"uint256","nodeType":"ElementaryTypeName","src":"139001:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"139000:9:0"},"scope":6389,"src":"138922:616:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6321,"nodeType":"Block","src":"139639:493:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6268,"name":"nominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"139753:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6269,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"139763:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}},"id":6270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lowerTarget","nodeType":"MemberAccess","referencedDeclaration":5532,"src":"139763:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"139753:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6292,"name":"nominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"139920:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":6293,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"139931:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}},"id":6294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"upperTarget","nodeType":"MemberAccess","referencedDeclaration":5534,"src":"139931:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"139920:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6318,"nodeType":"Block","src":"139998:127:0","statements":[{"expression":{"components":[{"arguments":[{"arguments":[{"expression":{"id":6312,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"140100:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}},"id":6313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fee","nodeType":"MemberAccess","referencedDeclaration":5530,"src":"140100:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":6309,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"140081:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$5377_$","typeString":"type(library FixedPoint)"}},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ONE","nodeType":"MemberAccess","referencedDeclaration":5042,"src":"140081:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"140081:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"140081:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"expression":{"id":6304,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"140052:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}},"id":6305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"upperTarget","nodeType":"MemberAccess","referencedDeclaration":5534,"src":"140052:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":6301,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"140033:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}},"id":6302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fee","nodeType":"MemberAccess","referencedDeclaration":5530,"src":"140033:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDown","nodeType":"MemberAccess","referencedDeclaration":5134,"src":"140033:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"140033:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6299,"name":"nominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"140021:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5100,"src":"140021:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"140021:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divDown","nodeType":"MemberAccess","referencedDeclaration":5228,"src":"140021:59:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"140021:91:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"140020:93:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6267,"id":6317,"nodeType":"Return","src":"140013:100:0"}]},"id":6319,"nodeType":"IfStatement","src":"139916:209:0","trueBody":{"id":6298,"nodeType":"Block","src":"139951:41:0","statements":[{"expression":{"id":6296,"name":"nominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"139973:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6267,"id":6297,"nodeType":"Return","src":"139966:14:0"}]}},"id":6320,"nodeType":"IfStatement","src":"139749:376:0","trueBody":{"id":6291,"nodeType":"Block","src":"139783:127:0","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":6286,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"139886:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}},"id":6287,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fee","nodeType":"MemberAccess","referencedDeclaration":5530,"src":"139886:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":6283,"name":"FixedPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"139867:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint_$5377_$","typeString":"type(library FixedPoint)"}},"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ONE","nodeType":"MemberAccess","referencedDeclaration":5042,"src":"139867:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":5074,"src":"139867:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"139867:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"arguments":[{"arguments":[{"expression":{"id":6277,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"139837:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}},"id":6278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lowerTarget","nodeType":"MemberAccess","referencedDeclaration":5532,"src":"139837:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":6274,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"139818:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params memory"}},"id":6275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fee","nodeType":"MemberAccess","referencedDeclaration":5530,"src":"139818:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDown","nodeType":"MemberAccess","referencedDeclaration":5134,"src":"139818:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"139818:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6272,"name":"nominal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"139806:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":5074,"src":"139806:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"139806:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"139805:53:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divDown","nodeType":"MemberAccess","referencedDeclaration":5228,"src":"139805:61:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"139805:93:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6267,"id":6290,"nodeType":"Return","src":"139798:100:0"}]}}]},"id":6322,"implemented":true,"kind":"function","modifiers":[],"name":"_fromNominal","nodeType":"FunctionDefinition","parameters":{"id":6264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6261,"mutability":"mutable","name":"nominal","nodeType":"VariableDeclaration","scope":6322,"src":"139568:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6260,"name":"uint256","nodeType":"ElementaryTypeName","src":"139568:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6263,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":6322,"src":"139585:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_memory_ptr","typeString":"struct LinearMath.Params"},"typeName":{"id":6262,"name":"Params","nodeType":"UserDefinedTypeName","referencedDeclaration":5535,"src":"139585:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Params_$5535_storage_ptr","typeString":"struct LinearMath.Params"}},"visibility":"internal"}],"src":"139567:39:0"},"returnParameters":{"id":6267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6266,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6322,"src":"139630:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6265,"name":"uint256","nodeType":"ElementaryTypeName","src":"139630:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"139629:9:0"},"scope":6389,"src":"139546:586:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6387,"nodeType":"Block","src":"140353:1466:0","statements":[{"assignments":[6338],"declarations":[{"constant":false,"id":6338,"mutability":"mutable","name":"bptRatio","nodeType":"VariableDeclaration","scope":6387,"src":"141358:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6337,"name":"uint256","nodeType":"ElementaryTypeName","src":"141358:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6343,"initialValue":{"arguments":[{"id":6341,"name":"bptTotalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6329,"src":"141397:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6339,"name":"bptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"141377:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divDown","nodeType":"MemberAccess","referencedDeclaration":5228,"src":"141377:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"141377:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"141358:54:0"},{"assignments":[6348],"declarations":[{"constant":false,"id":6348,"mutability":"mutable","name":"amountsOut","nodeType":"VariableDeclaration","scope":6387,"src":"141425:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6346,"name":"uint256","nodeType":"ElementaryTypeName","src":"141425:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6347,"nodeType":"ArrayTypeName","src":"141425:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6355,"initialValue":{"arguments":[{"expression":{"id":6352,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"141469:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"141469:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"141455:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6349,"name":"uint256","nodeType":"ElementaryTypeName","src":"141459:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6350,"nodeType":"ArrayTypeName","src":"141459:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"141455:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"141425:60:0"},{"body":{"id":6383,"nodeType":"Block","src":"141542:240:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6367,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"141676:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6368,"name":"bptIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"141681:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"141676:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6382,"nodeType":"IfStatement","src":"141672:99:0","trueBody":{"id":6381,"nodeType":"Block","src":"141691:80:0","statements":[{"expression":{"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6370,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"141710:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6372,"indexExpression":{"id":6371,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"141721:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"141710:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6377,"name":"bptRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"141746:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":6373,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"141726:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6375,"indexExpression":{"id":6374,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"141735:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"141726:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDown","nodeType":"MemberAccess","referencedDeclaration":5134,"src":"141726:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"141726:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"141710:45:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6380,"nodeType":"ExpressionStatement","src":"141710:45:0"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"141516:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6361,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"141520:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"141520:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"141516:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6384,"initializationExpression":{"assignments":[6357],"declarations":[{"constant":false,"id":6357,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":6384,"src":"141501:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6356,"name":"uint256","nodeType":"ElementaryTypeName","src":"141501:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6359,"initialValue":{"hexValue":"30","id":6358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"141513:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"141501:13:0"},"loopExpression":{"expression":{"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"141537:3:0","subExpression":{"id":6364,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"141537:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6366,"nodeType":"ExpressionStatement","src":"141537:3:0"},"nodeType":"ForStatement","src":"141496:286:0"},{"expression":{"id":6385,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"141801:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":6336,"id":6386,"nodeType":"Return","src":"141794:17:0"}]},"id":6388,"implemented":true,"kind":"function","modifiers":[],"name":"_calcTokensOutGivenExactBptIn","nodeType":"FunctionDefinition","parameters":{"id":6332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6325,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":6388,"src":"140189:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6323,"name":"uint256","nodeType":"ElementaryTypeName","src":"140189:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6324,"nodeType":"ArrayTypeName","src":"140189:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6327,"mutability":"mutable","name":"bptAmountIn","nodeType":"VariableDeclaration","scope":6388,"src":"140225:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6326,"name":"uint256","nodeType":"ElementaryTypeName","src":"140225:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6329,"mutability":"mutable","name":"bptTotalSupply","nodeType":"VariableDeclaration","scope":6388,"src":"140255:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6328,"name":"uint256","nodeType":"ElementaryTypeName","src":"140255:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6331,"mutability":"mutable","name":"bptIndex","nodeType":"VariableDeclaration","scope":6388,"src":"140288:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6330,"name":"uint256","nodeType":"ElementaryTypeName","src":"140288:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"140178:133:0"},"returnParameters":{"id":6336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6335,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6388,"src":"140335:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6333,"name":"uint256","nodeType":"ElementaryTypeName","src":"140335:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6334,"nodeType":"ArrayTypeName","src":"140335:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"140334:18:0"},"scope":6389,"src":"140140:1679:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10227,"src":"127520:14302:0"},{"id":6390,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"141830:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":6428,"linearizedBaseContracts":[6428],"name":"LinearPoolUserData","nodeType":"ContractDefinition","nodes":[{"canonicalName":"LinearPoolUserData.ExitKind","id":6392,"members":[{"id":6391,"name":"EMERGENCY_EXACT_BPT_IN_FOR_TOKENS_OUT","nodeType":"EnumValue","src":"141909:37:0"}],"name":"ExitKind","nodeType":"EnumDefinition","src":"141893:55:0"},{"body":{"id":6406,"nodeType":"Block","src":"142026:54:0","statements":[{"expression":{"arguments":[{"id":6401,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6394,"src":"142055:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":6402,"name":"ExitKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"142062:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ExitKind_$6392_$","typeString":"type(enum LinearPoolUserData.ExitKind)"}}],"id":6403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"142061:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ExitKind_$6392_$","typeString":"type(enum LinearPoolUserData.ExitKind)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_enum$_ExitKind_$6392_$","typeString":"type(enum LinearPoolUserData.ExitKind)"}],"expression":{"id":6399,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"142044:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"142044:10:0","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"142044:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_ExitKind_$6392","typeString":"enum LinearPoolUserData.ExitKind"}},"functionReturnParameters":6398,"id":6405,"nodeType":"Return","src":"142037:35:0"}]},"id":6407,"implemented":true,"kind":"function","modifiers":[],"name":"exitKind","nodeType":"FunctionDefinition","parameters":{"id":6395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6394,"mutability":"mutable","name":"self","nodeType":"VariableDeclaration","scope":6407,"src":"141974:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6393,"name":"bytes","nodeType":"ElementaryTypeName","src":"141974:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"141973:19:0"},"returnParameters":{"id":6398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6397,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6407,"src":"142016:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ExitKind_$6392","typeString":"enum LinearPoolUserData.ExitKind"},"typeName":{"id":6396,"name":"ExitKind","nodeType":"UserDefinedTypeName","referencedDeclaration":6392,"src":"142016:8:0","typeDescriptions":{"typeIdentifier":"t_enum$_ExitKind_$6392","typeString":"enum LinearPoolUserData.ExitKind"}},"visibility":"internal"}],"src":"142015:10:0"},"scope":6428,"src":"141956:124:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6426,"nodeType":"Block","src":"142183:74:0","statements":[{"expression":{"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[null,{"id":6414,"name":"bptAmountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"142197:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6415,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"142194:15:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$_t_uint256_$","typeString":"tuple(,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6418,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"142223:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":6419,"name":"ExitKind","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"142230:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ExitKind_$6392_$","typeString":"type(enum LinearPoolUserData.ExitKind)"}},{"id":6421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"142240:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6420,"name":"uint256","nodeType":"ElementaryTypeName","src":"142240:7:0","typeDescriptions":{}}}],"id":6422,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"142229:19:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_enum$_ExitKind_$6392_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(enum LinearPoolUserData.ExitKind),type(uint256))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_enum$_ExitKind_$6392_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(enum LinearPoolUserData.ExitKind),type(uint256))"}],"expression":{"id":6416,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"142212:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"142212:10:0","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"142212:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_ExitKind_$6392_$_t_uint256_$","typeString":"tuple(enum LinearPoolUserData.ExitKind,uint256)"}},"src":"142194:55:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6425,"nodeType":"ExpressionStatement","src":"142194:55:0"}]},"id":6427,"implemented":true,"kind":"function","modifiers":[],"name":"exactBptInForTokensOut","nodeType":"FunctionDefinition","parameters":{"id":6410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6409,"mutability":"mutable","name":"self","nodeType":"VariableDeclaration","scope":6427,"src":"142120:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6408,"name":"bytes","nodeType":"ElementaryTypeName","src":"142120:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"142119:19:0"},"returnParameters":{"id":6413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6412,"mutability":"mutable","name":"bptAmountIn","nodeType":"VariableDeclaration","scope":6427,"src":"142162:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6411,"name":"uint256","nodeType":"ElementaryTypeName","src":"142162:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"142161:21:0"},"scope":6428,"src":"142088:169:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10227,"src":"141859:401:0"},{"id":6429,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"142268:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":6430,"nodeType":"StructuredDocumentation","src":"142295:315:0","text":" @dev This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero\n address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like\n types.\n This concept is unrelated to a Pool's Asset Managers."},"fullyImplemented":true,"id":6431,"linearizedBaseContracts":[6431],"name":"IAsset","nodeType":"ContractDefinition","nodes":[],"scope":10227,"src":"142612:75:0"},{"id":6432,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"142699:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":6433,"nodeType":"StructuredDocumentation","src":"142753:455:0","text":" @dev Exponentiation and logarithm functions for 18 decimal fixed point numbers (both base and exponent/argument).\n Exponentiation and logarithm with arbitrary bases (x^y and log_x(y)) are implemented by conversion to natural\n exponentiation and logarithm (where the base is Euler's number).\n @author Fernando Martinelli - @fernandomartinelli\n @author Sergio Yuhjtman - @sergioyuhjtman\n @author Daniel Fernandez - @dmf7z"},"fullyImplemented":true,"id":7727,"linearizedBaseContracts":[7727],"name":"LogExpMath","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":6436,"mutability":"constant","name":"ONE_18","nodeType":"VariableDeclaration","scope":7727,"src":"143495:29:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6434,"name":"int256","nodeType":"ElementaryTypeName","src":"143495:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"31653138","id":6435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"143520:4:0","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"visibility":"internal"},{"constant":true,"id":6439,"mutability":"constant","name":"ONE_20","nodeType":"VariableDeclaration","scope":7727,"src":"143689:29:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6437,"name":"int256","nodeType":"ElementaryTypeName","src":"143689:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"31653230","id":6438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"143714:4:0","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000_by_1","typeString":"int_const 100000000000000000000"},"value":"1e20"},"visibility":"internal"},{"constant":true,"id":6442,"mutability":"constant","name":"ONE_36","nodeType":"VariableDeclaration","scope":7727,"src":"143725:29:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6440,"name":"int256","nodeType":"ElementaryTypeName","src":"143725:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"31653336","id":6441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"143750:4:0","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"visibility":"internal"},{"constant":true,"id":6445,"mutability":"constant","name":"MAX_NATURAL_EXPONENT","nodeType":"VariableDeclaration","scope":7727,"src":"144280:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6443,"name":"int256","nodeType":"ElementaryTypeName","src":"144280:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"313330653138","id":6444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"144319:6:0","typeDescriptions":{"typeIdentifier":"t_rational_130000000000000000000_by_1","typeString":"int_const 130000000000000000000"},"value":"130e18"},"visibility":"internal"},{"constant":true,"id":6449,"mutability":"constant","name":"MIN_NATURAL_EXPONENT","nodeType":"VariableDeclaration","scope":7727,"src":"144332:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6446,"name":"int256","nodeType":"ElementaryTypeName","src":"144332:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"id":6448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"144371:6:0","subExpression":{"hexValue":"3431653138","id":6447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"144372:5:0","typeDescriptions":{"typeIdentifier":"t_rational_41000000000000000000_by_1","typeString":"int_const 41000000000000000000"},"value":"41e18"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_41000000000000000000_by_1","typeString":"int_const -41000000000000000000"}},"visibility":"internal"},{"constant":true,"id":6454,"mutability":"constant","name":"LN_36_LOWER_BOUND","nodeType":"VariableDeclaration","scope":7727,"src":"144532:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6450,"name":"int256","nodeType":"ElementaryTypeName","src":"144532:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":6451,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"144568:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31653137","id":6452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"144577:4:0","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"value":"1e17"},"src":"144568:13:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":true,"id":6459,"mutability":"constant","name":"LN_36_UPPER_BOUND","nodeType":"VariableDeclaration","scope":7727,"src":"144588:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6455,"name":"int256","nodeType":"ElementaryTypeName","src":"144588:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":6456,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"144624:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31653137","id":6457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"144633:4:0","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"value":"1e17"},"src":"144624:13:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":true,"id":6469,"mutability":"constant","name":"MILD_EXPONENT_BOUND","nodeType":"VariableDeclaration","scope":7727,"src":"144646:63:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6460,"name":"uint256","nodeType":"ElementaryTypeName","src":"144646:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_28948022309329048855892746252171976963317496166410141009864396001978282409984_by_1","typeString":"int_const 2894...(69 digits omitted)...9984"},"id":6463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"144685:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323534","id":6462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"144688:3:0","typeDescriptions":{"typeIdentifier":"t_rational_254_by_1","typeString":"int_const 254"},"value":"254"},"src":"144685:6:0","typeDescriptions":{"typeIdentifier":"t_rational_28948022309329048855892746252171976963317496166410141009864396001978282409984_by_1","typeString":"int_const 2894...(69 digits omitted)...9984"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":6466,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"144702:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"144694:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6464,"name":"uint256","nodeType":"ElementaryTypeName","src":"144694:7:0","typeDescriptions":{}}},"id":6467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"144694:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"144685:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":true,"id":6472,"mutability":"constant","name":"x0","nodeType":"VariableDeclaration","scope":7727,"src":"144747:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6470,"name":"int256","nodeType":"ElementaryTypeName","src":"144747:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"313238303030303030303030303030303030303030","id":6471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"144768:21:0","typeDescriptions":{"typeIdentifier":"t_rational_128000000000000000000_by_1","typeString":"int_const 128000000000000000000"},"value":"128000000000000000000"},"visibility":"internal"},{"constant":true,"id":6475,"mutability":"constant","name":"a0","nodeType":"VariableDeclaration","scope":7727,"src":"144804:77:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6473,"name":"int256","nodeType":"ElementaryTypeName","src":"144804:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"3338383737303834303539393435393530393232323030303030303030303030303030303030303030303030303030303030303030303030","id":6474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"144825:56:0","typeDescriptions":{"typeIdentifier":"t_rational_38877084059945950922200000000000000000000000000000000000_by_1","typeString":"int_const 3887...(48 digits omitted)...0000"},"value":"38877084059945950922200000000000000000000000000000000000"},"visibility":"internal"},{"constant":true,"id":6478,"mutability":"constant","name":"x1","nodeType":"VariableDeclaration","scope":7727,"src":"144913:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6476,"name":"int256","nodeType":"ElementaryTypeName","src":"144913:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"3634303030303030303030303030303030303030","id":6477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"144934:20:0","typeDescriptions":{"typeIdentifier":"t_rational_64000000000000000000_by_1","typeString":"int_const 64000000000000000000"},"value":"64000000000000000000"},"visibility":"internal"},{"constant":true,"id":6481,"mutability":"constant","name":"a1","nodeType":"VariableDeclaration","scope":7727,"src":"144969:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6479,"name":"int256","nodeType":"ElementaryTypeName","src":"144969:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"36323335313439303830383131363136383832393130303030303030","id":6480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"144990:28:0","typeDescriptions":{"typeIdentifier":"t_rational_6235149080811616882910000000_by_1","typeString":"int_const 6235149080811616882910000000"},"value":"6235149080811616882910000000"},"visibility":"internal"},{"constant":true,"id":6484,"mutability":"constant","name":"x2","nodeType":"VariableDeclaration","scope":7727,"src":"145081:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6482,"name":"int256","nodeType":"ElementaryTypeName","src":"145081:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"33323030303030303030303030303030303030303030","id":6483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"145102:22:0","typeDescriptions":{"typeIdentifier":"t_rational_3200000000000000000000_by_1","typeString":"int_const 3200000000000000000000"},"value":"3200000000000000000000"},"visibility":"internal"},{"constant":true,"id":6487,"mutability":"constant","name":"a2","nodeType":"VariableDeclaration","scope":7727,"src":"145139:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6485,"name":"int256","nodeType":"ElementaryTypeName","src":"145139:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"37383936323936303138323638303639353136313030303030303030303030303030","id":6486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"145160:34:0","typeDescriptions":{"typeIdentifier":"t_rational_7896296018268069516100000000000000_by_1","typeString":"int_const 7896...(26 digits omitted)...0000"},"value":"7896296018268069516100000000000000"},"visibility":"internal"},{"constant":true,"id":6490,"mutability":"constant","name":"x3","nodeType":"VariableDeclaration","scope":7727,"src":"145212:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6488,"name":"int256","nodeType":"ElementaryTypeName","src":"145212:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"31363030303030303030303030303030303030303030","id":6489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"145233:22:0","typeDescriptions":{"typeIdentifier":"t_rational_1600000000000000000000_by_1","typeString":"int_const 1600000000000000000000"},"value":"1600000000000000000000"},"visibility":"internal"},{"constant":true,"id":6493,"mutability":"constant","name":"a3","nodeType":"VariableDeclaration","scope":7727,"src":"145270:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6491,"name":"int256","nodeType":"ElementaryTypeName","src":"145270:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"383838363131303532303530373837323633363736303030303030","id":6492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"145291:27:0","typeDescriptions":{"typeIdentifier":"t_rational_888611052050787263676000000_by_1","typeString":"int_const 888611052050787263676000000"},"value":"888611052050787263676000000"},"visibility":"internal"},{"constant":true,"id":6496,"mutability":"constant","name":"x4","nodeType":"VariableDeclaration","scope":7727,"src":"145336:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6494,"name":"int256","nodeType":"ElementaryTypeName","src":"145336:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"383030303030303030303030303030303030303030","id":6495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"145357:21:0","typeDescriptions":{"typeIdentifier":"t_rational_800000000000000000000_by_1","typeString":"int_const 800000000000000000000"},"value":"800000000000000000000"},"visibility":"internal"},{"constant":true,"id":6499,"mutability":"constant","name":"a4","nodeType":"VariableDeclaration","scope":7727,"src":"145393:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6497,"name":"int256","nodeType":"ElementaryTypeName","src":"145393:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"323938303935373938373034313732383237343734303030","id":6498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"145414:24:0","typeDescriptions":{"typeIdentifier":"t_rational_298095798704172827474000_by_1","typeString":"int_const 298095798704172827474000"},"value":"298095798704172827474000"},"visibility":"internal"},{"constant":true,"id":6502,"mutability":"constant","name":"x5","nodeType":"VariableDeclaration","scope":7727,"src":"145456:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6500,"name":"int256","nodeType":"ElementaryTypeName","src":"145456:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"343030303030303030303030303030303030303030","id":6501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"145477:21:0","typeDescriptions":{"typeIdentifier":"t_rational_400000000000000000000_by_1","typeString":"int_const 400000000000000000000"},"value":"400000000000000000000"},"visibility":"internal"},{"constant":true,"id":6505,"mutability":"constant","name":"a5","nodeType":"VariableDeclaration","scope":7727,"src":"145513:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6503,"name":"int256","nodeType":"ElementaryTypeName","src":"145513:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"35343539383135303033333134343233393037383130","id":6504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"145534:22:0","typeDescriptions":{"typeIdentifier":"t_rational_5459815003314423907810_by_1","typeString":"int_const 5459815003314423907810"},"value":"5459815003314423907810"},"visibility":"internal"},{"constant":true,"id":6508,"mutability":"constant","name":"x6","nodeType":"VariableDeclaration","scope":7727,"src":"145574:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6506,"name":"int256","nodeType":"ElementaryTypeName","src":"145574:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"323030303030303030303030303030303030303030","id":6507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"145595:21:0","typeDescriptions":{"typeIdentifier":"t_rational_200000000000000000000_by_1","typeString":"int_const 200000000000000000000"},"value":"200000000000000000000"},"visibility":"internal"},{"constant":true,"id":6511,"mutability":"constant","name":"a6","nodeType":"VariableDeclaration","scope":7727,"src":"145631:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6509,"name":"int256","nodeType":"ElementaryTypeName","src":"145631:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"373338393035363039383933303635303232373233","id":6510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"145652:21:0","typeDescriptions":{"typeIdentifier":"t_rational_738905609893065022723_by_1","typeString":"int_const 738905609893065022723"},"value":"738905609893065022723"},"visibility":"internal"},{"constant":true,"id":6514,"mutability":"constant","name":"x7","nodeType":"VariableDeclaration","scope":7727,"src":"145691:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6512,"name":"int256","nodeType":"ElementaryTypeName","src":"145691:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"313030303030303030303030303030303030303030","id":6513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"145712:21:0","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000_by_1","typeString":"int_const 100000000000000000000"},"value":"100000000000000000000"},"visibility":"internal"},{"constant":true,"id":6517,"mutability":"constant","name":"a7","nodeType":"VariableDeclaration","scope":7727,"src":"145748:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6515,"name":"int256","nodeType":"ElementaryTypeName","src":"145748:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"323731383238313832383435393034353233353336","id":6516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"145769:21:0","typeDescriptions":{"typeIdentifier":"t_rational_271828182845904523536_by_1","typeString":"int_const 271828182845904523536"},"value":"271828182845904523536"},"visibility":"internal"},{"constant":true,"id":6520,"mutability":"constant","name":"x8","nodeType":"VariableDeclaration","scope":7727,"src":"145808:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6518,"name":"int256","nodeType":"ElementaryTypeName","src":"145808:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"3530303030303030303030303030303030303030","id":6519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"145829:20:0","typeDescriptions":{"typeIdentifier":"t_rational_50000000000000000000_by_1","typeString":"int_const 50000000000000000000"},"value":"50000000000000000000"},"visibility":"internal"},{"constant":true,"id":6523,"mutability":"constant","name":"a8","nodeType":"VariableDeclaration","scope":7727,"src":"145865:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6521,"name":"int256","nodeType":"ElementaryTypeName","src":"145865:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"313634383732313237303730303132383134363835","id":6522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"145886:21:0","typeDescriptions":{"typeIdentifier":"t_rational_164872127070012814685_by_1","typeString":"int_const 164872127070012814685"},"value":"164872127070012814685"},"visibility":"internal"},{"constant":true,"id":6526,"mutability":"constant","name":"x9","nodeType":"VariableDeclaration","scope":7727,"src":"145925:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6524,"name":"int256","nodeType":"ElementaryTypeName","src":"145925:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"3235303030303030303030303030303030303030","id":6525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"145946:20:0","typeDescriptions":{"typeIdentifier":"t_rational_25000000000000000000_by_1","typeString":"int_const 25000000000000000000"},"value":"25000000000000000000"},"visibility":"internal"},{"constant":true,"id":6529,"mutability":"constant","name":"a9","nodeType":"VariableDeclaration","scope":7727,"src":"145982:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6527,"name":"int256","nodeType":"ElementaryTypeName","src":"145982:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"313238343032353431363638373734313438343037","id":6528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"146003:21:0","typeDescriptions":{"typeIdentifier":"t_rational_128402541668774148407_by_1","typeString":"int_const 128402541668774148407"},"value":"128402541668774148407"},"visibility":"internal"},{"constant":true,"id":6532,"mutability":"constant","name":"x10","nodeType":"VariableDeclaration","scope":7727,"src":"146042:42:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6530,"name":"int256","nodeType":"ElementaryTypeName","src":"146042:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"3132353030303030303030303030303030303030","id":6531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"146064:20:0","typeDescriptions":{"typeIdentifier":"t_rational_12500000000000000000_by_1","typeString":"int_const 12500000000000000000"},"value":"12500000000000000000"},"visibility":"internal"},{"constant":true,"id":6535,"mutability":"constant","name":"a10","nodeType":"VariableDeclaration","scope":7727,"src":"146100:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6533,"name":"int256","nodeType":"ElementaryTypeName","src":"146100:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"313133333134383435333036363832363331363833","id":6534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"146122:21:0","typeDescriptions":{"typeIdentifier":"t_rational_113314845306682631683_by_1","typeString":"int_const 113314845306682631683"},"value":"113314845306682631683"},"visibility":"internal"},{"constant":true,"id":6538,"mutability":"constant","name":"x11","nodeType":"VariableDeclaration","scope":7727,"src":"146162:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6536,"name":"int256","nodeType":"ElementaryTypeName","src":"146162:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"36323530303030303030303030303030303030","id":6537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"146184:19:0","typeDescriptions":{"typeIdentifier":"t_rational_6250000000000000000_by_1","typeString":"int_const 6250000000000000000"},"value":"6250000000000000000"},"visibility":"internal"},{"constant":true,"id":6541,"mutability":"constant","name":"a11","nodeType":"VariableDeclaration","scope":7727,"src":"146219:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6539,"name":"int256","nodeType":"ElementaryTypeName","src":"146219:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"313036343439343435383931373835393432393536","id":6540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"146241:21:0","typeDescriptions":{"typeIdentifier":"t_rational_106449445891785942956_by_1","typeString":"int_const 106449445891785942956"},"value":"106449445891785942956"},"visibility":"internal"},{"body":{"id":6670,"nodeType":"Block","src":"146574:2171:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6551,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"146589:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"146594:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"146589:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6560,"nodeType":"IfStatement","src":"146585:134:0","trueBody":{"id":6559,"nodeType":"Block","src":"146597:122:0","statements":[{"expression":{"arguments":[{"id":6556,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"146700:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"146692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6554,"name":"uint256","nodeType":"ElementaryTypeName","src":"146692:7:0","typeDescriptions":{}}},"id":6557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"146692:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6550,"id":6558,"nodeType":"Return","src":"146685:22:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6561,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"146735:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"146740:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"146735:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6567,"nodeType":"IfStatement","src":"146731:47:0","trueBody":{"id":6566,"nodeType":"Block","src":"146743:35:0","statements":[{"expression":{"hexValue":"30","id":6564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"146765:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6550,"id":6565,"nodeType":"Return","src":"146758:8:0"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6569,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"147164:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":6572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"147168:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":6571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"147171:3:0","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"147168:6:0","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"src":"147164:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6574,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"147176:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"X_OUT_OF_BOUNDS","nodeType":"MemberAccess","referencedDeclaration":4412,"src":"147176:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6568,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"147155:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":6576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"147155:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6577,"nodeType":"ExpressionStatement","src":"147155:44:0"},{"assignments":[6579],"declarations":[{"constant":false,"id":6579,"mutability":"mutable","name":"x_int256","nodeType":"VariableDeclaration","scope":6670,"src":"147210:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6578,"name":"int256","nodeType":"ElementaryTypeName","src":"147210:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6584,"initialValue":{"arguments":[{"id":6582,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"147235:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"147228:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6580,"name":"int256","nodeType":"ElementaryTypeName","src":"147228:6:0","typeDescriptions":{}}},"id":6583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"147228:9:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"147210:27:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6586,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"147606:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6587,"name":"MILD_EXPONENT_BOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6469,"src":"147610:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"147606:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6589,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"147631:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Y_OUT_OF_BOUNDS","nodeType":"MemberAccess","referencedDeclaration":4415,"src":"147631:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6585,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"147597:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":6591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"147597:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6592,"nodeType":"ExpressionStatement","src":"147597:57:0"},{"assignments":[6594],"declarations":[{"constant":false,"id":6594,"mutability":"mutable","name":"y_int256","nodeType":"VariableDeclaration","scope":6670,"src":"147665:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6593,"name":"int256","nodeType":"ElementaryTypeName","src":"147665:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6599,"initialValue":{"arguments":[{"id":6597,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"147690:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"147683:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6595,"name":"int256","nodeType":"ElementaryTypeName","src":"147683:6:0","typeDescriptions":{}}},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"147683:9:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"147665:27:0"},{"assignments":[6601],"declarations":[{"constant":false,"id":6601,"mutability":"mutable","name":"logx_times_y","nodeType":"VariableDeclaration","scope":6670,"src":"147705:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6600,"name":"int256","nodeType":"ElementaryTypeName","src":"147705:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6602,"nodeType":"VariableDeclarationStatement","src":"147705:19:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6603,"name":"LN_36_LOWER_BOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"147739:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6604,"name":"x_int256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"147759:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"147739:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6606,"name":"x_int256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"147771:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6607,"name":"LN_36_UPPER_BOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6459,"src":"147782:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"147771:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"147739:60:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6645,"nodeType":"Block","src":"148363:66:0","statements":[{"expression":{"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6637,"name":"logx_times_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"148378:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6639,"name":"x_int256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"148397:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6638,"name":"_ln","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"148393:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":6640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"148393:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6641,"name":"y_int256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"148409:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"148393:24:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"148378:39:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6644,"nodeType":"ExpressionStatement","src":"148378:39:0"}]},"id":6646,"nodeType":"IfStatement","src":"147735:694:0","trueBody":{"id":6636,"nodeType":"Block","src":"147801:556:0","statements":[{"assignments":[6611],"declarations":[{"constant":false,"id":6611,"mutability":"mutable","name":"ln_36_x","nodeType":"VariableDeclaration","scope":6636,"src":"147816:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6610,"name":"int256","nodeType":"ElementaryTypeName","src":"147816:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6615,"initialValue":{"arguments":[{"id":6613,"name":"x_int256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"147840:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6612,"name":"_ln_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"147833:6:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"147833:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"147816:33:0"},{"expression":{"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6616,"name":"logx_times_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"148256:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6617,"name":"ln_36_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"148273:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6618,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"148283:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"148273:16:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"148272:18:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6621,"name":"y_int256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"148293:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"148272:29:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6623,"name":"ln_36_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"148306:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":6624,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"148316:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"148306:16:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6626,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"148305:18:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6627,"name":"y_int256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"148326:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"148305:29:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6629,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"148304:31:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6630,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"148338:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"148304:40:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"148272:72:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6633,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"148271:74:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"148256:89:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6635,"nodeType":"ExpressionStatement","src":"148256:89:0"}]}},{"expression":{"id":6649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6647,"name":"logx_times_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"148439:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"id":6648,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"148455:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"148439:22:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6650,"nodeType":"ExpressionStatement","src":"148439:22:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6652,"name":"MIN_NATURAL_EXPONENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"148561:20:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6653,"name":"logx_times_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"148585:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"148561:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6655,"name":"logx_times_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"148601:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6656,"name":"MAX_NATURAL_EXPONENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"148617:20:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"148601:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"148561:76:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6659,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"148652:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"PRODUCT_OUT_OF_BOUNDS","nodeType":"MemberAccess","referencedDeclaration":4418,"src":"148652:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6651,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"148538:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"148538:153:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6662,"nodeType":"ExpressionStatement","src":"148538:153:0"},{"expression":{"arguments":[{"arguments":[{"id":6666,"name":"logx_times_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"148723:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6665,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"148719:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"148719:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"148711:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6663,"name":"uint256","nodeType":"ElementaryTypeName","src":"148711:7:0","typeDescriptions":{}}},"id":6668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"148711:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6550,"id":6669,"nodeType":"Return","src":"148704:33:0"}]},"documentation":{"id":6542,"nodeType":"StructuredDocumentation","src":"146283:218:0","text":" @dev Exponentiation (x^y) with unsigned 18 decimal fixed point base and exponent.\n Reverts if ln(x) * y is smaller than `MIN_NATURAL_EXPONENT`, or larger than `MAX_NATURAL_EXPONENT`."},"id":6671,"implemented":true,"kind":"function","modifiers":[],"name":"pow","nodeType":"FunctionDefinition","parameters":{"id":6547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6544,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":6671,"src":"146520:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6543,"name":"uint256","nodeType":"ElementaryTypeName","src":"146520:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6546,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":6671,"src":"146531:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6545,"name":"uint256","nodeType":"ElementaryTypeName","src":"146531:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"146519:22:0"},"returnParameters":{"id":6550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6549,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":6671,"src":"146565:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6548,"name":"uint256","nodeType":"ElementaryTypeName","src":"146565:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"146564:9:0"},"scope":7727,"src":"146507:2238:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7097,"nodeType":"Block","src":"149020:5460:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6680,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"149040:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6681,"name":"MIN_NATURAL_EXPONENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"149045:20:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"149040:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6683,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"149069:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6684,"name":"MAX_NATURAL_EXPONENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6445,"src":"149074:20:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"149069:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"149040:54:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6687,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"149096:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INVALID_EXPONENT","nodeType":"MemberAccess","referencedDeclaration":4421,"src":"149096:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6679,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"149031:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"149031:89:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6690,"nodeType":"ExpressionStatement","src":"149031:89:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6691,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"149137:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"149141:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"149137:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6706,"nodeType":"IfStatement","src":"149133:358:0","trueBody":{"id":6705,"nodeType":"Block","src":"149144:347:0","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":6694,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"149452:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6695,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"149461:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"149452:15:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"149451:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":6700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"149475:2:0","subExpression":{"id":6699,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"149476:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6698,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"149471:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"149471:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"149451:27:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6703,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"149450:29:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6678,"id":6704,"nodeType":"Return","src":"149443:36:0"}]}},{"assignments":[6708],"declarations":[{"constant":false,"id":6708,"mutability":"mutable","name":"firstAN","nodeType":"VariableDeclaration","scope":7097,"src":"150811:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6707,"name":"int256","nodeType":"ElementaryTypeName","src":"150811:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6709,"nodeType":"VariableDeclarationStatement","src":"150811:14:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6710,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"150840:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6711,"name":"x0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"150845:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"150840:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6722,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"150920:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6723,"name":"x1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"150925:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"150920:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6738,"nodeType":"Block","src":"150996:68:0","statements":[{"expression":{"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6734,"name":"firstAN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"151011:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":6735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"151021:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"151011:11:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6737,"nodeType":"ExpressionStatement","src":"151011:11:0"}]},"id":6739,"nodeType":"IfStatement","src":"150916:148:0","trueBody":{"id":6733,"nodeType":"Block","src":"150929:61:0","statements":[{"expression":{"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6725,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"150944:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6726,"name":"x1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"150949:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"150944:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6728,"nodeType":"ExpressionStatement","src":"150944:7:0"},{"expression":{"id":6731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6729,"name":"firstAN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"150966:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6730,"name":"a1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"150976:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"150966:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6732,"nodeType":"ExpressionStatement","src":"150966:12:0"}]}},"id":6740,"nodeType":"IfStatement","src":"150836:228:0","trueBody":{"id":6721,"nodeType":"Block","src":"150849:61:0","statements":[{"expression":{"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6713,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"150864:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6714,"name":"x0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"150869:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"150864:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6716,"nodeType":"ExpressionStatement","src":"150864:7:0"},{"expression":{"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6717,"name":"firstAN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"150886:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6718,"name":"a0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"150896:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"150886:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6720,"nodeType":"ExpressionStatement","src":"150886:12:0"}]}},{"expression":{"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6741,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"151218:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"313030","id":6742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"151223:3:0","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"151218:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6744,"nodeType":"ExpressionStatement","src":"151218:8:0"},{"assignments":[6746],"declarations":[{"constant":false,"id":6746,"mutability":"mutable","name":"product","nodeType":"VariableDeclaration","scope":7097,"src":"151443:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6745,"name":"int256","nodeType":"ElementaryTypeName","src":"151443:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6748,"initialValue":{"id":6747,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"151460:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"151443:23:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6749,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"151483:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6750,"name":"x2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"151488:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151483:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6766,"nodeType":"IfStatement","src":"151479:95:0","trueBody":{"id":6765,"nodeType":"Block","src":"151492:82:0","statements":[{"expression":{"id":6754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6752,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"151507:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6753,"name":"x2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"151512:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151507:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6755,"nodeType":"ExpressionStatement","src":"151507:7:0"},{"expression":{"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6756,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"151529:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6757,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"151540:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6758,"name":"a2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"151550:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151540:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"151539:14:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6761,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"151556:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151539:23:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151529:33:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6764,"nodeType":"ExpressionStatement","src":"151529:33:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6767,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"151588:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6768,"name":"x3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"151593:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151588:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6784,"nodeType":"IfStatement","src":"151584:95:0","trueBody":{"id":6783,"nodeType":"Block","src":"151597:82:0","statements":[{"expression":{"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6770,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"151612:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6771,"name":"x3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"151617:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151612:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6773,"nodeType":"ExpressionStatement","src":"151612:7:0"},{"expression":{"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6774,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"151634:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6775,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"151645:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6776,"name":"a3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"151655:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151645:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6778,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"151644:14:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6779,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"151661:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151644:23:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151634:33:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6782,"nodeType":"ExpressionStatement","src":"151634:33:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6785,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"151693:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6786,"name":"x4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"151698:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151693:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6802,"nodeType":"IfStatement","src":"151689:95:0","trueBody":{"id":6801,"nodeType":"Block","src":"151702:82:0","statements":[{"expression":{"id":6790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6788,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"151717:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6789,"name":"x4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"151722:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151717:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6791,"nodeType":"ExpressionStatement","src":"151717:7:0"},{"expression":{"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6792,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"151739:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6793,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"151750:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6794,"name":"a4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"151760:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151750:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6796,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"151749:14:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6797,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"151766:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151749:23:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151739:33:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6800,"nodeType":"ExpressionStatement","src":"151739:33:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6803,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"151798:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6804,"name":"x5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"151803:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151798:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6820,"nodeType":"IfStatement","src":"151794:95:0","trueBody":{"id":6819,"nodeType":"Block","src":"151807:82:0","statements":[{"expression":{"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6806,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"151822:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6807,"name":"x5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"151827:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151822:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6809,"nodeType":"ExpressionStatement","src":"151822:7:0"},{"expression":{"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6810,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"151844:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6811,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"151855:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6812,"name":"a5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6505,"src":"151865:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151855:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6814,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"151854:14:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6815,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"151871:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151854:23:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151844:33:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6818,"nodeType":"ExpressionStatement","src":"151844:33:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6821,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"151903:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6822,"name":"x6","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"151908:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151903:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6838,"nodeType":"IfStatement","src":"151899:95:0","trueBody":{"id":6837,"nodeType":"Block","src":"151912:82:0","statements":[{"expression":{"id":6826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6824,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"151927:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6825,"name":"x6","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"151932:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151927:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6827,"nodeType":"ExpressionStatement","src":"151927:7:0"},{"expression":{"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6828,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"151949:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6829,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"151960:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6830,"name":"a6","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"151970:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151960:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6832,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"151959:14:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6833,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"151976:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151959:23:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"151949:33:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6836,"nodeType":"ExpressionStatement","src":"151949:33:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6839,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"152008:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6840,"name":"x7","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"152013:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"152008:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6856,"nodeType":"IfStatement","src":"152004:95:0","trueBody":{"id":6855,"nodeType":"Block","src":"152017:82:0","statements":[{"expression":{"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6842,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"152032:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6843,"name":"x7","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"152037:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"152032:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6845,"nodeType":"ExpressionStatement","src":"152032:7:0"},{"expression":{"id":6853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6846,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"152054:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6847,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"152065:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6848,"name":"a7","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"152075:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"152065:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"152064:14:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6851,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"152081:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"152064:23:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"152054:33:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6854,"nodeType":"ExpressionStatement","src":"152054:33:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6857,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"152113:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6858,"name":"x8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"152118:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"152113:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6874,"nodeType":"IfStatement","src":"152109:95:0","trueBody":{"id":6873,"nodeType":"Block","src":"152122:82:0","statements":[{"expression":{"id":6862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6860,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"152137:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6861,"name":"x8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"152142:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"152137:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6863,"nodeType":"ExpressionStatement","src":"152137:7:0"},{"expression":{"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6864,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"152159:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6865,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"152170:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6866,"name":"a8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"152180:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"152170:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"152169:14:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6869,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"152186:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"152169:23:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"152159:33:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6872,"nodeType":"ExpressionStatement","src":"152159:33:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6875,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"152218:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6876,"name":"x9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"152223:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"152218:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6892,"nodeType":"IfStatement","src":"152214:95:0","trueBody":{"id":6891,"nodeType":"Block","src":"152227:82:0","statements":[{"expression":{"id":6880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6878,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"152242:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6879,"name":"x9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"152247:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"152242:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6881,"nodeType":"ExpressionStatement","src":"152242:7:0"},{"expression":{"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6882,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"152264:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6883,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"152275:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6884,"name":"a9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"152285:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"152275:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"152274:14:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6887,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"152291:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"152274:23:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"152264:33:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6890,"nodeType":"ExpressionStatement","src":"152264:33:0"}]}},{"assignments":[6894],"declarations":[{"constant":false,"id":6894,"mutability":"mutable","name":"seriesSum","nodeType":"VariableDeclaration","scope":7097,"src":"152620:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6893,"name":"int256","nodeType":"ElementaryTypeName","src":"152620:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6896,"initialValue":{"id":6895,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"152639:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"152620:25:0"},{"assignments":[6898],"declarations":[{"constant":false,"id":6898,"mutability":"mutable","name":"term","nodeType":"VariableDeclaration","scope":7097,"src":"152711:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6897,"name":"int256","nodeType":"ElementaryTypeName","src":"152711:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6899,"nodeType":"VariableDeclarationStatement","src":"152711:11:0"},{"expression":{"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6900,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"152834:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6901,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"152841:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"152834:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6903,"nodeType":"ExpressionStatement","src":"152834:8:0"},{"expression":{"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6904,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"152853:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6905,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"152866:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"152853:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6907,"nodeType":"ExpressionStatement","src":"152853:17:0"},{"expression":{"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6908,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153112:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6909,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153121:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6910,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"153128:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153121:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6912,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153120:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6913,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"153133:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153120:19:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6915,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153119:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":6916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"153143:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"153119:25:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153112:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6919,"nodeType":"ExpressionStatement","src":"153112:32:0"},{"expression":{"id":6922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6920,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"153155:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6921,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153168:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153155:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6923,"nodeType":"ExpressionStatement","src":"153155:17:0"},{"expression":{"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6924,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153185:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6925,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153194:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6926,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"153201:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153194:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6928,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153193:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6929,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"153206:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153193:19:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6931,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153192:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":6932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"153216:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"153192:25:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153185:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6935,"nodeType":"ExpressionStatement","src":"153185:32:0"},{"expression":{"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6936,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"153228:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6937,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153241:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153228:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6939,"nodeType":"ExpressionStatement","src":"153228:17:0"},{"expression":{"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6940,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153258:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6941,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153267:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6942,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"153274:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153267:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153266:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6945,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"153279:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153266:19:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153265:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"34","id":6948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"153289:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"153265:25:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153258:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6951,"nodeType":"ExpressionStatement","src":"153258:32:0"},{"expression":{"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6952,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"153301:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6953,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153314:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153301:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6955,"nodeType":"ExpressionStatement","src":"153301:17:0"},{"expression":{"id":6966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6956,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153331:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6957,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153340:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6958,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"153347:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153340:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6960,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153339:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6961,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"153352:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153339:19:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6963,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153338:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"35","id":6964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"153362:1:0","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"153338:25:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153331:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6967,"nodeType":"ExpressionStatement","src":"153331:32:0"},{"expression":{"id":6970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6968,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"153374:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6969,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153387:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153374:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6971,"nodeType":"ExpressionStatement","src":"153374:17:0"},{"expression":{"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6972,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153404:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6973,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153413:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6974,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"153420:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153413:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153412:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6977,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"153425:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153412:19:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153411:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"36","id":6980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"153435:1:0","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"153411:25:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153404:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6983,"nodeType":"ExpressionStatement","src":"153404:32:0"},{"expression":{"id":6986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6984,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"153447:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6985,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153460:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153447:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6987,"nodeType":"ExpressionStatement","src":"153447:17:0"},{"expression":{"id":6998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6988,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153477:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6989,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153486:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6990,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"153493:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153486:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6992,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153485:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6993,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"153498:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153485:19:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6995,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153484:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"37","id":6996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"153508:1:0","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"153484:25:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153477:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6999,"nodeType":"ExpressionStatement","src":"153477:32:0"},{"expression":{"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7000,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"153520:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7001,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153533:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153520:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7003,"nodeType":"ExpressionStatement","src":"153520:17:0"},{"expression":{"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7004,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153550:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7005,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153559:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7006,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"153566:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153559:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153558:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7009,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"153571:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153558:19:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153557:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"38","id":7012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"153581:1:0","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"153557:25:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153550:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7015,"nodeType":"ExpressionStatement","src":"153550:32:0"},{"expression":{"id":7018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7016,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"153593:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7017,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153606:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153593:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7019,"nodeType":"ExpressionStatement","src":"153593:17:0"},{"expression":{"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7020,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153623:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7021,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153632:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7022,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"153639:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153632:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153631:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7025,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"153644:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153631:19:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7027,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153630:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"39","id":7028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"153654:1:0","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"153630:25:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153623:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7031,"nodeType":"ExpressionStatement","src":"153623:32:0"},{"expression":{"id":7034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7032,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"153666:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7033,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153679:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153666:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7035,"nodeType":"ExpressionStatement","src":"153666:17:0"},{"expression":{"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7036,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153696:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7037,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153705:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7038,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"153712:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153705:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7040,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153704:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7041,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"153717:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153704:19:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7043,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153703:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130","id":7044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"153727:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"153703:26:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153696:33:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7047,"nodeType":"ExpressionStatement","src":"153696:33:0"},{"expression":{"id":7050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7048,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"153740:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7049,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153753:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153740:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7051,"nodeType":"ExpressionStatement","src":"153740:17:0"},{"expression":{"id":7062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7052,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153770:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7053,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153779:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7054,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"153786:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153779:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7056,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153778:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7057,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"153791:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153778:19:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153777:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3131","id":7060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"153801:2:0","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"153777:26:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153770:33:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7063,"nodeType":"ExpressionStatement","src":"153770:33:0"},{"expression":{"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7064,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"153814:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7065,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153827:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153814:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7067,"nodeType":"ExpressionStatement","src":"153814:17:0"},{"expression":{"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7068,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153844:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7069,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153853:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7070,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"153860:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153853:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153852:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7073,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"153865:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153852:19:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"153851:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3132","id":7076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"153875:2:0","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"153851:26:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153844:33:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7079,"nodeType":"ExpressionStatement","src":"153844:33:0"},{"expression":{"id":7082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7080,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"153888:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7081,"name":"term","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"153901:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"153888:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7083,"nodeType":"ExpressionStatement","src":"153888:17:0"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7084,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6746,"src":"154425:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7085,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"154435:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"154425:19:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7087,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"154424:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7088,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"154448:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"154424:30:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7090,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"154423:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7091,"name":"firstAN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"154458:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"154423:42:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7093,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"154422:44:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":7094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"154469:3:0","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"154422:50:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6678,"id":7096,"nodeType":"Return","src":"154415:57:0"}]},"documentation":{"id":6672,"nodeType":"StructuredDocumentation","src":"148753:207:0","text":" @dev Natural exponentiation (e^x) with signed 18 decimal fixed point exponent.\n Reverts if `x` is smaller than MIN_NATURAL_EXPONENT, or larger than `MAX_NATURAL_EXPONENT`."},"id":7098,"implemented":true,"kind":"function","modifiers":[],"name":"exp","nodeType":"FunctionDefinition","parameters":{"id":6675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6674,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":7098,"src":"148979:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6673,"name":"int256","nodeType":"ElementaryTypeName","src":"148979:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"148978:10:0"},"returnParameters":{"id":6678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6677,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7098,"src":"149012:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6676,"name":"int256","nodeType":"ElementaryTypeName","src":"149012:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"149011:8:0"},"scope":7727,"src":"148966:5514:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7169,"nodeType":"Block","src":"154669:775:0","statements":[{"assignments":[7109],"declarations":[{"constant":false,"id":7109,"mutability":"mutable","name":"logBase","nodeType":"VariableDeclaration","scope":7169,"src":"154905:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7108,"name":"int256","nodeType":"ElementaryTypeName","src":"154905:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7110,"nodeType":"VariableDeclarationStatement","src":"154905:14:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7111,"name":"LN_36_LOWER_BOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"154934:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7112,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7103,"src":"154954:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"154934:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7114,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7103,"src":"154962:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7115,"name":"LN_36_UPPER_BOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6459,"src":"154969:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"154962:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"154934:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7133,"nodeType":"Block","src":"155043:55:0","statements":[{"expression":{"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7125,"name":"logBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"155058:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7127,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7103,"src":"155072:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7126,"name":"_ln","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"155068:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":7128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"155068:9:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7129,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"155080:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"155068:18:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"155058:28:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7132,"nodeType":"ExpressionStatement","src":"155058:28:0"}]},"id":7134,"nodeType":"IfStatement","src":"154930:168:0","trueBody":{"id":7124,"nodeType":"Block","src":"154988:49:0","statements":[{"expression":{"id":7122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7118,"name":"logBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"155003:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7120,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7103,"src":"155020:4:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7119,"name":"_ln_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"155013:6:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"155013:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"155003:22:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7123,"nodeType":"ExpressionStatement","src":"155003:22:0"}]}},{"assignments":[7136],"declarations":[{"constant":false,"id":7136,"mutability":"mutable","name":"logArg","nodeType":"VariableDeclaration","scope":7169,"src":"155110:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7135,"name":"int256","nodeType":"ElementaryTypeName","src":"155110:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7137,"nodeType":"VariableDeclarationStatement","src":"155110:13:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7138,"name":"LN_36_LOWER_BOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"155138:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7139,"name":"arg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7101,"src":"155158:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"155138:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7141,"name":"arg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7101,"src":"155165:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7142,"name":"LN_36_UPPER_BOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6459,"src":"155171:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"155165:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"155138:50:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7160,"nodeType":"Block","src":"155243:53:0","statements":[{"expression":{"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7152,"name":"logArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"155258:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7154,"name":"arg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7101,"src":"155271:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7153,"name":"_ln","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"155267:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":7155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"155267:8:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7156,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"155278:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"155267:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"155258:26:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7159,"nodeType":"ExpressionStatement","src":"155258:26:0"}]},"id":7161,"nodeType":"IfStatement","src":"155134:162:0","trueBody":{"id":7151,"nodeType":"Block","src":"155190:47:0","statements":[{"expression":{"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7145,"name":"logArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"155205:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7147,"name":"arg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7101,"src":"155221:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7146,"name":"_ln_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"155214:6:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"155214:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"155205:20:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7150,"nodeType":"ExpressionStatement","src":"155205:20:0"}]}},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7162,"name":"logArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"155410:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7163,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"155419:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"155410:15:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7165,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"155409:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7166,"name":"logBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"155429:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"155409:27:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7107,"id":7168,"nodeType":"Return","src":"155402:34:0"}]},"documentation":{"id":7099,"nodeType":"StructuredDocumentation","src":"154488:106:0","text":" @dev Logarithm (log(arg, base), with signed 18 decimal fixed point base and argument."},"id":7170,"implemented":true,"kind":"function","modifiers":[],"name":"log","nodeType":"FunctionDefinition","parameters":{"id":7104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7101,"mutability":"mutable","name":"arg","nodeType":"VariableDeclaration","scope":7170,"src":"154613:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7100,"name":"int256","nodeType":"ElementaryTypeName","src":"154613:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7103,"mutability":"mutable","name":"base","nodeType":"VariableDeclaration","scope":7170,"src":"154625:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7102,"name":"int256","nodeType":"ElementaryTypeName","src":"154625:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"154612:25:0"},"returnParameters":{"id":7107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7106,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7170,"src":"154661:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7105,"name":"int256","nodeType":"ElementaryTypeName","src":"154661:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"154660:8:0"},"scope":7727,"src":"154600:844:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7206,"nodeType":"Block","src":"155607:300:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7179,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"155711:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"155715:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"155711:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7182,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"155718:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"OUT_OF_BOUNDS","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"155718:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7178,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"155702:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"155702:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7185,"nodeType":"ExpressionStatement","src":"155702:37:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7186,"name":"LN_36_LOWER_BOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"155754:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7187,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"155774:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"155754:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7189,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"155779:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7190,"name":"LN_36_UPPER_BOUND","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6459,"src":"155783:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"155779:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"155754:46:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7204,"nodeType":"Block","src":"155860:40:0","statements":[{"expression":{"arguments":[{"id":7201,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"155886:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7200,"name":"_ln","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"155882:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":7202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"155882:6:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7177,"id":7203,"nodeType":"Return","src":"155875:13:0"}]},"id":7205,"nodeType":"IfStatement","src":"155750:150:0","trueBody":{"id":7199,"nodeType":"Block","src":"155802:52:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7194,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"155831:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7193,"name":"_ln_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"155824:6:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"155824:9:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7196,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"155836:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"155824:18:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7177,"id":7198,"nodeType":"Return","src":"155817:25:0"}]}}]},"documentation":{"id":7171,"nodeType":"StructuredDocumentation","src":"155452:96:0","text":" @dev Natural logarithm (ln(a)) with signed 18 decimal fixed point argument."},"id":7207,"implemented":true,"kind":"function","modifiers":[],"name":"ln","nodeType":"FunctionDefinition","parameters":{"id":7174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7173,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":7207,"src":"155566:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7172,"name":"int256","nodeType":"ElementaryTypeName","src":"155566:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"155565:10:0"},"returnParameters":{"id":7177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7176,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7207,"src":"155599:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7175,"name":"int256","nodeType":"ElementaryTypeName","src":"155599:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"155598:8:0"},"scope":7727,"src":"155554:353:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7571,"nodeType":"Block","src":"156079:5038:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7215,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"156094:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7216,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"156098:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"156094:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7230,"nodeType":"IfStatement","src":"156090:387:0","trueBody":{"id":7229,"nodeType":"Block","src":"156106:371:0","statements":[{"expression":{"components":[{"id":7226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"156437:27:0","subExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":7219,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"156443:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7220,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"156452:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"156443:15:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7222,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"156442:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7223,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"156462:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"156442:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7218,"name":"_ln","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"156438:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int256_$","typeString":"function (int256) pure returns (int256)"}},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"156438:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7227,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"156436:29:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7214,"id":7228,"nodeType":"Return","src":"156429:36:0"}]}},{"assignments":[7232],"declarations":[{"constant":false,"id":7232,"mutability":"mutable","name":"sum","nodeType":"VariableDeclaration","scope":7571,"src":"157819:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7231,"name":"int256","nodeType":"ElementaryTypeName","src":"157819:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7234,"initialValue":{"hexValue":"30","id":7233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"157832:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"157819:14:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7235,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"157848:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":7236,"name":"a0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"157853:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7237,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"157858:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"157853:11:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"157848:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7249,"nodeType":"IfStatement","src":"157844:117:0","trueBody":{"id":7248,"nodeType":"Block","src":"157866:95:0","statements":[{"expression":{"id":7242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7240,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"157881:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"id":7241,"name":"a0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"157886:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"157881:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7243,"nodeType":"ExpressionStatement","src":"157881:7:0"},{"expression":{"id":7246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7244,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"157940:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7245,"name":"x0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"157947:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"157940:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7247,"nodeType":"ExpressionStatement","src":"157940:9:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7250,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"157977:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":7251,"name":"a1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"157982:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7252,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"157987:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"157982:11:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"157977:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7264,"nodeType":"IfStatement","src":"157973:117:0","trueBody":{"id":7263,"nodeType":"Block","src":"157995:95:0","statements":[{"expression":{"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7255,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158010:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"id":7256,"name":"a1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"158015:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158010:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7258,"nodeType":"ExpressionStatement","src":"158010:7:0"},{"expression":{"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7259,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"158069:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7260,"name":"x1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"158076:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158069:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7262,"nodeType":"ExpressionStatement","src":"158069:9:0"}]}},{"expression":{"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7265,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"158224:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"313030","id":7266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"158231:3:0","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"158224:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7268,"nodeType":"ExpressionStatement","src":"158224:10:0"},{"expression":{"id":7271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7269,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158245:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"313030","id":7270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"158250:3:0","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"158245:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7272,"nodeType":"ExpressionStatement","src":"158245:8:0"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7273,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158384:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7274,"name":"a2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"158389:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158384:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7290,"nodeType":"IfStatement","src":"158380:85:0","trueBody":{"id":7289,"nodeType":"Block","src":"158393:72:0","statements":[{"expression":{"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7276,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158408:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7277,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158413:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7278,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"158417:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158413:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7280,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"158412:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7281,"name":"a2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"158427:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158412:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158408:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7284,"nodeType":"ExpressionStatement","src":"158408:21:0"},{"expression":{"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7285,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"158444:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7286,"name":"x2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"158451:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158444:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7288,"nodeType":"ExpressionStatement","src":"158444:9:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7291,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158481:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7292,"name":"a3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"158486:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158481:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7308,"nodeType":"IfStatement","src":"158477:85:0","trueBody":{"id":7307,"nodeType":"Block","src":"158490:72:0","statements":[{"expression":{"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7294,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158505:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7295,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158510:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7296,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"158514:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158510:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7298,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"158509:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7299,"name":"a3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"158524:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158509:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158505:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7302,"nodeType":"ExpressionStatement","src":"158505:21:0"},{"expression":{"id":7305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7303,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"158541:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7304,"name":"x3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"158548:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158541:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7306,"nodeType":"ExpressionStatement","src":"158541:9:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7309,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158578:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7310,"name":"a4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"158583:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158578:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7326,"nodeType":"IfStatement","src":"158574:85:0","trueBody":{"id":7325,"nodeType":"Block","src":"158587:72:0","statements":[{"expression":{"id":7319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7312,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158602:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7313,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158607:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7314,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"158611:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158607:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"158606:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7317,"name":"a4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"158621:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158606:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158602:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7320,"nodeType":"ExpressionStatement","src":"158602:21:0"},{"expression":{"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7321,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"158638:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7322,"name":"x4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"158645:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158638:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7324,"nodeType":"ExpressionStatement","src":"158638:9:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7327,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158675:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7328,"name":"a5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6505,"src":"158680:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158675:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7344,"nodeType":"IfStatement","src":"158671:85:0","trueBody":{"id":7343,"nodeType":"Block","src":"158684:72:0","statements":[{"expression":{"id":7337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7330,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158699:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7331,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158704:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7332,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"158708:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158704:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"158703:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7335,"name":"a5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6505,"src":"158718:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158703:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158699:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7338,"nodeType":"ExpressionStatement","src":"158699:21:0"},{"expression":{"id":7341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7339,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"158735:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7340,"name":"x5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"158742:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158735:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7342,"nodeType":"ExpressionStatement","src":"158735:9:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7345,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158772:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7346,"name":"a6","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"158777:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158772:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7362,"nodeType":"IfStatement","src":"158768:85:0","trueBody":{"id":7361,"nodeType":"Block","src":"158781:72:0","statements":[{"expression":{"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7348,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158796:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158801:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7350,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"158805:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158801:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7352,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"158800:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7353,"name":"a6","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"158815:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158800:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158796:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7356,"nodeType":"ExpressionStatement","src":"158796:21:0"},{"expression":{"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7357,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"158832:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7358,"name":"x6","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"158839:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158832:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7360,"nodeType":"ExpressionStatement","src":"158832:9:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7363,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158869:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7364,"name":"a7","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"158874:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158869:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7380,"nodeType":"IfStatement","src":"158865:85:0","trueBody":{"id":7379,"nodeType":"Block","src":"158878:72:0","statements":[{"expression":{"id":7373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7366,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158893:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7367,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158898:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7368,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"158902:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158898:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7370,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"158897:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7371,"name":"a7","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"158912:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158897:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158893:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7374,"nodeType":"ExpressionStatement","src":"158893:21:0"},{"expression":{"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7375,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"158929:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7376,"name":"x7","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"158936:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158929:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7378,"nodeType":"ExpressionStatement","src":"158929:9:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7381,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158966:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7382,"name":"a8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"158971:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158966:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7398,"nodeType":"IfStatement","src":"158962:85:0","trueBody":{"id":7397,"nodeType":"Block","src":"158975:72:0","statements":[{"expression":{"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7384,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158990:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7385,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"158995:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7386,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"158999:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158995:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"158994:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7389,"name":"a8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"159009:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158994:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"158990:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7392,"nodeType":"ExpressionStatement","src":"158990:21:0"},{"expression":{"id":7395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7393,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"159026:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7394,"name":"x8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"159033:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159026:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7396,"nodeType":"ExpressionStatement","src":"159026:9:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7399,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"159063:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7400,"name":"a9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"159068:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159063:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7416,"nodeType":"IfStatement","src":"159059:85:0","trueBody":{"id":7415,"nodeType":"Block","src":"159072:72:0","statements":[{"expression":{"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7402,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"159087:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7403,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"159092:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7404,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"159096:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159092:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7406,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"159091:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7407,"name":"a9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"159106:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159091:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159087:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7410,"nodeType":"ExpressionStatement","src":"159087:21:0"},{"expression":{"id":7413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7411,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"159123:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7412,"name":"x9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"159130:2:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159123:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7414,"nodeType":"ExpressionStatement","src":"159123:9:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7417,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"159160:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7418,"name":"a10","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6535,"src":"159165:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159160:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7434,"nodeType":"IfStatement","src":"159156:88:0","trueBody":{"id":7433,"nodeType":"Block","src":"159170:74:0","statements":[{"expression":{"id":7427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7420,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"159185:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7421,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"159190:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7422,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"159194:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159190:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7424,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"159189:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7425,"name":"a10","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6535,"src":"159204:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159189:18:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159185:22:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7428,"nodeType":"ExpressionStatement","src":"159185:22:0"},{"expression":{"id":7431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7429,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"159222:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7430,"name":"x10","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"159229:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159222:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7432,"nodeType":"ExpressionStatement","src":"159222:10:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7435,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"159260:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7436,"name":"a11","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"159265:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159260:8:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7452,"nodeType":"IfStatement","src":"159256:88:0","trueBody":{"id":7451,"nodeType":"Block","src":"159270:74:0","statements":[{"expression":{"id":7445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7438,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"159285:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7439,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"159290:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7440,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"159294:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159290:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7442,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"159289:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7443,"name":"a11","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"159304:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159289:18:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159285:22:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7446,"nodeType":"ExpressionStatement","src":"159285:22:0"},{"expression":{"id":7449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7447,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"159322:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7448,"name":"x11","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"159329:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159322:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7450,"nodeType":"ExpressionStatement","src":"159322:10:0"}]}},{"assignments":[7454],"declarations":[{"constant":false,"id":7454,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":7571,"src":"159855:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7453,"name":"int256","nodeType":"ElementaryTypeName","src":"159855:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7467,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7455,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"159868:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7456,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"159872:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159868:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7458,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"159867:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7459,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"159882:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159867:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7461,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"159866:23:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7462,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7210,"src":"159893:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7463,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"159897:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159893:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"159892:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159866:38:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"159855:49:0"},{"assignments":[7469],"declarations":[{"constant":false,"id":7469,"mutability":"mutable","name":"z_squared","nodeType":"VariableDeclaration","scope":7571,"src":"159915:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7468,"name":"int256","nodeType":"ElementaryTypeName","src":"159915:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7476,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7470,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"159935:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7471,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"159939:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159935:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7473,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"159934:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7474,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"159944:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"159934:16:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"159915:35:0"},{"assignments":[7478],"declarations":[{"constant":false,"id":7478,"mutability":"mutable","name":"num","nodeType":"VariableDeclaration","scope":7571,"src":"160034:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7477,"name":"int256","nodeType":"ElementaryTypeName","src":"160034:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7480,"initialValue":{"id":7479,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"160047:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"160034:14:0"},{"assignments":[7482],"declarations":[{"constant":false,"id":7482,"mutability":"mutable","name":"seriesSum","nodeType":"VariableDeclaration","scope":7571,"src":"160165:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7481,"name":"int256","nodeType":"ElementaryTypeName","src":"160165:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7484,"initialValue":{"id":7483,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"160184:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"160165:22:0"},{"expression":{"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7485,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"160261:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7486,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"160268:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7487,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"160274:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"160268:15:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7489,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"160267:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7490,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"160287:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"160267:26:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"160261:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7493,"nodeType":"ExpressionStatement","src":"160261:32:0"},{"expression":{"id":7498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7494,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"160304:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7495,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"160317:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":7496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"160323:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"160317:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"160304:20:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7499,"nodeType":"ExpressionStatement","src":"160304:20:0"},{"expression":{"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7500,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"160337:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7501,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"160344:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7502,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"160350:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"160344:15:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"160343:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7505,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"160363:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"160343:26:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"160337:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7508,"nodeType":"ExpressionStatement","src":"160337:32:0"},{"expression":{"id":7513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7509,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"160380:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7510,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"160393:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"35","id":7511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"160399:1:0","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"160393:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"160380:20:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7514,"nodeType":"ExpressionStatement","src":"160380:20:0"},{"expression":{"id":7522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7515,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"160413:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7516,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"160420:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7517,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"160426:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"160420:15:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"160419:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7520,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"160439:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"160419:26:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"160413:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7523,"nodeType":"ExpressionStatement","src":"160413:32:0"},{"expression":{"id":7528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7524,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"160456:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7525,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"160469:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"37","id":7526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"160475:1:0","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"160469:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"160456:20:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7529,"nodeType":"ExpressionStatement","src":"160456:20:0"},{"expression":{"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7530,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"160489:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7531,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"160496:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7532,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"160502:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"160496:15:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7534,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"160495:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7535,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"160515:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"160495:26:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"160489:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7538,"nodeType":"ExpressionStatement","src":"160489:32:0"},{"expression":{"id":7543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7539,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"160532:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7540,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"160545:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"39","id":7541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"160551:1:0","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"160545:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"160532:20:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7544,"nodeType":"ExpressionStatement","src":"160532:20:0"},{"expression":{"id":7552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7545,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"160565:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7546,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"160572:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7547,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"160578:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"160572:15:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"160571:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7550,"name":"ONE_20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6439,"src":"160591:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"160571:26:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"160565:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7553,"nodeType":"ExpressionStatement","src":"160565:32:0"},{"expression":{"id":7558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7554,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"160608:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7555,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"160621:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3131","id":7556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"160627:2:0","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"160621:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"160608:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7559,"nodeType":"ExpressionStatement","src":"160608:21:0"},{"expression":{"id":7562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7560,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"160793:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"32","id":7561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"160806:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"160793:14:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7563,"nodeType":"ExpressionStatement","src":"160793:14:0"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7564,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"161087:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7565,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"161093:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"161087:15:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7567,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"161086:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":7568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"161106:3:0","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"161086:23:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7214,"id":7570,"nodeType":"Return","src":"161079:30:0"}]},"documentation":{"id":7208,"nodeType":"StructuredDocumentation","src":"155915:105:0","text":" @dev Internal natural logarithm (ln(a)) with signed 18 decimal fixed point argument."},"id":7572,"implemented":true,"kind":"function","modifiers":[],"name":"_ln","nodeType":"FunctionDefinition","parameters":{"id":7211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7210,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":7572,"src":"156039:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7209,"name":"int256","nodeType":"ElementaryTypeName","src":"156039:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"156038:10:0"},"returnParameters":{"id":7214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7213,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7572,"src":"156071:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7212,"name":"int256","nodeType":"ElementaryTypeName","src":"156071:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"156070:8:0"},"scope":7727,"src":"156026:5091:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":7725,"nodeType":"Block","src":"161447:1705:0","statements":[{"expression":{"id":7582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7580,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7575,"src":"161666:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"id":7581,"name":"ONE_18","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"161671:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"161666:11:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7583,"nodeType":"ExpressionStatement","src":"161666:11:0"},{"assignments":[7585],"declarations":[{"constant":false,"id":7585,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":7725,"src":"162045:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7584,"name":"int256","nodeType":"ElementaryTypeName","src":"162045:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7598,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7586,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7575,"src":"162058:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7587,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"162062:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162058:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"162057:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7590,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"162072:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162057:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7592,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"162056:23:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7593,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7575,"src":"162083:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7594,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"162087:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162083:10:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"162082:12:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162056:38:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"162045:49:0"},{"assignments":[7600],"declarations":[{"constant":false,"id":7600,"mutability":"mutable","name":"z_squared","nodeType":"VariableDeclaration","scope":7725,"src":"162105:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7599,"name":"int256","nodeType":"ElementaryTypeName","src":"162105:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7607,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7601,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"162125:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7602,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"162129:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162125:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"162124:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7605,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"162134:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162124:16:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"162105:35:0"},{"assignments":[7609],"declarations":[{"constant":false,"id":7609,"mutability":"mutable","name":"num","nodeType":"VariableDeclaration","scope":7725,"src":"162224:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7608,"name":"int256","nodeType":"ElementaryTypeName","src":"162224:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7611,"initialValue":{"id":7610,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"162237:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"162224:14:0"},{"assignments":[7613],"declarations":[{"constant":false,"id":7613,"mutability":"mutable","name":"seriesSum","nodeType":"VariableDeclaration","scope":7725,"src":"162355:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7612,"name":"int256","nodeType":"ElementaryTypeName","src":"162355:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7615,"initialValue":{"id":7614,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162374:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"162355:22:0"},{"expression":{"id":7623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7616,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162451:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7617,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162458:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7618,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"162464:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162458:15:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"162457:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7621,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"162477:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162457:26:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162451:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7624,"nodeType":"ExpressionStatement","src":"162451:32:0"},{"expression":{"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7625,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"162494:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7626,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162507:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":7627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"162513:1:0","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"162507:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162494:20:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7630,"nodeType":"ExpressionStatement","src":"162494:20:0"},{"expression":{"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7631,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162527:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7632,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162534:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7633,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"162540:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162534:15:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7635,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"162533:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7636,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"162553:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162533:26:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162527:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7639,"nodeType":"ExpressionStatement","src":"162527:32:0"},{"expression":{"id":7644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7640,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"162570:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7641,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162583:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"35","id":7642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"162589:1:0","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"162583:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162570:20:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7645,"nodeType":"ExpressionStatement","src":"162570:20:0"},{"expression":{"id":7653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7646,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162603:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7647,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162610:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7648,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"162616:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162610:15:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"162609:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7651,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"162629:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162609:26:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162603:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7654,"nodeType":"ExpressionStatement","src":"162603:32:0"},{"expression":{"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7655,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"162646:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7656,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162659:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"37","id":7657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"162665:1:0","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"162659:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162646:20:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7660,"nodeType":"ExpressionStatement","src":"162646:20:0"},{"expression":{"id":7668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7661,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162679:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7662,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162686:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7663,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"162692:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162686:15:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7665,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"162685:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7666,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"162705:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162685:26:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162679:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7669,"nodeType":"ExpressionStatement","src":"162679:32:0"},{"expression":{"id":7674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7670,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"162722:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7671,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162735:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"39","id":7672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"162741:1:0","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"162735:7:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162722:20:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7675,"nodeType":"ExpressionStatement","src":"162722:20:0"},{"expression":{"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7676,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162755:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7677,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162762:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7678,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"162768:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162762:15:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7680,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"162761:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7681,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"162781:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162761:26:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162755:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7684,"nodeType":"ExpressionStatement","src":"162755:32:0"},{"expression":{"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7685,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"162798:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7686,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162811:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3131","id":7687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"162817:2:0","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"},"src":"162811:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162798:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7690,"nodeType":"ExpressionStatement","src":"162798:21:0"},{"expression":{"id":7698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7691,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162832:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7692,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162839:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7693,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"162845:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162839:15:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7695,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"162838:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7696,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"162858:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162838:26:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162832:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7699,"nodeType":"ExpressionStatement","src":"162832:32:0"},{"expression":{"id":7704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7700,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"162875:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7701,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162888:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3133","id":7702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"162894:2:0","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"13"},"src":"162888:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162875:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7705,"nodeType":"ExpressionStatement","src":"162875:21:0"},{"expression":{"id":7713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7706,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162909:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7707,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162916:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7708,"name":"z_squared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"162922:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162916:15:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7710,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"162915:17:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7711,"name":"ONE_36","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"162935:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162915:26:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162909:32:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7714,"nodeType":"ExpressionStatement","src":"162909:32:0"},{"expression":{"id":7719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7715,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"162952:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7716,"name":"num","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"162965:3:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3135","id":7717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"162971:2:0","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"162965:8:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"162952:21:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7720,"nodeType":"ExpressionStatement","src":"162952:21:0"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7721,"name":"seriesSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7613,"src":"163131:9:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":7722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"163143:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"163131:13:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7579,"id":7724,"nodeType":"Return","src":"163124:20:0"}]},"documentation":{"id":7573,"nodeType":"StructuredDocumentation","src":"161125:260:0","text":" @dev Intrnal high precision (36 decimal places) natural logarithm (ln(x)) with signed 18 decimal fixed point argument,\n for x close to one.\n Should only be used if x is between LN_36_LOWER_BOUND and LN_36_UPPER_BOUND."},"id":7726,"implemented":true,"kind":"function","modifiers":[],"name":"_ln_36","nodeType":"FunctionDefinition","parameters":{"id":7576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7575,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":7726,"src":"161407:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7574,"name":"int256","nodeType":"ElementaryTypeName","src":"161407:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"161406:10:0"},"returnParameters":{"id":7579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7578,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7726,"src":"161439:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7577,"name":"int256","nodeType":"ElementaryTypeName","src":"161439:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"161438:8:0"},"scope":7727,"src":"161391:1761:0","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":10227,"src":"143210:19945:0"},{"id":7728,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"163161:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":7729,"nodeType":"StructuredDocumentation","src":"163190:142:0","text":" @dev Wrappers over Solidity's arithmetic operations with added overflow checks.\n Adapted from OpenZeppelin's SafeMath library."},"fullyImplemented":true,"id":8037,"linearizedBaseContracts":[8037],"name":"Math","nodeType":"ContractDefinition","nodes":[{"body":{"id":7751,"nodeType":"Block","src":"163488:58:0","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7737,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"163506:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"163510:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"163506:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":7747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"163535:2:0","subExpression":{"id":7746,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"163536:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"163527:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7744,"name":"uint256","nodeType":"ElementaryTypeName","src":"163527:7:0","typeDescriptions":{}}},"id":7748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"163527:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"163506:32:0","trueExpression":{"arguments":[{"id":7742,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7732,"src":"163522:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"163514:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7740,"name":"uint256","nodeType":"ElementaryTypeName","src":"163514:7:0","typeDescriptions":{}}},"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"163514:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7736,"id":7750,"nodeType":"Return","src":"163499:39:0"}]},"documentation":{"id":7730,"nodeType":"StructuredDocumentation","src":"163354:73:0","text":" @dev Returns the absolute value of a signed integer."},"id":7752,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nodeType":"FunctionDefinition","parameters":{"id":7733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7732,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":7752,"src":"163446:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7731,"name":"int256","nodeType":"ElementaryTypeName","src":"163446:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"163445:10:0"},"returnParameters":{"id":7736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7735,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7752,"src":"163479:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7734,"name":"uint256","nodeType":"ElementaryTypeName","src":"163479:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"163478:9:0"},"scope":8037,"src":"163433:113:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7778,"nodeType":"Block","src":"163734:103:0","statements":[{"assignments":[7763],"declarations":[{"constant":false,"id":7763,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":7778,"src":"163745:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7762,"name":"uint256","nodeType":"ElementaryTypeName","src":"163745:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7767,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7764,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7755,"src":"163757:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7765,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7757,"src":"163761:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"163757:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"163745:17:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7769,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"163782:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7770,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7755,"src":"163787:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"163782:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7772,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"163790:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":7773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ADD_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4394,"src":"163790:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7768,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"163773:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":7774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"163773:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7775,"nodeType":"ExpressionStatement","src":"163773:37:0"},{"expression":{"id":7776,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"163828:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7761,"id":7777,"nodeType":"Return","src":"163821:8:0"}]},"documentation":{"id":7753,"nodeType":"StructuredDocumentation","src":"163554:107:0","text":" @dev Returns the addition of two unsigned integers of 256 bits, reverting on overflow."},"id":7779,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":7758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7755,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":7779,"src":"163680:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7754,"name":"uint256","nodeType":"ElementaryTypeName","src":"163680:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7757,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":7779,"src":"163691:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7756,"name":"uint256","nodeType":"ElementaryTypeName","src":"163691:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"163679:22:0"},"returnParameters":{"id":7761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7760,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7779,"src":"163725:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7759,"name":"uint256","nodeType":"ElementaryTypeName","src":"163725:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"163724:9:0"},"scope":8037,"src":"163667:170:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7819,"nodeType":"Block","src":"164008:134:0","statements":[{"assignments":[7790],"declarations":[{"constant":false,"id":7790,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":7819,"src":"164019:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7789,"name":"int256","nodeType":"ElementaryTypeName","src":"164019:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7794,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7791,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"164030:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7792,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"164034:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"164030:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"164019:16:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7796,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"164056:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":7797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"164061:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"164056:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7799,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"164066:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7800,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"164071:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"164066:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"164056:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":7803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"164055:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7804,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"164078:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"164082:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"164078:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7807,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"164087:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7808,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"164091:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"164087:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"164078:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":7811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"164077:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"164055:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7813,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"164095:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":7814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ADD_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4394,"src":"164095:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7795,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"164046:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":7815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"164046:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7816,"nodeType":"ExpressionStatement","src":"164046:69:0"},{"expression":{"id":7817,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"164133:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7788,"id":7818,"nodeType":"Return","src":"164126:8:0"}]},"documentation":{"id":7780,"nodeType":"StructuredDocumentation","src":"163845:93:0","text":" @dev Returns the addition of two signed integers, reverting on overflow."},"id":7820,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":7785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7782,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":7820,"src":"163957:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7781,"name":"int256","nodeType":"ElementaryTypeName","src":"163957:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7784,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":7820,"src":"163967:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7783,"name":"int256","nodeType":"ElementaryTypeName","src":"163967:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"163956:20:0"},"returnParameters":{"id":7788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7787,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7820,"src":"164000:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7786,"name":"int256","nodeType":"ElementaryTypeName","src":"164000:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"163999:8:0"},"scope":8037,"src":"163944:198:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7846,"nodeType":"Block","src":"164333:103:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7831,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7825,"src":"164353:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7832,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7823,"src":"164358:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"164353:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7834,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"164361:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":7835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SUB_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4397,"src":"164361:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7830,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"164344:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":7836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"164344:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7837,"nodeType":"ExpressionStatement","src":"164344:37:0"},{"assignments":[7839],"declarations":[{"constant":false,"id":7839,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":7846,"src":"164392:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7838,"name":"uint256","nodeType":"ElementaryTypeName","src":"164392:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7843,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7840,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7823,"src":"164404:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7841,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7825,"src":"164408:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"164404:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"164392:17:0"},{"expression":{"id":7844,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7839,"src":"164427:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7829,"id":7845,"nodeType":"Return","src":"164420:8:0"}]},"documentation":{"id":7821,"nodeType":"StructuredDocumentation","src":"164150:110:0","text":" @dev Returns the subtraction of two unsigned integers of 256 bits, reverting on overflow."},"id":7847,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":7826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7823,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":7847,"src":"164279:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7822,"name":"uint256","nodeType":"ElementaryTypeName","src":"164279:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7825,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":7847,"src":"164290:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7824,"name":"uint256","nodeType":"ElementaryTypeName","src":"164290:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"164278:22:0"},"returnParameters":{"id":7829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7828,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7847,"src":"164324:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7827,"name":"uint256","nodeType":"ElementaryTypeName","src":"164324:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"164323:9:0"},"scope":8037,"src":"164266:170:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7887,"nodeType":"Block","src":"164610:134:0","statements":[{"assignments":[7858],"declarations":[{"constant":false,"id":7858,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":7887,"src":"164621:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7857,"name":"int256","nodeType":"ElementaryTypeName","src":"164621:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7862,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7859,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"164632:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7860,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"164636:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"164632:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"164621:16:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7864,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"164658:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":7865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"164663:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"164658:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7867,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7858,"src":"164668:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7868,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"164673:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"164668:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"164658:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":7871,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"164657:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7872,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"164680:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"164684:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"164680:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7875,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7858,"src":"164689:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7876,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"164693:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"164689:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"164680:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":7879,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"164679:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"164657:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7881,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"164697:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":7882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SUB_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4397,"src":"164697:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7863,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"164648:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":7883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"164648:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7884,"nodeType":"ExpressionStatement","src":"164648:69:0"},{"expression":{"id":7885,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7858,"src":"164735:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7856,"id":7886,"nodeType":"Return","src":"164728:8:0"}]},"documentation":{"id":7848,"nodeType":"StructuredDocumentation","src":"164444:96:0","text":" @dev Returns the subtraction of two signed integers, reverting on overflow."},"id":7888,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":7853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7850,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":7888,"src":"164559:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7849,"name":"int256","nodeType":"ElementaryTypeName","src":"164559:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7852,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":7888,"src":"164569:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7851,"name":"int256","nodeType":"ElementaryTypeName","src":"164569:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"164558:20:0"},"returnParameters":{"id":7856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7855,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7888,"src":"164602:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7854,"name":"int256","nodeType":"ElementaryTypeName","src":"164602:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"164601:8:0"},"scope":8037,"src":"164546:198:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7905,"nodeType":"Block","src":"164898:40:0","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7898,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7891,"src":"164916:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7899,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"164921:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"164916:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7902,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"164929:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"164916:14:0","trueExpression":{"id":7901,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7891,"src":"164925:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7897,"id":7904,"nodeType":"Return","src":"164909:21:0"}]},"documentation":{"id":7889,"nodeType":"StructuredDocumentation","src":"164752:73:0","text":" @dev Returns the largest of two numbers of 256 bits."},"id":7906,"implemented":true,"kind":"function","modifiers":[],"name":"max","nodeType":"FunctionDefinition","parameters":{"id":7894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7891,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":7906,"src":"164844:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7890,"name":"uint256","nodeType":"ElementaryTypeName","src":"164844:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7893,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":7906,"src":"164855:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7892,"name":"uint256","nodeType":"ElementaryTypeName","src":"164855:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"164843:22:0"},"returnParameters":{"id":7897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7896,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7906,"src":"164889:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7895,"name":"uint256","nodeType":"ElementaryTypeName","src":"164889:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"164888:9:0"},"scope":8037,"src":"164831:107:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7923,"nodeType":"Block","src":"165093:39:0","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7916,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7909,"src":"165111:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7917,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"165115:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"165111:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7920,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7911,"src":"165123:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"165111:13:0","trueExpression":{"id":7919,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7909,"src":"165119:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7915,"id":7922,"nodeType":"Return","src":"165104:20:0"}]},"documentation":{"id":7907,"nodeType":"StructuredDocumentation","src":"164946:74:0","text":" @dev Returns the smallest of two numbers of 256 bits."},"id":7924,"implemented":true,"kind":"function","modifiers":[],"name":"min","nodeType":"FunctionDefinition","parameters":{"id":7912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7909,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":7924,"src":"165039:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7908,"name":"uint256","nodeType":"ElementaryTypeName","src":"165039:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7911,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":7924,"src":"165050:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7910,"name":"uint256","nodeType":"ElementaryTypeName","src":"165050:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"165038:22:0"},"returnParameters":{"id":7915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7914,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7924,"src":"165084:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7913,"name":"uint256","nodeType":"ElementaryTypeName","src":"165084:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"165083:9:0"},"scope":8037,"src":"165026:106:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7955,"nodeType":"Block","src":"165207:117:0","statements":[{"assignments":[7934],"declarations":[{"constant":false,"id":7934,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":7955,"src":"165218:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7933,"name":"uint256","nodeType":"ElementaryTypeName","src":"165218:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7938,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7935,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"165230:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7936,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7928,"src":"165234:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"165230:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"165218:17:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7940,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"165255:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"165260:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"165255:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7943,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"165265:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7944,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"165269:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"165265:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7946,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7928,"src":"165274:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"165265:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"165255:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7949,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"165277:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":7950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MUL_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4403,"src":"165277:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7939,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"165246:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":7951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"165246:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7952,"nodeType":"ExpressionStatement","src":"165246:51:0"},{"expression":{"id":7953,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"165315:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7932,"id":7954,"nodeType":"Return","src":"165308:8:0"}]},"id":7956,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","parameters":{"id":7929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7926,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":7956,"src":"165153:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7925,"name":"uint256","nodeType":"ElementaryTypeName","src":"165153:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7928,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":7956,"src":"165164:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7927,"name":"uint256","nodeType":"ElementaryTypeName","src":"165164:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"165152:22:0"},"returnParameters":{"id":7932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7931,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7956,"src":"165198:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7930,"name":"uint256","nodeType":"ElementaryTypeName","src":"165198:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"165197:9:0"},"scope":8037,"src":"165140:184:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7978,"nodeType":"Block","src":"165447:63:0","statements":[{"expression":{"condition":{"id":7967,"name":"roundUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"165465:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":7973,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"165497:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7974,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"165500:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7972,"name":"divDown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8001,"src":"165489:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"165489:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"165465:37:0","trueExpression":{"arguments":[{"id":7969,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"165481:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7970,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"165484:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7968,"name":"divUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8036,"src":"165475:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"165475:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7966,"id":7977,"nodeType":"Return","src":"165458:44:0"}]},"id":7979,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":7963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7958,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":7979,"src":"165355:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7957,"name":"uint256","nodeType":"ElementaryTypeName","src":"165355:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7960,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":7979,"src":"165375:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7959,"name":"uint256","nodeType":"ElementaryTypeName","src":"165375:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7962,"mutability":"mutable","name":"roundUp","nodeType":"VariableDeclaration","scope":7979,"src":"165395:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7961,"name":"bool","nodeType":"ElementaryTypeName","src":"165395:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"165344:70:0"},"returnParameters":{"id":7966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7965,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":7979,"src":"165438:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7964,"name":"uint256","nodeType":"ElementaryTypeName","src":"165438:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"165437:9:0"},"scope":8037,"src":"165332:178:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8000,"nodeType":"Block","src":"165589:80:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7989,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7983,"src":"165609:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"165614:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"165609:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7992,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"165617:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":7993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ZERO_DIVISION","nodeType":"MemberAccess","referencedDeclaration":4406,"src":"165617:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7988,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"165600:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":7994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"165600:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7995,"nodeType":"ExpressionStatement","src":"165600:38:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7996,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7981,"src":"165656:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7997,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7983,"src":"165660:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"165656:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7987,"id":7999,"nodeType":"Return","src":"165649:12:0"}]},"id":8001,"implemented":true,"kind":"function","modifiers":[],"name":"divDown","nodeType":"FunctionDefinition","parameters":{"id":7984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7981,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":8001,"src":"165535:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7980,"name":"uint256","nodeType":"ElementaryTypeName","src":"165535:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7983,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":8001,"src":"165546:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7982,"name":"uint256","nodeType":"ElementaryTypeName","src":"165546:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"165534:22:0"},"returnParameters":{"id":7987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7986,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8001,"src":"165580:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7985,"name":"uint256","nodeType":"ElementaryTypeName","src":"165580:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"165579:9:0"},"scope":8037,"src":"165518:151:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8035,"nodeType":"Block","src":"165746:171:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8011,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8005,"src":"165766:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"165771:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"165766:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":8014,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"165774:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":8015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ZERO_DIVISION","nodeType":"MemberAccess","referencedDeclaration":4406,"src":"165774:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8010,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"165757:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":8016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"165757:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8017,"nodeType":"ExpressionStatement","src":"165757:38:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8018,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8003,"src":"165812:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"165817:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"165812:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8033,"nodeType":"Block","src":"165861:49:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"165883:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8025,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8003,"src":"165888:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"165892:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"165888:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8028,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"165887:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8029,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8005,"src":"165897:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"165887:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"165883:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8009,"id":8032,"nodeType":"Return","src":"165876:22:0"}]},"id":8034,"nodeType":"IfStatement","src":"165808:102:0","trueBody":{"id":8023,"nodeType":"Block","src":"165820:35:0","statements":[{"expression":{"hexValue":"30","id":8021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"165842:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":8009,"id":8022,"nodeType":"Return","src":"165835:8:0"}]}}]},"id":8036,"implemented":true,"kind":"function","modifiers":[],"name":"divUp","nodeType":"FunctionDefinition","parameters":{"id":8006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8003,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":8036,"src":"165692:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8002,"name":"uint256","nodeType":"ElementaryTypeName","src":"165692:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8005,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":8036,"src":"165703:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8004,"name":"uint256","nodeType":"ElementaryTypeName","src":"165703:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"165691:22:0"},"returnParameters":{"id":8009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8008,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8036,"src":"165737:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8007,"name":"uint256","nodeType":"ElementaryTypeName","src":"165737:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"165736:9:0"},"scope":8037,"src":"165677:240:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10227,"src":"163334:2586:0"},{"id":8038,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"165926:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":8146,"linearizedBaseContracts":[8146],"name":"InputHelpers","nodeType":"ContractDefinition","nodes":[{"body":{"id":8053,"nodeType":"Block","src":"166051:65:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8046,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8040,"src":"166071:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8047,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8042,"src":"166076:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"166071:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":8049,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"166079:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":8050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INPUT_LENGTH_MISMATCH","nodeType":"MemberAccess","referencedDeclaration":4433,"src":"166079:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8045,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"166062:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":8051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"166062:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8052,"nodeType":"ExpressionStatement","src":"166062:46:0"}]},"id":8054,"implemented":true,"kind":"function","modifiers":[],"name":"ensureInputLengthMatch","nodeType":"FunctionDefinition","parameters":{"id":8043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8040,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":8054,"src":"166015:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8039,"name":"uint256","nodeType":"ElementaryTypeName","src":"166015:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8042,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":8054,"src":"166026:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8041,"name":"uint256","nodeType":"ElementaryTypeName","src":"166026:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"166014:22:0"},"returnParameters":{"id":8044,"nodeType":"ParameterList","parameters":[],"src":"166051:0:0"},"scope":8146,"src":"165983:133:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8075,"nodeType":"Block","src":"166237:75:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8064,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8056,"src":"166257:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8065,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8058,"src":"166262:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"166257:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8067,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8058,"src":"166267:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8068,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8060,"src":"166272:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"166267:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"166257:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":8071,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"166275:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":8072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"INPUT_LENGTH_MISMATCH","nodeType":"MemberAccess","referencedDeclaration":4433,"src":"166275:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8063,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"166248:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":8073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"166248:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8074,"nodeType":"ExpressionStatement","src":"166248:56:0"}]},"id":8076,"implemented":true,"kind":"function","modifiers":[],"name":"ensureInputLengthMatch","nodeType":"FunctionDefinition","parameters":{"id":8061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8056,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":8076,"src":"166166:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8055,"name":"uint256","nodeType":"ElementaryTypeName","src":"166166:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8058,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":8076,"src":"166186:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8057,"name":"uint256","nodeType":"ElementaryTypeName","src":"166186:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8060,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":8076,"src":"166206:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8059,"name":"uint256","nodeType":"ElementaryTypeName","src":"166206:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"166155:67:0"},"returnParameters":{"id":8062,"nodeType":"ParameterList","parameters":[],"src":"166237:0:0"},"scope":8146,"src":"166124:188:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8093,"nodeType":"Block","src":"166386:215:0","statements":[{"assignments":[8086],"declarations":[{"constant":false,"id":8086,"mutability":"mutable","name":"addressArray","nodeType":"VariableDeclaration","scope":8093,"src":"166397:29:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8084,"name":"address","nodeType":"ElementaryTypeName","src":"166397:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8085,"nodeType":"ArrayTypeName","src":"166397:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":8087,"nodeType":"VariableDeclarationStatement","src":"166397:29:0"},{"AST":{"nodeType":"YulBlock","src":"166503:47:0","statements":[{"nodeType":"YulAssignment","src":"166518:21:0","value":{"name":"array","nodeType":"YulIdentifier","src":"166534:5:0"},"variableNames":[{"name":"addressArray","nodeType":"YulIdentifier","src":"166518:12:0"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":8086,"isOffset":false,"isSlot":false,"src":"166518:12:0","valueSize":1},{"declaration":8079,"isOffset":false,"isSlot":false,"src":"166534:5:0","valueSize":1}],"id":8088,"nodeType":"InlineAssembly","src":"166494:56:0"},{"expression":{"arguments":[{"id":8090,"name":"addressArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8086,"src":"166580:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":8089,"name":"ensureArrayIsSorted","nodeType":"Identifier","overloadedDeclarations":[8094,8145],"referencedDeclaration":8145,"src":"166560:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory) pure"}},"id":8091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"166560:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8092,"nodeType":"ExpressionStatement","src":"166560:33:0"}]},"id":8094,"implemented":true,"kind":"function","modifiers":[],"name":"ensureArrayIsSorted","nodeType":"FunctionDefinition","parameters":{"id":8080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8079,"mutability":"mutable","name":"array","nodeType":"VariableDeclaration","scope":8094,"src":"166349:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":8077,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"166349:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":8078,"nodeType":"ArrayTypeName","src":"166349:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"166348:23:0"},"returnParameters":{"id":8081,"nodeType":"ParameterList","parameters":[],"src":"166386:0:0"},"scope":8146,"src":"166320:281:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8144,"nodeType":"Block","src":"166676:318:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8100,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8097,"src":"166691:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":8101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"166691:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"32","id":8102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"166706:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"166691:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8106,"nodeType":"IfStatement","src":"166687:55:0","trueBody":{"id":8105,"nodeType":"Block","src":"166709:33:0","statements":[{"functionReturnParameters":8099,"id":8104,"nodeType":"Return","src":"166724:7:0"}]}},{"assignments":[8108],"declarations":[{"constant":false,"id":8108,"mutability":"mutable","name":"previous","nodeType":"VariableDeclaration","scope":8144,"src":"166754:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8107,"name":"address","nodeType":"ElementaryTypeName","src":"166754:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8112,"initialValue":{"baseExpression":{"id":8109,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8097,"src":"166773:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":8111,"indexExpression":{"hexValue":"30","id":8110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"166779:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"166773:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"166754:27:0"},{"body":{"id":8142,"nodeType":"Block","src":"166835:152:0","statements":[{"assignments":[8125],"declarations":[{"constant":false,"id":8125,"mutability":"mutable","name":"current","nodeType":"VariableDeclaration","scope":8142,"src":"166850:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8124,"name":"address","nodeType":"ElementaryTypeName","src":"166850:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8129,"initialValue":{"baseExpression":{"id":8126,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8097,"src":"166868:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":8128,"indexExpression":{"id":8127,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"166874:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"166868:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"166850:26:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8131,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8108,"src":"166900:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8132,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8125,"src":"166911:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"166900:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":8134,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"166920:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":8135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"UNSORTED_ARRAY","nodeType":"MemberAccess","referencedDeclaration":4427,"src":"166920:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8130,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"166891:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":8136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"166891:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8137,"nodeType":"ExpressionStatement","src":"166891:51:0"},{"expression":{"id":8140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8138,"name":"previous","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8108,"src":"166957:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8139,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8125,"src":"166968:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"166957:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8141,"nodeType":"ExpressionStatement","src":"166957:18:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8117,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"166812:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8118,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8097,"src":"166816:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":8119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"166816:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"166812:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8143,"initializationExpression":{"assignments":[8114],"declarations":[{"constant":false,"id":8114,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":8143,"src":"166797:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8113,"name":"uint256","nodeType":"ElementaryTypeName","src":"166797:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8116,"initialValue":{"hexValue":"31","id":8115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"166809:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"166797:13:0"},"loopExpression":{"expression":{"id":8122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"166830:3:0","subExpression":{"id":8121,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8114,"src":"166832:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8123,"nodeType":"ExpressionStatement","src":"166830:3:0"},"nodeType":"ForStatement","src":"166792:195:0"}]},"id":8145,"implemented":true,"kind":"function","modifiers":[],"name":"ensureArrayIsSorted","nodeType":"FunctionDefinition","parameters":{"id":8098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8097,"mutability":"mutable","name":"array","nodeType":"VariableDeclaration","scope":8145,"src":"166638:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8095,"name":"address","nodeType":"ElementaryTypeName","src":"166638:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8096,"nodeType":"ArrayTypeName","src":"166638:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"166637:24:0"},"returnParameters":{"id":8099,"nodeType":"ParameterList","parameters":[],"src":"166676:0:0"},"scope":8146,"src":"166609:385:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10227,"src":"165955:1042:0"},{"id":8147,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"167005:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":8148,"nodeType":"StructuredDocumentation","src":"167032:1197:0","text":" @dev Library for encoding and decoding values stored inside a 256 bit word. Typically used to pack multiple values in\n a single storage slot, saving gas by performing less storage accesses.\n Each value is defined by its size and the least significant bit in the word, also known as offset. For example, two\n 128 bit values may be encoded in a word by assigning one an offset of 0, and the other an offset of 128.\n We could use Solidity structs to pack values together in a single storage slot instead of relying on a custom and\n error-prone library, but unfortunately Solidity only allows for structs to live in either storage, calldata or\n memory. Because a memory struct uses not just memory but also a slot in the stack (to store its memory location),\n using memory for word-sized values (i.e. of 256 bits or less) is strictly less gas performant, and doesn't even\n prevent stack-too-deep issues. This is compounded by the fact that Balancer contracts typically are memory-intensive,\n and the cost of accesing memory increases quadratically with the number of allocated words. Manual packing and\n unpacking is therefore the preferred approach."},"fullyImplemented":true,"id":9014,"linearizedBaseContracts":[9014],"name":"WordCodec","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":8156,"mutability":"constant","name":"_MASK_1","nodeType":"VariableDeclaration","scope":9014,"src":"168428:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8149,"name":"uint256","nodeType":"ElementaryTypeName","src":"168428:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"id":8155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"id":8153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168463:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"hexValue":"31","id":8151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168467:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"id":8152,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"168466:3:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}},"src":"168463:6:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168472:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"168463:10:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}},"visibility":"private"},{"constant":true,"id":8164,"mutability":"constant","name":"_MASK_5","nodeType":"VariableDeclaration","scope":9014,"src":"168480:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8157,"name":"uint256","nodeType":"ElementaryTypeName","src":"168480:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"id":8163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"id":8161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168515:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"hexValue":"35","id":8159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168519:1:0","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"}],"id":8160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"168518:3:0","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}},"src":"168515:6:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168524:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"168515:10:0","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"}},"visibility":"private"},{"constant":true,"id":8172,"mutability":"constant","name":"_MASK_7","nodeType":"VariableDeclaration","scope":9014,"src":"168532:45:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8165,"name":"uint256","nodeType":"ElementaryTypeName","src":"168532:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"id":8171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"id":8169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168567:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"hexValue":"37","id":8167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168571:1:0","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"}],"id":8168,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"168570:3:0","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"}},"src":"168567:6:0","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168576:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"168567:10:0","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"}},"visibility":"private"},{"constant":true,"id":8180,"mutability":"constant","name":"_MASK_10","nodeType":"VariableDeclaration","scope":9014,"src":"168584:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8173,"name":"uint256","nodeType":"ElementaryTypeName","src":"168584:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1023_by_1","typeString":"int_const 1023"},"id":8179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":8177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168620:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"hexValue":"3130","id":8175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168624:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"}],"id":8176,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"168623:4:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"168620:7:0","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168630:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"168620:11:0","typeDescriptions":{"typeIdentifier":"t_rational_1023_by_1","typeString":"int_const 1023"}},"visibility":"private"},{"constant":true,"id":8188,"mutability":"constant","name":"_MASK_16","nodeType":"VariableDeclaration","scope":9014,"src":"168638:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8181,"name":"uint256","nodeType":"ElementaryTypeName","src":"168638:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":8187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":8185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168674:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"hexValue":"3136","id":8183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168678:2:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"}],"id":8184,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"168677:4:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"168674:7:0","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168684:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"168674:11:0","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"visibility":"private"},{"constant":true,"id":8196,"mutability":"constant","name":"_MASK_22","nodeType":"VariableDeclaration","scope":9014,"src":"168692:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8189,"name":"uint256","nodeType":"ElementaryTypeName","src":"168692:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4194303_by_1","typeString":"int_const 4194303"},"id":8195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_4194304_by_1","typeString":"int_const 4194304"},"id":8193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168728:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"hexValue":"3232","id":8191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168732:2:0","typeDescriptions":{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"},"value":"22"}],"id":8192,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"168731:4:0","typeDescriptions":{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"}},"src":"168728:7:0","typeDescriptions":{"typeIdentifier":"t_rational_4194304_by_1","typeString":"int_const 4194304"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168738:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"168728:11:0","typeDescriptions":{"typeIdentifier":"t_rational_4194303_by_1","typeString":"int_const 4194303"}},"visibility":"private"},{"constant":true,"id":8204,"mutability":"constant","name":"_MASK_31","nodeType":"VariableDeclaration","scope":9014,"src":"168746:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8197,"name":"uint256","nodeType":"ElementaryTypeName","src":"168746:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_2147483647_by_1","typeString":"int_const 2147483647"},"id":8203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_2147483648_by_1","typeString":"int_const 2147483648"},"id":8201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168782:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"hexValue":"3331","id":8199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168786:2:0","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"}],"id":8200,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"168785:4:0","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"}},"src":"168782:7:0","typeDescriptions":{"typeIdentifier":"t_rational_2147483648_by_1","typeString":"int_const 2147483648"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168792:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"168782:11:0","typeDescriptions":{"typeIdentifier":"t_rational_2147483647_by_1","typeString":"int_const 2147483647"}},"visibility":"private"},{"constant":true,"id":8212,"mutability":"constant","name":"_MASK_32","nodeType":"VariableDeclaration","scope":9014,"src":"168800:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8205,"name":"uint256","nodeType":"ElementaryTypeName","src":"168800:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":8211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":8209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168836:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"hexValue":"3332","id":8207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168840:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"id":8208,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"168839:4:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}},"src":"168836:7:0","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168846:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"168836:11:0","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"visibility":"private"},{"constant":true,"id":8220,"mutability":"constant","name":"_MASK_53","nodeType":"VariableDeclaration","scope":9014,"src":"168854:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8213,"name":"uint256","nodeType":"ElementaryTypeName","src":"168854:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_9007199254740991_by_1","typeString":"int_const 9007199254740991"},"id":8219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_9007199254740992_by_1","typeString":"int_const 9007199254740992"},"id":8217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168890:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"hexValue":"3533","id":8215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168894:2:0","typeDescriptions":{"typeIdentifier":"t_rational_53_by_1","typeString":"int_const 53"},"value":"53"}],"id":8216,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"168893:4:0","typeDescriptions":{"typeIdentifier":"t_rational_53_by_1","typeString":"int_const 53"}},"src":"168890:7:0","typeDescriptions":{"typeIdentifier":"t_rational_9007199254740992_by_1","typeString":"int_const 9007199254740992"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168900:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"168890:11:0","typeDescriptions":{"typeIdentifier":"t_rational_9007199254740991_by_1","typeString":"int_const 9007199254740991"}},"visibility":"private"},{"constant":true,"id":8228,"mutability":"constant","name":"_MASK_64","nodeType":"VariableDeclaration","scope":9014,"src":"168908:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8221,"name":"uint256","nodeType":"ElementaryTypeName","src":"168908:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":8227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":8225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168944:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"hexValue":"3634","id":8223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168948:2:0","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"}],"id":8224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"168947:4:0","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"}},"src":"168944:7:0","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168954:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"168944:11:0","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"visibility":"private"},{"constant":true,"id":8236,"mutability":"constant","name":"_MASK_96","nodeType":"VariableDeclaration","scope":9014,"src":"168962:47:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8229,"name":"uint256","nodeType":"ElementaryTypeName","src":"168962:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_79228162514264337593543950335_by_1","typeString":"int_const 79228162514264337593543950335"},"id":8235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_79228162514264337593543950336_by_1","typeString":"int_const 79228162514264337593543950336"},"id":8233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"168998:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"hexValue":"3936","id":8231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"169002:2:0","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"}],"id":8232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"169001:4:0","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"}},"src":"168998:7:0","typeDescriptions":{"typeIdentifier":"t_rational_79228162514264337593543950336_by_1","typeString":"int_const 79228162514264337593543950336"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"169008:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"168998:11:0","typeDescriptions":{"typeIdentifier":"t_rational_79228162514264337593543950335_by_1","typeString":"int_const 79228162514264337593543950335"}},"visibility":"private"},{"constant":true,"id":8244,"mutability":"constant","name":"_MASK_128","nodeType":"VariableDeclaration","scope":9014,"src":"169016:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8237,"name":"uint256","nodeType":"ElementaryTypeName","src":"169016:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":8243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":8241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"169053:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"hexValue":"313238","id":8239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"169057:3:0","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"}],"id":8240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"169056:5:0","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"}},"src":"169053:8:0","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"169064:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"169053:12:0","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"visibility":"private"},{"constant":true,"id":8252,"mutability":"constant","name":"_MASK_192","nodeType":"VariableDeclaration","scope":9014,"src":"169072:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8245,"name":"uint256","nodeType":"ElementaryTypeName","src":"169072:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512895_by_1","typeString":"int_const 6277...(50 digits omitted)...2895"},"id":8251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512896_by_1","typeString":"int_const 6277...(50 digits omitted)...2896"},"id":8249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"169109:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"hexValue":"313932","id":8247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"169113:3:0","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"}],"id":8248,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"169112:5:0","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"}},"src":"169109:8:0","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512896_by_1","typeString":"int_const 6277...(50 digits omitted)...2896"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"169120:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"169109:12:0","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512895_by_1","typeString":"int_const 6277...(50 digits omitted)...2895"}},"visibility":"private"},{"constant":true,"id":8260,"mutability":"constant","name":"_MAX_INT_22","nodeType":"VariableDeclaration","scope":9014,"src":"169213:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8253,"name":"int256","nodeType":"ElementaryTypeName","src":"169213:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"commonType":{"typeIdentifier":"t_rational_2097151_by_1","typeString":"int_const 2097151"},"id":8259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_2097152_by_1","typeString":"int_const 2097152"},"id":8257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"169251:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"hexValue":"3231","id":8255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"169255:2:0","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"}],"id":8256,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"169254:4:0","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"}},"src":"169251:7:0","typeDescriptions":{"typeIdentifier":"t_rational_2097152_by_1","typeString":"int_const 2097152"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"169261:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"169251:11:0","typeDescriptions":{"typeIdentifier":"t_rational_2097151_by_1","typeString":"int_const 2097151"}},"visibility":"private"},{"constant":true,"id":8268,"mutability":"constant","name":"_MAX_INT_53","nodeType":"VariableDeclaration","scope":9014,"src":"169269:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8261,"name":"int256","nodeType":"ElementaryTypeName","src":"169269:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4503599627370495_by_1","typeString":"int_const 4503599627370495"},"id":8267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_4503599627370496_by_1","typeString":"int_const 4503599627370496"},"id":8265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":8262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"169307:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"hexValue":"3532","id":8263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"169311:2:0","typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},"value":"52"}],"id":8264,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"169310:4:0","typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"}},"src":"169307:7:0","typeDescriptions":{"typeIdentifier":"t_rational_4503599627370496_by_1","typeString":"int_const 4503599627370496"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"169317:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"169307:11:0","typeDescriptions":{"typeIdentifier":"t_rational_4503599627370495_by_1","typeString":"int_const 4503599627370495"}},"visibility":"private"},{"body":{"id":8311,"nodeType":"Block","src":"169636:159:0","statements":[{"assignments":[8281],"declarations":[{"constant":false,"id":8281,"mutability":"mutable","name":"clearedWord","nodeType":"VariableDeclaration","scope":8311,"src":"169647:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"169647:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8295,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8286,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8271,"src":"169685:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"169677:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8284,"name":"uint256","nodeType":"ElementaryTypeName","src":"169677:7:0","typeDescriptions":{}}},"id":8287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"169677:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"169693:20:0","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8288,"name":"_MASK_1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8156,"src":"169695:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8289,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8275,"src":"169706:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"169695:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8291,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"169694:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"169677:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"169669:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8282,"name":"bytes32","nodeType":"ElementaryTypeName","src":"169669:7:0","typeDescriptions":{}}},"id":8294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"169669:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"169647:67:0"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8296,"name":"clearedWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8281,"src":"169732:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"condition":{"id":8301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8273,"src":"169762:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":8303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"169774:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":8304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"169762:13:0","trueExpression":{"hexValue":"31","id":8302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"169770:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":8300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"169754:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8299,"name":"uint256","nodeType":"ElementaryTypeName","src":"169754:7:0","typeDescriptions":{}}},"id":8305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"169754:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8306,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8275,"src":"169780:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"169754:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"169746:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"169746:7:0","typeDescriptions":{}}},"id":8308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"169746:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"169732:55:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8279,"id":8310,"nodeType":"Return","src":"169725:62:0"}]},"documentation":{"id":8269,"nodeType":"StructuredDocumentation","src":"169356:146:0","text":" @dev Inserts a boolean value shifted by an offset into a 256 bit word, replacing the old value. Returns the new\n word."},"id":8312,"implemented":true,"kind":"function","modifiers":[],"name":"insertBool","nodeType":"FunctionDefinition","parameters":{"id":8276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8271,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8312,"src":"169538:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"169538:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8273,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8312,"src":"169561:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8272,"name":"bool","nodeType":"ElementaryTypeName","src":"169561:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8275,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8312,"src":"169582:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8274,"name":"uint256","nodeType":"ElementaryTypeName","src":"169582:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"169527:76:0"},"returnParameters":{"id":8279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8278,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8312,"src":"169627:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"169627:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"169626:9:0"},"scope":9014,"src":"169508:287:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8349,"nodeType":"Block","src":"170229:142:0","statements":[{"assignments":[8325],"declarations":[{"constant":false,"id":8325,"mutability":"mutable","name":"clearedWord","nodeType":"VariableDeclaration","scope":8349,"src":"170240:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"170240:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8339,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8330,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8315,"src":"170278:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"170270:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8328,"name":"uint256","nodeType":"ElementaryTypeName","src":"170270:7:0","typeDescriptions":{}}},"id":8331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"170270:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"170286:20:0","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8332,"name":"_MASK_5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8164,"src":"170288:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8333,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"170299:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"170288:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"170287:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"170270:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"170262:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"170262:7:0","typeDescriptions":{}}},"id":8338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"170262:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"170240:67:0"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8340,"name":"clearedWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8325,"src":"170325:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8317,"src":"170347:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8344,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"170356:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"170347:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"170339:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8341,"name":"bytes32","nodeType":"ElementaryTypeName","src":"170339:7:0","typeDescriptions":{}}},"id":8346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"170339:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"170325:38:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8323,"id":8348,"nodeType":"Return","src":"170318:45:0"}]},"documentation":{"id":8313,"nodeType":"StructuredDocumentation","src":"169822:269:0","text":" @dev Inserts a 5 bit unsigned integer shifted by an offset into a 256 bit word, replacing the old value. Returns\n the new word.\n Assumes `value` only uses its least significant 5 bits, otherwise it may overwrite sibling bytes."},"id":8350,"implemented":true,"kind":"function","modifiers":[],"name":"insertUint5","nodeType":"FunctionDefinition","parameters":{"id":8320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8315,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8350,"src":"170128:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"170128:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8317,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8350,"src":"170151:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8316,"name":"uint256","nodeType":"ElementaryTypeName","src":"170151:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8319,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8350,"src":"170175:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8318,"name":"uint256","nodeType":"ElementaryTypeName","src":"170175:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"170117:79:0"},"returnParameters":{"id":8323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8322,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8350,"src":"170220:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"170220:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"170219:9:0"},"scope":9014,"src":"170097:274:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8387,"nodeType":"Block","src":"170786:142:0","statements":[{"assignments":[8363],"declarations":[{"constant":false,"id":8363,"mutability":"mutable","name":"clearedWord","nodeType":"VariableDeclaration","scope":8387,"src":"170797:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8362,"name":"bytes32","nodeType":"ElementaryTypeName","src":"170797:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8377,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8368,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8353,"src":"170835:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"170827:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8366,"name":"uint256","nodeType":"ElementaryTypeName","src":"170827:7:0","typeDescriptions":{}}},"id":8369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"170827:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"170843:20:0","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8370,"name":"_MASK_7","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8172,"src":"170845:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8371,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8357,"src":"170856:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"170845:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"170844:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"170827:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"170819:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"170819:7:0","typeDescriptions":{}}},"id":8376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"170819:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"170797:67:0"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8378,"name":"clearedWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8363,"src":"170882:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8355,"src":"170904:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8382,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8357,"src":"170913:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"170904:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"170896:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8379,"name":"bytes32","nodeType":"ElementaryTypeName","src":"170896:7:0","typeDescriptions":{}}},"id":8384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"170896:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"170882:38:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8361,"id":8386,"nodeType":"Return","src":"170875:45:0"}]},"documentation":{"id":8351,"nodeType":"StructuredDocumentation","src":"170379:269:0","text":" @dev Inserts a 7 bit unsigned integer shifted by an offset into a 256 bit word, replacing the old value. Returns\n the new word.\n Assumes `value` only uses its least significant 7 bits, otherwise it may overwrite sibling bytes."},"id":8388,"implemented":true,"kind":"function","modifiers":[],"name":"insertUint7","nodeType":"FunctionDefinition","parameters":{"id":8358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8353,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8388,"src":"170685:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8352,"name":"bytes32","nodeType":"ElementaryTypeName","src":"170685:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8355,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8388,"src":"170708:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8354,"name":"uint256","nodeType":"ElementaryTypeName","src":"170708:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8357,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8388,"src":"170732:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8356,"name":"uint256","nodeType":"ElementaryTypeName","src":"170732:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"170674:79:0"},"returnParameters":{"id":8361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8360,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8388,"src":"170777:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8359,"name":"bytes32","nodeType":"ElementaryTypeName","src":"170777:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"170776:9:0"},"scope":9014,"src":"170654:274:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8425,"nodeType":"Block","src":"171346:143:0","statements":[{"assignments":[8401],"declarations":[{"constant":false,"id":8401,"mutability":"mutable","name":"clearedWord","nodeType":"VariableDeclaration","scope":8425,"src":"171357:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8400,"name":"bytes32","nodeType":"ElementaryTypeName","src":"171357:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8415,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8406,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8391,"src":"171395:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"171387:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8404,"name":"uint256","nodeType":"ElementaryTypeName","src":"171387:7:0","typeDescriptions":{}}},"id":8407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"171387:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"171403:21:0","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8408,"name":"_MASK_10","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"171405:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8409,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"171417:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"171405:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"171404:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"171387:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"171379:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"171379:7:0","typeDescriptions":{}}},"id":8414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"171379:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"171357:68:0"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8416,"name":"clearedWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"171443:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8393,"src":"171465:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8420,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"171474:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"171465:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"171457:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"171457:7:0","typeDescriptions":{}}},"id":8422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"171457:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"171443:38:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8399,"id":8424,"nodeType":"Return","src":"171436:45:0"}]},"documentation":{"id":8389,"nodeType":"StructuredDocumentation","src":"170936:271:0","text":" @dev Inserts a 10 bit unsigned integer shifted by an offset into a 256 bit word, replacing the old value. Returns\n the new word.\n Assumes `value` only uses its least significant 10 bits, otherwise it may overwrite sibling bytes."},"id":8426,"implemented":true,"kind":"function","modifiers":[],"name":"insertUint10","nodeType":"FunctionDefinition","parameters":{"id":8396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8391,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8426,"src":"171245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"171245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8393,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8426,"src":"171268:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8392,"name":"uint256","nodeType":"ElementaryTypeName","src":"171268:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8395,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8426,"src":"171292:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8394,"name":"uint256","nodeType":"ElementaryTypeName","src":"171292:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"171234:79:0"},"returnParameters":{"id":8399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8398,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8426,"src":"171337:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"171337:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"171336:9:0"},"scope":9014,"src":"171213:276:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8463,"nodeType":"Block","src":"171907:143:0","statements":[{"assignments":[8439],"declarations":[{"constant":false,"id":8439,"mutability":"mutable","name":"clearedWord","nodeType":"VariableDeclaration","scope":8463,"src":"171918:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"171918:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8453,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8444,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8429,"src":"171956:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"171948:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8442,"name":"uint256","nodeType":"ElementaryTypeName","src":"171948:7:0","typeDescriptions":{}}},"id":8445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"171948:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"171964:21:0","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8446,"name":"_MASK_16","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8188,"src":"171966:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8447,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8433,"src":"171978:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"171966:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"171965:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"171948:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"171940:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8440,"name":"bytes32","nodeType":"ElementaryTypeName","src":"171940:7:0","typeDescriptions":{}}},"id":8452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"171940:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"171918:68:0"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8454,"name":"clearedWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8439,"src":"172004:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8431,"src":"172026:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8458,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8433,"src":"172035:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"172026:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"172018:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"172018:7:0","typeDescriptions":{}}},"id":8460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"172018:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"172004:38:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8437,"id":8462,"nodeType":"Return","src":"171997:45:0"}]},"documentation":{"id":8427,"nodeType":"StructuredDocumentation","src":"171497:271:0","text":" @dev Inserts a 16 bit unsigned integer shifted by an offset into a 256 bit word, replacing the old value.\n Returns the new word.\n Assumes `value` only uses its least significant 16 bits, otherwise it may overwrite sibling bytes."},"id":8464,"implemented":true,"kind":"function","modifiers":[],"name":"insertUint16","nodeType":"FunctionDefinition","parameters":{"id":8434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8429,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8464,"src":"171806:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"171806:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8431,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8464,"src":"171829:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8430,"name":"uint256","nodeType":"ElementaryTypeName","src":"171829:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8433,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8464,"src":"171853:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8432,"name":"uint256","nodeType":"ElementaryTypeName","src":"171853:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"171795:79:0"},"returnParameters":{"id":8437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8436,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8464,"src":"171898:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"171898:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"171897:9:0"},"scope":9014,"src":"171774:276:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8501,"nodeType":"Block","src":"172419:143:0","statements":[{"assignments":[8477],"declarations":[{"constant":false,"id":8477,"mutability":"mutable","name":"clearedWord","nodeType":"VariableDeclaration","scope":8501,"src":"172430:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"172430:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8491,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8482,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8467,"src":"172468:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"172460:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8480,"name":"uint256","nodeType":"ElementaryTypeName","src":"172460:7:0","typeDescriptions":{}}},"id":8483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"172460:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"172476:21:0","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8484,"name":"_MASK_31","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8204,"src":"172478:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8485,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8471,"src":"172490:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"172478:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"172477:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"172460:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"172452:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"172452:7:0","typeDescriptions":{}}},"id":8490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"172452:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"172430:68:0"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8492,"name":"clearedWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8477,"src":"172516:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8469,"src":"172538:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8496,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8471,"src":"172547:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"172538:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"172530:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8493,"name":"bytes32","nodeType":"ElementaryTypeName","src":"172530:7:0","typeDescriptions":{}}},"id":8498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"172530:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"172516:38:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8475,"id":8500,"nodeType":"Return","src":"172509:45:0"}]},"documentation":{"id":8465,"nodeType":"StructuredDocumentation","src":"172058:222:0","text":" @dev Inserts a 31 bit unsigned integer shifted by an offset into a 256 bit word, replacing the old value. Returns\n the new word.\n Assumes `value` can be represented using 31 bits."},"id":8502,"implemented":true,"kind":"function","modifiers":[],"name":"insertUint31","nodeType":"FunctionDefinition","parameters":{"id":8472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8467,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8502,"src":"172318:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"172318:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8469,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8502,"src":"172341:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8468,"name":"uint256","nodeType":"ElementaryTypeName","src":"172341:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8471,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8502,"src":"172365:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8470,"name":"uint256","nodeType":"ElementaryTypeName","src":"172365:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"172307:79:0"},"returnParameters":{"id":8475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8474,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8502,"src":"172410:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"172410:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"172409:9:0"},"scope":9014,"src":"172286:276:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8539,"nodeType":"Block","src":"172980:143:0","statements":[{"assignments":[8515],"declarations":[{"constant":false,"id":8515,"mutability":"mutable","name":"clearedWord","nodeType":"VariableDeclaration","scope":8539,"src":"172991:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"172991:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8529,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8520,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8505,"src":"173029:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"173021:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8518,"name":"uint256","nodeType":"ElementaryTypeName","src":"173021:7:0","typeDescriptions":{}}},"id":8521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"173021:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"173037:21:0","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8522,"name":"_MASK_32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8212,"src":"173039:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8523,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8509,"src":"173051:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"173039:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"173038:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"173021:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"173013:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"173013:7:0","typeDescriptions":{}}},"id":8528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"173013:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"172991:68:0"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8530,"name":"clearedWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"173077:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8507,"src":"173099:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8534,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8509,"src":"173108:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"173099:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"173091:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8531,"name":"bytes32","nodeType":"ElementaryTypeName","src":"173091:7:0","typeDescriptions":{}}},"id":8536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"173091:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"173077:38:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8513,"id":8538,"nodeType":"Return","src":"173070:45:0"}]},"documentation":{"id":8503,"nodeType":"StructuredDocumentation","src":"172570:271:0","text":" @dev Inserts a 32 bit unsigned integer shifted by an offset into a 256 bit word, replacing the old value. Returns\n the new word.\n Assumes `value` only uses its least significant 32 bits, otherwise it may overwrite sibling bytes."},"id":8540,"implemented":true,"kind":"function","modifiers":[],"name":"insertUint32","nodeType":"FunctionDefinition","parameters":{"id":8510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8505,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8540,"src":"172879:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"172879:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8507,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8540,"src":"172902:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8506,"name":"uint256","nodeType":"ElementaryTypeName","src":"172902:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8509,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8540,"src":"172926:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8508,"name":"uint256","nodeType":"ElementaryTypeName","src":"172926:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"172868:79:0"},"returnParameters":{"id":8513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8512,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8540,"src":"172971:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"172971:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"172970:9:0"},"scope":9014,"src":"172847:276:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8577,"nodeType":"Block","src":"173541:143:0","statements":[{"assignments":[8553],"declarations":[{"constant":false,"id":8553,"mutability":"mutable","name":"clearedWord","nodeType":"VariableDeclaration","scope":8577,"src":"173552:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"173552:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8567,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8558,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8543,"src":"173590:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"173582:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8556,"name":"uint256","nodeType":"ElementaryTypeName","src":"173582:7:0","typeDescriptions":{}}},"id":8559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"173582:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"173598:21:0","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8560,"name":"_MASK_64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8228,"src":"173600:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8561,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8547,"src":"173612:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"173600:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8563,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"173599:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"173582:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"173574:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"173574:7:0","typeDescriptions":{}}},"id":8566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"173574:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"173552:68:0"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8568,"name":"clearedWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8553,"src":"173638:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8545,"src":"173660:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8572,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8547,"src":"173669:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"173660:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"173652:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"173652:7:0","typeDescriptions":{}}},"id":8574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"173652:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"173638:38:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8551,"id":8576,"nodeType":"Return","src":"173631:45:0"}]},"documentation":{"id":8541,"nodeType":"StructuredDocumentation","src":"173131:271:0","text":" @dev Inserts a 64 bit unsigned integer shifted by an offset into a 256 bit word, replacing the old value. Returns\n the new word.\n Assumes `value` only uses its least significant 64 bits, otherwise it may overwrite sibling bytes."},"id":8578,"implemented":true,"kind":"function","modifiers":[],"name":"insertUint64","nodeType":"FunctionDefinition","parameters":{"id":8548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8543,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8578,"src":"173440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"173440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8545,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8578,"src":"173463:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8544,"name":"uint256","nodeType":"ElementaryTypeName","src":"173463:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8547,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8578,"src":"173487:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8546,"name":"uint256","nodeType":"ElementaryTypeName","src":"173487:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"173429:79:0"},"returnParameters":{"id":8551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8550,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8578,"src":"173532:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"173532:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"173531:9:0"},"scope":9014,"src":"173408:276:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8621,"nodeType":"Block","src":"174067:250:0","statements":[{"assignments":[8591],"declarations":[{"constant":false,"id":8591,"mutability":"mutable","name":"clearedWord","nodeType":"VariableDeclaration","scope":8621,"src":"174078:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"174078:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8605,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8596,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8581,"src":"174116:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"174108:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8594,"name":"uint256","nodeType":"ElementaryTypeName","src":"174108:7:0","typeDescriptions":{}}},"id":8597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"174108:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"174124:21:0","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8598,"name":"_MASK_22","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8196,"src":"174126:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8599,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8585,"src":"174138:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"174126:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8601,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"174125:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"174108:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"174100:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8592,"name":"bytes32","nodeType":"ElementaryTypeName","src":"174100:7:0","typeDescriptions":{}}},"id":8604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"174100:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"174078:68:0"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8606,"name":"clearedWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8591,"src":"174249:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8583,"src":"174280:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"174272:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8609,"name":"uint256","nodeType":"ElementaryTypeName","src":"174272:7:0","typeDescriptions":{}}},"id":8612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"174272:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8613,"name":"_MASK_22","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8196,"src":"174289:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"174272:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8615,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"174271:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8616,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8585,"src":"174302:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"174271:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"174263:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"174263:7:0","typeDescriptions":{}}},"id":8618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"174263:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"174249:60:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8589,"id":8620,"nodeType":"Return","src":"174242:67:0"}]},"documentation":{"id":8579,"nodeType":"StructuredDocumentation","src":"173709:221:0","text":" @dev Inserts a 22 bits signed integer shifted by an offset into a 256 bit word, replacing the old value. Returns\n the new word.\n Assumes `value` can be represented using 22 bits."},"id":8622,"implemented":true,"kind":"function","modifiers":[],"name":"insertInt22","nodeType":"FunctionDefinition","parameters":{"id":8586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8581,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8622,"src":"173967:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"173967:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8583,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8622,"src":"173990:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8582,"name":"int256","nodeType":"ElementaryTypeName","src":"173990:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8585,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8622,"src":"174013:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8584,"name":"uint256","nodeType":"ElementaryTypeName","src":"174013:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"173956:78:0"},"returnParameters":{"id":8589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8588,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8622,"src":"174058:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"174058:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"174057:9:0"},"scope":9014,"src":"173936:381:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8665,"nodeType":"Block","src":"174678:167:0","statements":[{"assignments":[8635],"declarations":[{"constant":false,"id":8635,"mutability":"mutable","name":"clearedWord","nodeType":"VariableDeclaration","scope":8665,"src":"174689:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"174689:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8649,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8640,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8625,"src":"174727:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"174719:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8638,"name":"uint256","nodeType":"ElementaryTypeName","src":"174719:7:0","typeDescriptions":{}}},"id":8641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"174719:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"174735:22:0","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8642,"name":"_MASK_192","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8252,"src":"174737:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8643,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8629,"src":"174750:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"174737:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8645,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"174736:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"174719:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"174711:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"174711:7:0","typeDescriptions":{}}},"id":8648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"174711:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"174689:69:0"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8650,"name":"clearedWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8635,"src":"174776:11:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8627,"src":"174807:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"174799:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8653,"name":"uint256","nodeType":"ElementaryTypeName","src":"174799:7:0","typeDescriptions":{}}},"id":8656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"174799:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8657,"name":"_MASK_192","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8252,"src":"174816:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"174799:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"174798:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8660,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8629,"src":"174830:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"174798:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"174790:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"174790:7:0","typeDescriptions":{}}},"id":8662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"174790:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"174776:61:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8633,"id":8664,"nodeType":"Return","src":"174769:68:0"}]},"documentation":{"id":8623,"nodeType":"StructuredDocumentation","src":"174341:197:0","text":" @dev Inserts 192 bit shifted by an offset into a 256 bit word, replacing the old value. Returns the new word.\n Assumes `value` can be represented using 192 bits."},"id":8666,"implemented":true,"kind":"function","modifiers":[],"name":"insertBits192","nodeType":"FunctionDefinition","parameters":{"id":8630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8625,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8666,"src":"174577:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"174577:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8627,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8666,"src":"174600:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"174600:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8629,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8666,"src":"174624:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8628,"name":"uint256","nodeType":"ElementaryTypeName","src":"174624:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"174566:79:0"},"returnParameters":{"id":8633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8632,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8666,"src":"174669:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"174669:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"174668:9:0"},"scope":9014,"src":"174544:301:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8683,"nodeType":"Block","src":"175260:50:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8669,"src":"175286:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8679,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8671,"src":"175295:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"175286:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"175278:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"175278:7:0","typeDescriptions":{}}},"id":8681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"175278:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8675,"id":8682,"nodeType":"Return","src":"175271:31:0"}]},"documentation":{"id":8667,"nodeType":"StructuredDocumentation","src":"174891:280:0","text":" @dev Encodes an unsigned integer shifted by an offset. This performs no size checks: it is up to the caller to\n ensure that the values are bounded.\n The return value can be logically ORed with other encoded values to form a 256 bit word."},"id":8684,"implemented":true,"kind":"function","modifiers":[],"name":"encodeUint","nodeType":"FunctionDefinition","parameters":{"id":8672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8669,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8684,"src":"175197:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8668,"name":"uint256","nodeType":"ElementaryTypeName","src":"175197:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8671,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8684,"src":"175212:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8670,"name":"uint256","nodeType":"ElementaryTypeName","src":"175212:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"175196:31:0"},"returnParameters":{"id":8675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8674,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8684,"src":"175251:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8673,"name":"bytes32","nodeType":"ElementaryTypeName","src":"175251:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"175250:9:0"},"scope":9014,"src":"175177:133:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8707,"nodeType":"Block","src":"175609:157:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8687,"src":"175729:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"175721:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8696,"name":"uint256","nodeType":"ElementaryTypeName","src":"175721:7:0","typeDescriptions":{}}},"id":8699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"175721:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8700,"name":"_MASK_22","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8196,"src":"175738:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"175721:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8702,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"175720:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8703,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8689,"src":"175751:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"175720:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"175712:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"175712:7:0","typeDescriptions":{}}},"id":8705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"175712:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8693,"id":8706,"nodeType":"Return","src":"175705:53:0"}]},"documentation":{"id":8685,"nodeType":"StructuredDocumentation","src":"175335:185:0","text":" @dev Encodes a 22 bits signed integer shifted by an offset.\n The return value can be logically ORed with other encoded values to form a 256 bit word."},"id":8708,"implemented":true,"kind":"function","modifiers":[],"name":"encodeInt22","nodeType":"FunctionDefinition","parameters":{"id":8690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8687,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8708,"src":"175547:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8686,"name":"int256","nodeType":"ElementaryTypeName","src":"175547:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8689,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8708,"src":"175561:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8688,"name":"uint256","nodeType":"ElementaryTypeName","src":"175561:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"175546:30:0"},"returnParameters":{"id":8693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8692,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8708,"src":"175600:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8691,"name":"bytes32","nodeType":"ElementaryTypeName","src":"175600:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"175599:9:0"},"scope":9014,"src":"175526:240:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8731,"nodeType":"Block","src":"176048:157:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8711,"src":"176168:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"176160:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8720,"name":"uint256","nodeType":"ElementaryTypeName","src":"176160:7:0","typeDescriptions":{}}},"id":8723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"176160:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8724,"name":"_MASK_53","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"176177:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"176160:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8726,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"176159:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":8727,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"176190:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"176159:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"176151:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"176151:7:0","typeDescriptions":{}}},"id":8729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"176151:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8717,"id":8730,"nodeType":"Return","src":"176144:53:0"}]},"documentation":{"id":8709,"nodeType":"StructuredDocumentation","src":"175774:185:0","text":" @dev Encodes a 53 bits signed integer shifted by an offset.\n The return value can be logically ORed with other encoded values to form a 256 bit word."},"id":8732,"implemented":true,"kind":"function","modifiers":[],"name":"encodeInt53","nodeType":"FunctionDefinition","parameters":{"id":8714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8711,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8732,"src":"175986:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8710,"name":"int256","nodeType":"ElementaryTypeName","src":"175986:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8713,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8732,"src":"176000:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8712,"name":"uint256","nodeType":"ElementaryTypeName","src":"176000:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"175985:30:0"},"returnParameters":{"id":8717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8716,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8732,"src":"176039:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"176039:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"176038:9:0"},"scope":9014,"src":"175965:240:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8754,"nodeType":"Block","src":"176414:66:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8744,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8735,"src":"176441:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8745,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8737,"src":"176449:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"176441:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"176433:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8742,"name":"uint256","nodeType":"ElementaryTypeName","src":"176433:7:0","typeDescriptions":{}}},"id":8747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"176433:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8748,"name":"_MASK_1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8156,"src":"176459:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"176433:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"176432:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":8751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"176471:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"176432:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8741,"id":8753,"nodeType":"Return","src":"176425:47:0"}]},"documentation":{"id":8733,"nodeType":"StructuredDocumentation","src":"176232:97:0","text":" @dev Decodes and returns a boolean shifted by an offset from a 256 bit word."},"id":8755,"implemented":true,"kind":"function","modifiers":[],"name":"decodeBool","nodeType":"FunctionDefinition","parameters":{"id":8738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8735,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8755,"src":"176355:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"176355:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8737,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8755,"src":"176369:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8736,"name":"uint256","nodeType":"ElementaryTypeName","src":"176369:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"176354:30:0"},"returnParameters":{"id":8741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8740,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8755,"src":"176408:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8739,"name":"bool","nodeType":"ElementaryTypeName","src":"176408:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"176407:6:0"},"scope":9014,"src":"176335:145:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8774,"nodeType":"Block","src":"176708:59:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8767,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8758,"src":"176734:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8768,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8760,"src":"176742:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"176734:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"176726:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8765,"name":"uint256","nodeType":"ElementaryTypeName","src":"176726:7:0","typeDescriptions":{}}},"id":8770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"176726:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8771,"name":"_MASK_5","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8164,"src":"176752:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"176726:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8764,"id":8773,"nodeType":"Return","src":"176719:40:0"}]},"documentation":{"id":8756,"nodeType":"StructuredDocumentation","src":"176507:112:0","text":" @dev Decodes and returns a 5 bit unsigned integer shifted by an offset from a 256 bit word."},"id":8775,"implemented":true,"kind":"function","modifiers":[],"name":"decodeUint5","nodeType":"FunctionDefinition","parameters":{"id":8761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8758,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8775,"src":"176646:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"176646:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8760,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8775,"src":"176660:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8759,"name":"uint256","nodeType":"ElementaryTypeName","src":"176660:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"176645:30:0"},"returnParameters":{"id":8764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8763,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8775,"src":"176699:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8762,"name":"uint256","nodeType":"ElementaryTypeName","src":"176699:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"176698:9:0"},"scope":9014,"src":"176625:142:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8794,"nodeType":"Block","src":"176976:59:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8787,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8778,"src":"177002:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8788,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8780,"src":"177010:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"177002:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"176994:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8785,"name":"uint256","nodeType":"ElementaryTypeName","src":"176994:7:0","typeDescriptions":{}}},"id":8790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"176994:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8791,"name":"_MASK_7","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8172,"src":"177020:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"176994:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8784,"id":8793,"nodeType":"Return","src":"176987:40:0"}]},"documentation":{"id":8776,"nodeType":"StructuredDocumentation","src":"176775:112:0","text":" @dev Decodes and returns a 7 bit unsigned integer shifted by an offset from a 256 bit word."},"id":8795,"implemented":true,"kind":"function","modifiers":[],"name":"decodeUint7","nodeType":"FunctionDefinition","parameters":{"id":8781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8778,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8795,"src":"176914:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8777,"name":"bytes32","nodeType":"ElementaryTypeName","src":"176914:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8780,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8795,"src":"176928:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8779,"name":"uint256","nodeType":"ElementaryTypeName","src":"176928:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"176913:30:0"},"returnParameters":{"id":8784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8783,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8795,"src":"176967:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8782,"name":"uint256","nodeType":"ElementaryTypeName","src":"176967:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"176966:9:0"},"scope":9014,"src":"176893:142:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8814,"nodeType":"Block","src":"177246:60:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8807,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"177272:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8808,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8800,"src":"177280:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"177272:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"177264:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8805,"name":"uint256","nodeType":"ElementaryTypeName","src":"177264:7:0","typeDescriptions":{}}},"id":8810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"177264:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8811,"name":"_MASK_10","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"177290:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"177264:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8804,"id":8813,"nodeType":"Return","src":"177257:41:0"}]},"documentation":{"id":8796,"nodeType":"StructuredDocumentation","src":"177043:113:0","text":" @dev Decodes and returns a 10 bit unsigned integer shifted by an offset from a 256 bit word."},"id":8815,"implemented":true,"kind":"function","modifiers":[],"name":"decodeUint10","nodeType":"FunctionDefinition","parameters":{"id":8801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8798,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8815,"src":"177184:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"177184:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8800,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8815,"src":"177198:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8799,"name":"uint256","nodeType":"ElementaryTypeName","src":"177198:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"177183:30:0"},"returnParameters":{"id":8804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8803,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8815,"src":"177237:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8802,"name":"uint256","nodeType":"ElementaryTypeName","src":"177237:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"177236:9:0"},"scope":9014,"src":"177162:144:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8834,"nodeType":"Block","src":"177517:60:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8827,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8818,"src":"177543:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8828,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8820,"src":"177551:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"177543:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"177535:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8825,"name":"uint256","nodeType":"ElementaryTypeName","src":"177535:7:0","typeDescriptions":{}}},"id":8830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"177535:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8831,"name":"_MASK_16","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8188,"src":"177561:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"177535:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8824,"id":8833,"nodeType":"Return","src":"177528:41:0"}]},"documentation":{"id":8816,"nodeType":"StructuredDocumentation","src":"177314:113:0","text":" @dev Decodes and returns a 16 bit unsigned integer shifted by an offset from a 256 bit word."},"id":8835,"implemented":true,"kind":"function","modifiers":[],"name":"decodeUint16","nodeType":"FunctionDefinition","parameters":{"id":8821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8818,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8835,"src":"177455:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"177455:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8820,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8835,"src":"177469:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8819,"name":"uint256","nodeType":"ElementaryTypeName","src":"177469:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"177454:30:0"},"returnParameters":{"id":8824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8823,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8835,"src":"177508:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8822,"name":"uint256","nodeType":"ElementaryTypeName","src":"177508:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"177507:9:0"},"scope":9014,"src":"177433:144:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8854,"nodeType":"Block","src":"177788:60:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8847,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8838,"src":"177814:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8848,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8840,"src":"177822:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"177814:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"177806:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8845,"name":"uint256","nodeType":"ElementaryTypeName","src":"177806:7:0","typeDescriptions":{}}},"id":8850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"177806:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8851,"name":"_MASK_31","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8204,"src":"177832:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"177806:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8844,"id":8853,"nodeType":"Return","src":"177799:41:0"}]},"documentation":{"id":8836,"nodeType":"StructuredDocumentation","src":"177585:113:0","text":" @dev Decodes and returns a 31 bit unsigned integer shifted by an offset from a 256 bit word."},"id":8855,"implemented":true,"kind":"function","modifiers":[],"name":"decodeUint31","nodeType":"FunctionDefinition","parameters":{"id":8841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8838,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8855,"src":"177726:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"177726:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8840,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8855,"src":"177740:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8839,"name":"uint256","nodeType":"ElementaryTypeName","src":"177740:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"177725:30:0"},"returnParameters":{"id":8844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8843,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8855,"src":"177779:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8842,"name":"uint256","nodeType":"ElementaryTypeName","src":"177779:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"177778:9:0"},"scope":9014,"src":"177704:144:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8874,"nodeType":"Block","src":"178059:60:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8867,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8858,"src":"178085:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8868,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8860,"src":"178093:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"178085:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"178077:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8865,"name":"uint256","nodeType":"ElementaryTypeName","src":"178077:7:0","typeDescriptions":{}}},"id":8870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"178077:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8871,"name":"_MASK_32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8212,"src":"178103:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"178077:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8864,"id":8873,"nodeType":"Return","src":"178070:41:0"}]},"documentation":{"id":8856,"nodeType":"StructuredDocumentation","src":"177856:113:0","text":" @dev Decodes and returns a 32 bit unsigned integer shifted by an offset from a 256 bit word."},"id":8875,"implemented":true,"kind":"function","modifiers":[],"name":"decodeUint32","nodeType":"FunctionDefinition","parameters":{"id":8861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8858,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8875,"src":"177997:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"177997:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8860,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8875,"src":"178011:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8859,"name":"uint256","nodeType":"ElementaryTypeName","src":"178011:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"177996:30:0"},"returnParameters":{"id":8864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8863,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8875,"src":"178050:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8862,"name":"uint256","nodeType":"ElementaryTypeName","src":"178050:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"178049:9:0"},"scope":9014,"src":"177975:144:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8894,"nodeType":"Block","src":"178330:60:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8887,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8878,"src":"178356:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8888,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8880,"src":"178364:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"178356:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"178348:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8885,"name":"uint256","nodeType":"ElementaryTypeName","src":"178348:7:0","typeDescriptions":{}}},"id":8890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"178348:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8891,"name":"_MASK_64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8228,"src":"178374:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"178348:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8884,"id":8893,"nodeType":"Return","src":"178341:41:0"}]},"documentation":{"id":8876,"nodeType":"StructuredDocumentation","src":"178127:113:0","text":" @dev Decodes and returns a 64 bit unsigned integer shifted by an offset from a 256 bit word."},"id":8895,"implemented":true,"kind":"function","modifiers":[],"name":"decodeUint64","nodeType":"FunctionDefinition","parameters":{"id":8881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8878,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8895,"src":"178268:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"178268:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8880,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8895,"src":"178282:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8879,"name":"uint256","nodeType":"ElementaryTypeName","src":"178282:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"178267:30:0"},"returnParameters":{"id":8884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8883,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8895,"src":"178321:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8882,"name":"uint256","nodeType":"ElementaryTypeName","src":"178321:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"178320:9:0"},"scope":9014,"src":"178246:144:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8914,"nodeType":"Block","src":"178601:60:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8907,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8898,"src":"178627:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8908,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8900,"src":"178635:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"178627:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"178619:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8905,"name":"uint256","nodeType":"ElementaryTypeName","src":"178619:7:0","typeDescriptions":{}}},"id":8910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"178619:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8911,"name":"_MASK_96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8236,"src":"178645:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"178619:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8904,"id":8913,"nodeType":"Return","src":"178612:41:0"}]},"documentation":{"id":8896,"nodeType":"StructuredDocumentation","src":"178398:113:0","text":" @dev Decodes and returns a 96 bit unsigned integer shifted by an offset from a 256 bit word."},"id":8915,"implemented":true,"kind":"function","modifiers":[],"name":"decodeUint96","nodeType":"FunctionDefinition","parameters":{"id":8901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8898,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8915,"src":"178539:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"178539:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8900,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8915,"src":"178553:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8899,"name":"uint256","nodeType":"ElementaryTypeName","src":"178553:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"178538:30:0"},"returnParameters":{"id":8904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8903,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8915,"src":"178592:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8902,"name":"uint256","nodeType":"ElementaryTypeName","src":"178592:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"178591:9:0"},"scope":9014,"src":"178517:144:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8934,"nodeType":"Block","src":"178874:61:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8927,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8918,"src":"178900:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8928,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8920,"src":"178908:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"178900:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"178892:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8925,"name":"uint256","nodeType":"ElementaryTypeName","src":"178892:7:0","typeDescriptions":{}}},"id":8930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"178892:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8931,"name":"_MASK_128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8244,"src":"178918:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"178892:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8924,"id":8933,"nodeType":"Return","src":"178885:42:0"}]},"documentation":{"id":8916,"nodeType":"StructuredDocumentation","src":"178669:114:0","text":" @dev Decodes and returns a 128 bit unsigned integer shifted by an offset from a 256 bit word."},"id":8935,"implemented":true,"kind":"function","modifiers":[],"name":"decodeUint128","nodeType":"FunctionDefinition","parameters":{"id":8921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8918,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8935,"src":"178812:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"178812:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8920,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8935,"src":"178826:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8919,"name":"uint256","nodeType":"ElementaryTypeName","src":"178826:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"178811:30:0"},"returnParameters":{"id":8924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8923,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8935,"src":"178865:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8922,"name":"uint256","nodeType":"ElementaryTypeName","src":"178865:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"178864:9:0"},"scope":9014,"src":"178789:146:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8973,"nodeType":"Block","src":"179160:411:0","statements":[{"assignments":[8946],"declarations":[{"constant":false,"id":8946,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":8973,"src":"179171:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8945,"name":"int256","nodeType":"ElementaryTypeName","src":"179171:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8958,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8951,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8938,"src":"179201:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8952,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8940,"src":"179209:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"179201:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"179193:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8949,"name":"uint256","nodeType":"ElementaryTypeName","src":"179193:7:0","typeDescriptions":{}}},"id":8954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"179193:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8955,"name":"_MASK_22","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8196,"src":"179219:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"179193:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"179186:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8947,"name":"int256","nodeType":"ElementaryTypeName","src":"179186:6:0","typeDescriptions":{}}},"id":8957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"179186:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"179171:57:0"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8946,"src":"179506:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8960,"name":"_MAX_INT_22","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8260,"src":"179514:11:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"179506:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":8970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8946,"src":"179558:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":8971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"179506:57:0","trueExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8946,"src":"179529:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":8966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"179544:9:0","subExpression":{"id":8965,"name":"_MASK_22","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8196,"src":"179545:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"179537:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8963,"name":"int256","nodeType":"ElementaryTypeName","src":"179537:6:0","typeDescriptions":{}}},"id":8967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"179537:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"179529:25:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8969,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"179528:27:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8944,"id":8972,"nodeType":"Return","src":"179499:64:0"}]},"documentation":{"id":8936,"nodeType":"StructuredDocumentation","src":"178960:112:0","text":" @dev Decodes and returns a 22 bits signed integer shifted by an offset from a 256 bit word."},"id":8974,"implemented":true,"kind":"function","modifiers":[],"name":"decodeInt22","nodeType":"FunctionDefinition","parameters":{"id":8941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8938,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":8974,"src":"179099:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8937,"name":"bytes32","nodeType":"ElementaryTypeName","src":"179099:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8940,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":8974,"src":"179113:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8939,"name":"uint256","nodeType":"ElementaryTypeName","src":"179113:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"179098:30:0"},"returnParameters":{"id":8944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8943,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8974,"src":"179152:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8942,"name":"int256","nodeType":"ElementaryTypeName","src":"179152:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"179151:8:0"},"scope":9014,"src":"179078:493:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9012,"nodeType":"Block","src":"179779:413:0","statements":[{"assignments":[8985],"declarations":[{"constant":false,"id":8985,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":9012,"src":"179790:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8984,"name":"int256","nodeType":"ElementaryTypeName","src":"179790:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8997,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8990,"name":"word","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8977,"src":"179820:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8991,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8979,"src":"179828:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"179820:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"179812:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8988,"name":"uint256","nodeType":"ElementaryTypeName","src":"179812:7:0","typeDescriptions":{}}},"id":8993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"179812:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8994,"name":"_MASK_53","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"179838:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"179812:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"179805:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8986,"name":"int256","nodeType":"ElementaryTypeName","src":"179805:6:0","typeDescriptions":{}}},"id":8996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"179805:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"179790:57:0"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8985,"src":"180127:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8999,"name":"_MAX_INT_53","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8268,"src":"180135:11:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"180127:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":9009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8985,"src":"180179:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":9010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"180127:57:0","trueExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8985,"src":"180150:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":9005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"180165:9:0","subExpression":{"id":9004,"name":"_MASK_53","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"180166:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"180158:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9002,"name":"int256","nodeType":"ElementaryTypeName","src":"180158:6:0","typeDescriptions":{}}},"id":9006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"180158:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"180150:25:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"180149:27:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8983,"id":9011,"nodeType":"Return","src":"180120:64:0"}]},"documentation":{"id":8975,"nodeType":"StructuredDocumentation","src":"179579:112:0","text":" @dev Decodes and returns a 53 bits signed integer shifted by an offset from a 256 bit word."},"id":9013,"implemented":true,"kind":"function","modifiers":[],"name":"decodeInt53","nodeType":"FunctionDefinition","parameters":{"id":8980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8977,"mutability":"mutable","name":"word","nodeType":"VariableDeclaration","scope":9013,"src":"179718:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8976,"name":"bytes32","nodeType":"ElementaryTypeName","src":"179718:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8979,"mutability":"mutable","name":"offset","nodeType":"VariableDeclaration","scope":9013,"src":"179732:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8978,"name":"uint256","nodeType":"ElementaryTypeName","src":"179732:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"179717:30:0"},"returnParameters":{"id":8983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8982,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9013,"src":"179771:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8981,"name":"int256","nodeType":"ElementaryTypeName","src":"179771:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"179770:8:0"},"scope":9014,"src":"179697:495:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10227,"src":"168231:11964:0"},{"id":9015,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"180201:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":9016,"nodeType":"StructuredDocumentation","src":"180228:97:0","text":" @dev Interface for the SignatureValidator helper, used to support meta-transactions."},"fullyImplemented":false,"id":9031,"linearizedBaseContracts":[9031],"name":"ISignaturesValidator","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":9017,"nodeType":"StructuredDocumentation","src":"180365:62:0","text":" @dev Returns the EIP712 domain separator."},"functionSelector":"ed24911d","id":9022,"implemented":false,"kind":"function","modifiers":[],"name":"getDomainSeparator","nodeType":"FunctionDefinition","parameters":{"id":9018,"nodeType":"ParameterList","parameters":[],"src":"180460:2:0"},"returnParameters":{"id":9021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9020,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9022,"src":"180486:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9019,"name":"bytes32","nodeType":"ElementaryTypeName","src":"180486:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"180485:9:0"},"scope":9031,"src":"180433:62:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9023,"nodeType":"StructuredDocumentation","src":"180503:85:0","text":" @dev Returns the next nonce used by an address to sign messages."},"functionSelector":"90193b7c","id":9030,"implemented":false,"kind":"function","modifiers":[],"name":"getNextNonce","nodeType":"FunctionDefinition","parameters":{"id":9026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9025,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":9030,"src":"180616:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9024,"name":"address","nodeType":"ElementaryTypeName","src":"180616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"180615:14:0"},"returnParameters":{"id":9029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9028,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9030,"src":"180653:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9027,"name":"uint256","nodeType":"ElementaryTypeName","src":"180653:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"180652:9:0"},"scope":9031,"src":"180594:68:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10227,"src":"180327:338:0"},{"id":9032,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"180673:23:0"},{"abstract":false,"baseContracts":[{"baseName":{"id":9034,"name":"ISignaturesValidator","nodeType":"UserDefinedTypeName","referencedDeclaration":9031,"src":"180896:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ISignaturesValidator_$9031","typeString":"contract ISignaturesValidator"}},"id":9035,"nodeType":"InheritanceSpecifier","src":"180896:20:0"},{"baseName":{"id":9036,"name":"ITemporarilyPausable","nodeType":"UserDefinedTypeName","referencedDeclaration":1333,"src":"180918:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_ITemporarilyPausable_$1333","typeString":"contract ITemporarilyPausable"}},"id":9037,"nodeType":"InheritanceSpecifier","src":"180918:20:0"}],"contractDependencies":[1333,9031],"contractKind":"interface","documentation":{"id":9033,"nodeType":"StructuredDocumentation","src":"180700:174:0","text":" @dev Full external interface for the Vault core contract - no external or public methods exist in the contract that\n don't override one of these declarations."},"fullyImplemented":false,"id":9483,"linearizedBaseContracts":[9483,1333,9031],"name":"IVault","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":9038,"nodeType":"StructuredDocumentation","src":"182458:57:0","text":" @dev Returns the Vault's Authorizer."},"functionSelector":"aaabadc5","id":9043,"implemented":false,"kind":"function","modifiers":[],"name":"getAuthorizer","nodeType":"FunctionDefinition","parameters":{"id":9039,"nodeType":"ParameterList","parameters":[],"src":"182543:2:0"},"returnParameters":{"id":9042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9041,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9043,"src":"182569:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$9665","typeString":"contract IAuthorizer"},"typeName":{"id":9040,"name":"IAuthorizer","nodeType":"UserDefinedTypeName","referencedDeclaration":9665,"src":"182569:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$9665","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"182568:13:0"},"scope":9483,"src":"182521:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9044,"nodeType":"StructuredDocumentation","src":"182590:179:0","text":" @dev Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this.\n Emits an `AuthorizerChanged` event."},"functionSelector":"058a628f","id":9049,"implemented":false,"kind":"function","modifiers":[],"name":"setAuthorizer","nodeType":"FunctionDefinition","parameters":{"id":9047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9046,"mutability":"mutable","name":"newAuthorizer","nodeType":"VariableDeclaration","scope":9049,"src":"182798:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$9665","typeString":"contract IAuthorizer"},"typeName":{"id":9045,"name":"IAuthorizer","nodeType":"UserDefinedTypeName","referencedDeclaration":9665,"src":"182798:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$9665","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"182797:27:0"},"returnParameters":{"id":9048,"nodeType":"ParameterList","parameters":[],"src":"182833:0:0"},"scope":9483,"src":"182775:59:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":9050,"nodeType":"StructuredDocumentation","src":"182842:82:0","text":" @dev Emitted when a new authorizer is set by `setAuthorizer`."},"id":9054,"name":"AuthorizerChanged","nodeType":"EventDefinition","parameters":{"id":9053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9052,"indexed":true,"mutability":"mutable","name":"newAuthorizer","nodeType":"VariableDeclaration","scope":9054,"src":"182954:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$9665","typeString":"contract IAuthorizer"},"typeName":{"id":9051,"name":"IAuthorizer","nodeType":"UserDefinedTypeName","referencedDeclaration":9665,"src":"182954:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$9665","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"182953:35:0"},"src":"182930:59:0"},{"documentation":{"id":9055,"nodeType":"StructuredDocumentation","src":"184101:101:0","text":" @dev Returns true if `user` has approved `relayer` to act as a relayer for them."},"functionSelector":"fec90d72","id":9064,"implemented":false,"kind":"function","modifiers":[],"name":"hasApprovedRelayer","nodeType":"FunctionDefinition","parameters":{"id":9060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9057,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":9064,"src":"184236:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9056,"name":"address","nodeType":"ElementaryTypeName","src":"184236:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9059,"mutability":"mutable","name":"relayer","nodeType":"VariableDeclaration","scope":9064,"src":"184250:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9058,"name":"address","nodeType":"ElementaryTypeName","src":"184250:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"184235:31:0"},"returnParameters":{"id":9063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9062,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9064,"src":"184290:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9061,"name":"bool","nodeType":"ElementaryTypeName","src":"184290:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"184289:6:0"},"scope":9483,"src":"184208:88:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9065,"nodeType":"StructuredDocumentation","src":"184304:182:0","text":" @dev Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise.\n Emits a `RelayerApprovalChanged` event."},"functionSelector":"fa6e671d","id":9074,"implemented":false,"kind":"function","modifiers":[],"name":"setRelayerApproval","nodeType":"FunctionDefinition","parameters":{"id":9072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9067,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":9074,"src":"184530:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9066,"name":"address","nodeType":"ElementaryTypeName","src":"184530:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9069,"mutability":"mutable","name":"relayer","nodeType":"VariableDeclaration","scope":9074,"src":"184555:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9068,"name":"address","nodeType":"ElementaryTypeName","src":"184555:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9071,"mutability":"mutable","name":"approved","nodeType":"VariableDeclaration","scope":9074,"src":"184581:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9070,"name":"bool","nodeType":"ElementaryTypeName","src":"184581:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"184519:82:0"},"returnParameters":{"id":9073,"nodeType":"ParameterList","parameters":[],"src":"184610:0:0"},"scope":9483,"src":"184492:119:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":9075,"nodeType":"StructuredDocumentation","src":"184619:106:0","text":" @dev Emitted every time a relayer is approved or disapproved by `setRelayerApproval`."},"id":9083,"name":"RelayerApprovalChanged","nodeType":"EventDefinition","parameters":{"id":9082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9077,"indexed":true,"mutability":"mutable","name":"relayer","nodeType":"VariableDeclaration","scope":9083,"src":"184760:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9076,"name":"address","nodeType":"ElementaryTypeName","src":"184760:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9079,"indexed":true,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":9083,"src":"184785:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9078,"name":"address","nodeType":"ElementaryTypeName","src":"184785:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9081,"indexed":false,"mutability":"mutable","name":"approved","nodeType":"VariableDeclaration","scope":9083,"src":"184809:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9080,"name":"bool","nodeType":"ElementaryTypeName","src":"184809:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"184759:64:0"},"src":"184731:93:0"},{"documentation":{"id":9084,"nodeType":"StructuredDocumentation","src":"185544:80:0","text":" @dev Returns `user`'s Internal Balance for a set of tokens."},"functionSelector":"0f5a6efa","id":9095,"implemented":false,"kind":"function","modifiers":[],"name":"getInternalBalance","nodeType":"FunctionDefinition","parameters":{"id":9090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9086,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":9095,"src":"185658:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9085,"name":"address","nodeType":"ElementaryTypeName","src":"185658:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9089,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":9095,"src":"185672:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":9087,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"185672:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":9088,"nodeType":"ArrayTypeName","src":"185672:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"185657:38:0"},"returnParameters":{"id":9094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9093,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9095,"src":"185719:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9091,"name":"uint256","nodeType":"ElementaryTypeName","src":"185719:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9092,"nodeType":"ArrayTypeName","src":"185719:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"185718:18:0"},"scope":9483,"src":"185630:107:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9096,"nodeType":"StructuredDocumentation","src":"185745:422:0","text":" @dev Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer)\n and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as\n it lets integrators reuse a user's Vault allowance.\n For each operation, if the caller is not `sender`, it must be an authorized relayer for them."},"functionSelector":"0e8e3e84","id":9102,"implemented":false,"kind":"function","modifiers":[],"name":"manageUserBalance","nodeType":"FunctionDefinition","parameters":{"id":9100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9099,"mutability":"mutable","name":"ops","nodeType":"VariableDeclaration","scope":9102,"src":"186200:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserBalanceOp_$9113_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.UserBalanceOp[]"},"typeName":{"baseType":{"id":9097,"name":"UserBalanceOp","nodeType":"UserDefinedTypeName","referencedDeclaration":9113,"src":"186200:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserBalanceOp_$9113_storage_ptr","typeString":"struct IVault.UserBalanceOp"}},"id":9098,"nodeType":"ArrayTypeName","src":"186200:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserBalanceOp_$9113_storage_$dyn_storage_ptr","typeString":"struct IVault.UserBalanceOp[]"}},"visibility":"internal"}],"src":"186199:28:0"},"returnParameters":{"id":9101,"nodeType":"ParameterList","parameters":[],"src":"186244:0:0"},"scope":9483,"src":"186173:72:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.UserBalanceOp","id":9113,"members":[{"constant":false,"id":9104,"mutability":"mutable","name":"kind","nodeType":"VariableDeclaration","scope":9113,"src":"186469:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_UserBalanceOpKind_$9118","typeString":"enum IVault.UserBalanceOpKind"},"typeName":{"id":9103,"name":"UserBalanceOpKind","nodeType":"UserDefinedTypeName","referencedDeclaration":9118,"src":"186469:17:0","typeDescriptions":{"typeIdentifier":"t_enum$_UserBalanceOpKind_$9118","typeString":"enum IVault.UserBalanceOpKind"}},"visibility":"internal"},{"constant":false,"id":9106,"mutability":"mutable","name":"asset","nodeType":"VariableDeclaration","scope":9113,"src":"186502:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$6431","typeString":"contract IAsset"},"typeName":{"id":9105,"name":"IAsset","nodeType":"UserDefinedTypeName","referencedDeclaration":6431,"src":"186502:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$6431","typeString":"contract IAsset"}},"visibility":"internal"},{"constant":false,"id":9108,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":9113,"src":"186525:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9107,"name":"uint256","nodeType":"ElementaryTypeName","src":"186525:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9110,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":9113,"src":"186550:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9109,"name":"address","nodeType":"ElementaryTypeName","src":"186550:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9112,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":9113,"src":"186575:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":9111,"name":"address","nodeType":"ElementaryTypeName","src":"186575:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"name":"UserBalanceOp","nodeType":"StructDefinition","scope":9483,"src":"186437:171:0","visibility":"public"},{"canonicalName":"IVault.UserBalanceOpKind","id":9118,"members":[{"id":9114,"name":"DEPOSIT_INTERNAL","nodeType":"EnumValue","src":"188286:16:0"},{"id":9115,"name":"WITHDRAW_INTERNAL","nodeType":"EnumValue","src":"188304:17:0"},{"id":9116,"name":"TRANSFER_INTERNAL","nodeType":"EnumValue","src":"188323:17:0"},{"id":9117,"name":"TRANSFER_EXTERNAL","nodeType":"EnumValue","src":"188342:17:0"}],"name":"UserBalanceOpKind","nodeType":"EnumDefinition","src":"188261:100:0"},{"anonymous":false,"documentation":{"id":9119,"nodeType":"StructuredDocumentation","src":"188369:323:0","text":" @dev Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through\n interacting with Pools using Internal Balance.\n Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH\n address."},"id":9127,"name":"InternalBalanceChanged","nodeType":"EventDefinition","parameters":{"id":9126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9121,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":9127,"src":"188727:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9120,"name":"address","nodeType":"ElementaryTypeName","src":"188727:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9123,"indexed":true,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":9127,"src":"188749:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":9122,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"188749:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9125,"indexed":false,"mutability":"mutable","name":"delta","nodeType":"VariableDeclaration","scope":9127,"src":"188771:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9124,"name":"int256","nodeType":"ElementaryTypeName","src":"188771:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"188726:58:0"},"src":"188698:87:0"},{"anonymous":false,"documentation":{"id":9128,"nodeType":"StructuredDocumentation","src":"188793:133:0","text":" @dev Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account."},"id":9138,"name":"ExternalBalanceTransfer","nodeType":"EventDefinition","parameters":{"id":9137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9130,"indexed":true,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":9138,"src":"188962:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":9129,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"188962:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9132,"indexed":true,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":9138,"src":"188984:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9131,"name":"address","nodeType":"ElementaryTypeName","src":"188984:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9134,"indexed":false,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":9138,"src":"189008:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9133,"name":"address","nodeType":"ElementaryTypeName","src":"189008:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9136,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":9138,"src":"189027:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9135,"name":"uint256","nodeType":"ElementaryTypeName","src":"189027:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"188961:81:0"},"src":"188932:111:0"},{"canonicalName":"IVault.PoolSpecialization","id":9142,"members":[{"id":9139,"name":"GENERAL","nodeType":"EnumValue","src":"190168:7:0"},{"id":9140,"name":"MINIMAL_SWAP_INFO","nodeType":"EnumValue","src":"190177:17:0"},{"id":9141,"name":"TWO_TOKEN","nodeType":"EnumValue","src":"190196:9:0"}],"name":"PoolSpecialization","nodeType":"EnumDefinition","src":"190142:65:0"},{"documentation":{"id":9143,"nodeType":"StructuredDocumentation","src":"190215:714:0","text":" @dev Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which\n is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be\n changed.\n The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`,\n depending on the chosen specialization setting. This contract is known as the Pool's contract.\n Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words,\n multiple Pools may share the same contract.\n Emits a `PoolRegistered` event."},"functionSelector":"09b2760f","id":9150,"implemented":false,"kind":"function","modifiers":[],"name":"registerPool","nodeType":"FunctionDefinition","parameters":{"id":9146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9145,"mutability":"mutable","name":"specialization","nodeType":"VariableDeclaration","scope":9150,"src":"190957:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$9142","typeString":"enum IVault.PoolSpecialization"},"typeName":{"id":9144,"name":"PoolSpecialization","nodeType":"UserDefinedTypeName","referencedDeclaration":9142,"src":"190957:18:0","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$9142","typeString":"enum IVault.PoolSpecialization"}},"visibility":"internal"}],"src":"190956:35:0"},"returnParameters":{"id":9149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9148,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9150,"src":"191010:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9147,"name":"bytes32","nodeType":"ElementaryTypeName","src":"191010:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"191009:9:0"},"scope":9483,"src":"190935:84:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":9151,"nodeType":"StructuredDocumentation","src":"191027:86:0","text":" @dev Emitted when a Pool is registered by calling `registerPool`."},"id":9159,"name":"PoolRegistered","nodeType":"EventDefinition","parameters":{"id":9158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9153,"indexed":true,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9159,"src":"191140:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"191140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9155,"indexed":true,"mutability":"mutable","name":"poolAddress","nodeType":"VariableDeclaration","scope":9159,"src":"191164:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9154,"name":"address","nodeType":"ElementaryTypeName","src":"191164:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9157,"indexed":false,"mutability":"mutable","name":"specialization","nodeType":"VariableDeclaration","scope":9159,"src":"191193:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$9142","typeString":"enum IVault.PoolSpecialization"},"typeName":{"id":9156,"name":"PoolSpecialization","nodeType":"UserDefinedTypeName","referencedDeclaration":9142,"src":"191193:18:0","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$9142","typeString":"enum IVault.PoolSpecialization"}},"visibility":"internal"}],"src":"191139:88:0"},"src":"191119:109:0"},{"documentation":{"id":9160,"nodeType":"StructuredDocumentation","src":"191236:87:0","text":" @dev Returns a Pool's contract address and specialization setting."},"functionSelector":"f6c00927","id":9169,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nodeType":"FunctionDefinition","parameters":{"id":9163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9162,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9169,"src":"191346:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"191346:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"191345:16:0"},"returnParameters":{"id":9168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9165,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9169,"src":"191385:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9164,"name":"address","nodeType":"ElementaryTypeName","src":"191385:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9167,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9169,"src":"191394:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$9142","typeString":"enum IVault.PoolSpecialization"},"typeName":{"id":9166,"name":"PoolSpecialization","nodeType":"UserDefinedTypeName","referencedDeclaration":9142,"src":"191394:18:0","typeDescriptions":{"typeIdentifier":"t_enum$_PoolSpecialization_$9142","typeString":"enum IVault.PoolSpecialization"}},"visibility":"internal"}],"src":"191384:29:0"},"scope":9483,"src":"191329:85:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9170,"nodeType":"StructuredDocumentation","src":"191422:1443:0","text":" @dev Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens,\n exit by receiving registered tokens, and can only swap registered tokens.\n Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length\n of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in\n ascending order.\n The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset\n Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`,\n depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore\n expected to be highly secured smart contracts with sound design principles, and the decision to register an\n Asset Manager should not be made lightly.\n Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset\n Manager is set, it cannot be changed except by deregistering the associated token and registering again with a\n different Asset Manager.\n Emits a `TokensRegistered` event."},"functionSelector":"66a9c7d2","id":9181,"implemented":false,"kind":"function","modifiers":[],"name":"registerTokens","nodeType":"FunctionDefinition","parameters":{"id":9179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9172,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9181,"src":"192905:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9171,"name":"bytes32","nodeType":"ElementaryTypeName","src":"192905:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9175,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":9181,"src":"192930:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":9173,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"192930:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":9174,"nodeType":"ArrayTypeName","src":"192930:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":9178,"mutability":"mutable","name":"assetManagers","nodeType":"VariableDeclaration","scope":9181,"src":"192963:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9176,"name":"address","nodeType":"ElementaryTypeName","src":"192963:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9177,"nodeType":"ArrayTypeName","src":"192963:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"192894:106:0"},"returnParameters":{"id":9180,"nodeType":"ParameterList","parameters":[],"src":"193009:0:0"},"scope":9483,"src":"192871:139:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":9182,"nodeType":"StructuredDocumentation","src":"193018:91:0","text":" @dev Emitted when a Pool registers tokens by calling `registerTokens`."},"id":9192,"name":"TokensRegistered","nodeType":"EventDefinition","parameters":{"id":9191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9184,"indexed":true,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9192,"src":"193138:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"193138:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9187,"indexed":false,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":9192,"src":"193162:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":9185,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"193162:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":9186,"nodeType":"ArrayTypeName","src":"193162:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":9190,"indexed":false,"mutability":"mutable","name":"assetManagers","nodeType":"VariableDeclaration","scope":9192,"src":"193179:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9188,"name":"address","nodeType":"ElementaryTypeName","src":"193179:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9189,"nodeType":"ArrayTypeName","src":"193179:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"193137:66:0"},"src":"193115:89:0"},{"documentation":{"id":9193,"nodeType":"StructuredDocumentation","src":"193212:577:0","text":" @dev Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract.\n Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total\n balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens\n must be deregistered in the same `deregisterTokens` call.\n A deregistered token can be re-registered later on, possibly with a different Asset Manager.\n Emits a `TokensDeregistered` event."},"functionSelector":"7d3aeb96","id":9201,"implemented":false,"kind":"function","modifiers":[],"name":"deregisterTokens","nodeType":"FunctionDefinition","parameters":{"id":9199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9195,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9201,"src":"193821:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"193821:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9198,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":9201,"src":"193837:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":9196,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"193837:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":9197,"nodeType":"ArrayTypeName","src":"193837:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"193820:40:0"},"returnParameters":{"id":9200,"nodeType":"ParameterList","parameters":[],"src":"193869:0:0"},"scope":9483,"src":"193795:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":9202,"nodeType":"StructuredDocumentation","src":"193878:95:0","text":" @dev Emitted when a Pool deregisters tokens by calling `deregisterTokens`."},"id":9209,"name":"TokensDeregistered","nodeType":"EventDefinition","parameters":{"id":9208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9204,"indexed":true,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9209,"src":"194004:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"194004:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9207,"indexed":false,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":9209,"src":"194028:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":9205,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"194028:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":9206,"nodeType":"ArrayTypeName","src":"194028:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"194003:41:0"},"src":"193979:66:0"},{"documentation":{"id":9210,"nodeType":"StructuredDocumentation","src":"194053:1059:0","text":" @dev Returns detailed information for a Pool's registered token.\n `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens\n withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token`\n equals the sum of `cash` and `managed`.\n Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`,\n `managed` or `total` balance to be greater than 2^112 - 1.\n `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a\n join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for\n example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a\n change for this purpose, and will update `lastChangeBlock`.\n `assetManager` is the Pool's token Asset Manager."},"functionSelector":"b05f8e48","id":9225,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolTokenInfo","nodeType":"FunctionDefinition","parameters":{"id":9215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9212,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9225,"src":"195144:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"195144:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9214,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":9225,"src":"195160:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":9213,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"195160:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"195143:30:0"},"returnParameters":{"id":9224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9217,"mutability":"mutable","name":"cash","nodeType":"VariableDeclaration","scope":9225,"src":"195238:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9216,"name":"uint256","nodeType":"ElementaryTypeName","src":"195238:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9219,"mutability":"mutable","name":"managed","nodeType":"VariableDeclaration","scope":9225,"src":"195265:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9218,"name":"uint256","nodeType":"ElementaryTypeName","src":"195265:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9221,"mutability":"mutable","name":"lastChangeBlock","nodeType":"VariableDeclaration","scope":9225,"src":"195295:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9220,"name":"uint256","nodeType":"ElementaryTypeName","src":"195295:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9223,"mutability":"mutable","name":"assetManager","nodeType":"VariableDeclaration","scope":9225,"src":"195333:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9222,"name":"address","nodeType":"ElementaryTypeName","src":"195333:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"195223:141:0"},"scope":9483,"src":"195118:247:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9226,"nodeType":"StructuredDocumentation","src":"195373:841:0","text":" @dev Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of\n the tokens' `balances` changed.\n The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all\n Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order.\n If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same\n order as passed to `registerTokens`.\n Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are\n the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo`\n instead."},"functionSelector":"f94d4668","id":9239,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolTokens","nodeType":"FunctionDefinition","parameters":{"id":9229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9228,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9239,"src":"196243:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"196243:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"196242:16:0"},"returnParameters":{"id":9238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9232,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":9239,"src":"196323:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":9230,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"196323:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":9231,"nodeType":"ArrayTypeName","src":"196323:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":9235,"mutability":"mutable","name":"balances","nodeType":"VariableDeclaration","scope":9239,"src":"196360:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9233,"name":"uint256","nodeType":"ElementaryTypeName","src":"196360:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9234,"nodeType":"ArrayTypeName","src":"196360:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9237,"mutability":"mutable","name":"lastChangeBlock","nodeType":"VariableDeclaration","scope":9239,"src":"196400:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9236,"name":"uint256","nodeType":"ElementaryTypeName","src":"196400:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"196308:126:0"},"scope":9483,"src":"196220:215:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9240,"nodeType":"StructuredDocumentation","src":"196443:2335:0","text":" @dev Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will\n trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized\n Pool shares.\n If the caller is not `sender`, it must be an authorized relayer for them.\n The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount\n to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces\n these maximums.\n If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable\n this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the\n WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent\n back to the caller (not the sender, which is important for relayers).\n `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be\n sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final\n `assets` array might not be sorted. Pools with no registered tokens cannot be joined.\n If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only\n be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be\n withdrawn from Internal Balance: attempting to do so will trigger a revert.\n This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement\n their own custom logic. This typically requires additional information from the user (such as the expected number\n of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed\n directly to the Pool's contract, as is `recipient`.\n Emits a `PoolBalanceChanged` event."},"functionSelector":"b95cac28","id":9251,"implemented":false,"kind":"function","modifiers":[],"name":"joinPool","nodeType":"FunctionDefinition","parameters":{"id":9249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9242,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9251,"src":"198812:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"198812:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9244,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":9251,"src":"198837:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9243,"name":"address","nodeType":"ElementaryTypeName","src":"198837:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9246,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":9251,"src":"198862:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9245,"name":"address","nodeType":"ElementaryTypeName","src":"198862:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9248,"mutability":"mutable","name":"request","nodeType":"VariableDeclaration","scope":9251,"src":"198890:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_JoinPoolRequest_$9262_memory_ptr","typeString":"struct IVault.JoinPoolRequest"},"typeName":{"id":9247,"name":"JoinPoolRequest","nodeType":"UserDefinedTypeName","referencedDeclaration":9262,"src":"198890:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_JoinPoolRequest_$9262_storage_ptr","typeString":"struct IVault.JoinPoolRequest"}},"visibility":"internal"}],"src":"198801:126:0"},"returnParameters":{"id":9250,"nodeType":"ParameterList","parameters":[],"src":"198944:0:0"},"scope":9483,"src":"198784:161:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.JoinPoolRequest","id":9262,"members":[{"constant":false,"id":9254,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":9262,"src":"198987:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$6431_$dyn_storage_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":9252,"name":"IAsset","nodeType":"UserDefinedTypeName","referencedDeclaration":6431,"src":"198987:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$6431","typeString":"contract IAsset"}},"id":9253,"nodeType":"ArrayTypeName","src":"198987:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$6431_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":9257,"mutability":"mutable","name":"maxAmountsIn","nodeType":"VariableDeclaration","scope":9262,"src":"199013:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9255,"name":"uint256","nodeType":"ElementaryTypeName","src":"199013:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9256,"nodeType":"ArrayTypeName","src":"199013:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9259,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":9262,"src":"199046:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":9258,"name":"bytes","nodeType":"ElementaryTypeName","src":"199046:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9261,"mutability":"mutable","name":"fromInternalBalance","nodeType":"VariableDeclaration","scope":9262,"src":"199071:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9260,"name":"bool","nodeType":"ElementaryTypeName","src":"199071:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"JoinPoolRequest","nodeType":"StructDefinition","scope":9483,"src":"198953:150:0","visibility":"public"},{"documentation":{"id":9263,"nodeType":"StructuredDocumentation","src":"199111:2523:0","text":" @dev Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will\n trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized\n Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see\n `getPoolTokenInfo`).\n If the caller is not `sender`, it must be an authorized relayer for them.\n The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum\n token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault:\n it just enforces these minimums.\n If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To\n enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead\n of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit.\n `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when\n interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must\n be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the\n final `assets` array might not be sorted. Pools with no registered tokens cannot be exited.\n If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise,\n an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to\n do so will trigger a revert.\n `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the\n `tokens` array. This array must match the Pool's registered tokens.\n This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement\n their own custom logic. This typically requires additional information from the user (such as the expected number\n of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and\n passed directly to the Pool's contract.\n Emits a `PoolBalanceChanged` event."},"functionSelector":"8bdb3913","id":9274,"implemented":false,"kind":"function","modifiers":[],"name":"exitPool","nodeType":"FunctionDefinition","parameters":{"id":9272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9265,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9274,"src":"201668:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"201668:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9267,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":9274,"src":"201693:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9266,"name":"address","nodeType":"ElementaryTypeName","src":"201693:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9269,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":9274,"src":"201718:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":9268,"name":"address","nodeType":"ElementaryTypeName","src":"201718:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":9271,"mutability":"mutable","name":"request","nodeType":"VariableDeclaration","scope":9274,"src":"201754:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExitPoolRequest_$9285_memory_ptr","typeString":"struct IVault.ExitPoolRequest"},"typeName":{"id":9270,"name":"ExitPoolRequest","nodeType":"UserDefinedTypeName","referencedDeclaration":9285,"src":"201754:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_ExitPoolRequest_$9285_storage_ptr","typeString":"struct IVault.ExitPoolRequest"}},"visibility":"internal"}],"src":"201657:134:0"},"returnParameters":{"id":9273,"nodeType":"ParameterList","parameters":[],"src":"201800:0:0"},"scope":9483,"src":"201640:161:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.ExitPoolRequest","id":9285,"members":[{"constant":false,"id":9277,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":9285,"src":"201843:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$6431_$dyn_storage_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":9275,"name":"IAsset","nodeType":"UserDefinedTypeName","referencedDeclaration":6431,"src":"201843:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$6431","typeString":"contract IAsset"}},"id":9276,"nodeType":"ArrayTypeName","src":"201843:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$6431_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":9280,"mutability":"mutable","name":"minAmountsOut","nodeType":"VariableDeclaration","scope":9285,"src":"201869:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9278,"name":"uint256","nodeType":"ElementaryTypeName","src":"201869:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9279,"nodeType":"ArrayTypeName","src":"201869:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9282,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":9285,"src":"201903:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":9281,"name":"bytes","nodeType":"ElementaryTypeName","src":"201903:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9284,"mutability":"mutable","name":"toInternalBalance","nodeType":"VariableDeclaration","scope":9285,"src":"201928:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9283,"name":"bool","nodeType":"ElementaryTypeName","src":"201928:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ExitPoolRequest","nodeType":"StructDefinition","scope":9483,"src":"201809:149:0","visibility":"public"},{"anonymous":false,"documentation":{"id":9286,"nodeType":"StructuredDocumentation","src":"201966:118:0","text":" @dev Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively."},"id":9301,"name":"PoolBalanceChanged","nodeType":"EventDefinition","parameters":{"id":9300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9288,"indexed":true,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9301,"src":"202125:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"202125:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9290,"indexed":true,"mutability":"mutable","name":"liquidityProvider","nodeType":"VariableDeclaration","scope":9301,"src":"202158:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9289,"name":"address","nodeType":"ElementaryTypeName","src":"202158:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9293,"indexed":false,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":9301,"src":"202202:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":9291,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"202202:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":9292,"nodeType":"ArrayTypeName","src":"202202:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":9296,"indexed":false,"mutability":"mutable","name":"deltas","nodeType":"VariableDeclaration","scope":9301,"src":"202228:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":9294,"name":"int256","nodeType":"ElementaryTypeName","src":"202228:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":9295,"nodeType":"ArrayTypeName","src":"202228:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":9299,"indexed":false,"mutability":"mutable","name":"protocolFeeAmounts","nodeType":"VariableDeclaration","scope":9301,"src":"202254:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9297,"name":"uint256","nodeType":"ElementaryTypeName","src":"202254:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9298,"nodeType":"ArrayTypeName","src":"202254:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"202114:175:0"},"src":"202090:200:0"},{"canonicalName":"IVault.PoolBalanceChangeKind","id":9304,"members":[{"id":9302,"name":"JOIN","nodeType":"EnumValue","src":"202327:4:0"},{"id":9303,"name":"EXIT","nodeType":"EnumValue","src":"202333:4:0"}],"name":"PoolBalanceChangeKind","nodeType":"EnumDefinition","src":"202298:41:0"},{"canonicalName":"IVault.SwapKind","id":9307,"members":[{"id":9305,"name":"GIVEN_IN","nodeType":"EnumValue","src":"205989:8:0"},{"id":9306,"name":"GIVEN_OUT","nodeType":"EnumValue","src":"205999:9:0"}],"name":"SwapKind","nodeType":"EnumDefinition","src":"205973:37:0"},{"documentation":{"id":9308,"nodeType":"StructuredDocumentation","src":"206018:599:0","text":" @dev Performs a swap with a single Pool.\n If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens\n taken from the Pool, which must be greater than or equal to `limit`.\n If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens\n sent to the Pool, which must be less than or equal to `limit`.\n Internal Balance usage and the recipient are determined by the `funds` struct.\n Emits a `Swap` event."},"functionSelector":"52bbbe29","id":9321,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nodeType":"FunctionDefinition","parameters":{"id":9317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9310,"mutability":"mutable","name":"singleSwap","nodeType":"VariableDeclaration","scope":9321,"src":"206647:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$9334_memory_ptr","typeString":"struct IVault.SingleSwap"},"typeName":{"id":9309,"name":"SingleSwap","nodeType":"UserDefinedTypeName","referencedDeclaration":9334,"src":"206647:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_SingleSwap_$9334_storage_ptr","typeString":"struct IVault.SingleSwap"}},"visibility":"internal"},{"constant":false,"id":9312,"mutability":"mutable","name":"funds","nodeType":"VariableDeclaration","scope":9321,"src":"206686:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$9389_memory_ptr","typeString":"struct IVault.FundManagement"},"typeName":{"id":9311,"name":"FundManagement","nodeType":"UserDefinedTypeName","referencedDeclaration":9389,"src":"206686:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$9389_storage_ptr","typeString":"struct IVault.FundManagement"}},"visibility":"internal"},{"constant":false,"id":9314,"mutability":"mutable","name":"limit","nodeType":"VariableDeclaration","scope":9321,"src":"206724:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9313,"name":"uint256","nodeType":"ElementaryTypeName","src":"206724:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9316,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":9321,"src":"206748:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9315,"name":"uint256","nodeType":"ElementaryTypeName","src":"206748:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"206636:135:0"},"returnParameters":{"id":9320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9319,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9321,"src":"206798:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9318,"name":"uint256","nodeType":"ElementaryTypeName","src":"206798:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"206797:9:0"},"scope":9483,"src":"206623:184:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.SingleSwap","id":9334,"members":[{"constant":false,"id":9323,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9334,"src":"207404:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"207404:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9325,"mutability":"mutable","name":"kind","nodeType":"VariableDeclaration","scope":9334,"src":"207429:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$9307","typeString":"enum IVault.SwapKind"},"typeName":{"id":9324,"name":"SwapKind","nodeType":"UserDefinedTypeName","referencedDeclaration":9307,"src":"207429:8:0","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$9307","typeString":"enum IVault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":9327,"mutability":"mutable","name":"assetIn","nodeType":"VariableDeclaration","scope":9334,"src":"207453:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$6431","typeString":"contract IAsset"},"typeName":{"id":9326,"name":"IAsset","nodeType":"UserDefinedTypeName","referencedDeclaration":6431,"src":"207453:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$6431","typeString":"contract IAsset"}},"visibility":"internal"},{"constant":false,"id":9329,"mutability":"mutable","name":"assetOut","nodeType":"VariableDeclaration","scope":9334,"src":"207478:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$6431","typeString":"contract IAsset"},"typeName":{"id":9328,"name":"IAsset","nodeType":"UserDefinedTypeName","referencedDeclaration":6431,"src":"207478:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$6431","typeString":"contract IAsset"}},"visibility":"internal"},{"constant":false,"id":9331,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":9334,"src":"207504:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9330,"name":"uint256","nodeType":"ElementaryTypeName","src":"207504:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9333,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":9334,"src":"207529:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":9332,"name":"bytes","nodeType":"ElementaryTypeName","src":"207529:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SingleSwap","nodeType":"StructDefinition","scope":9483,"src":"207375:176:0","visibility":"public"},{"documentation":{"id":9335,"nodeType":"StructuredDocumentation","src":"207559:2008:0","text":" @dev Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either\n the amount of tokens sent to or received from the Pool, depending on the `kind` value.\n Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the\n Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at\n the same index in the `assets` array.\n Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a\n Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or\n `amountOut` depending on the swap kind.\n Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out\n of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal\n the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`.\n The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses,\n or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and\n out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to\n or unwrapped from WETH by the Vault.\n Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies\n the minimum or maximum amount of each token the vault is allowed to transfer.\n `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the\n equivalent `swap` call.\n Emits `Swap` events."},"functionSelector":"945bcec9","id":9356,"implemented":false,"kind":"function","modifiers":[],"name":"batchSwap","nodeType":"FunctionDefinition","parameters":{"id":9351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9337,"mutability":"mutable","name":"kind","nodeType":"VariableDeclaration","scope":9356,"src":"209602:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$9307","typeString":"enum IVault.SwapKind"},"typeName":{"id":9336,"name":"SwapKind","nodeType":"UserDefinedTypeName","referencedDeclaration":9307,"src":"209602:8:0","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$9307","typeString":"enum IVault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":9340,"mutability":"mutable","name":"swaps","nodeType":"VariableDeclaration","scope":9356,"src":"209626:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$9367_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.BatchSwapStep[]"},"typeName":{"baseType":{"id":9338,"name":"BatchSwapStep","nodeType":"UserDefinedTypeName","referencedDeclaration":9367,"src":"209626:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$9367_storage_ptr","typeString":"struct IVault.BatchSwapStep"}},"id":9339,"nodeType":"ArrayTypeName","src":"209626:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$9367_storage_$dyn_storage_ptr","typeString":"struct IVault.BatchSwapStep[]"}},"visibility":"internal"},{"constant":false,"id":9343,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":9356,"src":"209665:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$6431_$dyn_memory_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":9341,"name":"IAsset","nodeType":"UserDefinedTypeName","referencedDeclaration":6431,"src":"209665:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$6431","typeString":"contract IAsset"}},"id":9342,"nodeType":"ArrayTypeName","src":"209665:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$6431_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":9345,"mutability":"mutable","name":"funds","nodeType":"VariableDeclaration","scope":9356,"src":"209698:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$9389_memory_ptr","typeString":"struct IVault.FundManagement"},"typeName":{"id":9344,"name":"FundManagement","nodeType":"UserDefinedTypeName","referencedDeclaration":9389,"src":"209698:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$9389_storage_ptr","typeString":"struct IVault.FundManagement"}},"visibility":"internal"},{"constant":false,"id":9348,"mutability":"mutable","name":"limits","nodeType":"VariableDeclaration","scope":9356,"src":"209736:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":9346,"name":"int256","nodeType":"ElementaryTypeName","src":"209736:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":9347,"nodeType":"ArrayTypeName","src":"209736:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":9350,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":9356,"src":"209769:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9349,"name":"uint256","nodeType":"ElementaryTypeName","src":"209769:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"209591:201:0"},"returnParameters":{"id":9355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9354,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9356,"src":"209819:15:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":9352,"name":"int256","nodeType":"ElementaryTypeName","src":"209819:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":9353,"nodeType":"ArrayTypeName","src":"209819:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"209818:17:0"},"scope":9483,"src":"209573:263:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.BatchSwapStep","id":9367,"members":[{"constant":false,"id":9358,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9367,"src":"210442:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"210442:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9360,"mutability":"mutable","name":"assetInIndex","nodeType":"VariableDeclaration","scope":9367,"src":"210467:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9359,"name":"uint256","nodeType":"ElementaryTypeName","src":"210467:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9362,"mutability":"mutable","name":"assetOutIndex","nodeType":"VariableDeclaration","scope":9367,"src":"210498:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9361,"name":"uint256","nodeType":"ElementaryTypeName","src":"210498:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9364,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":9367,"src":"210530:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9363,"name":"uint256","nodeType":"ElementaryTypeName","src":"210530:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9366,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":9367,"src":"210555:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":9365,"name":"bytes","nodeType":"ElementaryTypeName","src":"210555:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BatchSwapStep","nodeType":"StructDefinition","scope":9483,"src":"210410:167:0","visibility":"public"},{"anonymous":false,"documentation":{"id":9368,"nodeType":"StructuredDocumentation","src":"210585:94:0","text":" @dev Emitted for each individual swap performed by `swap` or `batchSwap`."},"id":9380,"name":"Swap","nodeType":"EventDefinition","parameters":{"id":9379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9370,"indexed":true,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9380,"src":"210706:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"210706:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9372,"indexed":true,"mutability":"mutable","name":"tokenIn","nodeType":"VariableDeclaration","scope":9380,"src":"210739:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":9371,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"210739:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9374,"indexed":true,"mutability":"mutable","name":"tokenOut","nodeType":"VariableDeclaration","scope":9380,"src":"210772:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":9373,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"210772:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9376,"indexed":false,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":9380,"src":"210806:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9375,"name":"uint256","nodeType":"ElementaryTypeName","src":"210806:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9378,"indexed":false,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":9380,"src":"210833:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9377,"name":"uint256","nodeType":"ElementaryTypeName","src":"210833:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"210695:162:0"},"src":"210685:173:0"},{"canonicalName":"IVault.FundManagement","id":9389,"members":[{"constant":false,"id":9382,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":9389,"src":"211841:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9381,"name":"address","nodeType":"ElementaryTypeName","src":"211841:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9384,"mutability":"mutable","name":"fromInternalBalance","nodeType":"VariableDeclaration","scope":9389,"src":"211866:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9383,"name":"bool","nodeType":"ElementaryTypeName","src":"211866:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9386,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":9389,"src":"211901:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":9385,"name":"address","nodeType":"ElementaryTypeName","src":"211901:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":9388,"mutability":"mutable","name":"toInternalBalance","nodeType":"VariableDeclaration","scope":9389,"src":"211937:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9387,"name":"bool","nodeType":"ElementaryTypeName","src":"211937:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"FundManagement","nodeType":"StructDefinition","scope":9483,"src":"211808:159:0","visibility":"public"},{"documentation":{"id":9390,"nodeType":"StructuredDocumentation","src":"211975:1041:0","text":" @dev Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be\n simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result.\n Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH)\n the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it\n receives are the same that an equivalent `batchSwap` call would receive.\n Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct.\n This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens,\n approve them for the Vault, or even know a user's address.\n Note that this function is not 'view' (due to implementation details): the client code must explicitly execute\n eth_call instead of eth_sendTransaction."},"functionSelector":"f84d066e","id":9406,"implemented":false,"kind":"function","modifiers":[],"name":"queryBatchSwap","nodeType":"FunctionDefinition","parameters":{"id":9401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9392,"mutability":"mutable","name":"kind","nodeType":"VariableDeclaration","scope":9406,"src":"213056:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$9307","typeString":"enum IVault.SwapKind"},"typeName":{"id":9391,"name":"SwapKind","nodeType":"UserDefinedTypeName","referencedDeclaration":9307,"src":"213056:8:0","typeDescriptions":{"typeIdentifier":"t_enum$_SwapKind_$9307","typeString":"enum IVault.SwapKind"}},"visibility":"internal"},{"constant":false,"id":9395,"mutability":"mutable","name":"swaps","nodeType":"VariableDeclaration","scope":9406,"src":"213080:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$9367_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.BatchSwapStep[]"},"typeName":{"baseType":{"id":9393,"name":"BatchSwapStep","nodeType":"UserDefinedTypeName","referencedDeclaration":9367,"src":"213080:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BatchSwapStep_$9367_storage_ptr","typeString":"struct IVault.BatchSwapStep"}},"id":9394,"nodeType":"ArrayTypeName","src":"213080:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BatchSwapStep_$9367_storage_$dyn_storage_ptr","typeString":"struct IVault.BatchSwapStep[]"}},"visibility":"internal"},{"constant":false,"id":9398,"mutability":"mutable","name":"assets","nodeType":"VariableDeclaration","scope":9406,"src":"213119:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$6431_$dyn_memory_ptr","typeString":"contract IAsset[]"},"typeName":{"baseType":{"id":9396,"name":"IAsset","nodeType":"UserDefinedTypeName","referencedDeclaration":6431,"src":"213119:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAsset_$6431","typeString":"contract IAsset"}},"id":9397,"nodeType":"ArrayTypeName","src":"213119:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IAsset_$6431_$dyn_storage_ptr","typeString":"contract IAsset[]"}},"visibility":"internal"},{"constant":false,"id":9400,"mutability":"mutable","name":"funds","nodeType":"VariableDeclaration","scope":9406,"src":"213152:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$9389_memory_ptr","typeString":"struct IVault.FundManagement"},"typeName":{"id":9399,"name":"FundManagement","nodeType":"UserDefinedTypeName","referencedDeclaration":9389,"src":"213152:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_FundManagement_$9389_storage_ptr","typeString":"struct IVault.FundManagement"}},"visibility":"internal"}],"src":"213045:141:0"},"returnParameters":{"id":9405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9404,"mutability":"mutable","name":"assetDeltas","nodeType":"VariableDeclaration","scope":9406,"src":"213205:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":9402,"name":"int256","nodeType":"ElementaryTypeName","src":"213205:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":9403,"nodeType":"ArrayTypeName","src":"213205:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"213204:29:0"},"scope":9483,"src":"213022:212:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9407,"nodeType":"StructuredDocumentation","src":"213264:615:0","text":" @dev Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it,\n and then reverting unless the tokens plus a proportional protocol fee have been returned.\n The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount\n for each token contract. `tokens` must be sorted in ascending order.\n The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the\n `receiveFlashLoan` call.\n Emits `FlashLoan` events."},"functionSelector":"5c38449e","id":9420,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nodeType":"FunctionDefinition","parameters":{"id":9418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9409,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":9420,"src":"213914:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$9682","typeString":"contract IFlashLoanRecipient"},"typeName":{"id":9408,"name":"IFlashLoanRecipient","nodeType":"UserDefinedTypeName","referencedDeclaration":9682,"src":"213914:19:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$9682","typeString":"contract IFlashLoanRecipient"}},"visibility":"internal"},{"constant":false,"id":9412,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":9420,"src":"213954:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":9410,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"213954:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":9411,"nodeType":"ArrayTypeName","src":"213954:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":9415,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":9420,"src":"213987:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9413,"name":"uint256","nodeType":"ElementaryTypeName","src":"213987:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9414,"nodeType":"ArrayTypeName","src":"213987:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9417,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":9420,"src":"214022:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9416,"name":"bytes","nodeType":"ElementaryTypeName","src":"214022:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"213903:147:0"},"returnParameters":{"id":9419,"nodeType":"ParameterList","parameters":[],"src":"214059:0:0"},"scope":9483,"src":"213885:175:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":9421,"nodeType":"StructuredDocumentation","src":"214068:90:0","text":" @dev Emitted for each individual flash loan performed by `flashLoan`."},"id":9431,"name":"FlashLoan","nodeType":"EventDefinition","parameters":{"id":9430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9423,"indexed":true,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":9431,"src":"214180:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$9682","typeString":"contract IFlashLoanRecipient"},"typeName":{"id":9422,"name":"IFlashLoanRecipient","nodeType":"UserDefinedTypeName","referencedDeclaration":9682,"src":"214180:19:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFlashLoanRecipient_$9682","typeString":"contract IFlashLoanRecipient"}},"visibility":"internal"},{"constant":false,"id":9425,"indexed":true,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":9431,"src":"214219:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":9424,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"214219:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9427,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":9431,"src":"214241:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9426,"name":"uint256","nodeType":"ElementaryTypeName","src":"214241:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9429,"indexed":false,"mutability":"mutable","name":"feeAmount","nodeType":"VariableDeclaration","scope":9431,"src":"214257:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9428,"name":"uint256","nodeType":"ElementaryTypeName","src":"214257:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"214179:96:0"},"src":"214164:112:0"},{"documentation":{"id":9432,"nodeType":"StructuredDocumentation","src":"215288:441:0","text":" @dev Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates.\n Pool Balance management features batching, which means a single contract call can be used to perform multiple\n operations of different kinds, with different Pools and tokens, at once.\n For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`."},"functionSelector":"e6c46092","id":9438,"implemented":false,"kind":"function","modifiers":[],"name":"managePoolBalance","nodeType":"FunctionDefinition","parameters":{"id":9436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9435,"mutability":"mutable","name":"ops","nodeType":"VariableDeclaration","scope":9438,"src":"215762:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolBalanceOp_$9447_memory_ptr_$dyn_memory_ptr","typeString":"struct IVault.PoolBalanceOp[]"},"typeName":{"baseType":{"id":9433,"name":"PoolBalanceOp","nodeType":"UserDefinedTypeName","referencedDeclaration":9447,"src":"215762:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_PoolBalanceOp_$9447_storage_ptr","typeString":"struct IVault.PoolBalanceOp"}},"id":9434,"nodeType":"ArrayTypeName","src":"215762:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolBalanceOp_$9447_storage_$dyn_storage_ptr","typeString":"struct IVault.PoolBalanceOp[]"}},"visibility":"internal"}],"src":"215761:28:0"},"returnParameters":{"id":9437,"nodeType":"ParameterList","parameters":[],"src":"215798:0:0"},"scope":9483,"src":"215735:64:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IVault.PoolBalanceOp","id":9447,"members":[{"constant":false,"id":9440,"mutability":"mutable","name":"kind","nodeType":"VariableDeclaration","scope":9447,"src":"215839:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PoolBalanceOpKind_$9451","typeString":"enum IVault.PoolBalanceOpKind"},"typeName":{"id":9439,"name":"PoolBalanceOpKind","nodeType":"UserDefinedTypeName","referencedDeclaration":9451,"src":"215839:17:0","typeDescriptions":{"typeIdentifier":"t_enum$_PoolBalanceOpKind_$9451","typeString":"enum IVault.PoolBalanceOpKind"}},"visibility":"internal"},{"constant":false,"id":9442,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9447,"src":"215872:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"215872:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9444,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":9447,"src":"215897:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":9443,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"215897:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9446,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":9447,"src":"215920:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9445,"name":"uint256","nodeType":"ElementaryTypeName","src":"215920:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PoolBalanceOp","nodeType":"StructDefinition","scope":9483,"src":"215807:135:0","visibility":"public"},{"canonicalName":"IVault.PoolBalanceOpKind","id":9451,"members":[{"id":9448,"name":"WITHDRAW","nodeType":"EnumValue","src":"216474:8:0"},{"id":9449,"name":"DEPOSIT","nodeType":"EnumValue","src":"216484:7:0"},{"id":9450,"name":"UPDATE","nodeType":"EnumValue","src":"216493:6:0"}],"name":"PoolBalanceOpKind","nodeType":"EnumDefinition","src":"216449:52:0"},{"anonymous":false,"documentation":{"id":9452,"nodeType":"StructuredDocumentation","src":"216509:111:0","text":" @dev Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`."},"id":9464,"name":"PoolBalanceManaged","nodeType":"EventDefinition","parameters":{"id":9463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9454,"indexed":true,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9464,"src":"216661:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"216661:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9456,"indexed":true,"mutability":"mutable","name":"assetManager","nodeType":"VariableDeclaration","scope":9464,"src":"216694:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9455,"name":"address","nodeType":"ElementaryTypeName","src":"216694:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9458,"indexed":true,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":9464,"src":"216733:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":9457,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"216733:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9460,"indexed":false,"mutability":"mutable","name":"cashDelta","nodeType":"VariableDeclaration","scope":9464,"src":"216764:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9459,"name":"int256","nodeType":"ElementaryTypeName","src":"216764:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9462,"indexed":false,"mutability":"mutable","name":"managedDelta","nodeType":"VariableDeclaration","scope":9464,"src":"216791:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9461,"name":"int256","nodeType":"ElementaryTypeName","src":"216791:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"216650:167:0"},"src":"216626:192:0"},{"documentation":{"id":9465,"nodeType":"StructuredDocumentation","src":"217712:66:0","text":" @dev Returns the current protocol fee module."},"functionSelector":"d2946c2b","id":9470,"implemented":false,"kind":"function","modifiers":[],"name":"getProtocolFeesCollector","nodeType":"FunctionDefinition","parameters":{"id":9466,"nodeType":"ParameterList","parameters":[],"src":"217817:2:0"},"returnParameters":{"id":9469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9468,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9470,"src":"217843:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IProtocolFeesCollector_$9742","typeString":"contract IProtocolFeesCollector"},"typeName":{"id":9467,"name":"IProtocolFeesCollector","nodeType":"UserDefinedTypeName","referencedDeclaration":9742,"src":"217843:22:0","typeDescriptions":{"typeIdentifier":"t_contract$_IProtocolFeesCollector_$9742","typeString":"contract IProtocolFeesCollector"}},"visibility":"internal"}],"src":"217842:24:0"},"scope":9483,"src":"217784:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9471,"nodeType":"StructuredDocumentation","src":"217875:649:0","text":" @dev Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an\n error in some part of the system.\n The Vault can only be paused during an initial time period, after which pausing is forever disabled.\n While the contract is paused, the following features are disabled:\n - depositing and transferring internal balance\n - transferring external balance (using the Vault's allowance)\n - swaps\n - joining Pools\n - Asset Manager interactions\n Internal Balance can still be withdrawn, and Pools exited."},"functionSelector":"16c38b3c","id":9476,"implemented":false,"kind":"function","modifiers":[],"name":"setPaused","nodeType":"FunctionDefinition","parameters":{"id":9474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9473,"mutability":"mutable","name":"paused","nodeType":"VariableDeclaration","scope":9476,"src":"218549:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9472,"name":"bool","nodeType":"ElementaryTypeName","src":"218549:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"218548:13:0"},"returnParameters":{"id":9475,"nodeType":"ParameterList","parameters":[],"src":"218570:0:0"},"scope":9483,"src":"218530:41:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9477,"nodeType":"StructuredDocumentation","src":"218579:60:0","text":" @dev Returns the Vault's WETH instance."},"functionSelector":"ad5c4648","id":9482,"implemented":false,"kind":"function","modifiers":[],"name":"WETH","nodeType":"FunctionDefinition","parameters":{"id":9478,"nodeType":"ParameterList","parameters":[],"src":"218658:2:0"},"returnParameters":{"id":9481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9480,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9482,"src":"218684:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$9651","typeString":"contract IWETH"},"typeName":{"id":9479,"name":"IWETH","nodeType":"UserDefinedTypeName","referencedDeclaration":9651,"src":"218684:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IWETH_$9651","typeString":"contract IWETH"}},"visibility":"internal"}],"src":"218683:7:0"},"scope":9483,"src":"218645:46:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10227,"src":"180876:37876:0"},{"id":9484,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"218762:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9562,"linearizedBaseContracts":[9562],"name":"IAssetManager","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":9485,"nodeType":"StructuredDocumentation","src":"218822:69:0","text":" @notice Emitted when asset manager is rebalanced"},"id":9489,"name":"Rebalance","nodeType":"EventDefinition","parameters":{"id":9488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9487,"indexed":false,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9489,"src":"218913:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"218913:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"218912:16:0"},"src":"218897:32:0"},{"documentation":{"id":9490,"nodeType":"StructuredDocumentation","src":"218937:44:0","text":" @notice Sets the config"},"functionSelector":"18e736d4","id":9497,"implemented":false,"kind":"function","modifiers":[],"name":"setConfig","nodeType":"FunctionDefinition","parameters":{"id":9495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9492,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9497,"src":"219006:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"219006:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9494,"mutability":"mutable","name":"config","nodeType":"VariableDeclaration","scope":9497,"src":"219022:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9493,"name":"bytes","nodeType":"ElementaryTypeName","src":"219022:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"219005:39:0"},"returnParameters":{"id":9496,"nodeType":"ParameterList","parameters":[],"src":"219053:0:0"},"scope":9562,"src":"218987:67:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9498,"nodeType":"StructuredDocumentation","src":"219253:62:0","text":" @notice Returns the asset manager's token"},"functionSelector":"21df0da7","id":9503,"implemented":false,"kind":"function","modifiers":[],"name":"getToken","nodeType":"FunctionDefinition","parameters":{"id":9499,"nodeType":"ParameterList","parameters":[],"src":"219338:2:0"},"returnParameters":{"id":9502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9501,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9503,"src":"219364:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":9500,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"219364:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"219363:8:0"},"scope":9562,"src":"219321:51:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9504,"nodeType":"StructuredDocumentation","src":"219380:86:0","text":" @return the current assets under management of this asset manager"},"functionSelector":"dc99fc21","id":9511,"implemented":false,"kind":"function","modifiers":[],"name":"getAUM","nodeType":"FunctionDefinition","parameters":{"id":9507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9506,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9511,"src":"219488:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9505,"name":"bytes32","nodeType":"ElementaryTypeName","src":"219488:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"219487:16:0"},"returnParameters":{"id":9510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9509,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9511,"src":"219527:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9508,"name":"uint256","nodeType":"ElementaryTypeName","src":"219527:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"219526:9:0"},"scope":9562,"src":"219472:64:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9512,"nodeType":"StructuredDocumentation","src":"219544:152:0","text":" @return poolCash - The up-to-date cash balance of the pool\n @return poolManaged - The up-to-date managed balance of the pool"},"functionSelector":"76bad529","id":9521,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolBalances","nodeType":"FunctionDefinition","parameters":{"id":9515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9514,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9521,"src":"219727:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"219727:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"219726:16:0"},"returnParameters":{"id":9520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9517,"mutability":"mutable","name":"poolCash","nodeType":"VariableDeclaration","scope":9521,"src":"219766:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9516,"name":"uint256","nodeType":"ElementaryTypeName","src":"219766:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9519,"mutability":"mutable","name":"poolManaged","nodeType":"VariableDeclaration","scope":9521,"src":"219784:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9518,"name":"uint256","nodeType":"ElementaryTypeName","src":"219784:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"219765:39:0"},"scope":9562,"src":"219702:103:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9522,"nodeType":"StructuredDocumentation","src":"219813:164:0","text":" @return The difference in tokens between the target investment\n and the currently invested amount (i.e. the amount that can be invested)"},"functionSelector":"ea748923","id":9529,"implemented":false,"kind":"function","modifiers":[],"name":"maxInvestableBalance","nodeType":"FunctionDefinition","parameters":{"id":9525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9524,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9529,"src":"220013:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"220013:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"220012:16:0"},"returnParameters":{"id":9528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9527,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9529,"src":"220052:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9526,"name":"int256","nodeType":"ElementaryTypeName","src":"220052:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"220051:8:0"},"scope":9562,"src":"219983:77:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9530,"nodeType":"StructuredDocumentation","src":"220068:92:0","text":" @notice Updates the Vault on the value of the pool's investment returns"},"functionSelector":"0b5ff6b9","id":9535,"implemented":false,"kind":"function","modifiers":[],"name":"updateBalanceOfPool","nodeType":"FunctionDefinition","parameters":{"id":9533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9532,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9535,"src":"220195:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9531,"name":"bytes32","nodeType":"ElementaryTypeName","src":"220195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"220194:16:0"},"returnParameters":{"id":9534,"nodeType":"ParameterList","parameters":[],"src":"220219:0:0"},"scope":9562,"src":"220166:54:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9536,"nodeType":"StructuredDocumentation","src":"220228:101:0","text":" @notice Determines whether the pool should rebalance given the provided balances"},"functionSelector":"9c64ad30","id":9545,"implemented":false,"kind":"function","modifiers":[],"name":"shouldRebalance","nodeType":"FunctionDefinition","parameters":{"id":9541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9538,"mutability":"mutable","name":"cash","nodeType":"VariableDeclaration","scope":9545,"src":"220360:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9537,"name":"uint256","nodeType":"ElementaryTypeName","src":"220360:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9540,"mutability":"mutable","name":"managed","nodeType":"VariableDeclaration","scope":9545,"src":"220374:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9539,"name":"uint256","nodeType":"ElementaryTypeName","src":"220374:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"220359:31:0"},"returnParameters":{"id":9544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9543,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9545,"src":"220414:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9542,"name":"bool","nodeType":"ElementaryTypeName","src":"220414:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"220413:6:0"},"scope":9562,"src":"220335:85:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9546,"nodeType":"StructuredDocumentation","src":"220428:308:0","text":" @notice Rebalances funds between the pool and the asset manager to maintain target investment percentage.\n @param poolId - the poolId of the pool to be rebalanced\n @param force - a boolean representing whether a rebalance should be forced even when the pool is near balance"},"functionSelector":"4c936d8a","id":9553,"implemented":false,"kind":"function","modifiers":[],"name":"rebalance","nodeType":"FunctionDefinition","parameters":{"id":9551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9548,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9553,"src":"220761:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"220761:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9550,"mutability":"mutable","name":"force","nodeType":"VariableDeclaration","scope":9553,"src":"220777:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9549,"name":"bool","nodeType":"ElementaryTypeName","src":"220777:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"220760:28:0"},"returnParameters":{"id":9552,"nodeType":"ParameterList","parameters":[],"src":"220797:0:0"},"scope":9562,"src":"220742:56:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9554,"nodeType":"StructuredDocumentation","src":"220806:257:0","text":" @notice allows an authorized rebalancer to remove capital to facilitate large withdrawals\n @param poolId - the poolId of the pool to withdraw funds back to\n @param amount - the amount of tokens to withdraw back to the pool"},"functionSelector":"2b13a509","id":9561,"implemented":false,"kind":"function","modifiers":[],"name":"capitalOut","nodeType":"FunctionDefinition","parameters":{"id":9559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9556,"mutability":"mutable","name":"poolId","nodeType":"VariableDeclaration","scope":9561,"src":"221089:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"221089:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9558,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":9561,"src":"221105:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9557,"name":"uint256","nodeType":"ElementaryTypeName","src":"221105:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"221088:32:0"},"returnParameters":{"id":9560,"nodeType":"ParameterList","parameters":[],"src":"221129:0:0"},"scope":9562,"src":"221069:61:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10227,"src":"218791:2342:0"},{"id":9563,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"221151:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":9564,"nodeType":"StructuredDocumentation","src":"221180:575:0","text":" @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":9638,"linearizedBaseContracts":[9638],"name":"SafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":9590,"nodeType":"Block","src":"222087:105:0","statements":[{"assignments":[9575],"declarations":[{"constant":false,"id":9575,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":9590,"src":"222098:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9574,"name":"uint256","nodeType":"ElementaryTypeName","src":"222098:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9579,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9576,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9567,"src":"222110:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9577,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9569,"src":"222114:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"222110:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"222098:17:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9581,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9575,"src":"222135:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9582,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9567,"src":"222140:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"222135:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":9584,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"222143:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":9585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ADD_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4394,"src":"222143:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9580,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"222126:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":9586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"222126:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9587,"nodeType":"ExpressionStatement","src":"222126:37:0"},{"expression":{"id":9588,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9575,"src":"222183:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9573,"id":9589,"nodeType":"Return","src":"222176:8:0"}]},"documentation":{"id":9565,"nodeType":"StructuredDocumentation","src":"221781:233:0","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":9591,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":9570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9567,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":9591,"src":"222033:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9566,"name":"uint256","nodeType":"ElementaryTypeName","src":"222033:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9569,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":9591,"src":"222044:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9568,"name":"uint256","nodeType":"ElementaryTypeName","src":"222044:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"222032:22:0"},"returnParameters":{"id":9573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9572,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9591,"src":"222078:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9571,"name":"uint256","nodeType":"ElementaryTypeName","src":"222078:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"222077:9:0"},"scope":9638,"src":"222020:172:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9608,"nodeType":"Block","src":"222542:56:0","statements":[{"expression":{"arguments":[{"id":9602,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9594,"src":"222564:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9603,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9596,"src":"222567:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9604,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"222570:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":9605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"SUB_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4397,"src":"222570:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9601,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[9609,9637],"referencedDeclaration":9637,"src":"222560:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":9606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"222560:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9600,"id":9607,"nodeType":"Return","src":"222553:37:0"}]},"documentation":{"id":9592,"nodeType":"StructuredDocumentation","src":"222200:269:0","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":9609,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":9597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9594,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":9609,"src":"222488:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9593,"name":"uint256","nodeType":"ElementaryTypeName","src":"222488:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9596,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":9609,"src":"222499:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9595,"name":"uint256","nodeType":"ElementaryTypeName","src":"222499:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"222487:22:0"},"returnParameters":{"id":9600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9599,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9609,"src":"222533:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9598,"name":"uint256","nodeType":"ElementaryTypeName","src":"222533:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"222532:9:0"},"scope":9638,"src":"222475:123:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9636,"nodeType":"Block","src":"222987:95:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9622,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9614,"src":"223007:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":9623,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9612,"src":"223012:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"223007:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9625,"name":"errorCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9616,"src":"223015:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9621,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"222998:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":9626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"222998:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9627,"nodeType":"ExpressionStatement","src":"222998:27:0"},{"assignments":[9629],"declarations":[{"constant":false,"id":9629,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":9636,"src":"223036:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9628,"name":"uint256","nodeType":"ElementaryTypeName","src":"223036:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9633,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9630,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9612,"src":"223048:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9631,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9614,"src":"223052:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"223048:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"223036:17:0"},{"expression":{"id":9634,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9629,"src":"223073:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9620,"id":9635,"nodeType":"Return","src":"223066:8:0"}]},"documentation":{"id":9610,"nodeType":"StructuredDocumentation","src":"222606:289:0","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":9637,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":9617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9612,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":9637,"src":"222914:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9611,"name":"uint256","nodeType":"ElementaryTypeName","src":"222914:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9614,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":9637,"src":"222925:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9613,"name":"uint256","nodeType":"ElementaryTypeName","src":"222925:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9616,"mutability":"mutable","name":"errorCode","nodeType":"VariableDeclaration","scope":9637,"src":"222936:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9615,"name":"uint256","nodeType":"ElementaryTypeName","src":"222936:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"222913:41:0"},"returnParameters":{"id":9620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9619,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9637,"src":"222978:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9618,"name":"uint256","nodeType":"ElementaryTypeName","src":"222978:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"222977:9:0"},"scope":9638,"src":"222901:181:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10227,"src":"221757:1328:0"},{"id":9639,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"223091:23:0"},{"abstract":false,"baseContracts":[{"baseName":{"id":9641,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"223292:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":9642,"nodeType":"InheritanceSpecifier","src":"223292:6:0"}],"contractDependencies":[486],"contractKind":"interface","documentation":{"id":9640,"nodeType":"StructuredDocumentation","src":"223118:153:0","text":" @dev Interface for WETH9.\n See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol"},"fullyImplemented":false,"id":9651,"linearizedBaseContracts":[9651,486],"name":"IWETH","nodeType":"ContractDefinition","nodes":[{"functionSelector":"d0e30db0","id":9645,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":9643,"nodeType":"ParameterList","parameters":[],"src":"223322:2:0"},"returnParameters":{"id":9644,"nodeType":"ParameterList","parameters":[],"src":"223341:0:0"},"scope":9651,"src":"223306:36:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":9650,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":9648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9647,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":9650,"src":"223368:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9646,"name":"uint256","nodeType":"ElementaryTypeName","src":"223368:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"223367:16:0"},"returnParameters":{"id":9649,"nodeType":"ParameterList","parameters":[],"src":"223392:0:0"},"scope":9651,"src":"223350:43:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10227,"src":"223273:123:0"},{"id":9652,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"223406:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9665,"linearizedBaseContracts":[9665],"name":"IAuthorizer","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":9653,"nodeType":"StructuredDocumentation","src":"223462:123:0","text":" @dev Returns true if `account` can perform the action described by `actionId` in the contract `where`."},"functionSelector":"9be2a884","id":9664,"implemented":false,"kind":"function","modifiers":[],"name":"canPerform","nodeType":"FunctionDefinition","parameters":{"id":9660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9655,"mutability":"mutable","name":"actionId","nodeType":"VariableDeclaration","scope":9664,"src":"223621:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"223621:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9657,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":9664,"src":"223648:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9656,"name":"address","nodeType":"ElementaryTypeName","src":"223648:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9659,"mutability":"mutable","name":"where","nodeType":"VariableDeclaration","scope":9664,"src":"223674:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9658,"name":"address","nodeType":"ElementaryTypeName","src":"223674:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"223610:84:0"},"returnParameters":{"id":9663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9662,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9664,"src":"223718:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9661,"name":"bool","nodeType":"ElementaryTypeName","src":"223718:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"223717:6:0"},"scope":9665,"src":"223591:133:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10227,"src":"223433:294:0"},{"id":9666,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"223737:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9682,"linearizedBaseContracts":[9682],"name":"IFlashLoanRecipient","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":9667,"nodeType":"StructuredDocumentation","src":"223857:504:0","text":" @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n Vault, or else the entire flash loan will revert.\n `userData` is the same value passed in the `IVault.flashLoan` call."},"functionSelector":"f04f2707","id":9681,"implemented":false,"kind":"function","modifiers":[],"name":"receiveFlashLoan","nodeType":"FunctionDefinition","parameters":{"id":9679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9670,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":9681,"src":"224403:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":9668,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"224403:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":9669,"nodeType":"ArrayTypeName","src":"224403:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":9673,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":9681,"src":"224436:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9671,"name":"uint256","nodeType":"ElementaryTypeName","src":"224436:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9672,"nodeType":"ArrayTypeName","src":"224436:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9676,"mutability":"mutable","name":"feeAmounts","nodeType":"VariableDeclaration","scope":9681,"src":"224471:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9674,"name":"uint256","nodeType":"ElementaryTypeName","src":"224471:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9675,"nodeType":"ArrayTypeName","src":"224471:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9678,"mutability":"mutable","name":"userData","nodeType":"VariableDeclaration","scope":9681,"src":"224509:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9677,"name":"bytes","nodeType":"ElementaryTypeName","src":"224509:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"224392:145:0"},"returnParameters":{"id":9680,"nodeType":"ParameterList","parameters":[],"src":"224546:0:0"},"scope":9682,"src":"224367:180:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10227,"src":"223820:730:0"},{"id":9683,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"224558:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":9742,"linearizedBaseContracts":[9742],"name":"IProtocolFeesCollector","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":9687,"name":"SwapFeePercentageChanged","nodeType":"EventDefinition","parameters":{"id":9686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9685,"indexed":false,"mutability":"mutable","name":"newSwapFeePercentage","nodeType":"VariableDeclaration","scope":9687,"src":"224658:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9684,"name":"uint256","nodeType":"ElementaryTypeName","src":"224658:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"224657:30:0"},"src":"224627:61:0"},{"anonymous":false,"id":9691,"name":"FlashLoanFeePercentageChanged","nodeType":"EventDefinition","parameters":{"id":9690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9689,"indexed":false,"mutability":"mutable","name":"newFlashLoanFeePercentage","nodeType":"VariableDeclaration","scope":9691,"src":"224730:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9688,"name":"uint256","nodeType":"ElementaryTypeName","src":"224730:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"224729:35:0"},"src":"224694:71:0"},{"functionSelector":"6daefab6","id":9702,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawCollectedFees","nodeType":"FunctionDefinition","parameters":{"id":9700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9694,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":9702,"src":"224814:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_calldata_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":9692,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"224814:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":9693,"nodeType":"ArrayTypeName","src":"224814:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"},{"constant":false,"id":9697,"mutability":"mutable","name":"amounts","nodeType":"VariableDeclaration","scope":9702,"src":"224849:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9695,"name":"uint256","nodeType":"ElementaryTypeName","src":"224849:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9696,"nodeType":"ArrayTypeName","src":"224849:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9699,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":9702,"src":"224886:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9698,"name":"address","nodeType":"ElementaryTypeName","src":"224886:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"224803:107:0"},"returnParameters":{"id":9701,"nodeType":"ParameterList","parameters":[],"src":"224919:0:0"},"scope":9742,"src":"224773:147:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"38e9922e","id":9707,"implemented":false,"kind":"function","modifiers":[],"name":"setSwapFeePercentage","nodeType":"FunctionDefinition","parameters":{"id":9705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9704,"mutability":"mutable","name":"newSwapFeePercentage","nodeType":"VariableDeclaration","scope":9707,"src":"224958:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9703,"name":"uint256","nodeType":"ElementaryTypeName","src":"224958:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"224957:30:0"},"returnParameters":{"id":9706,"nodeType":"ParameterList","parameters":[],"src":"224996:0:0"},"scope":9742,"src":"224928:69:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6b6b9f69","id":9712,"implemented":false,"kind":"function","modifiers":[],"name":"setFlashLoanFeePercentage","nodeType":"FunctionDefinition","parameters":{"id":9710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9709,"mutability":"mutable","name":"newFlashLoanFeePercentage","nodeType":"VariableDeclaration","scope":9712,"src":"225040:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9708,"name":"uint256","nodeType":"ElementaryTypeName","src":"225040:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"225039:35:0"},"returnParameters":{"id":9711,"nodeType":"ParameterList","parameters":[],"src":"225083:0:0"},"scope":9742,"src":"225005:79:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"55c67628","id":9717,"implemented":false,"kind":"function","modifiers":[],"name":"getSwapFeePercentage","nodeType":"FunctionDefinition","parameters":{"id":9713,"nodeType":"ParameterList","parameters":[],"src":"225121:2:0"},"returnParameters":{"id":9716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9715,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9717,"src":"225147:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9714,"name":"uint256","nodeType":"ElementaryTypeName","src":"225147:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"225146:9:0"},"scope":9742,"src":"225092:64:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d877845c","id":9722,"implemented":false,"kind":"function","modifiers":[],"name":"getFlashLoanFeePercentage","nodeType":"FunctionDefinition","parameters":{"id":9718,"nodeType":"ParameterList","parameters":[],"src":"225198:2:0"},"returnParameters":{"id":9721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9720,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9722,"src":"225224:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9719,"name":"uint256","nodeType":"ElementaryTypeName","src":"225224:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"225223:9:0"},"scope":9742,"src":"225164:69:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e42abf35","id":9731,"implemented":false,"kind":"function","modifiers":[],"name":"getCollectedFeeAmounts","nodeType":"FunctionDefinition","parameters":{"id":9726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9725,"mutability":"mutable","name":"tokens","nodeType":"VariableDeclaration","scope":9731,"src":"225273:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":9723,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"225273:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"id":9724,"nodeType":"ArrayTypeName","src":"225273:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$486_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"internal"}],"src":"225272:24:0"},"returnParameters":{"id":9730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9729,"mutability":"mutable","name":"feeAmounts","nodeType":"VariableDeclaration","scope":9731,"src":"225320:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9727,"name":"uint256","nodeType":"ElementaryTypeName","src":"225320:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9728,"nodeType":"ArrayTypeName","src":"225320:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"225319:29:0"},"scope":9742,"src":"225241:108:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aaabadc5","id":9736,"implemented":false,"kind":"function","modifiers":[],"name":"getAuthorizer","nodeType":"FunctionDefinition","parameters":{"id":9732,"nodeType":"ParameterList","parameters":[],"src":"225379:2:0"},"returnParameters":{"id":9735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9734,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9736,"src":"225405:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$9665","typeString":"contract IAuthorizer"},"typeName":{"id":9733,"name":"IAuthorizer","nodeType":"UserDefinedTypeName","referencedDeclaration":9665,"src":"225405:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAuthorizer_$9665","typeString":"contract IAuthorizer"}},"visibility":"internal"}],"src":"225404:13:0"},"scope":9742,"src":"225357:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fbfa77cf","id":9741,"implemented":false,"kind":"function","modifiers":[],"name":"vault","nodeType":"FunctionDefinition","parameters":{"id":9737,"nodeType":"ParameterList","parameters":[],"src":"225440:2:0"},"returnParameters":{"id":9740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9739,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9741,"src":"225466:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"},"typeName":{"id":9738,"name":"IVault","nodeType":"UserDefinedTypeName","referencedDeclaration":9483,"src":"225466:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"visibility":"internal"}],"src":"225465:8:0"},"scope":9742,"src":"225426:48:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10227,"src":"224587:890:0"},{"id":9743,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"225481:23:0"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":9744,"nodeType":"StructuredDocumentation","src":"225510:299:0","text":" @dev Base factory for contracts whose creation code is so large that the factory cannot hold it. This happens when\n the contract's creation code grows close to 24kB.\n Note that this factory cannot help with contracts that have a *runtime* (deployed) bytecode larger than 24kB."},"fullyImplemented":true,"id":9961,"linearizedBaseContracts":[9961],"name":"BaseSplitCodeFactory","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":9746,"mutability":"immutable","name":"_creationCodeContractA","nodeType":"VariableDeclaration","scope":9961,"src":"226276:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9745,"name":"address","nodeType":"ElementaryTypeName","src":"226276:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":9748,"mutability":"immutable","name":"_creationCodeSizeA","nodeType":"VariableDeclaration","scope":9961,"src":"226331:44:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9747,"name":"uint256","nodeType":"ElementaryTypeName","src":"226331:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":9750,"mutability":"immutable","name":"_creationCodeContractB","nodeType":"VariableDeclaration","scope":9961,"src":"226384:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9749,"name":"address","nodeType":"ElementaryTypeName","src":"226384:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":9752,"mutability":"immutable","name":"_creationCodeSizeB","nodeType":"VariableDeclaration","scope":9961,"src":"226439:44:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9751,"name":"uint256","nodeType":"ElementaryTypeName","src":"226439:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":9809,"nodeType":"Block","src":"226661:2682:0","statements":[{"assignments":[9759],"declarations":[{"constant":false,"id":9759,"mutability":"mutable","name":"creationCodeSize","nodeType":"VariableDeclaration","scope":9809,"src":"226672:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9758,"name":"uint256","nodeType":"ElementaryTypeName","src":"226672:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9762,"initialValue":{"expression":{"id":9760,"name":"creationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9755,"src":"226699:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"226699:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"226672:46:0"},{"assignments":[9764],"declarations":[{"constant":false,"id":9764,"mutability":"mutable","name":"creationCodeSizeA","nodeType":"VariableDeclaration","scope":9809,"src":"227052:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9763,"name":"uint256","nodeType":"ElementaryTypeName","src":"227052:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9768,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9765,"name":"creationCodeSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9759,"src":"227080:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":9766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"227099:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"227080:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"227052:48:0"},{"expression":{"id":9771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9769,"name":"_creationCodeSizeA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9748,"src":"227111:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9770,"name":"creationCodeSizeA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9764,"src":"227132:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"227111:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9772,"nodeType":"ExpressionStatement","src":"227111:38:0"},{"assignments":[9774],"declarations":[{"constant":false,"id":9774,"mutability":"mutable","name":"creationCodeSizeB","nodeType":"VariableDeclaration","scope":9809,"src":"227162:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9773,"name":"uint256","nodeType":"ElementaryTypeName","src":"227162:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9778,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9775,"name":"creationCodeSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9759,"src":"227190:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9776,"name":"creationCodeSizeA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9764,"src":"227209:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"227190:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"227162:64:0"},{"expression":{"id":9781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9779,"name":"_creationCodeSizeB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9752,"src":"227237:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9780,"name":"creationCodeSizeB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9774,"src":"227258:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"227237:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9782,"nodeType":"ExpressionStatement","src":"227237:38:0"},{"assignments":[9784],"declarations":[{"constant":false,"id":9784,"mutability":"mutable","name":"creationCodeA","nodeType":"VariableDeclaration","scope":9809,"src":"227849:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9783,"name":"bytes","nodeType":"ElementaryTypeName","src":"227849:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":9785,"nodeType":"VariableDeclarationStatement","src":"227849:26:0"},{"AST":{"nodeType":"YulBlock","src":"227895:109:0","statements":[{"nodeType":"YulAssignment","src":"227910:29:0","value":{"name":"creationCode","nodeType":"YulIdentifier","src":"227927:12:0"},"variableNames":[{"name":"creationCodeA","nodeType":"YulIdentifier","src":"227910:13:0"}]},{"expression":{"arguments":[{"name":"creationCodeA","nodeType":"YulIdentifier","src":"227960:13:0"},{"name":"creationCodeSizeA","nodeType":"YulIdentifier","src":"227975:17:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"227953:6:0"},"nodeType":"YulFunctionCall","src":"227953:40:0"},"nodeType":"YulExpressionStatement","src":"227953:40:0"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":9755,"isOffset":false,"isSlot":false,"src":"227927:12:0","valueSize":1},{"declaration":9784,"isOffset":false,"isSlot":false,"src":"227910:13:0","valueSize":1},{"declaration":9784,"isOffset":false,"isSlot":false,"src":"227960:13:0","valueSize":1},{"declaration":9764,"isOffset":false,"isSlot":false,"src":"227975:17:0","valueSize":1}],"id":9786,"nodeType":"InlineAssembly","src":"227886:118:0"},{"expression":{"id":9792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9787,"name":"_creationCodeContractA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9746,"src":"228109:22:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9790,"name":"creationCodeA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9784,"src":"228154:13:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":9788,"name":"CodeDeployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10226,"src":"228134:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CodeDeployer_$10226_$","typeString":"type(library CodeDeployer)"}},"id":9789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploy","nodeType":"MemberAccess","referencedDeclaration":10225,"src":"228134:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes memory) returns (address)"}},"id":9791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"228134:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"228109:59:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9793,"nodeType":"ExpressionStatement","src":"228109:59:0"},{"assignments":[9795],"declarations":[{"constant":false,"id":9795,"mutability":"mutable","name":"creationCodeB","nodeType":"VariableDeclaration","scope":9809,"src":"228462:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9794,"name":"bytes","nodeType":"ElementaryTypeName","src":"228462:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":9796,"nodeType":"VariableDeclarationStatement","src":"228462:26:0"},{"assignments":[9798],"declarations":[{"constant":false,"id":9798,"mutability":"mutable","name":"lastByteA","nodeType":"VariableDeclaration","scope":9809,"src":"228499:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"228499:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":9799,"nodeType":"VariableDeclarationStatement","src":"228499:17:0"},{"AST":{"nodeType":"YulBlock","src":"228538:329:0","statements":[{"nodeType":"YulAssignment","src":"228702:53:0","value":{"arguments":[{"name":"creationCode","nodeType":"YulIdentifier","src":"228723:12:0"},{"name":"creationCodeSizeA","nodeType":"YulIdentifier","src":"228737:17:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"228719:3:0"},"nodeType":"YulFunctionCall","src":"228719:36:0"},"variableNames":[{"name":"creationCodeB","nodeType":"YulIdentifier","src":"228702:13:0"}]},{"nodeType":"YulAssignment","src":"228769:33:0","value":{"arguments":[{"name":"creationCodeB","nodeType":"YulIdentifier","src":"228788:13:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"228782:5:0"},"nodeType":"YulFunctionCall","src":"228782:20:0"},"variableNames":[{"name":"lastByteA","nodeType":"YulIdentifier","src":"228769:9:0"}]},{"expression":{"arguments":[{"name":"creationCodeB","nodeType":"YulIdentifier","src":"228823:13:0"},{"name":"creationCodeSizeB","nodeType":"YulIdentifier","src":"228838:17:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"228816:6:0"},"nodeType":"YulFunctionCall","src":"228816:40:0"},"nodeType":"YulExpressionStatement","src":"228816:40:0"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":9755,"isOffset":false,"isSlot":false,"src":"228723:12:0","valueSize":1},{"declaration":9795,"isOffset":false,"isSlot":false,"src":"228702:13:0","valueSize":1},{"declaration":9795,"isOffset":false,"isSlot":false,"src":"228788:13:0","valueSize":1},{"declaration":9795,"isOffset":false,"isSlot":false,"src":"228823:13:0","valueSize":1},{"declaration":9764,"isOffset":false,"isSlot":false,"src":"228737:17:0","valueSize":1},{"declaration":9774,"isOffset":false,"isSlot":false,"src":"228838:17:0","valueSize":1},{"declaration":9798,"isOffset":false,"isSlot":false,"src":"228769:9:0","valueSize":1}],"id":9800,"nodeType":"InlineAssembly","src":"228529:338:0"},{"expression":{"id":9806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9801,"name":"_creationCodeContractB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9750,"src":"229022:22:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9804,"name":"creationCodeB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9795,"src":"229067:13:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":9802,"name":"CodeDeployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10226,"src":"229047:12:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CodeDeployer_$10226_$","typeString":"type(library CodeDeployer)"}},"id":9803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deploy","nodeType":"MemberAccess","referencedDeclaration":10225,"src":"229047:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes memory) returns (address)"}},"id":9805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"229047:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"229022:59:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9807,"nodeType":"ExpressionStatement","src":"229022:59:0"},{"AST":{"nodeType":"YulBlock","src":"229225:111:0","statements":[{"expression":{"arguments":[{"name":"creationCodeA","nodeType":"YulIdentifier","src":"229247:13:0"},{"name":"creationCodeSize","nodeType":"YulIdentifier","src":"229262:16:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"229240:6:0"},"nodeType":"YulFunctionCall","src":"229240:39:0"},"nodeType":"YulExpressionStatement","src":"229240:39:0"},{"expression":{"arguments":[{"name":"creationCodeB","nodeType":"YulIdentifier","src":"229300:13:0"},{"name":"lastByteA","nodeType":"YulIdentifier","src":"229315:9:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"229293:6:0"},"nodeType":"YulFunctionCall","src":"229293:32:0"},"nodeType":"YulExpressionStatement","src":"229293:32:0"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":9784,"isOffset":false,"isSlot":false,"src":"229247:13:0","valueSize":1},{"declaration":9795,"isOffset":false,"isSlot":false,"src":"229300:13:0","valueSize":1},{"declaration":9759,"isOffset":false,"isSlot":false,"src":"229262:16:0","valueSize":1},{"declaration":9798,"isOffset":false,"isSlot":false,"src":"229315:9:0","valueSize":1}],"id":9808,"nodeType":"InlineAssembly","src":"229216:120:0"}]},"documentation":{"id":9753,"nodeType":"StructuredDocumentation","src":"226492:124:0","text":" @dev The creation code of a contract Foo can be obtained inside Solidity with `type(Foo).creationCode`."},"id":9810,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":9756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9755,"mutability":"mutable","name":"creationCode","nodeType":"VariableDeclaration","scope":9810,"src":"226634:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9754,"name":"bytes","nodeType":"ElementaryTypeName","src":"226634:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"226633:27:0"},"returnParameters":{"id":9757,"nodeType":"ParameterList","parameters":[],"src":"226661:0:0"},"scope":9961,"src":"226622:2721:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9822,"nodeType":"Block","src":"229577:74:0","statements":[{"expression":{"components":[{"id":9818,"name":"_creationCodeContractA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9746,"src":"229596:22:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9819,"name":"_creationCodeContractB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9750,"src":"229620:22:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9820,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"229595:48:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"functionReturnParameters":9817,"id":9821,"nodeType":"Return","src":"229588:55:0"}]},"documentation":{"id":9811,"nodeType":"StructuredDocumentation","src":"229351:125:0","text":" @dev Returns the two addresses where the creation code of the contract crated by this factory is stored."},"functionSelector":"174481fa","id":9823,"implemented":true,"kind":"function","modifiers":[],"name":"getCreationCodeContracts","nodeType":"FunctionDefinition","parameters":{"id":9812,"nodeType":"ParameterList","parameters":[],"src":"229515:2:0"},"returnParameters":{"id":9817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9814,"mutability":"mutable","name":"contractA","nodeType":"VariableDeclaration","scope":9823,"src":"229539:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9813,"name":"address","nodeType":"ElementaryTypeName","src":"229539:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9816,"mutability":"mutable","name":"contractB","nodeType":"VariableDeclaration","scope":9823,"src":"229558:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9815,"name":"address","nodeType":"ElementaryTypeName","src":"229558:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"229538:38:0"},"scope":9961,"src":"229482:169:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9833,"nodeType":"Block","src":"229816:54:0","statements":[{"expression":{"arguments":[{"hexValue":"","id":9830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"229859:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":9829,"name":"_getCreationCodeWithArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9890,"src":"229834:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bytes memory)"}},"id":9831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"229834:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":9828,"id":9832,"nodeType":"Return","src":"229827:35:0"}]},"documentation":{"id":9824,"nodeType":"StructuredDocumentation","src":"229659:89:0","text":" @dev Returns the creation code of the contract this factory creates."},"functionSelector":"00c194db","id":9834,"implemented":true,"kind":"function","modifiers":[],"name":"getCreationCode","nodeType":"FunctionDefinition","parameters":{"id":9825,"nodeType":"ParameterList","parameters":[],"src":"229778:2:0"},"returnParameters":{"id":9828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9827,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9834,"src":"229802:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9826,"name":"bytes","nodeType":"ElementaryTypeName","src":"229802:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"229801:14:0"},"scope":9961,"src":"229754:116:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9889,"nodeType":"Block","src":"230110:2632:0","statements":[{"assignments":[9843],"declarations":[{"constant":false,"id":9843,"mutability":"mutable","name":"creationCodeContractA","nodeType":"VariableDeclaration","scope":9889,"src":"230931:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9842,"name":"address","nodeType":"ElementaryTypeName","src":"230931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9845,"initialValue":{"id":9844,"name":"_creationCodeContractA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9746,"src":"230963:22:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"230931:54:0"},{"assignments":[9847],"declarations":[{"constant":false,"id":9847,"mutability":"mutable","name":"creationCodeSizeA","nodeType":"VariableDeclaration","scope":9889,"src":"230996:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9846,"name":"uint256","nodeType":"ElementaryTypeName","src":"230996:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9849,"initialValue":{"id":9848,"name":"_creationCodeSizeA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9748,"src":"231024:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"230996:46:0"},{"assignments":[9851],"declarations":[{"constant":false,"id":9851,"mutability":"mutable","name":"creationCodeContractB","nodeType":"VariableDeclaration","scope":9889,"src":"231053:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9850,"name":"address","nodeType":"ElementaryTypeName","src":"231053:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9853,"initialValue":{"id":9852,"name":"_creationCodeContractB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9750,"src":"231085:22:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"231053:54:0"},{"assignments":[9855],"declarations":[{"constant":false,"id":9855,"mutability":"mutable","name":"creationCodeSizeB","nodeType":"VariableDeclaration","scope":9889,"src":"231118:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9854,"name":"uint256","nodeType":"ElementaryTypeName","src":"231118:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9857,"initialValue":{"id":9856,"name":"_creationCodeSizeB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9752,"src":"231146:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"231118:46:0"},{"assignments":[9859],"declarations":[{"constant":false,"id":9859,"mutability":"mutable","name":"creationCodeSize","nodeType":"VariableDeclaration","scope":9889,"src":"231177:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9858,"name":"uint256","nodeType":"ElementaryTypeName","src":"231177:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9863,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9860,"name":"creationCodeSizeA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9847,"src":"231204:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9861,"name":"creationCodeSizeB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9855,"src":"231224:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"231204:37:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"231177:64:0"},{"assignments":[9865],"declarations":[{"constant":false,"id":9865,"mutability":"mutable","name":"constructorArgsSize","nodeType":"VariableDeclaration","scope":9889,"src":"231252:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9864,"name":"uint256","nodeType":"ElementaryTypeName","src":"231252:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9868,"initialValue":{"expression":{"id":9866,"name":"constructorArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9837,"src":"231282:15:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"231282:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"231252:52:0"},{"assignments":[9870],"declarations":[{"constant":false,"id":9870,"mutability":"mutable","name":"codeSize","nodeType":"VariableDeclaration","scope":9889,"src":"231317:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9869,"name":"uint256","nodeType":"ElementaryTypeName","src":"231317:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9874,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9871,"name":"creationCodeSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9859,"src":"231336:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9872,"name":"constructorArgsSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9865,"src":"231355:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"231336:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"231317:57:0"},{"AST":{"nodeType":"YulBlock","src":"231396:763:0","statements":[{"nodeType":"YulAssignment","src":"231649:19:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"231663:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"231657:5:0"},"nodeType":"YulFunctionCall","src":"231657:11:0"},"variableNames":[{"name":"code","nodeType":"YulIdentifier","src":"231649:4:0"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"231689:4:0","type":"","value":"0x40"},{"arguments":[{"name":"code","nodeType":"YulIdentifier","src":"231699:4:0"},{"arguments":[{"name":"codeSize","nodeType":"YulIdentifier","src":"231709:8:0"},{"kind":"number","nodeType":"YulLiteral","src":"231719:2:0","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"231705:3:0"},"nodeType":"YulFunctionCall","src":"231705:17:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"231695:3:0"},"nodeType":"YulFunctionCall","src":"231695:28:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"231682:6:0"},"nodeType":"YulFunctionCall","src":"231682:42:0"},"nodeType":"YulExpressionStatement","src":"231682:42:0"},{"expression":{"arguments":[{"name":"code","nodeType":"YulIdentifier","src":"231827:4:0"},{"name":"codeSize","nodeType":"YulIdentifier","src":"231833:8:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"231820:6:0"},"nodeType":"YulFunctionCall","src":"231820:22:0"},"nodeType":"YulExpressionStatement","src":"231820:22:0"},{"nodeType":"YulVariableDeclaration","src":"231932:30:0","value":{"arguments":[{"name":"code","nodeType":"YulIdentifier","src":"231953:4:0"},{"kind":"number","nodeType":"YulLiteral","src":"231959:2:0","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"231949:3:0"},"nodeType":"YulFunctionCall","src":"231949:13:0"},"variables":[{"name":"dataStart","nodeType":"YulTypedName","src":"231936:9:0","type":""}]},{"expression":{"arguments":[{"name":"creationCodeContractA","nodeType":"YulIdentifier","src":"231988:21:0"},{"name":"dataStart","nodeType":"YulIdentifier","src":"232011:9:0"},{"kind":"number","nodeType":"YulLiteral","src":"232022:1:0","type":"","value":"0"},{"name":"creationCodeSizeA","nodeType":"YulIdentifier","src":"232025:17:0"}],"functionName":{"name":"extcodecopy","nodeType":"YulIdentifier","src":"231976:11:0"},"nodeType":"YulFunctionCall","src":"231976:67:0"},"nodeType":"YulExpressionStatement","src":"231976:67:0"},{"expression":{"arguments":[{"name":"creationCodeContractB","nodeType":"YulIdentifier","src":"232069:21:0"},{"arguments":[{"name":"dataStart","nodeType":"YulIdentifier","src":"232096:9:0"},{"name":"creationCodeSizeA","nodeType":"YulIdentifier","src":"232107:17:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"232092:3:0"},"nodeType":"YulFunctionCall","src":"232092:33:0"},{"kind":"number","nodeType":"YulLiteral","src":"232127:1:0","type":"","value":"0"},{"name":"creationCodeSizeB","nodeType":"YulIdentifier","src":"232130:17:0"}],"functionName":{"name":"extcodecopy","nodeType":"YulIdentifier","src":"232057:11:0"},"nodeType":"YulFunctionCall","src":"232057:91:0"},"nodeType":"YulExpressionStatement","src":"232057:91:0"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":9840,"isOffset":false,"isSlot":false,"src":"231649:4:0","valueSize":1},{"declaration":9840,"isOffset":false,"isSlot":false,"src":"231699:4:0","valueSize":1},{"declaration":9840,"isOffset":false,"isSlot":false,"src":"231827:4:0","valueSize":1},{"declaration":9840,"isOffset":false,"isSlot":false,"src":"231953:4:0","valueSize":1},{"declaration":9870,"isOffset":false,"isSlot":false,"src":"231709:8:0","valueSize":1},{"declaration":9870,"isOffset":false,"isSlot":false,"src":"231833:8:0","valueSize":1},{"declaration":9843,"isOffset":false,"isSlot":false,"src":"231988:21:0","valueSize":1},{"declaration":9851,"isOffset":false,"isSlot":false,"src":"232069:21:0","valueSize":1},{"declaration":9847,"isOffset":false,"isSlot":false,"src":"232025:17:0","valueSize":1},{"declaration":9847,"isOffset":false,"isSlot":false,"src":"232107:17:0","valueSize":1},{"declaration":9855,"isOffset":false,"isSlot":false,"src":"232130:17:0","valueSize":1}],"id":9875,"nodeType":"InlineAssembly","src":"231387:772:0"},{"assignments":[9877],"declarations":[{"constant":false,"id":9877,"mutability":"mutable","name":"constructorArgsDataPtr","nodeType":"VariableDeclaration","scope":9889,"src":"232391:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9876,"name":"uint256","nodeType":"ElementaryTypeName","src":"232391:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9878,"nodeType":"VariableDeclarationStatement","src":"232391:30:0"},{"assignments":[9880],"declarations":[{"constant":false,"id":9880,"mutability":"mutable","name":"constructorArgsCodeDataPtr","nodeType":"VariableDeclaration","scope":9889,"src":"232432:34:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9879,"name":"uint256","nodeType":"ElementaryTypeName","src":"232432:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9881,"nodeType":"VariableDeclarationStatement","src":"232432:34:0"},{"AST":{"nodeType":"YulBlock","src":"232486:156:0","statements":[{"nodeType":"YulAssignment","src":"232501:50:0","value":{"arguments":[{"name":"constructorArgs","nodeType":"YulIdentifier","src":"232531:15:0"},{"kind":"number","nodeType":"YulLiteral","src":"232548:2:0","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"232527:3:0"},"nodeType":"YulFunctionCall","src":"232527:24:0"},"variableNames":[{"name":"constructorArgsDataPtr","nodeType":"YulIdentifier","src":"232501:22:0"}]},{"nodeType":"YulAssignment","src":"232565:66:0","value":{"arguments":[{"arguments":[{"name":"code","nodeType":"YulIdentifier","src":"232603:4:0"},{"kind":"number","nodeType":"YulLiteral","src":"232609:2:0","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"232599:3:0"},"nodeType":"YulFunctionCall","src":"232599:13:0"},{"name":"creationCodeSize","nodeType":"YulIdentifier","src":"232614:16:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"232595:3:0"},"nodeType":"YulFunctionCall","src":"232595:36:0"},"variableNames":[{"name":"constructorArgsCodeDataPtr","nodeType":"YulIdentifier","src":"232565:26:0"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":9840,"isOffset":false,"isSlot":false,"src":"232603:4:0","valueSize":1},{"declaration":9837,"isOffset":false,"isSlot":false,"src":"232531:15:0","valueSize":1},{"declaration":9880,"isOffset":false,"isSlot":false,"src":"232565:26:0","valueSize":1},{"declaration":9877,"isOffset":false,"isSlot":false,"src":"232501:22:0","valueSize":1},{"declaration":9859,"isOffset":false,"isSlot":false,"src":"232614:16:0","valueSize":1}],"id":9882,"nodeType":"InlineAssembly","src":"232477:165:0"},{"expression":{"arguments":[{"id":9884,"name":"constructorArgsCodeDataPtr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9880,"src":"232662:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9885,"name":"constructorArgsDataPtr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9877,"src":"232690:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9886,"name":"constructorArgsSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9865,"src":"232714:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9883,"name":"_memcpy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9960,"src":"232654:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":9887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"232654:80:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9888,"nodeType":"ExpressionStatement","src":"232654:80:0"}]},"documentation":{"id":9835,"nodeType":"StructuredDocumentation","src":"229878:121:0","text":" @dev Returns the creation code that will result in a contract being deployed with `constructorArgs`."},"id":9890,"implemented":true,"kind":"function","modifiers":[],"name":"_getCreationCodeWithArgs","nodeType":"FunctionDefinition","parameters":{"id":9838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9837,"mutability":"mutable","name":"constructorArgs","nodeType":"VariableDeclaration","scope":9890,"src":"230039:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9836,"name":"bytes","nodeType":"ElementaryTypeName","src":"230039:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"230038:30:0"},"returnParameters":{"id":9841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9840,"mutability":"mutable","name":"code","nodeType":"VariableDeclaration","scope":9890,"src":"230091:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9839,"name":"bytes","nodeType":"ElementaryTypeName","src":"230091:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"230090:19:0"},"scope":9961,"src":"230005:2737:0","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9919,"nodeType":"Block","src":"233020:566:0","statements":[{"assignments":[9899],"declarations":[{"constant":false,"id":9899,"mutability":"mutable","name":"creationCode","nodeType":"VariableDeclaration","scope":9919,"src":"233031:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9898,"name":"bytes","nodeType":"ElementaryTypeName","src":"233031:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":9903,"initialValue":{"arguments":[{"id":9901,"name":"constructorArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9893,"src":"233084:15:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9900,"name":"_getCreationCodeWithArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9890,"src":"233059:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bytes memory)"}},"id":9902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"233059:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"233031:69:0"},{"assignments":[9905],"declarations":[{"constant":false,"id":9905,"mutability":"mutable","name":"destination","nodeType":"VariableDeclaration","scope":9919,"src":"233113:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9904,"name":"address","nodeType":"ElementaryTypeName","src":"233113:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9906,"nodeType":"VariableDeclarationStatement","src":"233113:19:0"},{"AST":{"nodeType":"YulBlock","src":"233152:94:0","statements":[{"nodeType":"YulAssignment","src":"233167:68:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"233189:1:0","type":"","value":"0"},{"arguments":[{"name":"creationCode","nodeType":"YulIdentifier","src":"233196:12:0"},{"kind":"number","nodeType":"YulLiteral","src":"233210:2:0","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"233192:3:0"},"nodeType":"YulFunctionCall","src":"233192:21:0"},{"arguments":[{"name":"creationCode","nodeType":"YulIdentifier","src":"233221:12:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"233215:5:0"},"nodeType":"YulFunctionCall","src":"233215:19:0"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"233182:6:0"},"nodeType":"YulFunctionCall","src":"233182:53:0"},"variableNames":[{"name":"destination","nodeType":"YulIdentifier","src":"233167:11:0"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":9899,"isOffset":false,"isSlot":false,"src":"233196:12:0","valueSize":1},{"declaration":9899,"isOffset":false,"isSlot":false,"src":"233221:12:0","valueSize":1},{"declaration":9905,"isOffset":false,"isSlot":false,"src":"233167:11:0","valueSize":1}],"id":9907,"nodeType":"InlineAssembly","src":"233143:103:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9908,"name":"destination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9905,"src":"233262:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"233285:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"233277:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9909,"name":"address","nodeType":"ElementaryTypeName","src":"233277:7:0","typeDescriptions":{}}},"id":9912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"233277:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"233262:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9916,"nodeType":"IfStatement","src":"233258:290:0","trueBody":{"id":9915,"nodeType":"Block","src":"233289:259:0","statements":[{"AST":{"nodeType":"YulBlock","src":"233420:117:0","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"233454:1:0","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"233457:1:0","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"233460:14:0"},"nodeType":"YulFunctionCall","src":"233460:16:0"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"233439:14:0"},"nodeType":"YulFunctionCall","src":"233439:38:0"},"nodeType":"YulExpressionStatement","src":"233439:38:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"233502:1:0","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"233505:14:0"},"nodeType":"YulFunctionCall","src":"233505:16:0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"233495:6:0"},"nodeType":"YulFunctionCall","src":"233495:27:0"},"nodeType":"YulExpressionStatement","src":"233495:27:0"}]},"evmVersion":"istanbul","externalReferences":[],"id":9914,"nodeType":"InlineAssembly","src":"233411:126:0"}]}},{"expression":{"id":9917,"name":"destination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9905,"src":"233567:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9897,"id":9918,"nodeType":"Return","src":"233560:18:0"}]},"documentation":{"id":9891,"nodeType":"StructuredDocumentation","src":"232750:182:0","text":" @dev Deploys a contract with constructor arguments. To create `constructorArgs`, call `abi.encode()` with the\n contract's constructor arguments, in order."},"id":9920,"implemented":true,"kind":"function","modifiers":[],"name":"_create","nodeType":"FunctionDefinition","parameters":{"id":9894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9893,"mutability":"mutable","name":"constructorArgs","nodeType":"VariableDeclaration","scope":9920,"src":"232955:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9892,"name":"bytes","nodeType":"ElementaryTypeName","src":"232955:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"232954:30:0"},"returnParameters":{"id":9897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9896,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":9920,"src":"233011:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9895,"name":"address","nodeType":"ElementaryTypeName","src":"233011:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"233010:9:0"},"scope":9961,"src":"232938:648:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":9959,"nodeType":"Block","src":"233830:507:0","statements":[{"body":{"id":9945,"nodeType":"Block","src":"233921:142:0","statements":[{"AST":{"nodeType":"YulBlock","src":"233945:58:0","statements":[{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"233971:4:0"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"233983:3:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"233977:5:0"},"nodeType":"YulFunctionCall","src":"233977:10:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"233964:6:0"},"nodeType":"YulFunctionCall","src":"233964:24:0"},"nodeType":"YulExpressionStatement","src":"233964:24:0"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":9922,"isOffset":false,"isSlot":false,"src":"233971:4:0","valueSize":1},{"declaration":9924,"isOffset":false,"isSlot":false,"src":"233983:3:0","valueSize":1}],"id":9936,"nodeType":"InlineAssembly","src":"233936:67:0"},{"expression":{"id":9939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9937,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9922,"src":"234017:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":9938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"234025:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"234017:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9940,"nodeType":"ExpressionStatement","src":"234017:10:0"},{"expression":{"id":9943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9941,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9924,"src":"234042:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":9942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"234049:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"234042:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9944,"nodeType":"ExpressionStatement","src":"234042:9:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9929,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"233899:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":9930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"233906:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"233899:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9946,"loopExpression":{"expression":{"id":9934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9932,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"233910:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3332","id":9933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"233917:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"233910:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9935,"nodeType":"ExpressionStatement","src":"233910:9:0"},"nodeType":"ForStatement","src":"233892:171:0"},{"assignments":[9948],"declarations":[{"constant":false,"id":9948,"mutability":"mutable","name":"mask","nodeType":"VariableDeclaration","scope":9959,"src":"234108:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9947,"name":"uint256","nodeType":"ElementaryTypeName","src":"234108:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9957,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":9949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"234123:3:0","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":9950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"234129:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9951,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"234134:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"234129:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9953,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"234128:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"234123:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"234141:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"234123:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"234108:34:0"},{"AST":{"nodeType":"YulBlock","src":"234162:168:0","statements":[{"nodeType":"YulVariableDeclaration","src":"234177:41:0","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"234202:3:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"234196:5:0"},"nodeType":"YulFunctionCall","src":"234196:10:0"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"234212:4:0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"234208:3:0"},"nodeType":"YulFunctionCall","src":"234208:9:0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"234192:3:0"},"nodeType":"YulFunctionCall","src":"234192:26:0"},"variables":[{"name":"srcpart","nodeType":"YulTypedName","src":"234181:7:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"234232:38:0","value":{"arguments":[{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"234258:4:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"234252:5:0"},"nodeType":"YulFunctionCall","src":"234252:11:0"},{"name":"mask","nodeType":"YulIdentifier","src":"234265:4:0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"234248:3:0"},"nodeType":"YulFunctionCall","src":"234248:22:0"},"variables":[{"name":"destpart","nodeType":"YulTypedName","src":"234236:8:0","type":""}]},{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"234291:4:0"},{"arguments":[{"name":"destpart","nodeType":"YulIdentifier","src":"234300:8:0"},{"name":"srcpart","nodeType":"YulIdentifier","src":"234310:7:0"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"234297:2:0"},"nodeType":"YulFunctionCall","src":"234297:21:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"234284:6:0"},"nodeType":"YulFunctionCall","src":"234284:35:0"},"nodeType":"YulExpressionStatement","src":"234284:35:0"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":9922,"isOffset":false,"isSlot":false,"src":"234258:4:0","valueSize":1},{"declaration":9922,"isOffset":false,"isSlot":false,"src":"234291:4:0","valueSize":1},{"declaration":9948,"isOffset":false,"isSlot":false,"src":"234212:4:0","valueSize":1},{"declaration":9948,"isOffset":false,"isSlot":false,"src":"234265:4:0","valueSize":1},{"declaration":9924,"isOffset":false,"isSlot":false,"src":"234202:3:0","valueSize":1}],"id":9958,"nodeType":"InlineAssembly","src":"234153:177:0"}]},"id":9960,"implemented":true,"kind":"function","modifiers":[],"name":"_memcpy","nodeType":"FunctionDefinition","parameters":{"id":9927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9922,"mutability":"mutable","name":"dest","nodeType":"VariableDeclaration","scope":9960,"src":"233753:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9921,"name":"uint256","nodeType":"ElementaryTypeName","src":"233753:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9924,"mutability":"mutable","name":"src","nodeType":"VariableDeclaration","scope":9960,"src":"233776:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9923,"name":"uint256","nodeType":"ElementaryTypeName","src":"233776:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9926,"mutability":"mutable","name":"len","nodeType":"VariableDeclaration","scope":9960,"src":"233798:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9925,"name":"uint256","nodeType":"ElementaryTypeName","src":"233798:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"233742:74:0"},"returnParameters":{"id":9928,"nodeType":"ParameterList","parameters":[],"src":"233830:0:0"},"scope":9961,"src":"233726:611:0","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":10227,"src":"225811:8529:0"},{"id":9962,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"234350:23:0"},{"abstract":true,"baseContracts":[{"baseName":{"id":9964,"name":"BaseSplitCodeFactory","nodeType":"UserDefinedTypeName","referencedDeclaration":9961,"src":"234544:20:0","typeDescriptions":{"typeIdentifier":"t_contract$_BaseSplitCodeFactory_$9961","typeString":"contract BaseSplitCodeFactory"}},"id":9965,"nodeType":"InheritanceSpecifier","src":"234544:20:0"}],"contractDependencies":[9961],"contractKind":"contract","documentation":{"id":9963,"nodeType":"StructuredDocumentation","src":"234377:119:0","text":" @dev Same as `BasePoolFactory`, for Pools whose creation code is so large that the factory cannot hold it."},"fullyImplemented":true,"id":10058,"linearizedBaseContracts":[10058,9961],"name":"BasePoolSplitCodeFactory","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":9967,"mutability":"immutable","name":"_vault","nodeType":"VariableDeclaration","scope":10058,"src":"234572:31:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"},"typeName":{"id":9966,"name":"IVault","nodeType":"UserDefinedTypeName","referencedDeclaration":9483,"src":"234572:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"visibility":"private"},{"constant":false,"id":9969,"mutability":"mutable","name":"_defaultPoolOwner","nodeType":"VariableDeclaration","scope":10058,"src":"234610:33:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9968,"name":"address","nodeType":"ElementaryTypeName","src":"234610:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":9973,"mutability":"mutable","name":"_isPoolFromFactory","nodeType":"VariableDeclaration","scope":10058,"src":"234650:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":9972,"keyType":{"id":9970,"name":"address","nodeType":"ElementaryTypeName","src":"234658:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"234650:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":9971,"name":"bool","nodeType":"ElementaryTypeName","src":"234669:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"anonymous":false,"id":9977,"name":"PoolCreated","nodeType":"EventDefinition","parameters":{"id":9976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9975,"indexed":true,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":9977,"src":"234728:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9974,"name":"address","nodeType":"ElementaryTypeName","src":"234728:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"234727:22:0"},"src":"234710:40:0"},{"body":{"id":9997,"nodeType":"Block","src":"234872:80:0","statements":[{"expression":{"id":9991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9989,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9967,"src":"234883:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9990,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9979,"src":"234892:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"src":"234883:14:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"id":9992,"nodeType":"ExpressionStatement","src":"234883:14:0"},{"expression":{"id":9995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9993,"name":"_defaultPoolOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9969,"src":"234908:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9994,"name":"defaultPoolOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9983,"src":"234928:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"234908:36:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9996,"nodeType":"ExpressionStatement","src":"234908:36:0"}]},"id":9998,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":9986,"name":"creationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9981,"src":"234858:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":9987,"modifierName":{"id":9985,"name":"BaseSplitCodeFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9961,"src":"234837:20:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BaseSplitCodeFactory_$9961_$","typeString":"type(contract BaseSplitCodeFactory)"}},"nodeType":"ModifierInvocation","src":"234837:34:0"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":9984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9979,"mutability":"mutable","name":"vault","nodeType":"VariableDeclaration","scope":9998,"src":"234770:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"},"typeName":{"id":9978,"name":"IVault","nodeType":"UserDefinedTypeName","referencedDeclaration":9483,"src":"234770:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"visibility":"internal"},{"constant":false,"id":9981,"mutability":"mutable","name":"creationCode","nodeType":"VariableDeclaration","scope":9998,"src":"234784:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9980,"name":"bytes","nodeType":"ElementaryTypeName","src":"234784:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9983,"mutability":"mutable","name":"defaultPoolOwner","nodeType":"VariableDeclaration","scope":9998,"src":"234811:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9982,"name":"address","nodeType":"ElementaryTypeName","src":"234811:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"234769:67:0"},"returnParameters":{"id":9988,"nodeType":"ParameterList","parameters":[],"src":"234872:0:0"},"scope":10058,"src":"234758:194:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10006,"nodeType":"Block","src":"235069:32:0","statements":[{"expression":{"id":10004,"name":"_vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9967,"src":"235087:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"functionReturnParameters":10003,"id":10005,"nodeType":"Return","src":"235080:13:0"}]},"documentation":{"id":9999,"nodeType":"StructuredDocumentation","src":"234960:54:0","text":" @dev Returns the Vault's address."},"functionSelector":"8d928af8","id":10007,"implemented":true,"kind":"function","modifiers":[],"name":"getVault","nodeType":"FunctionDefinition","parameters":{"id":10000,"nodeType":"ParameterList","parameters":[],"src":"235037:2:0"},"returnParameters":{"id":10003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10002,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":10007,"src":"235061:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"},"typeName":{"id":10001,"name":"IVault","nodeType":"UserDefinedTypeName","referencedDeclaration":9483,"src":"235061:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"visibility":"internal"}],"src":"235060:8:0"},"scope":10058,"src":"235020:81:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":10015,"nodeType":"Block","src":"235241:43:0","statements":[{"expression":{"id":10013,"name":"_defaultPoolOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9969,"src":"235259:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":10012,"id":10014,"nodeType":"Return","src":"235252:24:0"}]},"documentation":{"id":10008,"nodeType":"StructuredDocumentation","src":"235109:65:0","text":" @dev Returns the defaultPoolOwner's address."},"functionSelector":"7ff52b01","id":10016,"implemented":true,"kind":"function","modifiers":[],"name":"getDefaultPoolOwner","nodeType":"FunctionDefinition","parameters":{"id":10009,"nodeType":"ParameterList","parameters":[],"src":"235208:2:0"},"returnParameters":{"id":10012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10011,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":10016,"src":"235232:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10010,"name":"address","nodeType":"ElementaryTypeName","src":"235232:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"235231:9:0"},"scope":10058,"src":"235180:104:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":10028,"nodeType":"Block","src":"235453:50:0","statements":[{"expression":{"baseExpression":{"id":10024,"name":"_isPoolFromFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"235471:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10026,"indexExpression":{"id":10025,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10019,"src":"235490:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"235471:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10023,"id":10027,"nodeType":"Return","src":"235464:31:0"}]},"documentation":{"id":10017,"nodeType":"StructuredDocumentation","src":"235300:77:0","text":" @dev Returns true if `pool` was created by this factory."},"functionSelector":"6634b753","id":10029,"implemented":true,"kind":"function","modifiers":[],"name":"isPoolFromFactory","nodeType":"FunctionDefinition","parameters":{"id":10020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10019,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":10029,"src":"235410:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10018,"name":"address","nodeType":"ElementaryTypeName","src":"235410:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"235409:14:0"},"returnParameters":{"id":10023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10022,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":10029,"src":"235447:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10021,"name":"bool","nodeType":"ElementaryTypeName","src":"235447:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"235446:6:0"},"scope":10058,"src":"235383:120:0","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[9920],"body":{"id":10056,"nodeType":"Block","src":"235594:165:0","statements":[{"assignments":[10038],"declarations":[{"constant":false,"id":10038,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":10056,"src":"235605:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10037,"name":"address","nodeType":"ElementaryTypeName","src":"235605:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10043,"initialValue":{"arguments":[{"id":10041,"name":"constructorArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10031,"src":"235634:15:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10039,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"235620:5:0","typeDescriptions":{"typeIdentifier":"t_super$_BasePoolSplitCodeFactory_$10058","typeString":"contract super BasePoolSplitCodeFactory"}},"id":10040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_create","nodeType":"MemberAccess","referencedDeclaration":9920,"src":"235620:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes memory) returns (address)"}},"id":10042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"235620:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"235605:45:0"},{"expression":{"id":10048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10044,"name":"_isPoolFromFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"235663:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10046,"indexExpression":{"id":10045,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10038,"src":"235682:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"235663:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"235690:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"235663:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10049,"nodeType":"ExpressionStatement","src":"235663:31:0"},{"eventCall":{"arguments":[{"id":10051,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10038,"src":"235722:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10050,"name":"PoolCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9977,"src":"235710:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":10052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"235710:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10053,"nodeType":"EmitStatement","src":"235705:22:0"},{"expression":{"id":10054,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10038,"src":"235747:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":10036,"id":10055,"nodeType":"Return","src":"235740:11:0"}]},"id":10057,"implemented":true,"kind":"function","modifiers":[],"name":"_create","nodeType":"FunctionDefinition","overrides":{"id":10033,"nodeType":"OverrideSpecifier","overrides":[],"src":"235567:8:0"},"parameters":{"id":10032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10031,"mutability":"mutable","name":"constructorArgs","nodeType":"VariableDeclaration","scope":10057,"src":"235528:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10030,"name":"bytes","nodeType":"ElementaryTypeName","src":"235528:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"235527:30:0"},"returnParameters":{"id":10036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10035,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":10057,"src":"235585:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10034,"name":"address","nodeType":"ElementaryTypeName","src":"235585:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"235584:9:0"},"scope":10058,"src":"235511:248:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":10227,"src":"234498:1264:0"},{"id":10059,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"235768:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":10060,"nodeType":"StructuredDocumentation","src":"235795:342:0","text":" @dev Utility to create Pool factories for Pools that use the `TemporarilyPausable` contract.\n By calling `TemporarilyPausable`'s constructor with the result of `getPauseConfiguration`, all Pools created by this\n factory will share the same Pause Window end time, after which both old and new Pools will not be pausable."},"fullyImplemented":true,"id":10118,"linearizedBaseContracts":[10118],"name":"FactoryWidePauseWindow","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":10063,"mutability":"constant","name":"_INITIAL_PAUSE_WINDOW_DURATION","nodeType":"VariableDeclaration","scope":10118,"src":"236337:65:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10061,"name":"uint256","nodeType":"ElementaryTypeName","src":"236337:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3930","id":10062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"236395:7:0","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_7776000_by_1","typeString":"int_const 7776000"},"value":"90"},"visibility":"private"},{"constant":true,"id":10066,"mutability":"constant","name":"_BUFFER_PERIOD_DURATION","nodeType":"VariableDeclaration","scope":10118,"src":"236409:58:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10064,"name":"uint256","nodeType":"ElementaryTypeName","src":"236409:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3330","id":10065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"236460:7:0","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"visibility":"private"},{"constant":false,"id":10068,"mutability":"immutable","name":"_poolsPauseWindowEndTime","nodeType":"VariableDeclaration","scope":10118,"src":"236607:50:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10067,"name":"uint256","nodeType":"ElementaryTypeName","src":"236607:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":10078,"nodeType":"Block","src":"236680:94:0","statements":[{"expression":{"id":10076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10071,"name":"_poolsPauseWindowEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10068,"src":"236691:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10072,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"236718:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"236718:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10074,"name":"_INITIAL_PAUSE_WINDOW_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10063,"src":"236736:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"236718:48:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"236691:75:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10077,"nodeType":"ExpressionStatement","src":"236691:75:0"}]},"id":10079,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":10069,"nodeType":"ParameterList","parameters":[],"src":"236677:2:0"},"returnParameters":{"id":10070,"nodeType":"ParameterList","parameters":[],"src":"236680:0:0"},"scope":10118,"src":"236666:108:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10116,"nodeType":"Block","src":"237255:789:0","statements":[{"assignments":[10088],"declarations":[{"constant":false,"id":10088,"mutability":"mutable","name":"currentTime","nodeType":"VariableDeclaration","scope":10116,"src":"237266:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10087,"name":"uint256","nodeType":"ElementaryTypeName","src":"237266:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10091,"initialValue":{"expression":{"id":10089,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"237288:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"237288:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"237266:37:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10092,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10088,"src":"237318:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10093,"name":"_poolsPauseWindowEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10068,"src":"237332:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"237318:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10114,"nodeType":"Block","src":"237784:253:0","statements":[{"expression":{"id":10108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10106,"name":"pauseWindowDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10083,"src":"237963:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":10107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"237985:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"237963:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10109,"nodeType":"ExpressionStatement","src":"237963:23:0"},{"expression":{"id":10112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10110,"name":"bufferPeriodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10085,"src":"238001:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":10111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"238024:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"238001:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10113,"nodeType":"ExpressionStatement","src":"238001:24:0"}]},"id":10115,"nodeType":"IfStatement","src":"237314:723:0","trueBody":{"id":10105,"nodeType":"Block","src":"237358:420:0","statements":[{"expression":{"id":10099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10095,"name":"pauseWindowDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10083,"src":"237610:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10096,"name":"_poolsPauseWindowEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10068,"src":"237632:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10097,"name":"currentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10088,"src":"237659:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"237632:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"237610:60:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10100,"nodeType":"ExpressionStatement","src":"237610:60:0"},{"expression":{"id":10103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10101,"name":"bufferPeriodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10085,"src":"237720:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10102,"name":"_BUFFER_PERIOD_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10066,"src":"237743:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"237720:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10104,"nodeType":"ExpressionStatement","src":"237720:46:0"}]}}]},"documentation":{"id":10080,"nodeType":"StructuredDocumentation","src":"236782:354:0","text":" @dev Returns the current `TemporarilyPausable` configuration that will be applied to Pools created by this\n factory.\n `pauseWindowDuration` will decrease over time until it reaches zero, at which point both it and\n `bufferPeriodDuration` will be zero forever, meaning deployed Pools will not be pausable."},"functionSelector":"2da47c40","id":10117,"implemented":true,"kind":"function","modifiers":[],"name":"getPauseConfiguration","nodeType":"FunctionDefinition","parameters":{"id":10081,"nodeType":"ParameterList","parameters":[],"src":"237172:2:0"},"returnParameters":{"id":10086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10083,"mutability":"mutable","name":"pauseWindowDuration","nodeType":"VariableDeclaration","scope":10117,"src":"237196:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10082,"name":"uint256","nodeType":"ElementaryTypeName","src":"237196:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10085,"mutability":"mutable","name":"bufferPeriodDuration","nodeType":"VariableDeclaration","scope":10117,"src":"237225:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10084,"name":"uint256","nodeType":"ElementaryTypeName","src":"237225:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"237195:59:0"},"scope":10118,"src":"237142:902:0","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":10227,"src":"236139:1908:0"},{"id":10119,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"238059:23:0"},{"abstract":false,"baseContracts":[{"baseName":{"id":10120,"name":"BasePoolSplitCodeFactory","nodeType":"UserDefinedTypeName","referencedDeclaration":10058,"src":"238120:24:0","typeDescriptions":{"typeIdentifier":"t_contract$_BasePoolSplitCodeFactory_$10058","typeString":"contract BasePoolSplitCodeFactory"}},"id":10121,"nodeType":"InheritanceSpecifier","src":"238120:24:0"},{"baseName":{"id":10122,"name":"FactoryWidePauseWindow","nodeType":"UserDefinedTypeName","referencedDeclaration":10118,"src":"238146:22:0","typeDescriptions":{"typeIdentifier":"t_contract$_FactoryWidePauseWindow_$10118","typeString":"contract FactoryWidePauseWindow"}},"id":10123,"nodeType":"InheritanceSpecifier","src":"238146:22:0"}],"contractDependencies":[4336,9961,10058,10118],"contractKind":"contract","fullyImplemented":true,"id":10195,"linearizedBaseContracts":[10195,10118,10058,9961],"name":"AaveLinearPoolFactory","nodeType":"ContractDefinition","nodes":[{"body":{"id":10138,"nodeType":"Block","src":"238313:66:0","statements":[]},"id":10139,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":10130,"name":"vault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10125,"src":"238253:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},{"expression":{"arguments":[{"id":10132,"name":"AaveLinearPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"238265:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AaveLinearPool_$4336_$","typeString":"type(contract AaveLinearPool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_AaveLinearPool_$4336_$","typeString":"type(contract AaveLinearPool)"}],"id":10131,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"238260:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":10133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"238260:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_AaveLinearPool_$4336","typeString":"type(contract AaveLinearPool)"}},"id":10134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"creationCode","nodeType":"MemberAccess","src":"238260:33:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":10135,"name":"defaultPoolOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10127,"src":"238295:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10136,"modifierName":{"id":10129,"name":"BasePoolSplitCodeFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10058,"src":"238228:24:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BasePoolSplitCodeFactory_$10058_$","typeString":"type(contract BasePoolSplitCodeFactory)"}},"nodeType":"ModifierInvocation","src":"238228:84:0"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":10128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10125,"mutability":"mutable","name":"vault","nodeType":"VariableDeclaration","scope":10139,"src":"238188:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"},"typeName":{"id":10124,"name":"IVault","nodeType":"UserDefinedTypeName","referencedDeclaration":9483,"src":"238188:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},"visibility":"internal"},{"constant":false,"id":10127,"mutability":"mutable","name":"defaultPoolOwner","nodeType":"VariableDeclaration","scope":10139,"src":"238202:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10126,"name":"address","nodeType":"ElementaryTypeName","src":"238202:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"238187:40:0"},"returnParameters":{"id":10137,"nodeType":"ParameterList","parameters":[],"src":"238313:0:0"},"scope":10195,"src":"238176:203:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10193,"nodeType":"Block","src":"238686:820:0","statements":[{"assignments":[10158,10160],"declarations":[{"constant":false,"id":10158,"mutability":"mutable","name":"pauseWindowDuration","nodeType":"VariableDeclaration","scope":10193,"src":"238698:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10157,"name":"uint256","nodeType":"ElementaryTypeName","src":"238698:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10160,"mutability":"mutable","name":"bufferPeriodDuration","nodeType":"VariableDeclaration","scope":10193,"src":"238727:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10159,"name":"uint256","nodeType":"ElementaryTypeName","src":"238727:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10163,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":10161,"name":"getPauseConfiguration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10117,"src":"238759:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$","typeString":"function () view returns (uint256,uint256)"}},"id":10162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"238759:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"238697:85:0"},{"assignments":[10165],"declarations":[{"constant":false,"id":10165,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":10193,"src":"238795:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"},"typeName":{"id":10164,"name":"LinearPool","nodeType":"UserDefinedTypeName","referencedDeclaration":4244,"src":"238795:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}},"visibility":"internal"}],"id":10185,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":10170,"name":"getVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10007,"src":"238901:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IVault_$9483_$","typeString":"function () view returns (contract IVault)"}},"id":10171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"238901:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"}},{"id":10172,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10142,"src":"238934:4:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10173,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"238961:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10174,"name":"mainToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10146,"src":"238990:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},{"id":10175,"name":"wrappedToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10148,"src":"239022:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},{"id":10176,"name":"upperTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10150,"src":"239057:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10177,"name":"swapFeePercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10152,"src":"239091:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10178,"name":"pauseWindowDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10158,"src":"239131:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10179,"name":"bufferPeriodDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10160,"src":"239173:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":10180,"name":"getDefaultPoolOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10016,"src":"239216:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"239216:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVault_$9483","typeString":"contract IVault"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10168,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"238868:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"238868:10:0","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"238868:388:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10167,"name":"_create","nodeType":"Identifier","overloadedDeclarations":[10057],"referencedDeclaration":10057,"src":"238842:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes memory) returns (address)"}},"id":10183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"238842:429:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10166,"name":"AaveLinearPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"238813:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AaveLinearPool_$4336_$","typeString":"type(contract AaveLinearPool)"}},"id":10184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"238813:469:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AaveLinearPool_$4336","typeString":"contract AaveLinearPool"}},"nodeType":"VariableDeclarationStatement","src":"238795:487:0"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10186,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10165,"src":"239457:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}},"id":10188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":2970,"src":"239457:15:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":10189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"239457:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10190,"nodeType":"ExpressionStatement","src":"239457:17:0"},{"expression":{"id":10191,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10165,"src":"239494:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}},"functionReturnParameters":10156,"id":10192,"nodeType":"Return","src":"239487:11:0"}]},"documentation":{"id":10140,"nodeType":"StructuredDocumentation","src":"238387:57:0","text":" @dev Deploys a new `AaveLinearPool`."},"functionSelector":"74dcc7a4","id":10194,"implemented":true,"kind":"function","modifiers":[],"name":"create","nodeType":"FunctionDefinition","parameters":{"id":10153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10142,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":10194,"src":"238476:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10141,"name":"string","nodeType":"ElementaryTypeName","src":"238476:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10144,"mutability":"mutable","name":"symbol","nodeType":"VariableDeclaration","scope":10194,"src":"238505:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10143,"name":"string","nodeType":"ElementaryTypeName","src":"238505:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10146,"mutability":"mutable","name":"mainToken","nodeType":"VariableDeclaration","scope":10194,"src":"238536:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":10145,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"238536:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":10148,"mutability":"mutable","name":"wrappedToken","nodeType":"VariableDeclaration","scope":10194,"src":"238563:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"},"typeName":{"id":10147,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":486,"src":"238563:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$486","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":10150,"mutability":"mutable","name":"upperTarget","nodeType":"VariableDeclaration","scope":10194,"src":"238593:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10149,"name":"uint256","nodeType":"ElementaryTypeName","src":"238593:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10152,"mutability":"mutable","name":"swapFeePercentage","nodeType":"VariableDeclaration","scope":10194,"src":"238623:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10151,"name":"uint256","nodeType":"ElementaryTypeName","src":"238623:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"238465:190:0"},"returnParameters":{"id":10156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10155,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":10194,"src":"238674:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"},"typeName":{"id":10154,"name":"LinearPool","nodeType":"UserDefinedTypeName","referencedDeclaration":4244,"src":"238674:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_LinearPool_$4244","typeString":"contract LinearPool"}},"visibility":"internal"}],"src":"238673:12:0"},"scope":10195,"src":"238450:1056:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":10227,"src":"238086:1423:0"},{"id":10196,"literals":["solidity","^","0.7",".0"],"nodeType":"PragmaDirective","src":"239523:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":10197,"nodeType":"StructuredDocumentation","src":"239552:202:0","text":" @dev Library used to deploy contracts with specific code. This can be used for long-term storage of immutable data as\n contract code, which can be retrieved via the `extcodecopy` opcode."},"fullyImplemented":true,"id":10226,"linearizedBaseContracts":[10226],"name":"CodeDeployer","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":10200,"mutability":"constant","name":"_DEPLOYER_CREATION_CODE","nodeType":"VariableDeclaration","scope":10226,"src":"241147:126:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"241147:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307836303230333830333830363032303630303033393630303066336665666566656665666566656665666566656665666566656665666566656665666566656665","id":10199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"241207:66:0","typeDescriptions":{"typeIdentifier":"t_rational_43478959162261259322985507790388014220090819270403161015765007512459448090366_by_1","typeString":"int_const 4347...(69 digits omitted)...0366"},"value":"0x602038038060206000396000f3fefefefefefefefefefefefefefefefefefefe"},"visibility":"private"},{"body":{"id":10224,"nodeType":"Block","src":"241511:1064:0","statements":[{"assignments":[10209],"declarations":[{"constant":false,"id":10209,"mutability":"mutable","name":"deployerCreationCode","nodeType":"VariableDeclaration","scope":10224,"src":"241522:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"241522:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":10211,"initialValue":{"id":10210,"name":"_DEPLOYER_CREATION_CODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10200,"src":"241553:23:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"241522:54:0"},{"AST":{"nodeType":"YulBlock","src":"241655:719:0","statements":[{"nodeType":"YulVariableDeclaration","src":"241670:29:0","value":{"arguments":[{"name":"code","nodeType":"YulIdentifier","src":"241694:4:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"241688:5:0"},"nodeType":"YulFunctionCall","src":"241688:11:0"},"variables":[{"name":"codeLength","nodeType":"YulTypedName","src":"241674:10:0","type":""}]},{"expression":{"arguments":[{"name":"code","nodeType":"YulIdentifier","src":"241932:4:0"},{"name":"deployerCreationCode","nodeType":"YulIdentifier","src":"241938:20:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"241925:6:0"},"nodeType":"YulFunctionCall","src":"241925:34:0"},"nodeType":"YulExpressionStatement","src":"241925:34:0"},{"nodeType":"YulAssignment","src":"242185:51:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"242207:1:0","type":"","value":"0"},{"name":"code","nodeType":"YulIdentifier","src":"242210:4:0"},{"arguments":[{"name":"codeLength","nodeType":"YulIdentifier","src":"242220:10:0"},{"kind":"number","nodeType":"YulLiteral","src":"242232:2:0","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"242216:3:0"},"nodeType":"YulFunctionCall","src":"242216:19:0"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"242200:6:0"},"nodeType":"YulFunctionCall","src":"242200:36:0"},"variableNames":[{"name":"destination","nodeType":"YulIdentifier","src":"242185:11:0"}]},{"expression":{"arguments":[{"name":"code","nodeType":"YulIdentifier","src":"242346:4:0"},{"name":"codeLength","nodeType":"YulIdentifier","src":"242352:10:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"242339:6:0"},"nodeType":"YulFunctionCall","src":"242339:24:0"},"nodeType":"YulExpressionStatement","src":"242339:24:0"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":10203,"isOffset":false,"isSlot":false,"src":"241694:4:0","valueSize":1},{"declaration":10203,"isOffset":false,"isSlot":false,"src":"241932:4:0","valueSize":1},{"declaration":10203,"isOffset":false,"isSlot":false,"src":"242210:4:0","valueSize":1},{"declaration":10203,"isOffset":false,"isSlot":false,"src":"242346:4:0","valueSize":1},{"declaration":10209,"isOffset":false,"isSlot":false,"src":"241938:20:0","valueSize":1},{"declaration":10206,"isOffset":false,"isSlot":false,"src":"242185:11:0","valueSize":1}],"id":10212,"nodeType":"InlineAssembly","src":"241646:728:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10214,"name":"destination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10206,"src":"242510:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"242533:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"242525:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10215,"name":"address","nodeType":"ElementaryTypeName","src":"242525:7:0","typeDescriptions":{}}},"id":10218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"242525:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"242510:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":10220,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"242537:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4806_$","typeString":"type(library Errors)"}},"id":10221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"CODE_DEPLOYMENT_FAILED","nodeType":"MemberAccess","referencedDeclaration":4694,"src":"242537:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10213,"name":"_require","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"242501:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$","typeString":"function (bool,uint256) pure"}},"id":10222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"242501:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10223,"nodeType":"ExpressionStatement","src":"242501:66:0"}]},"documentation":{"id":10201,"nodeType":"StructuredDocumentation","src":"241282:149:0","text":" @dev Deploys a contract with `code` as its code, returning the destination address.\n Reverts if deployment fails."},"id":10225,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nodeType":"FunctionDefinition","parameters":{"id":10204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10203,"mutability":"mutable","name":"code","nodeType":"VariableDeclaration","scope":10225,"src":"241453:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10202,"name":"bytes","nodeType":"ElementaryTypeName","src":"241453:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"241452:19:0"},"returnParameters":{"id":10207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10206,"mutability":"mutable","name":"destination","nodeType":"VariableDeclaration","scope":10225,"src":"241490:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10205,"name":"address","nodeType":"ElementaryTypeName","src":"241490:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"241489:21:0"},"scope":10226,"src":"241437:1138:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":10227,"src":"239756:2822:0"}],"src":"702:241876:0"},"id":0}},"contracts":{"contracts/AaveLinearPoolFactory.sol":{"AaveLinearPool":{"abi":[{"inputs":[{"internalType":"contract IVault","name":"vault","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"contract IERC20","name":"mainToken","type":"address"},{"internalType":"contract IERC20","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"upperTarget","type":"uint256"},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256"},{"internalType":"uint256","name":"pauseWindowDuration","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodDuration","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}],"name":"SwapFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"lowerTarget","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"upperTarget","type":"uint256"}],"name":"TargetsSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBptIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMainIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMainToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPausedState","outputs":[{"internalType":"bool","name":"paused","type":"bool"},{"internalType":"uint256","name":"pauseWindowEndTime","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodEndTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getScalingFactors","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSwapFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTargets","outputs":[{"internalType":"uint256","name":"lowerTarget","type":"uint256"},{"internalType":"uint256","name":"upperTarget","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVirtualSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWrappedIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWrappedToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWrappedTokenRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"uint256","name":"protocolSwapFeePercentage","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"onExitPool","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"uint256","name":"protocolSwapFeePercentage","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"onJoinPool","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IPoolSwapStructs.SwapRequest","name":"request","type":"tuple"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"indexIn","type":"uint256"},{"internalType":"uint256","name":"indexOut","type":"uint256"}],"name":"onSwap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"uint256","name":"protocolSwapFeePercentage","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryExit","outputs":[{"internalType":"uint256","name":"bptIn","type":"uint256"},{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"uint256","name":"protocolSwapFeePercentage","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryJoin","outputs":[{"internalType":"uint256","name":"bptOut","type":"uint256"},{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"bytes","name":"poolConfig","type":"bytes"}],"name":"setAssetManagerPoolConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"paused","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}],"name":"setSwapFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newLowerTarget","type":"uint256"},{"internalType":"uint256","name":"newUpperTarget","type":"uint256"}],"name":"setTargets","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5445:1","statements":[{"nodeType":"YulBlock","src":"6:3:1","statements":[]},{"body":{"nodeType":"YulBlock","src":"76:80:1","statements":[{"nodeType":"YulAssignment","src":"86:22:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"101:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"95:5:1"},"nodeType":"YulFunctionCall","src":"95:13:1"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"86:5:1"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"144:5:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"117:26:1"},"nodeType":"YulFunctionCall","src":"117:33:1"},"nodeType":"YulExpressionStatement","src":"117:33:1"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"55:6:1","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"66:5:1","type":""}],"src":"14:142:1"},{"body":{"nodeType":"YulBlock","src":"227:797:1","statements":[{"body":{"nodeType":"YulBlock","src":"276:24:1","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"285:5:1"},{"name":"array","nodeType":"YulIdentifier","src":"292:5:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"278:6:1"},"nodeType":"YulFunctionCall","src":"278:20:1"},"nodeType":"YulExpressionStatement","src":"278:20:1"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"255:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"263:4:1","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"251:3:1"},"nodeType":"YulFunctionCall","src":"251:17:1"},{"name":"end","nodeType":"YulIdentifier","src":"270:3:1"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"247:3:1"},"nodeType":"YulFunctionCall","src":"247:27:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"240:6:1"},"nodeType":"YulFunctionCall","src":"240:35:1"},"nodeType":"YulIf","src":"237:2:1"},{"nodeType":"YulVariableDeclaration","src":"309:23:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"325:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"319:5:1"},"nodeType":"YulFunctionCall","src":"319:13:1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"313:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"341:28:1","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"359:2:1","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"363:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"355:3:1"},"nodeType":"YulFunctionCall","src":"355:10:1"},{"kind":"number","nodeType":"YulLiteral","src":"367:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"351:3:1"},"nodeType":"YulFunctionCall","src":"351:18:1"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"345:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"392:13:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"394:7:1"},"nodeType":"YulFunctionCall","src":"394:9:1"},"nodeType":"YulExpressionStatement","src":"394:9:1"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"384:2:1"},{"name":"_2","nodeType":"YulIdentifier","src":"388:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"381:2:1"},"nodeType":"YulFunctionCall","src":"381:10:1"},"nodeType":"YulIf","src":"378:2:1"},{"nodeType":"YulVariableDeclaration","src":"414:23:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"434:2:1","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"428:5:1"},"nodeType":"YulFunctionCall","src":"428:9:1"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"418:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"446:14:1","value":{"kind":"number","nodeType":"YulLiteral","src":"456:4:1","type":"","value":"0x20"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"450:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"469:67:1","value":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"495:6:1"},{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"511:2:1"},{"kind":"number","nodeType":"YulLiteral","src":"515:4:1","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:1"},"nodeType":"YulFunctionCall","src":"507:13:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:2:1","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"522:3:1"},"nodeType":"YulFunctionCall","src":"522:7:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"503:3:1"},"nodeType":"YulFunctionCall","src":"503:27:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"491:3:1"},"nodeType":"YulFunctionCall","src":"491:40:1"},{"name":"_3","nodeType":"YulIdentifier","src":"533:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"487:3:1"},"nodeType":"YulFunctionCall","src":"487:49:1"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"473:10:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"595:13:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"597:7:1"},"nodeType":"YulFunctionCall","src":"597:9:1"},"nodeType":"YulExpressionStatement","src":"597:9:1"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"554:10:1"},{"name":"_2","nodeType":"YulIdentifier","src":"566:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"551:2:1"},"nodeType":"YulFunctionCall","src":"551:18:1"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"574:10:1"},{"name":"memPtr","nodeType":"YulIdentifier","src":"586:6:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"571:2:1"},"nodeType":"YulFunctionCall","src":"571:22:1"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"548:2:1"},"nodeType":"YulFunctionCall","src":"548:46:1"},"nodeType":"YulIf","src":"545:2:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:1","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:1"},"nodeType":"YulFunctionCall","src":"617:22:1"},"nodeType":"YulExpressionStatement","src":"617:22:1"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:1"},"nodeType":"YulFunctionCall","src":"648:18:1"},"nodeType":"YulExpressionStatement","src":"648:18:1"},{"body":{"nodeType":"YulBlock","src":"712:24:1","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"721:5:1"},{"name":"array","nodeType":"YulIdentifier","src":"728:5:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"714:6:1"},"nodeType":"YulFunctionCall","src":"714:20:1"},"nodeType":"YulExpressionStatement","src":"714:20:1"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"689:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"697:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"685:3:1"},"nodeType":"YulFunctionCall","src":"685:15:1"},{"name":"_3","nodeType":"YulIdentifier","src":"702:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"681:3:1"},"nodeType":"YulFunctionCall","src":"681:24:1"},{"name":"end","nodeType":"YulIdentifier","src":"707:3:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"678:2:1"},"nodeType":"YulFunctionCall","src":"678:33:1"},"nodeType":"YulIf","src":"675:2:1"},{"nodeType":"YulVariableDeclaration","src":"745:14:1","value":{"name":"array","nodeType":"YulIdentifier","src":"754:5:1"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"749:1:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"814:87:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"843:6:1"},{"name":"i","nodeType":"YulIdentifier","src":"851:1:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"839:3:1"},"nodeType":"YulFunctionCall","src":"839:14:1"},{"name":"_3","nodeType":"YulIdentifier","src":"855:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"835:3:1"},"nodeType":"YulFunctionCall","src":"835:23:1"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"874:6:1"},{"name":"i","nodeType":"YulIdentifier","src":"882:1:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"870:3:1"},"nodeType":"YulFunctionCall","src":"870:14:1"},{"name":"_3","nodeType":"YulIdentifier","src":"886:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"866:3:1"},"nodeType":"YulFunctionCall","src":"866:23:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"860:5:1"},"nodeType":"YulFunctionCall","src":"860:30:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"828:6:1"},"nodeType":"YulFunctionCall","src":"828:63:1"},"nodeType":"YulExpressionStatement","src":"828:63:1"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"779:1:1"},{"name":"_1","nodeType":"YulIdentifier","src":"782:2:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"776:2:1"},"nodeType":"YulFunctionCall","src":"776:9:1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"786:19:1","statements":[{"nodeType":"YulAssignment","src":"788:15:1","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"797:1:1"},{"name":"_3","nodeType":"YulIdentifier","src":"800:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"793:3:1"},"nodeType":"YulFunctionCall","src":"793:10:1"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"788:1:1"}]}]},"pre":{"nodeType":"YulBlock","src":"772:3:1","statements":[]},"src":"768:133:1"},{"body":{"nodeType":"YulBlock","src":"931:63:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"960:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"968:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"956:3:1"},"nodeType":"YulFunctionCall","src":"956:15:1"},{"name":"_3","nodeType":"YulIdentifier","src":"973:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"952:3:1"},"nodeType":"YulFunctionCall","src":"952:24:1"},{"name":"array","nodeType":"YulIdentifier","src":"978:5:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"945:6:1"},"nodeType":"YulFunctionCall","src":"945:39:1"},"nodeType":"YulExpressionStatement","src":"945:39:1"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"916:1:1"},{"name":"_1","nodeType":"YulIdentifier","src":"919:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"913:2:1"},"nodeType":"YulFunctionCall","src":"913:9:1"},"nodeType":"YulIf","src":"910:2:1"},{"nodeType":"YulAssignment","src":"1003:15:1","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1012:6:1"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1003:5:1"}]}]},"name":"abi_decode_t_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"201:6:1","type":""},{"name":"end","nodeType":"YulTypedName","src":"209:3:1","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"217:5:1","type":""}],"src":"161:863:1"},{"body":{"nodeType":"YulBlock","src":"1110:182:1","statements":[{"body":{"nodeType":"YulBlock","src":"1156:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1165:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"1173:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1158:6:1"},"nodeType":"YulFunctionCall","src":"1158:22:1"},"nodeType":"YulExpressionStatement","src":"1158:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1131:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"1140:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1127:3:1"},"nodeType":"YulFunctionCall","src":"1127:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"1152:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1123:3:1"},"nodeType":"YulFunctionCall","src":"1123:32:1"},"nodeType":"YulIf","src":"1120:2:1"},{"nodeType":"YulVariableDeclaration","src":"1191:29:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1210:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1204:5:1"},"nodeType":"YulFunctionCall","src":"1204:16:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1195:5:1","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1256:5:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1229:26:1"},"nodeType":"YulFunctionCall","src":"1229:33:1"},"nodeType":"YulExpressionStatement","src":"1229:33:1"},{"nodeType":"YulAssignment","src":"1271:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"1281:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1271:6:1"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1076:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1087:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1099:6:1","type":""}],"src":"1029:263:1"},{"body":{"nodeType":"YulBlock","src":"1378:113:1","statements":[{"body":{"nodeType":"YulBlock","src":"1424:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1433:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"1441:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1426:6:1"},"nodeType":"YulFunctionCall","src":"1426:22:1"},"nodeType":"YulExpressionStatement","src":"1426:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1399:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"1408:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1395:3:1"},"nodeType":"YulFunctionCall","src":"1395:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"1420:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1391:3:1"},"nodeType":"YulFunctionCall","src":"1391:32:1"},"nodeType":"YulIf","src":"1388:2:1"},{"nodeType":"YulAssignment","src":"1459:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1475:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1469:5:1"},"nodeType":"YulFunctionCall","src":"1469:16:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1459:6:1"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1344:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1355:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1367:6:1","type":""}],"src":"1297:194:1"},{"body":{"nodeType":"YulBlock","src":"1598:182:1","statements":[{"body":{"nodeType":"YulBlock","src":"1644:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1653:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"1661:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1646:6:1"},"nodeType":"YulFunctionCall","src":"1646:22:1"},"nodeType":"YulExpressionStatement","src":"1646:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1619:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"1628:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1615:3:1"},"nodeType":"YulFunctionCall","src":"1615:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"1640:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1611:3:1"},"nodeType":"YulFunctionCall","src":"1611:32:1"},"nodeType":"YulIf","src":"1608:2:1"},{"nodeType":"YulVariableDeclaration","src":"1679:29:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1698:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1692:5:1"},"nodeType":"YulFunctionCall","src":"1692:16:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1683:5:1","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1744:5:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1717:26:1"},"nodeType":"YulFunctionCall","src":"1717:33:1"},"nodeType":"YulExpressionStatement","src":"1717:33:1"},{"nodeType":"YulAssignment","src":"1759:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"1769:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1759:6:1"}]}]},"name":"abi_decode_tuple_t_contract$_ILendingPool_$4366_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1564:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1575:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1587:6:1","type":""}],"src":"1496:284:1"},{"body":{"nodeType":"YulBlock","src":"2082:941:1","statements":[{"body":{"nodeType":"YulBlock","src":"2129:26:1","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2138:6:1"},{"name":"value4","nodeType":"YulIdentifier","src":"2146:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2131:6:1"},"nodeType":"YulFunctionCall","src":"2131:22:1"},"nodeType":"YulExpressionStatement","src":"2131:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2103:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"2112:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2099:3:1"},"nodeType":"YulFunctionCall","src":"2099:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"2124:3:1","type":"","value":"320"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2095:3:1"},"nodeType":"YulFunctionCall","src":"2095:33:1"},"nodeType":"YulIf","src":"2092:2:1"},{"nodeType":"YulAssignment","src":"2164:52:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2206:9:1"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2174:31:1"},"nodeType":"YulFunctionCall","src":"2174:42:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2164:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"2225:39:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2249:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2260:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2245:3:1"},"nodeType":"YulFunctionCall","src":"2245:18:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2239:5:1"},"nodeType":"YulFunctionCall","src":"2239:25:1"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2229:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2273:28:1","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2291:2:1","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2295:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2287:3:1"},"nodeType":"YulFunctionCall","src":"2287:10:1"},{"kind":"number","nodeType":"YulLiteral","src":"2299:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2283:3:1"},"nodeType":"YulFunctionCall","src":"2283:18:1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2277:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"2328:26:1","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2337:6:1"},{"name":"value4","nodeType":"YulIdentifier","src":"2345:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2330:6:1"},"nodeType":"YulFunctionCall","src":"2330:22:1"},"nodeType":"YulExpressionStatement","src":"2330:22:1"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2316:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"2324:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2313:2:1"},"nodeType":"YulFunctionCall","src":"2313:14:1"},"nodeType":"YulIf","src":"2310:2:1"},{"nodeType":"YulAssignment","src":"2363:73:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2408:9:1"},{"name":"offset","nodeType":"YulIdentifier","src":"2419:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2404:3:1"},"nodeType":"YulFunctionCall","src":"2404:22:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2428:7:1"}],"functionName":{"name":"abi_decode_t_string_fromMemory","nodeType":"YulIdentifier","src":"2373:30:1"},"nodeType":"YulFunctionCall","src":"2373:63:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2363:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"2445:41:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2471:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2482:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2467:3:1"},"nodeType":"YulFunctionCall","src":"2467:18:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2461:5:1"},"nodeType":"YulFunctionCall","src":"2461:25:1"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"2449:8:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"2515:26:1","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2524:6:1"},{"name":"value4","nodeType":"YulIdentifier","src":"2532:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2517:6:1"},"nodeType":"YulFunctionCall","src":"2517:22:1"},"nodeType":"YulExpressionStatement","src":"2517:22:1"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"2501:8:1"},{"name":"_1","nodeType":"YulIdentifier","src":"2511:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2498:2:1"},"nodeType":"YulFunctionCall","src":"2498:16:1"},"nodeType":"YulIf","src":"2495:2:1"},{"nodeType":"YulAssignment","src":"2550:75:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2595:9:1"},{"name":"offset_1","nodeType":"YulIdentifier","src":"2606:8:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2591:3:1"},"nodeType":"YulFunctionCall","src":"2591:24:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2617:7:1"}],"functionName":{"name":"abi_decode_t_string_fromMemory","nodeType":"YulIdentifier","src":"2560:30:1"},"nodeType":"YulFunctionCall","src":"2560:65:1"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2550:6:1"}]},{"nodeType":"YulAssignment","src":"2634:61:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2680:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2691:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2676:3:1"},"nodeType":"YulFunctionCall","src":"2676:18:1"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2644:31:1"},"nodeType":"YulFunctionCall","src":"2644:51:1"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2634:6:1"}]},{"nodeType":"YulAssignment","src":"2704:62:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2750:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2761:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2746:3:1"},"nodeType":"YulFunctionCall","src":"2746:19:1"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2714:31:1"},"nodeType":"YulFunctionCall","src":"2714:52:1"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2704:6:1"}]},{"nodeType":"YulAssignment","src":"2775:36:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2795:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2806:3:1","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2791:3:1"},"nodeType":"YulFunctionCall","src":"2791:19:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2785:5:1"},"nodeType":"YulFunctionCall","src":"2785:26:1"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2775:6:1"}]},{"nodeType":"YulAssignment","src":"2820:36:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2851:3:1","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:1"},"nodeType":"YulFunctionCall","src":"2836:19:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2830:5:1"},"nodeType":"YulFunctionCall","src":"2830:26:1"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"2820:6:1"}]},{"nodeType":"YulAssignment","src":"2865:36:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2885:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2896:3:1","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2881:3:1"},"nodeType":"YulFunctionCall","src":"2881:19:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2875:5:1"},"nodeType":"YulFunctionCall","src":"2875:26:1"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"2865:6:1"}]},{"nodeType":"YulAssignment","src":"2910:36:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2930:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2941:3:1","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2926:3:1"},"nodeType":"YulFunctionCall","src":"2926:19:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2920:5:1"},"nodeType":"YulFunctionCall","src":"2920:26:1"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"2910:6:1"}]},{"nodeType":"YulAssignment","src":"2955:62:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3001:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3012:3:1","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2997:3:1"},"nodeType":"YulFunctionCall","src":"2997:19:1"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2965:31:1"},"nodeType":"YulFunctionCall","src":"2965:52:1"},"variableNames":[{"name":"value9","nodeType":"YulIdentifier","src":"2955:6:1"}]}]},"name":"abi_decode_tuple_t_contract$_IVault_$9483t_string_memory_ptrt_string_memory_ptrt_contract$_IERC20_$486t_contract$_IERC20_$486t_uint256t_uint256t_uint256t_uint256t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1976:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1987:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1999:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2007:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2015:6:1","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2023:6:1","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2031:6:1","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2039:6:1","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2047:6:1","type":""},{"name":"value7","nodeType":"YulTypedName","src":"2055:6:1","type":""},{"name":"value8","nodeType":"YulTypedName","src":"2063:6:1","type":""},{"name":"value9","nodeType":"YulTypedName","src":"2071:6:1","type":""}],"src":"1785:1238:1"},{"body":{"nodeType":"YulBlock","src":"3107:214:1","statements":[{"body":{"nodeType":"YulBlock","src":"3153:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3162:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"3170:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3155:6:1"},"nodeType":"YulFunctionCall","src":"3155:22:1"},"nodeType":"YulExpressionStatement","src":"3155:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3128:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"3137:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3124:3:1"},"nodeType":"YulFunctionCall","src":"3124:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"3149:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3120:3:1"},"nodeType":"YulFunctionCall","src":"3120:32:1"},"nodeType":"YulIf","src":"3117:2:1"},{"nodeType":"YulVariableDeclaration","src":"3188:29:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3207:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3201:5:1"},"nodeType":"YulFunctionCall","src":"3201:16:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3192:5:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"3265:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3274:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"3282:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3267:6:1"},"nodeType":"YulFunctionCall","src":"3267:22:1"},"nodeType":"YulExpressionStatement","src":"3267:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3239:5:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3250:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"3257:4:1","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3246:3:1"},"nodeType":"YulFunctionCall","src":"3246:16:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3236:2:1"},"nodeType":"YulFunctionCall","src":"3236:27:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3229:6:1"},"nodeType":"YulFunctionCall","src":"3229:35:1"},"nodeType":"YulIf","src":"3226:2:1"},{"nodeType":"YulAssignment","src":"3300:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"3310:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3300:6:1"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3073:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3084:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3096:6:1","type":""}],"src":"3028:293:1"},{"body":{"nodeType":"YulBlock","src":"3597:1023:1","statements":[{"nodeType":"YulVariableDeclaration","src":"3607:32:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3625:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3636:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3621:3:1"},"nodeType":"YulFunctionCall","src":"3621:18:1"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"3611:6:1","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3655:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"3666:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3648:6:1"},"nodeType":"YulFunctionCall","src":"3648:25:1"},"nodeType":"YulExpressionStatement","src":"3648:25:1"},{"nodeType":"YulVariableDeclaration","src":"3682:12:1","value":{"kind":"number","nodeType":"YulLiteral","src":"3692:2:1","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3686:2:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3714:9:1"},{"name":"_1","nodeType":"YulIdentifier","src":"3725:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3710:3:1"},"nodeType":"YulFunctionCall","src":"3710:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"3730:2:1","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3703:6:1"},"nodeType":"YulFunctionCall","src":"3703:30:1"},"nodeType":"YulExpressionStatement","src":"3703:30:1"},{"nodeType":"YulVariableDeclaration","src":"3742:17:1","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"3753:6:1"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"3746:3:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3768:27:1","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3788:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3782:5:1"},"nodeType":"YulFunctionCall","src":"3782:13:1"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3772:6:1","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"3811:6:1"},{"name":"length","nodeType":"YulIdentifier","src":"3819:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3804:6:1"},"nodeType":"YulFunctionCall","src":"3804:22:1"},"nodeType":"YulExpressionStatement","src":"3804:22:1"},{"nodeType":"YulAssignment","src":"3835:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3846:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3857:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3842:3:1"},"nodeType":"YulFunctionCall","src":"3842:19:1"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3835:3:1"}]},{"nodeType":"YulVariableDeclaration","src":"3870:29:1","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3888:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"3896:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3884:3:1"},"nodeType":"YulFunctionCall","src":"3884:15:1"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3874:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3908:13:1","value":{"name":"tail","nodeType":"YulIdentifier","src":"3917:4:1"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3912:1:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"3979:146:1","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4000:3:1"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4015:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4009:5:1"},"nodeType":"YulFunctionCall","src":"4009:13:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4032:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4037:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4028:3:1"},"nodeType":"YulFunctionCall","src":"4028:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"4041:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4024:3:1"},"nodeType":"YulFunctionCall","src":"4024:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4005:3:1"},"nodeType":"YulFunctionCall","src":"4005:39:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3993:6:1"},"nodeType":"YulFunctionCall","src":"3993:52:1"},"nodeType":"YulExpressionStatement","src":"3993:52:1"},{"nodeType":"YulAssignment","src":"4058:19:1","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4069:3:1"},{"name":"_1","nodeType":"YulIdentifier","src":"4074:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4065:3:1"},"nodeType":"YulFunctionCall","src":"4065:12:1"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4058:3:1"}]},{"nodeType":"YulAssignment","src":"4090:25:1","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4104:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"4112:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4100:3:1"},"nodeType":"YulFunctionCall","src":"4100:15:1"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4090:6:1"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3941:1:1"},{"name":"length","nodeType":"YulIdentifier","src":"3944:6:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3938:2:1"},"nodeType":"YulFunctionCall","src":"3938:13:1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3952:18:1","statements":[{"nodeType":"YulAssignment","src":"3954:14:1","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3963:1:1"},{"kind":"number","nodeType":"YulLiteral","src":"3966:1:1","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3959:3:1"},"nodeType":"YulFunctionCall","src":"3959:9:1"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3954:1:1"}]}]},"pre":{"nodeType":"YulBlock","src":"3934:3:1","statements":[]},"src":"3930:195:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4145:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4156:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4141:3:1"},"nodeType":"YulFunctionCall","src":"4141:18:1"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4165:3:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"4170:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4161:3:1"},"nodeType":"YulFunctionCall","src":"4161:19:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4134:6:1"},"nodeType":"YulFunctionCall","src":"4134:47:1"},"nodeType":"YulExpressionStatement","src":"4134:47:1"},{"nodeType":"YulVariableDeclaration","src":"4190:16:1","value":{"name":"pos","nodeType":"YulIdentifier","src":"4203:3:1"},"variables":[{"name":"pos_1","nodeType":"YulTypedName","src":"4194:5:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4215:29:1","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4237:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4231:5:1"},"nodeType":"YulFunctionCall","src":"4231:13:1"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"4219:8:1","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4260:3:1"},{"name":"length_1","nodeType":"YulIdentifier","src":"4265:8:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4253:6:1"},"nodeType":"YulFunctionCall","src":"4253:21:1"},"nodeType":"YulExpressionStatement","src":"4253:21:1"},{"nodeType":"YulAssignment","src":"4283:21:1","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4296:3:1"},{"name":"_1","nodeType":"YulIdentifier","src":"4301:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4292:3:1"},"nodeType":"YulFunctionCall","src":"4292:12:1"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"4283:5:1"}]},{"nodeType":"YulVariableDeclaration","src":"4313:31:1","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4333:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"4341:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4329:3:1"},"nodeType":"YulFunctionCall","src":"4329:15:1"},"variables":[{"name":"srcPtr_1","nodeType":"YulTypedName","src":"4317:8:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4353:15:1","value":{"name":"tail","nodeType":"YulIdentifier","src":"4364:4:1"},"variables":[{"name":"i_1","nodeType":"YulTypedName","src":"4357:3:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"4434:158:1","statements":[{"expression":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"4455:5:1"},{"arguments":[{"arguments":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"4472:8:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4466:5:1"},"nodeType":"YulFunctionCall","src":"4466:15:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4491:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4496:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4487:3:1"},"nodeType":"YulFunctionCall","src":"4487:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"4500:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4483:3:1"},"nodeType":"YulFunctionCall","src":"4483:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4462:3:1"},"nodeType":"YulFunctionCall","src":"4462:41:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4448:6:1"},"nodeType":"YulFunctionCall","src":"4448:56:1"},"nodeType":"YulExpressionStatement","src":"4448:56:1"},{"nodeType":"YulAssignment","src":"4517:23:1","value":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"4530:5:1"},{"name":"_1","nodeType":"YulIdentifier","src":"4537:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4526:3:1"},"nodeType":"YulFunctionCall","src":"4526:14:1"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"4517:5:1"}]},{"nodeType":"YulAssignment","src":"4553:29:1","value":{"arguments":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"4569:8:1"},{"name":"_1","nodeType":"YulIdentifier","src":"4579:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4565:3:1"},"nodeType":"YulFunctionCall","src":"4565:17:1"},"variableNames":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"4553:8:1"}]}]},"condition":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"4388:3:1"},{"name":"length_1","nodeType":"YulIdentifier","src":"4393:8:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4385:2:1"},"nodeType":"YulFunctionCall","src":"4385:17:1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4403:22:1","statements":[{"nodeType":"YulAssignment","src":"4405:18:1","value":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"4416:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"4421:1:1","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4412:3:1"},"nodeType":"YulFunctionCall","src":"4412:11:1"},"variableNames":[{"name":"i_1","nodeType":"YulIdentifier","src":"4405:3:1"}]}]},"pre":{"nodeType":"YulBlock","src":"4381:3:1","statements":[]},"src":"4377:215:1"},{"nodeType":"YulAssignment","src":"4601:13:1","value":{"name":"pos_1","nodeType":"YulIdentifier","src":"4609:5:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4601:4:1"}]}]},"name":"abi_encode_tuple_t_bytes32_t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__to_t_bytes32_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3550:9:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3561:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3569:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3577:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3588:4:1","type":""}],"src":"3326:1294:1"},{"body":{"nodeType":"YulBlock","src":"4747:123:1","statements":[{"nodeType":"YulAssignment","src":"4757:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4769:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4780:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4765:3:1"},"nodeType":"YulFunctionCall","src":"4765:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4757:4:1"}]},{"body":{"nodeType":"YulBlock","src":"4817:13:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"4819:7:1"},"nodeType":"YulFunctionCall","src":"4819:9:1"},"nodeType":"YulExpressionStatement","src":"4819:9:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4805:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"4813:1:1","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4802:2:1"},"nodeType":"YulFunctionCall","src":"4802:13:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4795:6:1"},"nodeType":"YulFunctionCall","src":"4795:21:1"},"nodeType":"YulIf","src":"4792:2:1"},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4846:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"4857:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4839:6:1"},"nodeType":"YulFunctionCall","src":"4839:25:1"},"nodeType":"YulExpressionStatement","src":"4839:25:1"}]},"name":"abi_encode_tuple_t_enum$_PoolSpecialization_$9142__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4716:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4727:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4738:4:1","type":""}],"src":"4625:245:1"},{"body":{"nodeType":"YulBlock","src":"4976:76:1","statements":[{"nodeType":"YulAssignment","src":"4986:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4998:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5009:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4994:3:1"},"nodeType":"YulFunctionCall","src":"4994:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4986:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5028:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"5039:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5021:6:1"},"nodeType":"YulFunctionCall","src":"5021:25:1"},"nodeType":"YulExpressionStatement","src":"5021:25:1"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4945:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4956:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4967:4:1","type":""}],"src":"4875:177:1"},{"body":{"nodeType":"YulBlock","src":"5186:119:1","statements":[{"nodeType":"YulAssignment","src":"5196:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5208:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5219:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:1"},"nodeType":"YulFunctionCall","src":"5204:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5196:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5238:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"5249:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5231:6:1"},"nodeType":"YulFunctionCall","src":"5231:25:1"},"nodeType":"YulExpressionStatement","src":"5231:25:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5276:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5287:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5272:3:1"},"nodeType":"YulFunctionCall","src":"5272:18:1"},{"name":"value1","nodeType":"YulIdentifier","src":"5292:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5265:6:1"},"nodeType":"YulFunctionCall","src":"5265:34:1"},"nodeType":"YulExpressionStatement","src":"5265:34:1"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5147:9:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5158:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5166:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5177:4:1","type":""}],"src":"5057:248:1"},{"body":{"nodeType":"YulBlock","src":"5357:86:1","statements":[{"body":{"nodeType":"YulBlock","src":"5421:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5430:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5433:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5423:6:1"},"nodeType":"YulFunctionCall","src":"5423:12:1"},"nodeType":"YulExpressionStatement","src":"5423:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5380:5:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5391:5:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5406:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5411:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5402:3:1"},"nodeType":"YulFunctionCall","src":"5402:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"5415:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5398:3:1"},"nodeType":"YulFunctionCall","src":"5398:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5387:3:1"},"nodeType":"YulFunctionCall","src":"5387:31:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5377:2:1"},"nodeType":"YulFunctionCall","src":"5377:42:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5370:6:1"},"nodeType":"YulFunctionCall","src":"5370:50:1"},"nodeType":"YulIf","src":"5367:2:1"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5346:5:1","type":""}],"src":"5310:133:1"}]},"contents":"{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n    function abi_decode_t_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { invalid() }\n        let memPtr := mload(64)\n        let _3 := 0x20\n        let newFreePtr := add(add(memPtr, and(add(_1, 0x1f), not(31))), _3)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), _3), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _3) }\n        {\n            mstore(add(add(memPtr, i), _3), mload(add(add(offset, i), _3)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _3), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_contract$_ILendingPool_$4366_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IVault_$9483t_string_memory_ptrt_string_memory_ptrt_contract$_IERC20_$486t_contract$_IERC20_$486t_uint256t_uint256t_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9\n    {\n        if slt(sub(dataEnd, headStart), 320) { revert(value4, value4) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value4, value4) }\n        value1 := abi_decode_t_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value2 := abi_decode_t_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value3 := abi_decode_t_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_t_address_fromMemory(add(headStart, 128))\n        value5 := mload(add(headStart, 160))\n        value6 := mload(add(headStart, 192))\n        value7 := mload(add(headStart, 224))\n        value8 := mload(add(headStart, 256))\n        value9 := abi_decode_t_address_fromMemory(add(headStart, 288))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32_t_array$_t_contract$_IERC20_$486_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__to_t_bytes32_t_array$_t_address_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 96)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), 96)\n        let pos := tail_1\n        let length := mload(value1)\n        mstore(tail_1, length)\n        pos := add(headStart, 128)\n        let srcPtr := add(value1, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, 64), sub(pos, headStart))\n        let pos_1 := pos\n        let length_1 := mload(value2)\n        mstore(pos, length_1)\n        pos_1 := add(pos, _1)\n        let srcPtr_1 := add(value2, _1)\n        let i_1 := tail\n        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n        {\n            mstore(pos_1, and(mload(srcPtr_1), sub(shl(160, 1), 1)))\n            pos_1 := add(pos_1, _1)\n            srcPtr_1 := add(srcPtr_1, _1)\n        }\n        tail := pos_1\n    }\n    function abi_encode_tuple_t_enum$_PoolSpecialization_$9142__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 3)) { invalid() }\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":1,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6102c06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120523480156200003757600080fd5b5060405162005076380380620050768339810160408190526200005a9162000bbe565b898989898989898989898960008a8a620000768b8b30620004e1565b6040805160038082526080820190925290602082016060803683370190505089898989828289898d8280604051806040016040528060018152602001603160f81b81525085858a336001600160a01b031660001b806080818152505050806001600160a01b031660a0816001600160a01b031660601b815250505081600390805190602001906200010992919062000a2b565b5080516200011f90600490602084019062000a2b565b505060058054601260ff1990911617905550815160209283012060c052805191012060e052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6101005260601b6001600160601b03191661014052506200019290506276a700831115610194620005b0565b620001a662278d00821115610195620005b0565b4290910161016081905201610180528551620001c8906002111560c8620005b0565b620001e2620001d6620005c5565b8751111560c9620005b0565b620001f886620005ca60201b620013761760201c565b6200020384620005d6565b6040516309b2760f60e01b81526000906001600160a01b038c16906309b2760f9062000234908d9060040162000d56565b602060405180830381600087803b1580156200024f57600080fd5b505af115801562000264573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200028a919062000ba5565b604051633354e3e960e11b81529091506001600160a01b038c16906366a9c7d290620002bf9084908b908b9060040162000cbc565b600060405180830381600087803b158015620002da57600080fd5b505af1158015620002ef573d6000803e3d6000fd5b50505050806101a081815250505050505050505050505050866001600160a01b03166101c0816001600160a01b031660601b81525050856001600160a01b03166101e0816001600160a01b031660601b8152505060008060006200035b8a8a306200066260201b60201c565b610200819052610220839052610240829052919450925090506200037f8a62000758565b610260526200038e8962000758565b610280526000620003a18b828b6200082c565b5050505050505050505050505050856001600160a01b031663b4dcfc776040518163ffffffff1660e01b815260040160206040518083038186803b158015620003e957600080fd5b505afa158015620003fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000424919062000b7f565b6001600160a01b03166102a0816001600160a01b031660601b81525050620004d1866001600160a01b0316634800d97f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200047f57600080fd5b505afa15801562000494573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004ba919062000b7f565b6001600160a01b03898116911614610208620005b0565b5050505050505050505062000d98565b606060008080620004f487878762000662565b60408051600380825260808201909252939650919450925060208201606080368337019050509350868484815181106200052a57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050858483815181106200055857fe5b60200260200101906001600160a01b031690816001600160a01b031681525050848482815181106200058657fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505050509392505050565b81620005c157620005c181620008da565b5050565b600390565b80620005c1816200092d565b620005eb64e8d4a5100082101560cb620005b0565b6200060367016345785d8a000082111560ca620005b0565b620006228160c0600854620009ba60201b62001380179092919060201c565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906200065790839062000d6b565b60405180910390a150565b6000806000846001600160a01b0316866001600160a01b03161015620006eb57836001600160a01b0316856001600160a01b03161015620006ae5750600091506001905060026200074f565b836001600160a01b0316866001600160a01b03161015620006da5750600091506002905060016200074f565b50600191506002905060006200074f565b846001600160a01b0316846001600160a01b03161015620007175750600291506001905060006200074f565b856001600160a01b0316846001600160a01b03161015620007435750600291506000905060016200074f565b50600191506000905060025b93509350939050565b60006001600160a01b0382163014156200077c5750670de0b6b3a764000062000827565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015620007b857600080fd5b505afa158015620007cd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007f3919062000c99565b60ff169050600062000812601283620009cf60201b620013961760201c565b905080600a0a670de0b6b3a764000002925050505b919050565b6200083d8183111561014c620005b0565b620008556001600160601b0382111561014d620005b0565b6200089062000871826060620009e760201b620013ac1760201c565b62000889846000620009e760201b620013ac1760201c565b17620009eb565b826001600160a01b03167fd0e27a0d0c2cb09280fa5e4487315455b32afcdcf012dc35b6ef2a0e3c4d12808383604051620008cd92919062000d74565b60405180910390a2505050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6002815110156200093e57620009b7565b6000816000815181106200094e57fe5b602002602001015190506000600190505b8251811015620009b45760008382815181106200097857fe5b60200260200101519050620009a9816001600160a01b0316846001600160a01b0316106065620005b060201b60201c565b91506001016200095f565b50505b50565b6001600160401b03811b1992909216911b1790565b6000620009e1838311156001620005b0565b50900390565b1b90565b62000a0a81600060085462000a1060201b620013b0179092919060201c565b60085550565b6001600160c01b03828116821b90821b198416179392505050565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928262000a63576000855562000aae565b82601f1062000a7e57805160ff191683800117855562000aae565b8280016001018555821562000aae579182015b8281111562000aae57825182559160200191906001019062000a91565b5062000abc92915062000ac0565b5090565b5b8082111562000abc576000815560010162000ac1565b8051620008278162000d82565b600082601f83011262000af5578081fd5b81516001600160401b038082111562000b0a57fe5b6040516020601f8401601f191682018101838111838210171562000b2a57fe5b604052838252858401810187101562000b41578485fd5b8492505b8383101562000b64578583018101518284018201529182019162000b45565b8383111562000b7557848185840101525b5095945050505050565b60006020828403121562000b91578081fd5b815162000b9e8162000d82565b9392505050565b60006020828403121562000bb7578081fd5b5051919050565b6000806000806000806000806000806101408b8d03121562000bde578586fd5b62000be98b62000ad7565b60208c0151909a506001600160401b038082111562000c06578788fd5b62000c148e838f0162000ae4565b9a5060408d015191508082111562000c2a578788fd5b5062000c398d828e0162000ae4565b98505062000c4a60608c0162000ad7565b965062000c5a60808c0162000ad7565b955060a08b0151945060c08b0151935060e08b015192506101008b0151915062000c886101208c0162000ad7565b90509295989b9194979a5092959850565b60006020828403121562000cab578081fd5b815160ff8116811462000b9e578182fd5b60006060820185835260206060818501528186518084526080860191508288019350845b8181101562000d075784516001600160a01b03168352938301939183019160010162000ce0565b505084810360408601528551808252908201925081860190845b8181101562000d485782516001600160a01b03168552938301939183019160010162000d21565b509298975050505050505050565b602081016003831062000d6557fe5b91905290565b90815260200190565b918252602082015260400190565b6001600160a01b0381168114620009b757600080fd5b60805160a05160601c60c05160e05161010051610120516101405160601c61016051610180516101a0516101c05160601c6101e05160601c61020051610220516102405161026051610280516102a05160601c61410462000f72600039806122e052508061147a525080611416528061222c5250806107225280610ab152806114a252806125555280612705528061285c52806129ce5280612b6a5280612cc15250806108b25280610a7752806114385280611ab55280612521528061268a52806126d152806127e65280612828528061299a5280612af45280612b365280612c4b5280612c8d525080610af25280610cbb5280610da252806112f752806114e35280612171528061258c528061273c52806128935280612a055280612ba15280612cf85280612edd5280612f1552508061134a52806115fe52806116ca528061225252806124d6528061261652806129505280612a805250806108d65280610f2352806115b552806116815280611aeb52806121f1528061249752806125b8528061277252806129115280612a315280612bd7525080610853525080611874525080611850525080610e62525080610fd952508061197a5250806119bc52508061199b525080610e3e525080610dc852506141046000f3fe608060405234801561001057600080fd5b50600436106102535760003560e01c8063679aefce1161014657806395d89b41116100c3578063d505accf11610087578063d505accf146104b2578063d5c096c4146104c5578063dd62ed3e146104d8578063de82cd34146104eb578063f174e241146104f3578063f5431aa8146104fb57610253565b806395d89b41146104695780639f11080e14610471578063a457c2d714610484578063a9059cbb14610497578063aaabadc5146104aa57610253565b806382687a561161010a57806382687a561461042b578063851c1bb31461043357806387ec681714610446578063893d20e8146104595780638d928af81461046157610253565b8063679aefce146103d457806370a08231146103dc57806374f3b009146103ef5780637ecebe00146104105780638129fc1c1461042357610253565b80633644e515116101d45780634de046d5116101985780634de046d51461036d57806350dd6ed91461038257806355c67628146103955780636028bfd41461039d57806363fe3b56146103be57610253565b80633644e5151461032f57806338e9922e1461033757806338fff2d01461034a57806339509351146103525780634d64cd741461036557610253565b806318160ddd1161021b57806318160ddd146102d35780631c0de051146102db5780631dd746ea146102f257806323b872dd14610307578063313ce5671461031a57610253565b806301ec954a1461025857806306fdde0314610281578063095ea7b31461029657806316b8d6ff146102b657806316c38b3c146102be575b600080fd5b61026b610266366004613ba6565b610503565b6040516102789190613e8e565b60405180910390f35b610289610673565b6040516102789190614021565b6102a96102a43660046138fd565b610709565b6040516102789190613e6b565b61026b610720565b6102d16102cc3660046139f4565b610744565b005b61026b610758565b6102e361075e565b60405161027893929190613e76565b6102fa610787565b6040516102789190613e33565b6102a9610315366004613848565b610796565b61032261080c565b604051610278919061405b565b61026b610815565b6102d1610345366004613cc0565b61081f565b61026b610851565b6102a96103603660046138fd565b610875565b61026b6108b0565b6103756108d4565b6040516102789190613e1f565b6102d1610390366004613b13565b6108f8565b61026b610916565b6103b06103ab366004613a2c565b610927565b604051610278929190614034565b6103c661095e565b60405161027892919061404d565b61026b61098c565b61026b6103ea3660046137f4565b610b3a565b6104026103fd366004613a2c565b610b59565b604051610278929190613e46565b61026b61041e3660046137f4565b610bd7565b6102d1610bf2565b61026b610da0565b61026b610441366004613acf565b610dc4565b6103b0610454366004613a2c565b610e16565b610375610e3c565b610375610e60565b610289610e84565b6102d161047f366004613cf0565b610ee5565b6102a96104923660046138fd565b610f4f565b6102a96104a53660046138fd565b610f8d565b610375610f9a565b6102d16104c0366004613888565b610fa4565b6104026104d3366004613a2c565b6110ed565b61026b6104e6366004613810565b61121d565b61026b61125a565b610375611348565b61026b61136c565b60008460800151610530610515610e60565b6001600160a01b0316336001600160a01b03161460cd6113cb565b61054561053b610851565b82146101f46113cb565b61054d6113d9565b6105676003851080156105605750600384105b60646113cb565b60006105716113ee565b905061057d868261151c565b60008061058861095e565b91509150600060405180606001604052806105a1610916565b815260208101859052604001839052905060008a5160018111156105c157fe5b1415610625576105e88a60600151858a815181106105db57fe5b602002602001015161157d565b60608b015260006105fa8b8b84611589565b905061061981868a8151811061060c57fe5b6020026020010151611650565b9650505050505061066a565b6106398a606001518589815181106105db57fe5b60608b0152600061064b8b8b8461165c565b905061061981868b8151811061065d57fe5b6020026020010151611711565b50949350505050565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ff5780601f106106d4576101008083540402835291602001916106ff565b820191906000526020600020905b8154815290600101906020018083116106e257829003601f168201915b5050505050905090565b600061071633848461171d565b5060015b92915050565b7f000000000000000000000000000000000000000000000000000000000000000090565b61074c611785565b610755816117b3565b50565b60025490565b600080600061076b611831565b15925061077661184e565b9150610780611872565b9050909192565b60606107916113ee565b905090565b6000806107a3853361121d565b90506107c7336001600160a01b03871614806107bf5750838210155b61019e6113cb565b6107d2858585611896565b336001600160a01b038616148015906107ed57506000198114155b156107ff576107ff853385840361171d565b60019150505b9392505050565b60055460ff1690565b6000610791611976565b60008061082a61095e565b9150915061084361083b8383611a13565b61014f6113cb565b61084c83611b2b565b505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916107169185906108ab9086611b44565b61171d565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b610900611785565b6109086113d9565b6109128282611b56565b5050565b6008546000906107919060c0611c1d565b6000606061093d8651610938611c2b565b611c30565b61095289898989898989611c3d611ce1611d42565b97509795505050505050565b600080600061096b611e64565b9050610978816000611e6a565b9250610985816060611e6a565b9150509091565b600080610997610851565b905060006109a3610e60565b6001600160a01b031663f94d4668836040518263ffffffff1660e01b81526004016109ce9190613e8e565b60006040518083038186803b1580156109e657600080fd5b505afa1580156109fa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a229190810190613928565b50915050610a3781610a326113ee565b61151c565b600080610a4261095e565b9150915060006040518060600160405280610a5b610916565b81526020018481526020018381525090506000610ae7610aae867f000000000000000000000000000000000000000000000000000000000000000081518110610aa057fe5b602002602001015184611e7c565b867f000000000000000000000000000000000000000000000000000000000000000081518110610ada57fe5b6020026020010151611edd565b9050610b2f610b28867f000000000000000000000000000000000000000000000000000000000000000081518110610b1b57fe5b6020026020010151611ee9565b8290611ef5565b965050505050505090565b6001600160a01b0381166000908152602081905260409020545b919050565b60608088610b68610515610e60565b610b7361053b610851565b6000610b7d6113ee565b9050610b89888261151c565b6000806000610b9e8e8e8e8e8e8e8a8f611c3d565b925092509250610bae8d84611f4c565b610bb88285611ce1565b610bc28185611ce1565b909550935050505b5097509795505050505050565b6001600160a01b031660009081526006602052604090205490565b6000610bfc610851565b90506000610c08610e60565b6001600160a01b031663f94d4668836040518263ffffffff1660e01b8152600401610c339190613e8e565b60006040518083038186803b158015610c4b57600080fd5b505afa158015610c5f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c879190810190613928565b50506040805160038082526080820190925291925060009190602082016060803683370190505090506001600160701b03817f000000000000000000000000000000000000000000000000000000000000000081518110610ce457fe5b60200260200101818152505060006040518060800160405280610d0685611f56565b8152602001838152602001604051806020016040528060008152508152602001600015158152509050610d37610e60565b6001600160a01b031663b95cac28853030856040518563ffffffff1660e01b8152600401610d689493929190613eb6565b600060405180830381600087803b158015610d8257600080fd5b505af1158015610d96573d6000803e3d6000fd5b5050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b60007f000000000000000000000000000000000000000000000000000000000000000082604051602001610df9929190613ddc565b604051602081830303815290604052805190602001209050919050565b60006060610e278651610938611c2b565b61095289898989898989611f59611f77611d42565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ff5780601f106106d4576101008083540402835291602001916106ff565b610eed611785565b600080610ef861095e565b91509150610f0961083b8383611a13565b610f1e610f168585611a13565b6101576113cb565b610f497f00000000000000000000000000000000000000000000000000000000000000008585611fd8565b50505050565b600080610f5c338561121d565b9050808310610f7657610f713385600061171d565b610f83565b610f83338585840361171d565b5060019392505050565b6000610716338484611896565b6000610791612069565b610fb28442111560d16113cb565b6001600160a01b0387166000908152600660209081526040808320549051909291611009917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d9101613f73565b604051602081830303815290604052805190602001209050600061102c826120e3565b90506000600182888888604051600081526020016040526040516110539493929190614003565b6020604051602081039080840390855afa158015611075573d6000803e3d6000fd5b5050604051601f19015191506110b790506001600160a01b038216158015906110af57508b6001600160a01b0316826001600160a01b0316145b6101f86113cb565b6001600160a01b038b1660009081526006602052604090206001850190556110e08b8b8b61171d565b5050505050505050505050565b606080886110fc610515610e60565b61110761053b610851565b60006111116113ee565b905061111b610758565b6111cd5760008061112f8d8d8d868b6120ff565b9150915061114861113e6121b3565b83101560cc6113cb565b61115a60006111556121b3565b6121b8565b61116d8b6111666121b3565b84036121b8565b6111778184611f77565b80611180611c2b565b67ffffffffffffffff8111801561119657600080fd5b506040519080825280602002602001820160405280156111c0578160200160208202803683370190505b5095509550505050610bca565b6111d7888261151c565b60008060006111ec8e8e8e8e8e8e8a8f611f59565b9250925092506111fc8c846121b8565b6112068285611f77565b6112108185611ce1565b9095509350610bca915050565b6000611227610e60565b6001600160a01b0316826001600160a01b03161415611249575060001961071a565b61125383836121c2565b905061071a565b600080611265610e60565b6001600160a01b031663f94d466861127b610851565b6040518263ffffffff1660e01b81526004016112979190613e8e565b60006040518083038186803b1580156112af57600080fd5b505afa1580156112c3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112eb9190810190613928565b509150506000611336827f00000000000000000000000000000000000000000000000000000000000000008151811061132057fe5b6020026020010151611331306121ed565b61157d565b9050611341816122c7565b9250505090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60006107916122db565b806109128161238e565b67ffffffffffffffff811b1992909216911b1790565b60006113a68383111560016113cb565b50900390565b1b90565b6001600160c01b03828116821b90821b198416179392505050565b816109125761091281612407565b6113ec6113e4611831565b6101926113cb565b565b60408051600380825260808201909252606091600091906020820184803683370190505090507f0000000000000000000000000000000000000000000000000000000000000000817f00000000000000000000000000000000000000000000000000000000000000008151811061146157fe5b60200260200101818152505061149f6114786122db565b7f00000000000000000000000000000000000000000000000000000000000000009061245a565b817f0000000000000000000000000000000000000000000000000000000000000000815181106114cb57fe5b602002602001018181525050670de0b6b3a7640000817f00000000000000000000000000000000000000000000000000000000000000008151811061150c57fe5b6020908102919091010152905090565b60005b611527611c2b565b81101561084c5761155e83828151811061153d57fe5b602002602001015183838151811061155157fe5b602002602001015161245a565b83828151811061156a57fe5b602090810291909101015260010161151f565b6000610805838361245a565b60208301516000906001600160a01b03163014156115b3576115ac848484612490565b9050610805565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031684602001516001600160a01b031614156115fc576115ac84848461260f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031684602001516001600160a01b03161415611645576115ac84848461276b565b610805610135612407565b600061080583836128c2565b60408301516000906001600160a01b031630141561167f576115ac84848461290a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031684604001516001600160a01b031614156116c8576115ac848484612a79565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031684604001516001600160a01b03161415611645576115ac848484612bd0565b60006108058383611ef5565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590611778908590613e8e565b60405180910390a3505050565b600061179c6000356001600160e01b031916610dc4565b90506107556117ab8233612d27565b6101916113cb565b80156117d3576117ce6117c461184e565b42106101936113cb565b6117e8565b6117e86117de611872565b42106101a96113cb565b6007805460ff19168215151790556040517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be6490611826908390613e6b565b60405180910390a150565b600061183b611872565b42118061079157505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6118ad6001600160a01b03841615156101986113cb565b6118c46001600160a01b03831615156101996113cb565b6118cf83838361084c565b6001600160a01b0383166000908152602081905260409020546118f590826101a0612e10565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546119249082611b44565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611778908590613e8e565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006119e3612e26565b306040516020016119f8959493929190613fa7565b60405160208183030381529060405280519060200120905090565b600080611a1e610851565b90506000611a2a610e60565b6001600160a01b031663f94d4668836040518263ffffffff1660e01b8152600401611a559190613e8e565b60006040518083038186803b158015611a6d57600080fd5b505afa158015611a81573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611aa99190810190613928565b509150506000611b0f827f000000000000000000000000000000000000000000000000000000000000000081518110611ade57fe5b60200260200101516113317f00000000000000000000000000000000000000000000000000000000000000006121ed565b9050858110158015611b215750848111155b9695505050505050565b611b33611785565b611b3b6113d9565b61075581612e2a565b600082820161080584821015836113cb565b6000611b60610851565b90506000611b6c610e60565b6001600160a01b031663b05f8e4883866040518363ffffffff1660e01b8152600401611b99929190613fec565b60806040518083038186803b158015611bb157600080fd5b505afa158015611bc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be99190613d11565b604051630639cdb560e21b81529094506001600160a01b03851693506318e736d49250610d68915085908790600401613fd3565b1c67ffffffffffffffff1690565b600390565b61091281831460676113cb565b60006060806000611c4d85612e95565b90506000818015611c5a57fe5b14611c6f57611c6a61014e612407565b611cd2565b611c77612eab565b611c818986612ebf565b9094509250611c8e611c2b565b67ffffffffffffffff81118015611ca457600080fd5b50604051908082528060200260200182016040528015611cce578160200160208202803683370190505b5091505b50985098509895505050505050565b60005b611cec611c2b565b81101561084c57611d23838281518110611d0257fe5b6020026020010151838381518110611d1657fe5b60200260200101516128c2565b838281518110611d2f57fe5b6020908102919091010152600101611ce4565b333014611e00576000306001600160a01b0316600036604051611d66929190613df4565b6000604051808303816000865af19150503d8060008114611da3576040519150601f19603f3d011682016040523d82523d6000602084013e611da8565b606091505b505090508060008114611db757fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b8114611de2573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b6000611e0a6113ee565b9050611e16878261151c565b600080611e2d8c8c8c8c8c8c898d8d63ffffffff16565b5091509150611e4081848663ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b60085490565b1c6bffffffffffffffffffffffff1690565b60008160200151831015611eb55781516020830151600091611ea1918690039061245a565b9050611ead8482611396565b91505061071a565b81604001518311611ec757508161071a565b81516040830151600091611ea19186039061245a565b60006108058383611b44565b6001600160701b030390565b6000611f0482151560046113cb565b82611f115750600061071a565b670de0b6b3a764000083810290611f3490858381611f2b57fe5b041460056113cb565b826001820381611f4057fe5b0460010191505061071a565b6109128282612f46565b90565b6000606080611f6961014e612407565b985098509895505050505050565b60005b611f82611c2b565b81101561084c57611fb9838281518110611f9857fe5b6020026020010151838381518110611fac57fe5b6020026020010151611ef5565b838281518110611fc557fe5b6020908102919091010152600101611f7a565b611fe78183111561014c6113cb565b6120026bffffffffffffffffffffffff82111561014d6113cb565b6120216120108260606113ac565b61201b8460006113ac565b17613002565b826001600160a01b03167fd0e27a0d0c2cb09280fa5e4487315455b32afcdcf012dc35b6ef2a0e3c4d1280838360405161205c92919061404d565b60405180910390a2505050565b6000612073610e60565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b1580156120ab57600080fd5b505afa1580156120bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107919190613af7565b60006120ed611976565b82604051602001610df9929190613e04565b6000606061210b6113d9565b6121226001600160a01b03871630146101566113cb565b6121396001600160a01b03861630146101566113cb565b604080516003808252608082019092526001600160701b039160009190602082016060803683370190505090506001600160701b03817f00000000000000000000000000000000000000000000000000000000000000008151811061219a57fe5b6020908102919091010152909890975095505050505050565b600090565b6109128282613017565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316141561225057507f0000000000000000000000000000000000000000000000000000000000000000610b54565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316141561229c576122956114786122db565b9050610b54565b6001600160a01b0382163014156122bc5750670de0b6b3a7640000610b54565b610b54610135612407565b600061071a826122d5610758565b90611396565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d15e00536123156108d4565b6040518263ffffffff1660e01b81526004016123319190613e1f565b60206040518083038186803b15801561234957600080fd5b505afa15801561235d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123819190613cd8565b633b9aca00900492915050565b60028151101561239d57610755565b6000816000815181106123ac57fe5b602002602001015190506000600190505b825181101561084c5760008382815181106123d457fe5b602002602001015190506123fd816001600160a01b0316846001600160a01b03161060656113cb565b91506001016123bd565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600082820261247e84158061247757508385838161247457fe5b04145b60036113cb565b670de0b6b3a764000090049392505050565b60006125167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685604001516001600160a01b0316148061250e57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685604001516001600160a01b0316145b6101356113cb565b6126078460600151847f00000000000000000000000000000000000000000000000000000000000000008151811061254a57fe5b6020026020010151857f00000000000000000000000000000000000000000000000000000000000000008151811061257e57fe5b60200260200101516125b5877f000000000000000000000000000000000000000000000000000000000000000081518110610b1b57fe5b867f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168a604001516001600160a01b0316146125fb576130a56125ff565b6131055b63ffffffff16565b949350505050565b600061266b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685604001516001600160a01b0316148061250e575060408501516001600160a01b031630146101356113cb565b60408401516001600160a01b031630146126c6576126c18460600151847f0000000000000000000000000000000000000000000000000000000000000000815181106126b357fe5b60200260200101518461316e565b612607565b6126078460600151847f0000000000000000000000000000000000000000000000000000000000000000815181106126fa57fe5b6020026020010151857f00000000000000000000000000000000000000000000000000000000000000008151811061272e57fe5b6020026020010151612765877f000000000000000000000000000000000000000000000000000000000000000081518110610b1b57fe5b8661319e565b60006127c77f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685604001516001600160a01b0316148061250e575060408501516001600160a01b031630146101356113cb565b60408401516001600160a01b0316301461281d576126c18460600151847f00000000000000000000000000000000000000000000000000000000000000008151811061280f57fe5b602002602001015184613204565b6126078460600151847f00000000000000000000000000000000000000000000000000000000000000008151811061285157fe5b6020026020010151857f00000000000000000000000000000000000000000000000000000000000000008151811061288557fe5b60200260200101516128bc877f000000000000000000000000000000000000000000000000000000000000000081518110610b1b57fe5b86613244565b60006128d182151560046113cb565b826128de5750600061071a565b670de0b6b3a7640000838102906128f890858381611f2b57fe5b82818161290157fe5b0491505061071a565b600061298f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685602001516001600160a01b0316148061250e57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685602001516001600160a01b0316146101356113cb565b6126078460600151847f0000000000000000000000000000000000000000000000000000000000000000815181106129c357fe5b6020026020010151857f0000000000000000000000000000000000000000000000000000000000000000815181106129f757fe5b6020026020010151612a2e877f000000000000000000000000000000000000000000000000000000000000000081518110610b1b57fe5b867f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168a602001516001600160a01b031614612a74576132ab6125ff565b613302565b6000612ad57f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685602001516001600160a01b0316148061250e575060208501516001600160a01b031630146101356113cb565b60208401516001600160a01b03163014612b2b576126c18460600151847f000000000000000000000000000000000000000000000000000000000000000081518110612b1d57fe5b60200260200101518461336c565b6126078460600151847f000000000000000000000000000000000000000000000000000000000000000081518110612b5f57fe5b6020026020010151857f000000000000000000000000000000000000000000000000000000000000000081518110612b9357fe5b6020026020010151612bca877f000000000000000000000000000000000000000000000000000000000000000081518110610b1b57fe5b86613396565b6000612c2c7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685602001516001600160a01b0316148061250e575060208501516001600160a01b031630146101356113cb565b60208401516001600160a01b03163014612c82576126c18460600151847f000000000000000000000000000000000000000000000000000000000000000081518110612c7457fe5b6020026020010151846133e5565b6126078460600151847f000000000000000000000000000000000000000000000000000000000000000081518110612cb657fe5b6020026020010151857f000000000000000000000000000000000000000000000000000000000000000081518110612cea57fe5b6020026020010151612d21877f000000000000000000000000000000000000000000000000000000000000000081518110610b1b57fe5b8661341a565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b612d46610e3c565b6001600160a01b031614158015612d615750612d618361346e565b15612d8957612d6e610e3c565b6001600160a01b0316336001600160a01b031614905061071a565b612d91612069565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b8152600401612dc093929190613e97565b60206040518083038186803b158015612dd857600080fd5b505afa158015612dec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112539190613a10565b6000612e1f84841115836113cb565b5050900390565b4690565b612e3d64e8d4a5100082101560cb6113cb565b612e5367016345785d8a000082111560ca6113cb565b600854612e62908260c0611380565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90611826908390613e8e565b60008180602001905181019061071a9190613b61565b6113ec612eb6611831565b156101af6113cb565b600060606000612ece84613491565b90506000612f398683612f13897f000000000000000000000000000000000000000000000000000000000000000081518110612f0657fe5b60200260200101516122c7565b7f00000000000000000000000000000000000000000000000000000000000000006134a7565b9196919550909350505050565b612f5d6001600160a01b038316151561019b6113cb565b612f698260008361084c565b6001600160a01b038216600090815260208190526040902054612f8f90826101a1612e10565b6001600160a01b038316600090815260208190526040902055600254612fb59082613563565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612ff6908590613e8e565b60405180910390a35050565b600854613011908260006113b0565b60085550565b6130236000838361084c565b6002546130309082611b44565b6002556001600160a01b0382166000908152602081905260409020546130569082611b44565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612ff6908590613e8e565b6000806130b28684611e7c565b905060006130c08287611edd565b905060006130ce868a611396565b905060006130e9846122d56130e38587613571565b8a61358b565b90506130f58882611396565b9450505050505b95945050505050565b6000806131128684611e7c565b905060006131208287611edd565b90506000613137613131838b613571565b876135be565b905060006131458483611396565b9050600061315382886135de565b905061315f8a82611396565b9b9a5050505050505050505050565b60008061317b8484611e7c565b9050600061319261318c8688611b44565b85611e7c565b9050611b218183611396565b6000826131b6576131af8683611e7c565b90506130fc565b60006131c28684611e7c565b905060006131d361318c888a611b44565b905060006131e18284611396565b905060006131ef8489611edd565b90506130f56131fe8884613571565b826135be565b6000806132118484611e7c565b9050600061321f8287611396565b9050600061322d82866135de565b90506132398682611396565b979650505050505050565b6000826132525750846130fc565b600061325e8684611e7c565b9050600061326c8287611edd565b9050600061327a878a611b44565b905060006132888483611edd565b9050600061329f6132998984613571565b856135be565b905061315f8189611396565b6000826132b95750846130fc565b60006132c58684611e7c565b905060006132d38287611edd565b905060006132e1868a611b44565b905060006132f6846122d56130e38587613571565b90506130f58189611396565b600082613313576131af86836135de565b600061331f8684611e7c565b9050600061332d8287611edd565b9050600061334461333e838b613571565b8761358b565b905060006133528483611b44565b9050600061336082886135de565b905061315f818b611396565b6000806133798484611e7c565b9050600061338a61318c8688611396565b9050611b218282611396565b6000806133a38684611e7c565b905060006133b461318c888a611396565b905060006133c28383611396565b905060006133d08489611edd565b90506130f56133df8884613571565b8261358b565b6000806133f28484611e7c565b905060006134008287611b44565b9050600061340e82866135de565b90506132398187611396565b6000806134278684611e7c565b905060006134358287611edd565b90506000613443878a611396565b905060006134518483611edd565b905060006134626132998984613571565b905061315f8882611396565b6000613480634f88840760e11b610dc4565b82148061071a575061071a8261366e565b6000818060200190518101906108059190613b7b565b606060006134b585856128c2565b90506000865167ffffffffffffffff811180156134d157600080fd5b506040519080825280602002602001820160405280156134fb578160200160208202803683370190505b50905060005b875181101561355857848114613550576135378389838151811061352157fe5b602002602001015161245a90919063ffffffff16565b82828151811061354357fe5b6020026020010181815250505b600101613501565b509695505050505050565b600061080583836001612e10565b600082820261080584158061247757508385838161247457fe5b600061359a82151560046113cb565b826135a75750600061071a565b8160018403816135b357fe5b04600101905061071a565b60006135cd82151560046113cb565b8183816135d657fe5b049392505050565b600081602001518310156136275781516112539061360590670de0b6b3a764000090611b44565b602084015184516136219161361a919061245a565b8690611b44565b906128c2565b8160400151831161363957508161071a565b81516112539061365290670de0b6b3a764000090611396565b6040840151845161362191613667919061245a565b8690611396565b6000613680631c74c91760e11b610dc4565b82148061071a57506136986350dd6ed960e01b610dc4565b909114919050565b8035610b54816140ab565b600082601f8301126136bb578081fd5b813560206136d06136cb8361408d565b614069565b82815281810190858301838502870184018810156136ec578586fd5b855b8581101561370a578135845292840192908401906001016136ee565b5090979650505050505050565b600082601f830112613727578081fd5b815160206137376136cb8361408d565b8281528181019085830183850287018401881015613753578586fd5b855b8581101561370a57815184529284019290840190600101613755565b600082601f830112613781578081fd5b813567ffffffffffffffff81111561379557fe5b6137a8601f8201601f1916602001614069565b8181528460208386010111156137bc578283fd5b816020850160208301379081016020019190915292915050565b805160018110610b5457600080fd5b803560028110610b5457600080fd5b600060208284031215613805578081fd5b8135610805816140ab565b60008060408385031215613822578081fd5b823561382d816140ab565b9150602083013561383d816140ab565b809150509250929050565b60008060006060848603121561385c578081fd5b8335613867816140ab565b92506020840135613877816140ab565b929592945050506040919091013590565b600080600080600080600060e0888a0312156138a2578485fd5b87356138ad816140ab565b965060208801356138bd816140ab565b95506040880135945060608801359350608088013560ff811681146138e0578384fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561390f578182fd5b823561391a816140ab565b946020939093013593505050565b60008060006060848603121561393c578081fd5b835167ffffffffffffffff80821115613953578283fd5b818601915086601f830112613966578283fd5b815160206139766136cb8361408d565b82815281810190858301838502870184018c1015613992578788fd5b8796505b848710156139bd5780516139a9816140ab565b835260019690960195918301918301613996565b50918901519197509093505050808211156139d6578283fd5b506139e386828701613717565b925050604084015190509250925092565b600060208284031215613a05578081fd5b8135610805816140c0565b600060208284031215613a21578081fd5b8151610805816140c0565b600080600080600080600060e0888a031215613a46578081fd5b873596506020880135613a58816140ab565b95506040880135613a68816140ab565b9450606088013567ffffffffffffffff80821115613a84578283fd5b613a908b838c016136ab565b955060808a0135945060a08a0135935060c08a0135915080821115613ab3578283fd5b50613ac08a828b01613771565b91505092959891949750929550565b600060208284031215613ae0578081fd5b81356001600160e01b031981168114610805578182fd5b600060208284031215613b08578081fd5b8151610805816140ab565b60008060408385031215613b25578182fd5b8235613b30816140ab565b9150602083013567ffffffffffffffff811115613b4b578182fd5b613b5785828601613771565b9150509250929050565b600060208284031215613b72578081fd5b610805826137d6565b60008060408385031215613b8d578182fd5b613b96836137d6565b9150602083015190509250929050565b60008060008060808587031215613bbb578182fd5b843567ffffffffffffffff80821115613bd2578384fd5b818701915061012080838a031215613be8578485fd5b613bf181614069565b9050613bfc836137e5565b8152613c0a602084016136a0565b6020820152613c1b604084016136a0565b6040820152606083013560608201526080830135608082015260a083013560a0820152613c4a60c084016136a0565b60c0820152613c5b60e084016136a0565b60e08201526101008084013583811115613c73578687fd5b613c7f8b828701613771565b828401525050809650506020870135915080821115613c9c578384fd5b50613ca9878288016136ab565b949794965050505060408301359260600135919050565b600060208284031215613cd1578081fd5b5035919050565b600060208284031215613ce9578081fd5b5051919050565b60008060408385031215613d02578182fd5b50508035926020909101359150565b60008060008060808587031215613d26578182fd5b8451935060208501519250604085015191506060850151613d46816140ab565b939692955090935050565b6000815180845260208085019450808401835b83811015613d8057815187529582019590820190600101613d64565b509495945050505050565b15159052565b60008151808452815b81811015613db657602081850181015186830182015201613d9a565b81811115613dc75782602083870101525b50601f01601f19169290920160200192915050565b9182526001600160e01b031916602082015260240190565b6000828483379101908152919050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6000602082526108056020830184613d51565b600060408252613e596040830185613d51565b82810360208401526130fc8185613d51565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9283526001600160a01b03918216602084015216604082015260600190565b6000858252602060018060a01b0380871682850152808616604085015260806060850152610100840185516080808701528181518084526101208801915085830193508692505b80831015613f1f57835185168252928501926001929092019190850190613efd565b50848801519450607f199350838782030160a0880152613f3f8186613d51565b94505050506040850151818584030160c0860152613f5d8382613d91565b92505050606084015161355860e0850182613d8b565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b6000838252604060208301526126076040830184613d91565b9182526001600160a01b0316602082015260400190565b93845260ff9290921660208401526040830152606082015260800190565b6000602082526108056020830184613d91565b6000838252604060208301526126076040830184613d51565b918252602082015260400190565b60ff91909116815260200190565b60405181810167ffffffffffffffff8111828210171561408557fe5b604052919050565b600067ffffffffffffffff8211156140a157fe5b5060209081020190565b6001600160a01b038116811461075557600080fd5b801515811461075557600080fdfea264697066735822122090e6623bd7b682a9cca68462828092df92cac19f6081ff634d7ff9c0b88ad51564736f6c63430007060033","opcodes":"PUSH2 0x2C0 PUSH1 0x40 MSTORE PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH2 0x120 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x5076 CODESIZE SUB DUP1 PUSH3 0x5076 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x5A SWAP2 PUSH3 0xBBE JUMP JUMPDEST DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH1 0x0 DUP11 DUP11 PUSH3 0x76 DUP12 DUP12 ADDRESS PUSH3 0x4E1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP DUP10 DUP10 DUP10 DUP10 DUP3 DUP3 DUP10 DUP10 DUP14 DUP3 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP6 DUP6 DUP11 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SHL DUP1 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x109 SWAP3 SWAP2 SWAP1 PUSH3 0xA2B JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x11F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xA2B JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x12 PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0xC0 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0xE0 MSTORE POP PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x100 MSTORE PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH2 0x140 MSTORE POP PUSH3 0x192 SWAP1 POP PUSH3 0x76A700 DUP4 GT ISZERO PUSH2 0x194 PUSH3 0x5B0 JUMP JUMPDEST PUSH3 0x1A6 PUSH3 0x278D00 DUP3 GT ISZERO PUSH2 0x195 PUSH3 0x5B0 JUMP JUMPDEST TIMESTAMP SWAP1 SWAP2 ADD PUSH2 0x160 DUP2 SWAP1 MSTORE ADD PUSH2 0x180 MSTORE DUP6 MLOAD PUSH3 0x1C8 SWAP1 PUSH1 0x2 GT ISZERO PUSH1 0xC8 PUSH3 0x5B0 JUMP JUMPDEST PUSH3 0x1E2 PUSH3 0x1D6 PUSH3 0x5C5 JUMP JUMPDEST DUP8 MLOAD GT ISZERO PUSH1 0xC9 PUSH3 0x5B0 JUMP JUMPDEST PUSH3 0x1F8 DUP7 PUSH3 0x5CA PUSH1 0x20 SHL PUSH3 0x1376 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x203 DUP5 PUSH3 0x5D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9B2760F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP1 PUSH4 0x9B2760F SWAP1 PUSH3 0x234 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH3 0xD56 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x264 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x28A SWAP2 SWAP1 PUSH3 0xBA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3354E3E9 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP1 PUSH4 0x66A9C7D2 SWAP1 PUSH3 0x2BF SWAP1 DUP5 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH3 0xCBC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH2 0x1A0 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP POP POP POP POP POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE POP POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x35B DUP11 DUP11 ADDRESS PUSH3 0x662 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x200 DUP2 SWAP1 MSTORE PUSH2 0x220 DUP4 SWAP1 MSTORE PUSH2 0x240 DUP3 SWAP1 MSTORE SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH3 0x37F DUP11 PUSH3 0x758 JUMP JUMPDEST PUSH2 0x260 MSTORE PUSH3 0x38E DUP10 PUSH3 0x758 JUMP JUMPDEST PUSH2 0x280 MSTORE PUSH1 0x0 PUSH3 0x3A1 DUP12 DUP3 DUP12 PUSH3 0x82C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB4DCFC77 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x3FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x424 SWAP2 SWAP1 PUSH3 0xB7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE POP POP PUSH3 0x4D1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4800D97F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x494 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x4BA SWAP2 SWAP1 PUSH3 0xB7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 AND EQ PUSH2 0x208 PUSH3 0x5B0 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH3 0xD98 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP1 PUSH3 0x4F4 DUP8 DUP8 DUP8 PUSH3 0x662 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP4 SWAP7 POP SWAP2 SWAP5 POP SWAP3 POP PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP4 POP DUP7 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x52A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP6 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH3 0x558 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x586 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH3 0x5C1 JUMPI PUSH3 0x5C1 DUP2 PUSH3 0x8DA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 SWAP1 JUMP JUMPDEST DUP1 PUSH3 0x5C1 DUP2 PUSH3 0x92D JUMP JUMPDEST PUSH3 0x5EB PUSH5 0xE8D4A51000 DUP3 LT ISZERO PUSH1 0xCB PUSH3 0x5B0 JUMP JUMPDEST PUSH3 0x603 PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH1 0xCA PUSH3 0x5B0 JUMP JUMPDEST PUSH3 0x622 DUP2 PUSH1 0xC0 PUSH1 0x8 SLOAD PUSH3 0x9BA PUSH1 0x20 SHL PUSH3 0x1380 OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA9BA3FFE0B6C366B81232CAAB38605A0699AD5398D6CCE76F91EE809E322DAFC SWAP1 PUSH3 0x657 SWAP1 DUP4 SWAP1 PUSH3 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH3 0x6EB JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH3 0x6AE JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x1 SWAP1 POP PUSH1 0x2 PUSH3 0x74F JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH3 0x6DA JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 POP PUSH1 0x1 PUSH3 0x74F JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP PUSH1 0x2 SWAP1 POP PUSH1 0x0 PUSH3 0x74F JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH3 0x717 JUMPI POP PUSH1 0x2 SWAP2 POP PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH3 0x74F JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH3 0x743 JUMPI POP PUSH1 0x2 SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH1 0x1 PUSH3 0x74F JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ ISZERO PUSH3 0x77C JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH3 0x827 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x7CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x7F3 SWAP2 SWAP1 PUSH3 0xC99 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH3 0x812 PUSH1 0x12 DUP4 PUSH3 0x9CF PUSH1 0x20 SHL PUSH3 0x1396 OR PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA EXP PUSH8 0xDE0B6B3A7640000 MUL SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x83D DUP2 DUP4 GT ISZERO PUSH2 0x14C PUSH3 0x5B0 JUMP JUMPDEST PUSH3 0x855 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 GT ISZERO PUSH2 0x14D PUSH3 0x5B0 JUMP JUMPDEST PUSH3 0x890 PUSH3 0x871 DUP3 PUSH1 0x60 PUSH3 0x9E7 PUSH1 0x20 SHL PUSH3 0x13AC OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x889 DUP5 PUSH1 0x0 PUSH3 0x9E7 PUSH1 0x20 SHL PUSH3 0x13AC OR PUSH1 0x20 SHR JUMP JUMPDEST OR PUSH3 0x9EB JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD0E27A0D0C2CB09280FA5E4487315455B32AFCDCF012DC35B6EF2A0E3C4D1280 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH3 0x8CD SWAP3 SWAP2 SWAP1 PUSH3 0xD74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 MLOAD LT ISZERO PUSH3 0x93E JUMPI PUSH3 0x9B7 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH3 0x94E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH3 0x9B4 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x978 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH3 0x9A9 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH1 0x65 PUSH3 0x5B0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH3 0x95F JUMP JUMPDEST POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9E1 DUP4 DUP4 GT ISZERO PUSH1 0x1 PUSH3 0x5B0 JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST PUSH3 0xA0A DUP2 PUSH1 0x0 PUSH1 0x8 SLOAD PUSH3 0xA10 PUSH1 0x20 SHL PUSH3 0x13B0 OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x8 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP3 DUP2 AND DUP3 SHL SWAP1 DUP3 SHL NOT DUP5 AND OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA63 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xAAE JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xA7E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xAAE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xAAE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xAAE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xA91 JUMP JUMPDEST POP PUSH3 0xABC SWAP3 SWAP2 POP PUSH3 0xAC0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xABC JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xAC1 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x827 DUP2 PUSH3 0xD82 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xAF5 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xB0A JUMPI INVALID JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND DUP3 ADD DUP2 ADD DUP4 DUP2 GT DUP4 DUP3 LT OR ISZERO PUSH3 0xB2A JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP3 MSTORE DUP6 DUP5 ADD DUP2 ADD DUP8 LT ISZERO PUSH3 0xB41 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH3 0xB64 JUMPI DUP6 DUP4 ADD DUP2 ADD MLOAD DUP3 DUP5 ADD DUP3 ADD MSTORE SWAP2 DUP3 ADD SWAP2 PUSH3 0xB45 JUMP JUMPDEST DUP4 DUP4 GT ISZERO PUSH3 0xB75 JUMPI DUP5 DUP2 DUP6 DUP5 ADD ADD MSTORE JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xB91 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH3 0xB9E DUP2 PUSH3 0xD82 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xBB7 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH3 0xBDE JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH3 0xBE9 DUP12 PUSH3 0xAD7 JUMP JUMPDEST PUSH1 0x20 DUP13 ADD MLOAD SWAP1 SWAP11 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xC06 JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH3 0xC14 DUP15 DUP4 DUP16 ADD PUSH3 0xAE4 JUMP JUMPDEST SWAP11 POP PUSH1 0x40 DUP14 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0xC2A JUMPI DUP8 DUP9 REVERT JUMPDEST POP PUSH3 0xC39 DUP14 DUP3 DUP15 ADD PUSH3 0xAE4 JUMP JUMPDEST SWAP9 POP POP PUSH3 0xC4A PUSH1 0x60 DUP13 ADD PUSH3 0xAD7 JUMP JUMPDEST SWAP7 POP PUSH3 0xC5A PUSH1 0x80 DUP13 ADD PUSH3 0xAD7 JUMP JUMPDEST SWAP6 POP PUSH1 0xA0 DUP12 ADD MLOAD SWAP5 POP PUSH1 0xC0 DUP12 ADD MLOAD SWAP4 POP PUSH1 0xE0 DUP12 ADD MLOAD SWAP3 POP PUSH2 0x100 DUP12 ADD MLOAD SWAP2 POP PUSH3 0xC88 PUSH2 0x120 DUP13 ADD PUSH3 0xAD7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xCAB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0xB9E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP6 DUP4 MSTORE PUSH1 0x20 PUSH1 0x60 DUP2 DUP6 ADD MSTORE DUP2 DUP7 MLOAD DUP1 DUP5 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 POP DUP3 DUP9 ADD SWAP4 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xD07 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH3 0xCE0 JUMP JUMPDEST POP POP DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE SWAP1 DUP3 ADD SWAP3 POP DUP2 DUP7 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xD48 JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH3 0xD21 JUMP JUMPDEST POP SWAP3 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH3 0xD65 JUMPI INVALID JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x9B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH1 0x60 SHR PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD PUSH1 0x60 SHR PUSH2 0x1E0 MLOAD PUSH1 0x60 SHR PUSH2 0x200 MLOAD PUSH2 0x220 MLOAD PUSH2 0x240 MLOAD PUSH2 0x260 MLOAD PUSH2 0x280 MLOAD PUSH2 0x2A0 MLOAD PUSH1 0x60 SHR PUSH2 0x4104 PUSH3 0xF72 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x22E0 MSTORE POP DUP1 PUSH2 0x147A MSTORE POP DUP1 PUSH2 0x1416 MSTORE DUP1 PUSH2 0x222C MSTORE POP DUP1 PUSH2 0x722 MSTORE DUP1 PUSH2 0xAB1 MSTORE DUP1 PUSH2 0x14A2 MSTORE DUP1 PUSH2 0x2555 MSTORE DUP1 PUSH2 0x2705 MSTORE DUP1 PUSH2 0x285C MSTORE DUP1 PUSH2 0x29CE MSTORE DUP1 PUSH2 0x2B6A MSTORE DUP1 PUSH2 0x2CC1 MSTORE POP DUP1 PUSH2 0x8B2 MSTORE DUP1 PUSH2 0xA77 MSTORE DUP1 PUSH2 0x1438 MSTORE DUP1 PUSH2 0x1AB5 MSTORE DUP1 PUSH2 0x2521 MSTORE DUP1 PUSH2 0x268A MSTORE DUP1 PUSH2 0x26D1 MSTORE DUP1 PUSH2 0x27E6 MSTORE DUP1 PUSH2 0x2828 MSTORE DUP1 PUSH2 0x299A MSTORE DUP1 PUSH2 0x2AF4 MSTORE DUP1 PUSH2 0x2B36 MSTORE DUP1 PUSH2 0x2C4B MSTORE DUP1 PUSH2 0x2C8D MSTORE POP DUP1 PUSH2 0xAF2 MSTORE DUP1 PUSH2 0xCBB MSTORE DUP1 PUSH2 0xDA2 MSTORE DUP1 PUSH2 0x12F7 MSTORE DUP1 PUSH2 0x14E3 MSTORE DUP1 PUSH2 0x2171 MSTORE DUP1 PUSH2 0x258C MSTORE DUP1 PUSH2 0x273C MSTORE DUP1 PUSH2 0x2893 MSTORE DUP1 PUSH2 0x2A05 MSTORE DUP1 PUSH2 0x2BA1 MSTORE DUP1 PUSH2 0x2CF8 MSTORE DUP1 PUSH2 0x2EDD MSTORE DUP1 PUSH2 0x2F15 MSTORE POP DUP1 PUSH2 0x134A MSTORE DUP1 PUSH2 0x15FE MSTORE DUP1 PUSH2 0x16CA MSTORE DUP1 PUSH2 0x2252 MSTORE DUP1 PUSH2 0x24D6 MSTORE DUP1 PUSH2 0x2616 MSTORE DUP1 PUSH2 0x2950 MSTORE DUP1 PUSH2 0x2A80 MSTORE POP DUP1 PUSH2 0x8D6 MSTORE DUP1 PUSH2 0xF23 MSTORE DUP1 PUSH2 0x15B5 MSTORE DUP1 PUSH2 0x1681 MSTORE DUP1 PUSH2 0x1AEB MSTORE DUP1 PUSH2 0x21F1 MSTORE DUP1 PUSH2 0x2497 MSTORE DUP1 PUSH2 0x25B8 MSTORE DUP1 PUSH2 0x2772 MSTORE DUP1 PUSH2 0x2911 MSTORE DUP1 PUSH2 0x2A31 MSTORE DUP1 PUSH2 0x2BD7 MSTORE POP DUP1 PUSH2 0x853 MSTORE POP DUP1 PUSH2 0x1874 MSTORE POP DUP1 PUSH2 0x1850 MSTORE POP DUP1 PUSH2 0xE62 MSTORE POP DUP1 PUSH2 0xFD9 MSTORE POP DUP1 PUSH2 0x197A MSTORE POP DUP1 PUSH2 0x19BC MSTORE POP DUP1 PUSH2 0x199B MSTORE POP DUP1 PUSH2 0xE3E MSTORE POP DUP1 PUSH2 0xDC8 MSTORE POP PUSH2 0x4104 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x253 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x679AEFCE GT PUSH2 0x146 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xD5C096C4 EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xDE82CD34 EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0xF174E241 EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0xF5431AA8 EQ PUSH2 0x4FB JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0x9F11080E EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0x4AA JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x82687A56 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x82687A56 EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0x851C1BB3 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0x87EC6817 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x461 JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x74F3B009 EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x423 JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x4DE046D5 GT PUSH2 0x198 JUMPI DUP1 PUSH4 0x4DE046D5 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x50DD6ED9 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x55C67628 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x6028BFD4 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x63FE3B56 EQ PUSH2 0x3BE JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x38E9922E EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x4D64CD74 EQ PUSH2 0x365 JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x21B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x1C0DE051 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x1DD746EA EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x31A JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x1EC954A EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x16B8D6FF EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2BE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26B PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BA6 JUMP JUMPDEST PUSH2 0x503 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH2 0x673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x4021 JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x38FD JUMP JUMPDEST PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x3E6B JUMP JUMPDEST PUSH2 0x26B PUSH2 0x720 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x39F4 JUMP JUMPDEST PUSH2 0x744 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26B PUSH2 0x758 JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E76 JUMP JUMPDEST PUSH2 0x2FA PUSH2 0x787 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x3848 JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH2 0x322 PUSH2 0x80C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x405B JUMP JUMPDEST PUSH2 0x26B PUSH2 0x815 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH2 0x26B PUSH2 0x851 JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x360 CALLDATASIZE PUSH1 0x4 PUSH2 0x38FD JUMP JUMPDEST PUSH2 0x875 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x8B0 JUMP JUMPDEST PUSH2 0x375 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x3E1F JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B13 JUMP JUMPDEST PUSH2 0x8F8 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x916 JUMP JUMPDEST PUSH2 0x3B0 PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2C JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP3 SWAP2 SWAP1 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP3 SWAP2 SWAP1 PUSH2 0x404D JUMP JUMPDEST PUSH2 0x26B PUSH2 0x98C JUMP JUMPDEST PUSH2 0x26B PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x37F4 JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x402 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2C JUMP JUMPDEST PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP3 SWAP2 SWAP1 PUSH2 0x3E46 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x37F4 JUMP JUMPDEST PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0xBF2 JUMP JUMPDEST PUSH2 0x26B PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x441 CALLDATASIZE PUSH1 0x4 PUSH2 0x3ACF JUMP JUMPDEST PUSH2 0xDC4 JUMP JUMPDEST PUSH2 0x3B0 PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2C JUMP JUMPDEST PUSH2 0xE16 JUMP JUMPDEST PUSH2 0x375 PUSH2 0xE3C JUMP JUMPDEST PUSH2 0x375 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x289 PUSH2 0xE84 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x47F CALLDATASIZE PUSH1 0x4 PUSH2 0x3CF0 JUMP JUMPDEST PUSH2 0xEE5 JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x38FD JUMP JUMPDEST PUSH2 0xF4F JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x4A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x38FD JUMP JUMPDEST PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x375 PUSH2 0xF9A JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x4C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3888 JUMP JUMPDEST PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x4D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2C JUMP JUMPDEST PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x26B PUSH2 0x4E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3810 JUMP JUMPDEST PUSH2 0x121D JUMP JUMPDEST PUSH2 0x26B PUSH2 0x125A JUMP JUMPDEST PUSH2 0x375 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x136C JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x530 PUSH2 0x515 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0xCD PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x545 PUSH2 0x53B PUSH2 0x851 JUMP JUMPDEST DUP3 EQ PUSH2 0x1F4 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x54D PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0x567 PUSH1 0x3 DUP6 LT DUP1 ISZERO PUSH2 0x560 JUMPI POP PUSH1 0x3 DUP5 LT JUMPDEST PUSH1 0x64 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x571 PUSH2 0x13EE JUMP JUMPDEST SWAP1 POP PUSH2 0x57D DUP7 DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x588 PUSH2 0x95E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x5A1 PUSH2 0x916 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 ADD DUP4 SWAP1 MSTORE SWAP1 POP PUSH1 0x0 DUP11 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5C1 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x625 JUMPI PUSH2 0x5E8 DUP11 PUSH1 0x60 ADD MLOAD DUP6 DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x5DB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x157D JUMP JUMPDEST PUSH1 0x60 DUP12 ADD MSTORE PUSH1 0x0 PUSH2 0x5FA DUP12 DUP12 DUP5 PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP PUSH2 0x619 DUP2 DUP7 DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x60C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1650 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP PUSH2 0x66A JUMP JUMPDEST PUSH2 0x639 DUP11 PUSH1 0x60 ADD MLOAD DUP6 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x5DB JUMPI INVALID JUMPDEST PUSH1 0x60 DUP12 ADD MSTORE PUSH1 0x0 PUSH2 0x64B DUP12 DUP12 DUP5 PUSH2 0x165C JUMP JUMPDEST SWAP1 POP PUSH2 0x619 DUP2 DUP7 DUP12 DUP2 MLOAD DUP2 LT PUSH2 0x65D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1711 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x6FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x716 CALLER DUP5 DUP5 PUSH2 0x171D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x74C PUSH2 0x1785 JUMP JUMPDEST PUSH2 0x755 DUP2 PUSH2 0x17B3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x76B PUSH2 0x1831 JUMP JUMPDEST ISZERO SWAP3 POP PUSH2 0x776 PUSH2 0x184E JUMP JUMPDEST SWAP2 POP PUSH2 0x780 PUSH2 0x1872 JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x791 PUSH2 0x13EE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7A3 DUP6 CALLER PUSH2 0x121D JUMP JUMPDEST SWAP1 POP PUSH2 0x7C7 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ DUP1 PUSH2 0x7BF JUMPI POP DUP4 DUP3 LT ISZERO JUMPDEST PUSH2 0x19E PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x7D2 DUP6 DUP6 DUP6 PUSH2 0x1896 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x7ED JUMPI POP PUSH1 0x0 NOT DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x7FF JUMPI PUSH2 0x7FF DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x171D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x791 PUSH2 0x1976 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x82A PUSH2 0x95E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x843 PUSH2 0x83B DUP4 DUP4 PUSH2 0x1A13 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x84C DUP4 PUSH2 0x1B2B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x716 SWAP2 DUP6 SWAP1 PUSH2 0x8AB SWAP1 DUP7 PUSH2 0x1B44 JUMP JUMPDEST PUSH2 0x171D JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x900 PUSH2 0x1785 JUMP JUMPDEST PUSH2 0x908 PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0x912 DUP3 DUP3 PUSH2 0x1B56 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x791 SWAP1 PUSH1 0xC0 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x93D DUP7 MLOAD PUSH2 0x938 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0x1C30 JUMP JUMPDEST PUSH2 0x952 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1C3D PUSH2 0x1CE1 PUSH2 0x1D42 JUMP JUMPDEST SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x96B PUSH2 0x1E64 JUMP JUMPDEST SWAP1 POP PUSH2 0x978 DUP2 PUSH1 0x0 PUSH2 0x1E6A JUMP JUMPDEST SWAP3 POP PUSH2 0x985 DUP2 PUSH1 0x60 PUSH2 0x1E6A JUMP JUMPDEST SWAP2 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x997 PUSH2 0x851 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9A3 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CE SWAP2 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xA22 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3928 JUMP JUMPDEST POP SWAP2 POP POP PUSH2 0xA37 DUP2 PUSH2 0xA32 PUSH2 0x13EE JUMP JUMPDEST PUSH2 0x151C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA42 PUSH2 0x95E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0xA5B PUSH2 0x916 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0xAE7 PUSH2 0xAAE DUP7 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAA0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x1E7C JUMP JUMPDEST DUP7 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xADA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH2 0xB2F PUSH2 0xB28 DUP7 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1EE9 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0xB68 PUSH2 0x515 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0xB73 PUSH2 0x53B PUSH2 0x851 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7D PUSH2 0x13EE JUMP JUMPDEST SWAP1 POP PUSH2 0xB89 DUP9 DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xB9E DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP11 DUP16 PUSH2 0x1C3D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xBAE DUP14 DUP5 PUSH2 0x1F4C JUMP JUMPDEST PUSH2 0xBB8 DUP3 DUP6 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0xBC2 DUP2 DUP6 PUSH2 0x1CE1 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP POP JUMPDEST POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFC PUSH2 0x851 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC08 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC33 SWAP2 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xC87 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3928 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCE4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0xD06 DUP6 PUSH2 0x1F56 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP PUSH2 0xD37 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB95CAC28 DUP6 ADDRESS ADDRESS DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD68 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3EB6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDF9 SWAP3 SWAP2 SWAP1 PUSH2 0x3DDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0xE27 DUP7 MLOAD PUSH2 0x938 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0x952 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1F59 PUSH2 0x1F77 PUSH2 0x1D42 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x6FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FF JUMP JUMPDEST PUSH2 0xEED PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xEF8 PUSH2 0x95E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xF09 PUSH2 0x83B DUP4 DUP4 PUSH2 0x1A13 JUMP JUMPDEST PUSH2 0xF1E PUSH2 0xF16 DUP6 DUP6 PUSH2 0x1A13 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0xF49 PUSH32 0x0 DUP6 DUP6 PUSH2 0x1FD8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF5C CALLER DUP6 PUSH2 0x121D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT PUSH2 0xF76 JUMPI PUSH2 0xF71 CALLER DUP6 PUSH1 0x0 PUSH2 0x171D JUMP JUMPDEST PUSH2 0xF83 JUMP JUMPDEST PUSH2 0xF83 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x171D JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x716 CALLER DUP5 DUP5 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x791 PUSH2 0x2069 JUMP JUMPDEST PUSH2 0xFB2 DUP5 TIMESTAMP GT ISZERO PUSH1 0xD1 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH2 0x1009 SWAP2 PUSH32 0x0 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP9 SWAP2 DUP14 SWAP2 ADD PUSH2 0x3F73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x102C DUP3 PUSH2 0x20E3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1053 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4003 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1075 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP PUSH2 0x10B7 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x10AF JUMPI POP DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1F8 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP6 ADD SWAP1 SSTORE PUSH2 0x10E0 DUP12 DUP12 DUP12 PUSH2 0x171D JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0x10FC PUSH2 0x515 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x1107 PUSH2 0x53B PUSH2 0x851 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1111 PUSH2 0x13EE JUMP JUMPDEST SWAP1 POP PUSH2 0x111B PUSH2 0x758 JUMP JUMPDEST PUSH2 0x11CD JUMPI PUSH1 0x0 DUP1 PUSH2 0x112F DUP14 DUP14 DUP14 DUP7 DUP12 PUSH2 0x20FF JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1148 PUSH2 0x113E PUSH2 0x21B3 JUMP JUMPDEST DUP4 LT ISZERO PUSH1 0xCC PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x115A PUSH1 0x0 PUSH2 0x1155 PUSH2 0x21B3 JUMP JUMPDEST PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x116D DUP12 PUSH2 0x1166 PUSH2 0x21B3 JUMP JUMPDEST DUP5 SUB PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x1177 DUP2 DUP5 PUSH2 0x1F77 JUMP JUMPDEST DUP1 PUSH2 0x1180 PUSH2 0x1C2B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11C0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x11D7 DUP9 DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x11EC DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP11 DUP16 PUSH2 0x1F59 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x11FC DUP13 DUP5 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x1206 DUP3 DUP6 PUSH2 0x1F77 JUMP JUMPDEST PUSH2 0x1210 DUP2 DUP6 PUSH2 0x1CE1 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0xBCA SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1227 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1249 JUMPI POP PUSH1 0x0 NOT PUSH2 0x71A JUMP JUMPDEST PUSH2 0x1253 DUP4 DUP4 PUSH2 0x21C2 JUMP JUMPDEST SWAP1 POP PUSH2 0x71A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1265 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 PUSH2 0x127B PUSH2 0x851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1297 SWAP2 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x12EB SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3928 JUMP JUMPDEST POP SWAP2 POP POP PUSH1 0x0 PUSH2 0x1336 DUP3 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1320 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1331 ADDRESS PUSH2 0x21ED JUMP JUMPDEST PUSH2 0x157D JUMP JUMPDEST SWAP1 POP PUSH2 0x1341 DUP2 PUSH2 0x22C7 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x791 PUSH2 0x22DB JUMP JUMPDEST DUP1 PUSH2 0x912 DUP2 PUSH2 0x238E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A6 DUP4 DUP4 GT ISZERO PUSH1 0x1 PUSH2 0x13CB JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP3 DUP2 AND DUP3 SHL SWAP1 DUP3 SHL NOT DUP5 AND OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x912 JUMPI PUSH2 0x912 DUP2 PUSH2 0x2407 JUMP JUMPDEST PUSH2 0x13EC PUSH2 0x13E4 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x13CB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP5 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH32 0x0 DUP2 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1461 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x149F PUSH2 0x1478 PUSH2 0x22DB JUMP JUMPDEST PUSH32 0x0 SWAP1 PUSH2 0x245A JUMP JUMPDEST DUP2 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x14CB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x150C JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x1527 PUSH2 0x1C2B JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x84C JUMPI PUSH2 0x155E DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x153D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1551 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x245A JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x156A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x151F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x805 DUP4 DUP4 PUSH2 0x245A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x15B3 JUMPI PUSH2 0x15AC DUP5 DUP5 DUP5 PUSH2 0x2490 JUMP JUMPDEST SWAP1 POP PUSH2 0x805 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x15FC JUMPI PUSH2 0x15AC DUP5 DUP5 DUP5 PUSH2 0x260F JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1645 JUMPI PUSH2 0x15AC DUP5 DUP5 DUP5 PUSH2 0x276B JUMP JUMPDEST PUSH2 0x805 PUSH2 0x135 PUSH2 0x2407 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x805 DUP4 DUP4 PUSH2 0x28C2 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x167F JUMPI PUSH2 0x15AC DUP5 DUP5 DUP5 PUSH2 0x290A JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x16C8 JUMPI PUSH2 0x15AC DUP5 DUP5 DUP5 PUSH2 0x2A79 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1645 JUMPI PUSH2 0x15AC DUP5 DUP5 DUP5 PUSH2 0x2BD0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x805 DUP4 DUP4 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x1778 SWAP1 DUP6 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179C PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0xDC4 JUMP JUMPDEST SWAP1 POP PUSH2 0x755 PUSH2 0x17AB DUP3 CALLER PUSH2 0x2D27 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x13CB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17D3 JUMPI PUSH2 0x17CE PUSH2 0x17C4 PUSH2 0x184E JUMP JUMPDEST TIMESTAMP LT PUSH2 0x193 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x17E8 JUMP JUMPDEST PUSH2 0x17E8 PUSH2 0x17DE PUSH2 0x1872 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1A9 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x9E3A5E37224532DEA67B89FACE185703738A228A6E8A23DEE546960180D3BE64 SWAP1 PUSH2 0x1826 SWAP1 DUP4 SWAP1 PUSH2 0x3E6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x183B PUSH2 0x1872 JUMP JUMPDEST TIMESTAMP GT DUP1 PUSH2 0x791 JUMPI POP POP PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x18AD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x18C4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x18CF DUP4 DUP4 DUP4 PUSH2 0x84C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x18F5 SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x2E10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1924 SWAP1 DUP3 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x1778 SWAP1 DUP6 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x19E3 PUSH2 0x2E26 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x19F8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A1E PUSH2 0x851 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A2A PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A55 SWAP2 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1AA9 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3928 JUMP JUMPDEST POP SWAP2 POP POP PUSH1 0x0 PUSH2 0x1B0F DUP3 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1ADE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1331 PUSH32 0x0 PUSH2 0x21ED JUMP JUMPDEST SWAP1 POP DUP6 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x1B21 JUMPI POP DUP5 DUP2 GT ISZERO JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B33 PUSH2 0x1785 JUMP JUMPDEST PUSH2 0x1B3B PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0x755 DUP2 PUSH2 0x2E2A JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x805 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B60 PUSH2 0x851 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B6C PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB05F8E48 DUP4 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B99 SWAP3 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BE9 SWAP2 SWAP1 PUSH2 0x3D11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x639CDB5 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP4 POP PUSH4 0x18E736D4 SWAP3 POP PUSH2 0xD68 SWAP2 POP DUP6 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3FD3 JUMP JUMPDEST SHR PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SWAP1 JUMP JUMPDEST PUSH2 0x912 DUP2 DUP4 EQ PUSH1 0x67 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x1C4D DUP6 PUSH2 0x2E95 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP1 ISZERO PUSH2 0x1C5A JUMPI INVALID JUMPDEST EQ PUSH2 0x1C6F JUMPI PUSH2 0x1C6A PUSH2 0x14E PUSH2 0x2407 JUMP JUMPDEST PUSH2 0x1CD2 JUMP JUMPDEST PUSH2 0x1C77 PUSH2 0x2EAB JUMP JUMPDEST PUSH2 0x1C81 DUP10 DUP7 PUSH2 0x2EBF JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x1C8E PUSH2 0x1C2B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1CA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1CCE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP JUMPDEST POP SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x1CEC PUSH2 0x1C2B JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x84C JUMPI PUSH2 0x1D23 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1D02 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1D16 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x28C2 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1D2F JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1CE4 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x1E00 JUMPI PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x1D66 SWAP3 SWAP2 SWAP1 PUSH2 0x3DF4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DA3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DA8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DB7 JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43ADBAFB PUSH1 0xE0 SHL DUP2 EQ PUSH2 0x1DE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x4 PUSH1 0x0 RETURNDATACOPY PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x24 RETURNDATASIZE SUB PUSH1 0x24 PUSH1 0x40 RETURNDATACOPY PUSH1 0x1C RETURNDATASIZE ADD PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x1E0A PUSH2 0x13EE JUMP JUMPDEST SWAP1 POP PUSH2 0x1E16 DUP8 DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E2D DUP13 DUP13 DUP13 DUP13 DUP13 DUP13 DUP10 DUP14 DUP14 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1E40 DUP2 DUP5 DUP7 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1F NOT DUP3 ADD DUP4 SWAP1 MSTORE PUSH4 0x43ADBAFB PUSH1 0x3F NOT DUP4 ADD MSTORE PUSH1 0x20 MUL PUSH1 0x23 NOT DUP3 ADD PUSH1 0x44 DUP3 ADD DUP2 REVERT JUMPDEST PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SHR PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD DUP4 LT ISZERO PUSH2 0x1EB5 JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP2 PUSH2 0x1EA1 SWAP2 DUP7 SWAP1 SUB SWAP1 PUSH2 0x245A JUMP JUMPDEST SWAP1 POP PUSH2 0x1EAD DUP5 DUP3 PUSH2 0x1396 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x71A JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD DUP4 GT PUSH2 0x1EC7 JUMPI POP DUP2 PUSH2 0x71A JUMP JUMPDEST DUP2 MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x0 SWAP2 PUSH2 0x1EA1 SWAP2 DUP7 SUB SWAP1 PUSH2 0x245A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x805 DUP4 DUP4 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F04 DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x13CB JUMP JUMPDEST DUP3 PUSH2 0x1F11 JUMPI POP PUSH1 0x0 PUSH2 0x71A JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 PUSH2 0x1F34 SWAP1 DUP6 DUP4 DUP2 PUSH2 0x1F2B JUMPI INVALID JUMPDEST DIV EQ PUSH1 0x5 PUSH2 0x13CB JUMP JUMPDEST DUP3 PUSH1 0x1 DUP3 SUB DUP2 PUSH2 0x1F40 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x71A JUMP JUMPDEST PUSH2 0x912 DUP3 DUP3 PUSH2 0x2F46 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH2 0x1F69 PUSH2 0x14E PUSH2 0x2407 JUMP JUMPDEST SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x1F82 PUSH2 0x1C2B JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x84C JUMPI PUSH2 0x1FB9 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F98 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FAC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1EF5 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1FC5 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1F7A JUMP JUMPDEST PUSH2 0x1FE7 DUP2 DUP4 GT ISZERO PUSH2 0x14C PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2002 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14D PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2021 PUSH2 0x2010 DUP3 PUSH1 0x60 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x201B DUP5 PUSH1 0x0 PUSH2 0x13AC JUMP JUMPDEST OR PUSH2 0x3002 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD0E27A0D0C2CB09280FA5E4487315455B32AFCDCF012DC35B6EF2A0E3C4D1280 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x205C SWAP3 SWAP2 SWAP1 PUSH2 0x404D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2073 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x791 SWAP2 SWAP1 PUSH2 0x3AF7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20ED PUSH2 0x1976 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDF9 SWAP3 SWAP2 SWAP1 PUSH2 0x3E04 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x210B PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0x2122 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ADDRESS EQ PUSH2 0x156 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2139 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ADDRESS EQ PUSH2 0x156 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x219A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x912 DUP3 DUP3 PUSH2 0x3017 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2250 JUMPI POP PUSH32 0x0 PUSH2 0xB54 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x229C JUMPI PUSH2 0x2295 PUSH2 0x1478 PUSH2 0x22DB JUMP JUMPDEST SWAP1 POP PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ ISZERO PUSH2 0x22BC JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH2 0xB54 JUMP JUMPDEST PUSH2 0xB54 PUSH2 0x135 PUSH2 0x2407 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71A DUP3 PUSH2 0x22D5 PUSH2 0x758 JUMP JUMPDEST SWAP1 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD15E0053 PUSH2 0x2315 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2331 SWAP2 SWAP1 PUSH2 0x3E1F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x235D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2381 SWAP2 SWAP1 PUSH2 0x3CD8 JUMP JUMPDEST PUSH4 0x3B9ACA00 SWAP1 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD LT ISZERO PUSH2 0x239D JUMPI PUSH2 0x755 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x23AC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x23D4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x23FD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH1 0x65 PUSH2 0x13CB JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x23BD JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x247E DUP5 ISZERO DUP1 PUSH2 0x2477 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x2474 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x13CB JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2516 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x250E JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x135 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2607 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x254A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x257E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x25B5 DUP8 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST DUP7 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x25FB JUMPI PUSH2 0x30A5 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x3105 JUMPDEST PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x266B PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x250E JUMPI POP PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x135 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x26C6 JUMPI PUSH2 0x26C1 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x26B3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x316E JUMP JUMPDEST PUSH2 0x2607 JUMP JUMPDEST PUSH2 0x2607 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x26FA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x272E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2765 DUP8 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST DUP7 PUSH2 0x319E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27C7 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x250E JUMPI POP PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x135 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x281D JUMPI PUSH2 0x26C1 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x280F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x3204 JUMP JUMPDEST PUSH2 0x2607 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2851 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2885 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x28BC DUP8 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST DUP7 PUSH2 0x3244 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D1 DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x13CB JUMP JUMPDEST DUP3 PUSH2 0x28DE JUMPI POP PUSH1 0x0 PUSH2 0x71A JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 PUSH2 0x28F8 SWAP1 DUP6 DUP4 DUP2 PUSH2 0x1F2B JUMPI INVALID JUMPDEST DUP3 DUP2 DUP2 PUSH2 0x2901 JUMPI INVALID JUMPDEST DIV SWAP2 POP POP PUSH2 0x71A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x298F PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x250E JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x135 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2607 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x29C3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x29F7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2A2E DUP8 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST DUP7 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2A74 JUMPI PUSH2 0x32AB PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x3302 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD5 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x250E JUMPI POP PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x135 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x2B2B JUMPI PUSH2 0x26C1 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2B1D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x336C JUMP JUMPDEST PUSH2 0x2607 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2B5F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2B93 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2BCA DUP8 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST DUP7 PUSH2 0x3396 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C2C PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x250E JUMPI POP PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x135 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x2C82 JUMPI PUSH2 0x26C1 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2C74 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x33E5 JUMP JUMPDEST PUSH2 0x2607 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2CB6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2CEA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2D21 DUP8 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST DUP7 PUSH2 0x341A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xBA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1B PUSH2 0x2D46 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x2D61 JUMPI POP PUSH2 0x2D61 DUP4 PUSH2 0x346E JUMP JUMPDEST ISZERO PUSH2 0x2D89 JUMPI PUSH2 0x2D6E PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH2 0x71A JUMP JUMPDEST PUSH2 0x2D91 PUSH2 0x2069 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9BE2A884 DUP5 DUP5 ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DC0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1253 SWAP2 SWAP1 PUSH2 0x3A10 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E1F DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x13CB JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH2 0x2E3D PUSH5 0xE8D4A51000 DUP3 LT ISZERO PUSH1 0xCB PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2E53 PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH1 0xCA PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x2E62 SWAP1 DUP3 PUSH1 0xC0 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA9BA3FFE0B6C366B81232CAAB38605A0699AD5398D6CCE76F91EE809E322DAFC SWAP1 PUSH2 0x1826 SWAP1 DUP4 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x3B61 JUMP JUMPDEST PUSH2 0x13EC PUSH2 0x2EB6 PUSH2 0x1831 JUMP JUMPDEST ISZERO PUSH2 0x1AF PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x2ECE DUP5 PUSH2 0x3491 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F39 DUP7 DUP4 PUSH2 0x2F13 DUP10 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2F06 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x22C7 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x34A7 JUMP JUMPDEST SWAP2 SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2F5D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x19B PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2F69 DUP3 PUSH1 0x0 DUP4 PUSH2 0x84C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2F8F SWAP1 DUP3 PUSH2 0x1A1 PUSH2 0x2E10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x2FB5 SWAP1 DUP3 PUSH2 0x3563 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x2FF6 SWAP1 DUP6 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x3011 SWAP1 DUP3 PUSH1 0x0 PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0x8 SSTORE POP JUMP JUMPDEST PUSH2 0x3023 PUSH1 0x0 DUP4 DUP4 PUSH2 0x84C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x3030 SWAP1 DUP3 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3056 SWAP1 DUP3 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x2FF6 SWAP1 DUP6 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x30B2 DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30C0 DUP3 DUP8 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30CE DUP7 DUP11 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30E9 DUP5 PUSH2 0x22D5 PUSH2 0x30E3 DUP6 DUP8 PUSH2 0x3571 JUMP JUMPDEST DUP11 PUSH2 0x358B JUMP JUMPDEST SWAP1 POP PUSH2 0x30F5 DUP9 DUP3 PUSH2 0x1396 JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3112 DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3120 DUP3 DUP8 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3137 PUSH2 0x3131 DUP4 DUP12 PUSH2 0x3571 JUMP JUMPDEST DUP8 PUSH2 0x35BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3145 DUP5 DUP4 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3153 DUP3 DUP9 PUSH2 0x35DE JUMP JUMPDEST SWAP1 POP PUSH2 0x315F DUP11 DUP3 PUSH2 0x1396 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x317B DUP5 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3192 PUSH2 0x318C DUP7 DUP9 PUSH2 0x1B44 JUMP JUMPDEST DUP6 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH2 0x1B21 DUP2 DUP4 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x31B6 JUMPI PUSH2 0x31AF DUP7 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH2 0x30FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C2 DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x31D3 PUSH2 0x318C DUP9 DUP11 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x31E1 DUP3 DUP5 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x31EF DUP5 DUP10 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH2 0x30F5 PUSH2 0x31FE DUP9 DUP5 PUSH2 0x3571 JUMP JUMPDEST DUP3 PUSH2 0x35BE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3211 DUP5 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x321F DUP3 DUP8 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x322D DUP3 DUP7 PUSH2 0x35DE JUMP JUMPDEST SWAP1 POP PUSH2 0x3239 DUP7 DUP3 PUSH2 0x1396 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3252 JUMPI POP DUP5 PUSH2 0x30FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x325E DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x326C DUP3 DUP8 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x327A DUP8 DUP11 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3288 DUP5 DUP4 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x329F PUSH2 0x3299 DUP10 DUP5 PUSH2 0x3571 JUMP JUMPDEST DUP6 PUSH2 0x35BE JUMP JUMPDEST SWAP1 POP PUSH2 0x315F DUP2 DUP10 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x32B9 JUMPI POP DUP5 PUSH2 0x30FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32C5 DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x32D3 DUP3 DUP8 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x32E1 DUP7 DUP11 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x32F6 DUP5 PUSH2 0x22D5 PUSH2 0x30E3 DUP6 DUP8 PUSH2 0x3571 JUMP JUMPDEST SWAP1 POP PUSH2 0x30F5 DUP2 DUP10 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3313 JUMPI PUSH2 0x31AF DUP7 DUP4 PUSH2 0x35DE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x331F DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x332D DUP3 DUP8 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3344 PUSH2 0x333E DUP4 DUP12 PUSH2 0x3571 JUMP JUMPDEST DUP8 PUSH2 0x358B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3352 DUP5 DUP4 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3360 DUP3 DUP9 PUSH2 0x35DE JUMP JUMPDEST SWAP1 POP PUSH2 0x315F DUP2 DUP12 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3379 DUP5 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x338A PUSH2 0x318C DUP7 DUP9 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B21 DUP3 DUP3 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x33A3 DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x33B4 PUSH2 0x318C DUP9 DUP11 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x33C2 DUP4 DUP4 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x33D0 DUP5 DUP10 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH2 0x30F5 PUSH2 0x33DF DUP9 DUP5 PUSH2 0x3571 JUMP JUMPDEST DUP3 PUSH2 0x358B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x33F2 DUP5 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3400 DUP3 DUP8 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x340E DUP3 DUP7 PUSH2 0x35DE JUMP JUMPDEST SWAP1 POP PUSH2 0x3239 DUP2 DUP8 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3427 DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3435 DUP3 DUP8 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3443 DUP8 DUP11 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3451 DUP5 DUP4 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3462 PUSH2 0x3299 DUP10 DUP5 PUSH2 0x3571 JUMP JUMPDEST SWAP1 POP PUSH2 0x315F DUP9 DUP3 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3480 PUSH4 0x4F888407 PUSH1 0xE1 SHL PUSH2 0xDC4 JUMP JUMPDEST DUP3 EQ DUP1 PUSH2 0x71A JUMPI POP PUSH2 0x71A DUP3 PUSH2 0x366E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x805 SWAP2 SWAP1 PUSH2 0x3B7B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x34B5 DUP6 DUP6 PUSH2 0x28C2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x34D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x34FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x3558 JUMPI DUP5 DUP2 EQ PUSH2 0x3550 JUMPI PUSH2 0x3537 DUP4 DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3521 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x245A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3543 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3501 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x805 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2E10 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x805 DUP5 ISZERO DUP1 PUSH2 0x2477 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x2474 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH2 0x359A DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x13CB JUMP JUMPDEST DUP3 PUSH2 0x35A7 JUMPI POP PUSH1 0x0 PUSH2 0x71A JUMP JUMPDEST DUP2 PUSH1 0x1 DUP5 SUB DUP2 PUSH2 0x35B3 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP1 POP PUSH2 0x71A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35CD DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x13CB JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x35D6 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD DUP4 LT ISZERO PUSH2 0x3627 JUMPI DUP2 MLOAD PUSH2 0x1253 SWAP1 PUSH2 0x3605 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD DUP5 MLOAD PUSH2 0x3621 SWAP2 PUSH2 0x361A SWAP2 SWAP1 PUSH2 0x245A JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 PUSH2 0x28C2 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD DUP4 GT PUSH2 0x3639 JUMPI POP DUP2 PUSH2 0x71A JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1253 SWAP1 PUSH2 0x3652 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD DUP5 MLOAD PUSH2 0x3621 SWAP2 PUSH2 0x3667 SWAP2 SWAP1 PUSH2 0x245A JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3680 PUSH4 0x1C74C917 PUSH1 0xE1 SHL PUSH2 0xDC4 JUMP JUMPDEST DUP3 EQ DUP1 PUSH2 0x71A JUMPI POP PUSH2 0x3698 PUSH4 0x50DD6ED9 PUSH1 0xE0 SHL PUSH2 0xDC4 JUMP JUMPDEST SWAP1 SWAP2 EQ SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xB54 DUP2 PUSH2 0x40AB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x36BB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x36D0 PUSH2 0x36CB DUP4 PUSH2 0x408D JUMP JUMPDEST PUSH2 0x4069 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x36EC JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x370A JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x36EE JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3727 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x3737 PUSH2 0x36CB DUP4 PUSH2 0x408D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x3753 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x370A JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3755 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3781 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3795 JUMPI INVALID JUMPDEST PUSH2 0x37A8 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x4069 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x37BC JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 DUP2 LT PUSH2 0xB54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0xB54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3805 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x805 DUP2 PUSH2 0x40AB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3822 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x382D DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x383D DUP2 PUSH2 0x40AB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x385C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3867 DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x3877 DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x38A2 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x38AD DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x38BD DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x38E0 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x390F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x391A DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x393C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3953 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3966 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x3976 PUSH2 0x36CB DUP4 PUSH2 0x408D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP13 LT ISZERO PUSH2 0x3992 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x39BD JUMPI DUP1 MLOAD PUSH2 0x39A9 DUP2 PUSH2 0x40AB JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x3996 JUMP JUMPDEST POP SWAP2 DUP10 ADD MLOAD SWAP2 SWAP8 POP SWAP1 SWAP4 POP POP POP DUP1 DUP3 GT ISZERO PUSH2 0x39D6 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x39E3 DUP7 DUP3 DUP8 ADD PUSH2 0x3717 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A05 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x805 DUP2 PUSH2 0x40C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A21 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x805 DUP2 PUSH2 0x40C0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3A46 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x3A58 DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x3A68 DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3A84 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3A90 DUP12 DUP4 DUP13 ADD PUSH2 0x36AB JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3AB3 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x3AC0 DUP11 DUP3 DUP12 ADD PUSH2 0x3771 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AE0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x805 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B08 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x805 DUP2 PUSH2 0x40AB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B25 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3B30 DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B4B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3B57 DUP6 DUP3 DUP7 ADD PUSH2 0x3771 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B72 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x805 DUP3 PUSH2 0x37D6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B8D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3B96 DUP4 PUSH2 0x37D6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3BBB JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3BD2 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP PUSH2 0x120 DUP1 DUP4 DUP11 SUB SLT ISZERO PUSH2 0x3BE8 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x3BF1 DUP2 PUSH2 0x4069 JUMP JUMPDEST SWAP1 POP PUSH2 0x3BFC DUP4 PUSH2 0x37E5 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x3C0A PUSH1 0x20 DUP5 ADD PUSH2 0x36A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3C1B PUSH1 0x40 DUP5 ADD PUSH2 0x36A0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x3C4A PUSH1 0xC0 DUP5 ADD PUSH2 0x36A0 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x3C5B PUSH1 0xE0 DUP5 ADD PUSH2 0x36A0 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD CALLDATALOAD DUP4 DUP2 GT ISZERO PUSH2 0x3C73 JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH2 0x3C7F DUP12 DUP3 DUP8 ADD PUSH2 0x3771 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP DUP1 SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3C9C JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x3CA9 DUP8 DUP3 DUP9 ADD PUSH2 0x36AB JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x60 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CD1 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CE9 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D02 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3D26 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x3D46 DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3D80 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3D64 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3DB6 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x3D9A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3DC7 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x805 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x3E59 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3D51 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x30FC DUP2 DUP6 PUSH2 0x3D51 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP3 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP3 DUP6 ADD MSTORE DUP1 DUP7 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD DUP6 MLOAD PUSH1 0x80 DUP1 DUP8 ADD MSTORE DUP2 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x120 DUP9 ADD SWAP2 POP DUP6 DUP4 ADD SWAP4 POP DUP7 SWAP3 POP JUMPDEST DUP1 DUP4 LT ISZERO PUSH2 0x3F1F JUMPI DUP4 MLOAD DUP6 AND DUP3 MSTORE SWAP3 DUP6 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 PUSH2 0x3EFD JUMP JUMPDEST POP DUP5 DUP9 ADD MLOAD SWAP5 POP PUSH1 0x7F NOT SWAP4 POP DUP4 DUP8 DUP3 SUB ADD PUSH1 0xA0 DUP9 ADD MSTORE PUSH2 0x3F3F DUP2 DUP7 PUSH2 0x3D51 JUMP JUMPDEST SWAP5 POP POP POP POP PUSH1 0x40 DUP6 ADD MLOAD DUP2 DUP6 DUP5 SUB ADD PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x3F5D DUP4 DUP3 PUSH2 0x3D91 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x3558 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x3D8B JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2607 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3D91 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x805 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D91 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2607 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3D51 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4085 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x40A1 JUMPI INVALID JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0xE6 PUSH3 0x3BD7B6 DUP3 0xA9 0xCC 0xA6 DUP5 PUSH3 0x828092 0xDF SWAP3 0xCA 0xC1 SWAP16 PUSH1 0x81 SELFDESTRUCT PUSH4 0x4D7FF9C0 0xB8 DUP11 0xD5 ISZERO PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"103642:1657:0:-:0;;;32912:95;32858:149;;103739:816;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;104099:5;104119:4;104138:6;104159:9;104183:12;104210:11;104236:17;104268:19;104302:20;104337:5;104099;79501:33;104119:4;104138:6;79589:42;104159:9;104183:12;79626:4;79589:11;:42::i;:::-;79646:28;;;76123:1;79646:28;;;;;;;;;;;;;;;;;;;;-1:-1:-1;79646:28:0;79689:17;79721:19;79755:20;79790:5;46197:19;46218:20;46109:4;46115:6;46123:5;35503:9;33285:4;16624:284;;;;;;;;;;;;;-1:-1:-1;;;16624:284:0;;;35467:9;35478:11;46161:5;46068:10;-1:-1:-1;;;;;46060:19:0;46052:28;;9437:21;9412:46;;;;;;9358:108;11445:5;-1:-1:-1;;;;;11436:14:0;;;-1:-1:-1;;;;;11436:14:0;;;;;;;11398:60;23184:5;23176;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;23200:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;23228:9:0;:14;;23240:2;-1:-1:-1;;23228:14:0;;;;;;-1:-1:-1;16705:22:0;;;;;;;16690:37;;16756:25;;;;;16738:43;;-1:-1:-1;16805:95:0;23228:14;16792:108;35525:14:::2;::::0;-1:-1:-1;;35525:14:0;::::2;::::0;-1:-1:-1;40143:93:0;;-1:-1:-1;39840:7:0;40152:49;;;114376:3;40143:8;:93::i;:::-;40247:96;39909:7;40256:51;;;114441:3;40247:8;:96::i;:::-;40385:15;:37;;;40435:40;;;;40509:41;40486:64;;46265:13;;46256:57:::4;::::0;44231:1:::4;-1:-1:-1::0;46265:28:0::4;110727:3;46256:8;:57::i;:::-;46324:61;46350:15;:13;:15::i;:::-;46333:13:::0;;:32:::4;;110776:3;46324:8;:61::i;:::-;46940:40;46973:6;46940:32;;;;;:40;;:::i;:::-;46993;47015:17:::0;46993:21:::4;:40::i;:::-;47063:34;::::0;-1:-1:-1;;;47063:34:0;;47046:14:::4;::::0;-1:-1:-1;;;;;47063:18:0;::::4;::::0;-1:-1:-1;;47063:34:0::4;::::0;47082:14;;47063:34:::4;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;47110:51;::::0;-1:-1:-1;;;47110:51:0;;47046;;-1:-1:-1;;;;;;47110:20:0;::::4;::::0;::::4;::::0;:51:::4;::::0;47046;;47139:6;;47147:13;;47110:51:::4;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;::::0;::::4;;;;;;;;;47274:6;47264:16;;;;::::0;::::4;45129:2159;::::0;;;;;;;;;;79859:9:::1;-1:-1:-1::0;;;;;79846:22:0::1;;;-1:-1:-1::0;;;;;79846:22:0::1;;;;;::::0;::::1;79895:12;-1:-1:-1::0;;;;;79879:28:0::1;;;-1:-1:-1::0;;;;;79879:28:0::1;;;;;::::0;::::1;79951:17;79970:20:::0;79992:16:::1;80012:103;80049:9;80073:12;80100:4;80012:22;;;:103;;:::i;:::-;80126:20;::::0;;;80157:22:::1;::::0;;;80190:28:::1;::::0;;;79950:165;;-1:-1:-1;79950:165:0;-1:-1:-1;79950:165:0;-1:-1:-1;80289:32:0::1;80311:9:::0;80289:21:::1;:32::i;:::-;80263:58;::::0;80361:35:::1;80383:12:::0;80361:21:::1;:35::i;:::-;80332:64;::::0;80615:19:::1;80649:48;80661:9:::0;80615:19;80685:11;80649::::1;:48::i;:::-;79123:1582;;;;::::0;;;;;;;;;;104407:12:::1;-1:-1:-1::0;;;;;104385:49:0::1;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;104370:66;::::0;-1:-1:-1;;104370:66:0;::::1;::::0;104478:44:::1;::::0;;-1:-1:-1;;;104478:44:0;;;;104447:100:::1;::::0;-1:-1:-1;;;;;104478:42:0;::::1;::::0;::::1;::::0;:44:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;:42;:44;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;104456:66:0;;::::1;::::0;::::1;;117483:3;104447:8;:100::i;:::-;103739:816:::0;;;;;;;;;;103642:1657;;118455:381;118553:22;118585:19;;;118650:46;118673:6;118681;118689;118650:22;:46::i;:::-;118712:15;;;118725:1;118712:15;;;;;;;;;118584:112;;-1:-1:-1;118584:112:0;;-1:-1:-1;118584:112:0;-1:-1:-1;118712:15:0;;;;;;;;;;-1:-1:-1;118712:15:0;118703:24;;118756:6;118734;118741:11;118734:19;;;;;;;;-1:-1:-1;;;;;118734:28:0;;;:19;;;;;;;;;;;:28;118769:19;;118791:6;;118769;;118776:11;;118769:19;;;;;;-1:-1:-1;;;;;118769:28:0;;;:19;;;;;;;;;;;:28;118804:19;;118826:6;;118804;;118811:11;;118804:19;;;;;;-1:-1:-1;;;;;118804:28:0;;;:19;;;;;;;;;;;:28;-1:-1:-1;118455:381:0;;;-1:-1:-1;;;;;118455:381:0:o;106393:103::-;106463:9;106458:34;;106474:18;106482:9;106474:7;:18::i;:::-;106393:103;;:::o;95475:105::-;76123:1;95475:105;:::o;166320:281::-;166534:5;166560:33;166534:5;166560:19;:33::i;48341:424::-;48418:87;44400:4;48427:45;;;110900:3;48418:8;:87::i;:::-;48516;44474:4;48525:45;;;110838:3;48516:8;:87::i;:::-;48628:70;48651:17;45009:3;48628:9;;:22;;;;;;:70;;;;;:::i;:::-;48616:9;:82;48714:43;;;;;;48739:17;;48714:43;:::i;:::-;;;;;;;;48341:424;:::o;119281:930::-;119410:19;;;-1:-1:-1;;;;;119509:15:0;;;;;;;119505:703;;;-1:-1:-1;;;;;119541:15:0;;;;;;;119537:306;;;-1:-1:-1;119622:1:0;;-1:-1:-1;119625:1:0;;-1:-1:-1;119628:1:0;119614:16;;119537:306;-1:-1:-1;;;;;119652:15:0;;;;;;;119648:195;;;-1:-1:-1;119733:1:0;;-1:-1:-1;119736:1:0;;-1:-1:-1;119739:1:0;119725:16;;119648:195;-1:-1:-1;119823:1:0;;-1:-1:-1;119826:1:0;;-1:-1:-1;119829:1:0;119815:16;;119505:703;-1:-1:-1;;;;;119899:15:0;;;;;;;119895:306;;;-1:-1:-1;119980:1:0;;-1:-1:-1;119983:1:0;;-1:-1:-1;119986:1:0;119972:16;;119895:306;-1:-1:-1;;;;;120010:15:0;;;;;;;120006:195;;;-1:-1:-1;120091:1:0;;-1:-1:-1;120094:1:0;;-1:-1:-1;120097:1:0;120083:16;;120006:195;-1:-1:-1;120181:1:0;;-1:-1:-1;120184:1:0;;-1:-1:-1;120187:1:0;120006:195;119281:930;;;;;;;:::o;62259:521::-;62327:7;62377:4;-1:-1:-1;;;;;62351:31:0;;;62347:85;;;-1:-1:-1;120365:4:0;62399:21;;62347:85;62525:21;62563:5;-1:-1:-1;;;;;62549:30:0;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;62525:56;;;;62659:26;62688:27;62697:2;62701:13;62688:8;;;;;:27;;:::i;:::-;62659:56;;62754:18;62750:2;:22;120365:4;62733:39;62726:46;;;;62259:521;;;;:::o;98927:719::-;99061:76;99070:26;;;;113268:3;99061:8;:76::i;:::-;99148:72;-1:-1:-1;99157:32:0;;;113328:3;99148:8;:72::i;:::-;99405:168;99507:55;99528:11;78958:2;99507:20;;;;;:55;;:::i;:::-;99432;99453:11;78902:1;99432:20;;;;;:55;;:::i;:::-;:130;99405:12;:168::i;:::-;99591:47;;-1:-1:-1;;;;;99591:47:0;;;;;;;99613:11;;99626;;99591:47;:::i;:::-;;;;;;;;98927:719;;;:::o;106608:3223::-;-1:-1:-1;;;109161:3:0;109154:79;;;109374:66;109368:4;109361:80;109518:1;109512:4;109505:15;107760:2;107795:18;;;107891;;;107939;;;107765:4;107935:29;;;108622:2;108618:17;107745:18;;;;107841;;;;107837:29;;;;108605:1;108601:14;108590:26;;;;108586:50;;;;108564:73;;108559:3;108555:83;109587:4;109580:26;109817:3;;109807:14;166609:385;166706:1;166691:5;:12;:16;166687:55;;;166724:7;;166687:55;166754:16;166773:5;166779:1;166773:8;;;;;;;;;;;;;;166754:27;;166797:9;166809:1;166797:13;;166792:195;166816:5;:12;166812:1;:16;166792:195;;;166850:15;166868:5;166874:1;166868:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;166891:51:0;-1:-1:-1;;;;;166900:18:0;;;;;;;110492:3;166891:8;:51::i;:::-;166968:7;-1:-1:-1;166830:3:0;;166792:195;;;;166609:385;;;:::o;173408:276::-;-1:-1:-1;173600:18:0;;173598:21;173582:37;;;;173660:15;;173638:38;;173408:276::o;164266:170::-;164324:7;164344:37;164353:6;;;;109960:1;164344:8;:37::i;:::-;-1:-1:-1;164404:5:0;;;164266:170::o;175177:133::-;175286:15;;175177:133::o;49984:114::-;50055:35;50079:7;50088:1;50055:9;;:23;;;;;;:35;;;;;:::i;:::-;50043:9;:47;-1:-1:-1;49984:114:0:o;174544:301::-;-1:-1:-1;;;;;174799:26:0;;;174798:38;;174737:19;;;174735:22;174719:38;;;;174776:61;;174544:301::o;103642:1657::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;103642:1657:0;;;-1:-1:-1;103642:1657:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:142:1;95:13;;117:33;95:13;117:33;:::i;161:863::-;;270:3;263:4;255:6;251:17;247:27;237:2;;292:5;285;278:20;237:2;319:13;;-1:-1:-1;381:10:1;;;378:2;;;394:9;378:2;434;428:9;456:4;-1:-1:-1;;526:2:1;507:13;;503:27;491:40;;487:49;;571:22;;;551:18;;;548:46;545:2;;;597:9;545:2;624;617:22;648:18;;;685:15;;;681:24;;678:33;-1:-1:-1;675:2:1;;;728:5;721;714:20;675:2;754:5;745:14;;768:133;782:2;779:1;776:9;768:133;;;870:14;;;866:23;;860:30;839:14;;;835:23;;828:63;793:10;;;;768:133;;;919:2;916:1;913:9;910:2;;;978:5;973:2;968;960:6;956:15;952:24;945:39;910:2;-1:-1:-1;1012:6:1;227:797;-1:-1:-1;;;;;227:797:1:o;1029:263::-;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1210:9;1204:16;1229:33;1256:5;1229:33;:::i;:::-;1281:5;1110:182;-1:-1:-1;;;1110:182:1:o;1297:194::-;;1420:2;1408:9;1399:7;1395:23;1391:32;1388:2;;;1441:6;1433;1426:22;1388:2;-1:-1:-1;1469:16:1;;1378:113;-1:-1:-1;1378:113:1:o;1785:1238::-;;;;;;;;;;;2124:3;2112:9;2103:7;2099:23;2095:33;2092:2;;;2146:6;2138;2131:22;2092:2;2174:42;2206:9;2174:42;:::i;:::-;2260:2;2245:18;;2239:25;2164:52;;-1:-1:-1;;2313:14:1;;;2310:2;;;2345:6;2337;2330:22;2310:2;2373:63;2428:7;2419:6;2408:9;2404:22;2373:63;:::i;:::-;2363:73;;2482:2;2471:9;2467:18;2461:25;2445:41;;2511:2;2501:8;2498:16;2495:2;;;2532:6;2524;2517:22;2495:2;;2560:65;2617:7;2606:8;2595:9;2591:24;2560:65;:::i;:::-;2550:75;;;2644:51;2691:2;2680:9;2676:18;2644:51;:::i;:::-;2634:61;;2714:52;2761:3;2750:9;2746:19;2714:52;:::i;:::-;2704:62;;2806:3;2795:9;2791:19;2785:26;2775:36;;2851:3;2840:9;2836:19;2830:26;2820:36;;2896:3;2885:9;2881:19;2875:26;2865:36;;2941:3;2930:9;2926:19;2920:26;2910:36;;2965:52;3012:3;3001:9;2997:19;2965:52;:::i;:::-;2955:62;;2082:941;;;;;;;;;;;;;:::o;3028:293::-;;3149:2;3137:9;3128:7;3124:23;3120:32;3117:2;;;3170:6;3162;3155:22;3117:2;3207:9;3201:16;3257:4;3250:5;3246:16;3239:5;3236:27;3226:2;;3282:6;3274;3267:22;3326:1294;;3636:2;3625:9;3621:18;3666:6;3655:9;3648:25;3692:2;3730;3725;3714:9;3710:18;3703:30;3753:6;3788;3782:13;3819:6;3811;3804:22;3857:3;3846:9;3842:19;3835:26;;3896:2;3888:6;3884:15;3870:29;;3917:4;3930:195;3944:6;3941:1;3938:13;3930:195;;;4009:13;;-1:-1:-1;;;;;4005:39:1;3993:52;;4100:15;;;;4065:12;;;;-1:-1:-1;3959:9:1;3930:195;;;-1:-1:-1;;4161:19:1;;;4156:2;4141:18;;4134:47;4231:13;;4253:21;;;4292:12;;;;-1:-1:-1;4329:15:1;;;;4364:4;4377:215;4393:8;4388:3;4385:17;4377:215;;;4466:15;;-1:-1:-1;;;;;4462:41:1;4448:56;;4526:14;;;;4565:17;;;;-1:-1:-1;4412:11:1;4377:215;;;-1:-1:-1;4609:5:1;;3597:1023;-1:-1:-1;;;;;;;;3597:1023:1:o;4625:245::-;4780:2;4765:18;;4813:1;4802:13;;4792:2;;4819:9;4792:2;4839:25;;;4747:123;:::o;4875:177::-;5021:25;;;5009:2;4994:18;;4976:76::o;5057:248::-;5231:25;;;5287:2;5272:18;;5265:34;5219:2;5204:18;;5186:119::o;5310:133::-;-1:-1:-1;;;;;5387:31:1;;5377:42;;5367:2;;5433:1;5430;5423:12;5357:86;103642:1657:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:22115:1","statements":[{"nodeType":"YulBlock","src":"6:3:1","statements":[]},{"body":{"nodeType":"YulBlock","src":"65:87:1","statements":[{"nodeType":"YulAssignment","src":"75:29:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"97:6:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"84:12:1"},"nodeType":"YulFunctionCall","src":"84:20:1"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"75:5:1"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"140:5:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"113:26:1"},"nodeType":"YulFunctionCall","src":"113:33:1"},"nodeType":"YulExpressionStatement","src":"113:33:1"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44:6:1","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"55:5:1","type":""}],"src":"14:138:1"},{"body":{"nodeType":"YulBlock","src":"227:632:1","statements":[{"body":{"nodeType":"YulBlock","src":"276:24:1","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"285:5:1"},{"name":"array","nodeType":"YulIdentifier","src":"292:5:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"278:6:1"},"nodeType":"YulFunctionCall","src":"278:20:1"},"nodeType":"YulExpressionStatement","src":"278:20:1"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"255:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"263:4:1","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"251:3:1"},"nodeType":"YulFunctionCall","src":"251:17:1"},{"name":"end","nodeType":"YulIdentifier","src":"270:3:1"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"247:3:1"},"nodeType":"YulFunctionCall","src":"247:27:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"240:6:1"},"nodeType":"YulFunctionCall","src":"240:35:1"},"nodeType":"YulIf","src":"237:2:1"},{"nodeType":"YulVariableDeclaration","src":"309:30:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"332:6:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"319:12:1"},"nodeType":"YulFunctionCall","src":"319:20:1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"313:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"348:14:1","value":{"kind":"number","nodeType":"YulLiteral","src":"358:4:1","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"352:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"371:73:1","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"440:2:1"}],"functionName":{"name":"array_allocation_size_t_array$_IERC20_$dyn","nodeType":"YulIdentifier","src":"397:42:1"},"nodeType":"YulFunctionCall","src":"397:46:1"}],"functionName":{"name":"allocateMemory","nodeType":"YulIdentifier","src":"382:14:1"},"nodeType":"YulFunctionCall","src":"382:62:1"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"375:3:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"453:16:1","value":{"name":"dst","nodeType":"YulIdentifier","src":"466:3:1"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"457:5:1","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"485:3:1"},{"name":"_1","nodeType":"YulIdentifier","src":"490:2:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"478:6:1"},"nodeType":"YulFunctionCall","src":"478:15:1"},"nodeType":"YulExpressionStatement","src":"478:15:1"},{"nodeType":"YulAssignment","src":"502:19:1","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"513:3:1"},{"name":"_2","nodeType":"YulIdentifier","src":"518:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"509:3:1"},"nodeType":"YulFunctionCall","src":"509:12:1"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"502:3:1"}]},{"nodeType":"YulVariableDeclaration","src":"530:26:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"545:6:1"},{"name":"_2","nodeType":"YulIdentifier","src":"553:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"541:3:1"},"nodeType":"YulFunctionCall","src":"541:15:1"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"534:3:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"611:24:1","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"620:5:1"},{"name":"array","nodeType":"YulIdentifier","src":"627:5:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"613:6:1"},"nodeType":"YulFunctionCall","src":"613:20:1"},"nodeType":"YulExpressionStatement","src":"613:20:1"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"579:6:1"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"591:2:1"},{"name":"_2","nodeType":"YulIdentifier","src":"595:2:1"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"587:3:1"},"nodeType":"YulFunctionCall","src":"587:11:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"575:3:1"},"nodeType":"YulFunctionCall","src":"575:24:1"},{"name":"_2","nodeType":"YulIdentifier","src":"601:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"571:3:1"},"nodeType":"YulFunctionCall","src":"571:33:1"},{"name":"end","nodeType":"YulIdentifier","src":"606:3:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"568:2:1"},"nodeType":"YulFunctionCall","src":"568:42:1"},"nodeType":"YulIf","src":"565:2:1"},{"nodeType":"YulVariableDeclaration","src":"644:14:1","value":{"name":"array","nodeType":"YulIdentifier","src":"653:5:1"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"648:1:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"712:118:1","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"733:3:1"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"751:3:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"738:12:1"},"nodeType":"YulFunctionCall","src":"738:17:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:1"},"nodeType":"YulFunctionCall","src":"726:30:1"},"nodeType":"YulExpressionStatement","src":"726:30:1"},{"nodeType":"YulAssignment","src":"769:19:1","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"780:3:1"},{"name":"_2","nodeType":"YulIdentifier","src":"785:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"776:3:1"},"nodeType":"YulFunctionCall","src":"776:12:1"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"769:3:1"}]},{"nodeType":"YulAssignment","src":"801:19:1","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"812:3:1"},{"name":"_2","nodeType":"YulIdentifier","src":"817:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"808:3:1"},"nodeType":"YulFunctionCall","src":"808:12:1"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"801:3:1"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"678:1:1"},{"name":"_1","nodeType":"YulIdentifier","src":"681:2:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"675:2:1"},"nodeType":"YulFunctionCall","src":"675:9:1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"685:18:1","statements":[{"nodeType":"YulAssignment","src":"687:14:1","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"696:1:1"},{"kind":"number","nodeType":"YulLiteral","src":"699:1:1","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"692:3:1"},"nodeType":"YulFunctionCall","src":"692:9:1"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"687:1:1"}]}]},"pre":{"nodeType":"YulBlock","src":"671:3:1","statements":[]},"src":"667:163:1"},{"nodeType":"YulAssignment","src":"839:14:1","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"848:5:1"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"839:5:1"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"201:6:1","type":""},{"name":"end","nodeType":"YulTypedName","src":"209:3:1","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"217:5:1","type":""}],"src":"157:702:1"},{"body":{"nodeType":"YulBlock","src":"945:618:1","statements":[{"body":{"nodeType":"YulBlock","src":"994:24:1","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1003:5:1"},{"name":"array","nodeType":"YulIdentifier","src":"1010:5:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"996:6:1"},"nodeType":"YulFunctionCall","src":"996:20:1"},"nodeType":"YulExpressionStatement","src":"996:20:1"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"973:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"981:4:1","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"969:3:1"},"nodeType":"YulFunctionCall","src":"969:17:1"},{"name":"end","nodeType":"YulIdentifier","src":"988:3:1"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"965:3:1"},"nodeType":"YulFunctionCall","src":"965:27:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"958:6:1"},"nodeType":"YulFunctionCall","src":"958:35:1"},"nodeType":"YulIf","src":"955:2:1"},{"nodeType":"YulVariableDeclaration","src":"1027:23:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1043:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1037:5:1"},"nodeType":"YulFunctionCall","src":"1037:13:1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1031:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1059:14:1","value":{"kind":"number","nodeType":"YulLiteral","src":"1069:4:1","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1063:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1082:73:1","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1151:2:1"}],"functionName":{"name":"array_allocation_size_t_array$_IERC20_$dyn","nodeType":"YulIdentifier","src":"1108:42:1"},"nodeType":"YulFunctionCall","src":"1108:46:1"}],"functionName":{"name":"allocateMemory","nodeType":"YulIdentifier","src":"1093:14:1"},"nodeType":"YulFunctionCall","src":"1093:62:1"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1086:3:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1164:16:1","value":{"name":"dst","nodeType":"YulIdentifier","src":"1177:3:1"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"1168:5:1","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1196:3:1"},{"name":"_1","nodeType":"YulIdentifier","src":"1201:2:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1189:6:1"},"nodeType":"YulFunctionCall","src":"1189:15:1"},"nodeType":"YulExpressionStatement","src":"1189:15:1"},{"nodeType":"YulAssignment","src":"1213:19:1","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1224:3:1"},{"name":"_2","nodeType":"YulIdentifier","src":"1229:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1220:3:1"},"nodeType":"YulFunctionCall","src":"1220:12:1"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1213:3:1"}]},{"nodeType":"YulVariableDeclaration","src":"1241:26:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1256:6:1"},{"name":"_2","nodeType":"YulIdentifier","src":"1264:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1252:3:1"},"nodeType":"YulFunctionCall","src":"1252:15:1"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"1245:3:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1322:24:1","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1331:5:1"},{"name":"array","nodeType":"YulIdentifier","src":"1338:5:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1324:6:1"},"nodeType":"YulFunctionCall","src":"1324:20:1"},"nodeType":"YulExpressionStatement","src":"1324:20:1"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1290:6:1"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1302:2:1"},{"name":"_2","nodeType":"YulIdentifier","src":"1306:2:1"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1298:3:1"},"nodeType":"YulFunctionCall","src":"1298:11:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1286:3:1"},"nodeType":"YulFunctionCall","src":"1286:24:1"},{"name":"_2","nodeType":"YulIdentifier","src":"1312:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1282:3:1"},"nodeType":"YulFunctionCall","src":"1282:33:1"},{"name":"end","nodeType":"YulIdentifier","src":"1317:3:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1279:2:1"},"nodeType":"YulFunctionCall","src":"1279:42:1"},"nodeType":"YulIf","src":"1276:2:1"},{"nodeType":"YulVariableDeclaration","src":"1355:14:1","value":{"name":"array","nodeType":"YulIdentifier","src":"1364:5:1"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1359:1:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1423:111:1","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1444:3:1"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1455:3:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1449:5:1"},"nodeType":"YulFunctionCall","src":"1449:10:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1437:6:1"},"nodeType":"YulFunctionCall","src":"1437:23:1"},"nodeType":"YulExpressionStatement","src":"1437:23:1"},{"nodeType":"YulAssignment","src":"1473:19:1","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1484:3:1"},{"name":"_2","nodeType":"YulIdentifier","src":"1489:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1480:3:1"},"nodeType":"YulFunctionCall","src":"1480:12:1"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1473:3:1"}]},{"nodeType":"YulAssignment","src":"1505:19:1","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1516:3:1"},{"name":"_2","nodeType":"YulIdentifier","src":"1521:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1512:3:1"},"nodeType":"YulFunctionCall","src":"1512:12:1"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1505:3:1"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1389:1:1"},{"name":"_1","nodeType":"YulIdentifier","src":"1392:2:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1386:2:1"},"nodeType":"YulFunctionCall","src":"1386:9:1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1396:18:1","statements":[{"nodeType":"YulAssignment","src":"1398:14:1","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1407:1:1"},{"kind":"number","nodeType":"YulLiteral","src":"1410:1:1","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1403:3:1"},"nodeType":"YulFunctionCall","src":"1403:9:1"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1398:1:1"}]}]},"pre":{"nodeType":"YulBlock","src":"1382:3:1","statements":[]},"src":"1378:156:1"},{"nodeType":"YulAssignment","src":"1543:14:1","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"1552:5:1"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1543:5:1"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"919:6:1","type":""},{"name":"end","nodeType":"YulTypedName","src":"927:3:1","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"935:5:1","type":""}],"src":"864:699:1"},{"body":{"nodeType":"YulBlock","src":"1622:488:1","statements":[{"body":{"nodeType":"YulBlock","src":"1671:24:1","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1680:5:1"},{"name":"array","nodeType":"YulIdentifier","src":"1687:5:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1673:6:1"},"nodeType":"YulFunctionCall","src":"1673:20:1"},"nodeType":"YulExpressionStatement","src":"1673:20:1"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1650:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"1658:4:1","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1646:3:1"},"nodeType":"YulFunctionCall","src":"1646:17:1"},{"name":"end","nodeType":"YulIdentifier","src":"1665:3:1"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1642:3:1"},"nodeType":"YulFunctionCall","src":"1642:27:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1635:6:1"},"nodeType":"YulFunctionCall","src":"1635:35:1"},"nodeType":"YulIf","src":"1632:2:1"},{"nodeType":"YulVariableDeclaration","src":"1704:30:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1727:6:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1714:12:1"},"nodeType":"YulFunctionCall","src":"1714:20:1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1708:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1773:13:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"1775:7:1"},"nodeType":"YulFunctionCall","src":"1775:9:1"},"nodeType":"YulExpressionStatement","src":"1775:9:1"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1749:2:1"},{"kind":"number","nodeType":"YulLiteral","src":"1753:18:1","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1746:2:1"},"nodeType":"YulFunctionCall","src":"1746:26:1"},"nodeType":"YulIf","src":"1743:2:1"},{"nodeType":"YulVariableDeclaration","src":"1795:69:1","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1837:2:1"},{"kind":"number","nodeType":"YulLiteral","src":"1841:4:1","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1833:3:1"},"nodeType":"YulFunctionCall","src":"1833:13:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1852:2:1","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1848:3:1"},"nodeType":"YulFunctionCall","src":"1848:7:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1829:3:1"},"nodeType":"YulFunctionCall","src":"1829:27:1"},{"kind":"number","nodeType":"YulLiteral","src":"1858:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1825:3:1"},"nodeType":"YulFunctionCall","src":"1825:38:1"}],"functionName":{"name":"allocateMemory","nodeType":"YulIdentifier","src":"1810:14:1"},"nodeType":"YulFunctionCall","src":"1810:54:1"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"1799:7:1","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"1880:7:1"},{"name":"_1","nodeType":"YulIdentifier","src":"1889:2:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1873:6:1"},"nodeType":"YulFunctionCall","src":"1873:19:1"},"nodeType":"YulExpressionStatement","src":"1873:19:1"},{"body":{"nodeType":"YulBlock","src":"1940:24:1","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1949:5:1"},{"name":"array","nodeType":"YulIdentifier","src":"1956:5:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1942:6:1"},"nodeType":"YulFunctionCall","src":"1942:20:1"},"nodeType":"YulExpressionStatement","src":"1942:20:1"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1915:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"1923:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1911:3:1"},"nodeType":"YulFunctionCall","src":"1911:15:1"},{"kind":"number","nodeType":"YulLiteral","src":"1928:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1907:3:1"},"nodeType":"YulFunctionCall","src":"1907:26:1"},{"name":"end","nodeType":"YulIdentifier","src":"1935:3:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1904:2:1"},"nodeType":"YulFunctionCall","src":"1904:35:1"},"nodeType":"YulIf","src":"1901:2:1"},{"expression":{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"1990:7:1"},{"kind":"number","nodeType":"YulLiteral","src":"1999:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1986:3:1"},"nodeType":"YulFunctionCall","src":"1986:18:1"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2010:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"2018:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2006:3:1"},"nodeType":"YulFunctionCall","src":"2006:17:1"},{"name":"_1","nodeType":"YulIdentifier","src":"2025:2:1"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1973:12:1"},"nodeType":"YulFunctionCall","src":"1973:55:1"},"nodeType":"YulExpressionStatement","src":"1973:55:1"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"2052:7:1"},{"name":"_1","nodeType":"YulIdentifier","src":"2061:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2048:3:1"},"nodeType":"YulFunctionCall","src":"2048:16:1"},{"kind":"number","nodeType":"YulLiteral","src":"2066:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2044:3:1"},"nodeType":"YulFunctionCall","src":"2044:27:1"},{"name":"array","nodeType":"YulIdentifier","src":"2073:5:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2037:6:1"},"nodeType":"YulFunctionCall","src":"2037:42:1"},"nodeType":"YulExpressionStatement","src":"2037:42:1"},{"nodeType":"YulAssignment","src":"2088:16:1","value":{"name":"array_1","nodeType":"YulIdentifier","src":"2097:7:1"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2088:5:1"}]}]},"name":"abi_decode_t_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1596:6:1","type":""},{"name":"end","nodeType":"YulTypedName","src":"1604:3:1","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1612:5:1","type":""}],"src":"1568:542:1"},{"body":{"nodeType":"YulBlock","src":"2184:87:1","statements":[{"nodeType":"YulAssignment","src":"2194:22:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2209:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2203:5:1"},"nodeType":"YulFunctionCall","src":"2203:13:1"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2194:5:1"}]},{"body":{"nodeType":"YulBlock","src":"2249:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2258:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2261:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2251:6:1"},"nodeType":"YulFunctionCall","src":"2251:12:1"},"nodeType":"YulExpressionStatement","src":"2251:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2238:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"2245:1:1","type":"","value":"1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2235:2:1"},"nodeType":"YulFunctionCall","src":"2235:12:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2228:6:1"},"nodeType":"YulFunctionCall","src":"2228:20:1"},"nodeType":"YulIf","src":"2225:2:1"}]},"name":"abi_decode_t_enum$_ExitKind_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2163:6:1","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2174:5:1","type":""}],"src":"2115:156:1"},{"body":{"nodeType":"YulBlock","src":"2334:94:1","statements":[{"nodeType":"YulAssignment","src":"2344:29:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2366:6:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2353:12:1"},"nodeType":"YulFunctionCall","src":"2353:20:1"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2344:5:1"}]},{"body":{"nodeType":"YulBlock","src":"2406:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2415:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2418:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2408:6:1"},"nodeType":"YulFunctionCall","src":"2408:12:1"},"nodeType":"YulExpressionStatement","src":"2408:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2395:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"2402:1:1","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2392:2:1"},"nodeType":"YulFunctionCall","src":"2392:12:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2385:6:1"},"nodeType":"YulFunctionCall","src":"2385:20:1"},"nodeType":"YulIf","src":"2382:2:1"}]},"name":"abi_decode_t_enum$_SwapKind","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2313:6:1","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2324:5:1","type":""}],"src":"2276:152:1"},{"body":{"nodeType":"YulBlock","src":"2503:189:1","statements":[{"body":{"nodeType":"YulBlock","src":"2549:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2558:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"2566:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2551:6:1"},"nodeType":"YulFunctionCall","src":"2551:22:1"},"nodeType":"YulExpressionStatement","src":"2551:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2524:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"2533:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2520:3:1"},"nodeType":"YulFunctionCall","src":"2520:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"2545:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2516:3:1"},"nodeType":"YulFunctionCall","src":"2516:32:1"},"nodeType":"YulIf","src":"2513:2:1"},{"nodeType":"YulVariableDeclaration","src":"2584:36:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2610:9:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2597:12:1"},"nodeType":"YulFunctionCall","src":"2597:23:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2588:5:1","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2656:5:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2629:26:1"},"nodeType":"YulFunctionCall","src":"2629:33:1"},"nodeType":"YulExpressionStatement","src":"2629:33:1"},{"nodeType":"YulAssignment","src":"2671:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"2681:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2671:6:1"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2469:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2480:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2492:6:1","type":""}],"src":"2433:259:1"},{"body":{"nodeType":"YulBlock","src":"2784:315:1","statements":[{"body":{"nodeType":"YulBlock","src":"2830:26:1","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2839:6:1"},{"name":"value1","nodeType":"YulIdentifier","src":"2847:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2832:6:1"},"nodeType":"YulFunctionCall","src":"2832:22:1"},"nodeType":"YulExpressionStatement","src":"2832:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2805:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"2814:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2801:3:1"},"nodeType":"YulFunctionCall","src":"2801:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"2826:2:1","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2797:3:1"},"nodeType":"YulFunctionCall","src":"2797:32:1"},"nodeType":"YulIf","src":"2794:2:1"},{"nodeType":"YulVariableDeclaration","src":"2865:36:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2891:9:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2878:12:1"},"nodeType":"YulFunctionCall","src":"2878:23:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2869:5:1","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2937:5:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2910:26:1"},"nodeType":"YulFunctionCall","src":"2910:33:1"},"nodeType":"YulExpressionStatement","src":"2910:33:1"},{"nodeType":"YulAssignment","src":"2952:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"2962:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2952:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"2976:47:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3008:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3019:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3004:3:1"},"nodeType":"YulFunctionCall","src":"3004:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2991:12:1"},"nodeType":"YulFunctionCall","src":"2991:32:1"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2980:7:1","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"3059:7:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3032:26:1"},"nodeType":"YulFunctionCall","src":"3032:35:1"},"nodeType":"YulExpressionStatement","src":"3032:35:1"},{"nodeType":"YulAssignment","src":"3076:17:1","value":{"name":"value_1","nodeType":"YulIdentifier","src":"3086:7:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3076:6:1"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2742:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2753:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2765:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2773:6:1","type":""}],"src":"2697:402:1"},{"body":{"nodeType":"YulBlock","src":"3208:366:1","statements":[{"body":{"nodeType":"YulBlock","src":"3254:26:1","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"3263:6:1"},{"name":"value2","nodeType":"YulIdentifier","src":"3271:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3256:6:1"},"nodeType":"YulFunctionCall","src":"3256:22:1"},"nodeType":"YulExpressionStatement","src":"3256:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3229:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"3238:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3225:3:1"},"nodeType":"YulFunctionCall","src":"3225:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"3250:2:1","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3221:3:1"},"nodeType":"YulFunctionCall","src":"3221:32:1"},"nodeType":"YulIf","src":"3218:2:1"},{"nodeType":"YulVariableDeclaration","src":"3289:36:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3315:9:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3302:12:1"},"nodeType":"YulFunctionCall","src":"3302:23:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3293:5:1","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3361:5:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3334:26:1"},"nodeType":"YulFunctionCall","src":"3334:33:1"},"nodeType":"YulExpressionStatement","src":"3334:33:1"},{"nodeType":"YulAssignment","src":"3376:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"3386:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3376:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"3400:47:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3432:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3443:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3428:3:1"},"nodeType":"YulFunctionCall","src":"3428:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3415:12:1"},"nodeType":"YulFunctionCall","src":"3415:32:1"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"3404:7:1","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"3483:7:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3456:26:1"},"nodeType":"YulFunctionCall","src":"3456:35:1"},"nodeType":"YulExpressionStatement","src":"3456:35:1"},{"nodeType":"YulAssignment","src":"3500:17:1","value":{"name":"value_1","nodeType":"YulIdentifier","src":"3510:7:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3500:6:1"}]},{"nodeType":"YulAssignment","src":"3526:42:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3553:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3564:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3549:3:1"},"nodeType":"YulFunctionCall","src":"3549:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3536:12:1"},"nodeType":"YulFunctionCall","src":"3536:32:1"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3526:6:1"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3158:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3169:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3181:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3189:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3197:6:1","type":""}],"src":"3104:470:1"},{"body":{"nodeType":"YulBlock","src":"3749:683:1","statements":[{"body":{"nodeType":"YulBlock","src":"3796:26:1","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"3805:6:1"},{"name":"value2","nodeType":"YulIdentifier","src":"3813:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3798:6:1"},"nodeType":"YulFunctionCall","src":"3798:22:1"},"nodeType":"YulExpressionStatement","src":"3798:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3770:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"3779:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3766:3:1"},"nodeType":"YulFunctionCall","src":"3766:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"3791:3:1","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3762:3:1"},"nodeType":"YulFunctionCall","src":"3762:33:1"},"nodeType":"YulIf","src":"3759:2:1"},{"nodeType":"YulVariableDeclaration","src":"3831:36:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3857:9:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3844:12:1"},"nodeType":"YulFunctionCall","src":"3844:23:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3835:5:1","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3903:5:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3876:26:1"},"nodeType":"YulFunctionCall","src":"3876:33:1"},"nodeType":"YulExpressionStatement","src":"3876:33:1"},{"nodeType":"YulAssignment","src":"3918:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"3928:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3918:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"3942:47:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3974:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3985:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3970:3:1"},"nodeType":"YulFunctionCall","src":"3970:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3957:12:1"},"nodeType":"YulFunctionCall","src":"3957:32:1"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"3946:7:1","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4025:7:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3998:26:1"},"nodeType":"YulFunctionCall","src":"3998:35:1"},"nodeType":"YulExpressionStatement","src":"3998:35:1"},{"nodeType":"YulAssignment","src":"4042:17:1","value":{"name":"value_1","nodeType":"YulIdentifier","src":"4052:7:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4042:6:1"}]},{"nodeType":"YulAssignment","src":"4068:42:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4095:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4106:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4091:3:1"},"nodeType":"YulFunctionCall","src":"4091:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4078:12:1"},"nodeType":"YulFunctionCall","src":"4078:32:1"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4068:6:1"}]},{"nodeType":"YulAssignment","src":"4119:42:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4146:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4157:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4142:3:1"},"nodeType":"YulFunctionCall","src":"4142:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4129:12:1"},"nodeType":"YulFunctionCall","src":"4129:32:1"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4119:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"4170:48:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4202:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4213:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4198:3:1"},"nodeType":"YulFunctionCall","src":"4198:19:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4185:12:1"},"nodeType":"YulFunctionCall","src":"4185:33:1"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"4174:7:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"4270:26:1","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"4279:6:1"},{"name":"value4","nodeType":"YulIdentifier","src":"4287:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4272:6:1"},"nodeType":"YulFunctionCall","src":"4272:22:1"},"nodeType":"YulExpressionStatement","src":"4272:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"4240:7:1"},{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"4253:7:1"},{"kind":"number","nodeType":"YulLiteral","src":"4262:4:1","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4249:3:1"},"nodeType":"YulFunctionCall","src":"4249:18:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4237:2:1"},"nodeType":"YulFunctionCall","src":"4237:31:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4230:6:1"},"nodeType":"YulFunctionCall","src":"4230:39:1"},"nodeType":"YulIf","src":"4227:2:1"},{"nodeType":"YulAssignment","src":"4305:17:1","value":{"name":"value_2","nodeType":"YulIdentifier","src":"4315:7:1"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4305:6:1"}]},{"nodeType":"YulAssignment","src":"4331:43:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4358:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4369:3:1","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4354:3:1"},"nodeType":"YulFunctionCall","src":"4354:19:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4341:12:1"},"nodeType":"YulFunctionCall","src":"4341:33:1"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4331:6:1"}]},{"nodeType":"YulAssignment","src":"4383:43:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4410:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4421:3:1","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4406:3:1"},"nodeType":"YulFunctionCall","src":"4406:19:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4393:12:1"},"nodeType":"YulFunctionCall","src":"4393:33:1"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"4383:6:1"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3667:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3678:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3690:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3698:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3706:6:1","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3714:6:1","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3722:6:1","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3730:6:1","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3738:6:1","type":""}],"src":"3579:853:1"},{"body":{"nodeType":"YulBlock","src":"4524:240:1","statements":[{"body":{"nodeType":"YulBlock","src":"4570:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4579:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"4587:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4572:6:1"},"nodeType":"YulFunctionCall","src":"4572:22:1"},"nodeType":"YulExpressionStatement","src":"4572:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4545:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"4554:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4541:3:1"},"nodeType":"YulFunctionCall","src":"4541:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"4566:2:1","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4537:3:1"},"nodeType":"YulFunctionCall","src":"4537:32:1"},"nodeType":"YulIf","src":"4534:2:1"},{"nodeType":"YulVariableDeclaration","src":"4605:36:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4631:9:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4618:12:1"},"nodeType":"YulFunctionCall","src":"4618:23:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4609:5:1","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4677:5:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4650:26:1"},"nodeType":"YulFunctionCall","src":"4650:33:1"},"nodeType":"YulExpressionStatement","src":"4650:33:1"},{"nodeType":"YulAssignment","src":"4692:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"4702:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4692:6:1"}]},{"nodeType":"YulAssignment","src":"4716:42:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4743:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4754:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4739:3:1"},"nodeType":"YulFunctionCall","src":"4739:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4726:12:1"},"nodeType":"YulFunctionCall","src":"4726:32:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4716:6:1"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4482:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4493:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4505:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4513:6:1","type":""}],"src":"4437:327:1"},{"body":{"nodeType":"YulBlock","src":"4948:1182:1","statements":[{"body":{"nodeType":"YulBlock","src":"4994:26:1","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5003:6:1"},{"name":"value2","nodeType":"YulIdentifier","src":"5011:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4996:6:1"},"nodeType":"YulFunctionCall","src":"4996:22:1"},"nodeType":"YulExpressionStatement","src":"4996:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4969:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"4978:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4965:3:1"},"nodeType":"YulFunctionCall","src":"4965:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"4990:2:1","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4961:3:1"},"nodeType":"YulFunctionCall","src":"4961:32:1"},"nodeType":"YulIf","src":"4958:2:1"},{"nodeType":"YulVariableDeclaration","src":"5029:30:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5049:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5043:5:1"},"nodeType":"YulFunctionCall","src":"5043:16:1"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5033:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5068:28:1","value":{"kind":"number","nodeType":"YulLiteral","src":"5078:18:1","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5072:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"5123:26:1","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5132:6:1"},{"name":"value2","nodeType":"YulIdentifier","src":"5140:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5125:6:1"},"nodeType":"YulFunctionCall","src":"5125:22:1"},"nodeType":"YulExpressionStatement","src":"5125:22:1"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5111:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"5119:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5108:2:1"},"nodeType":"YulFunctionCall","src":"5108:14:1"},"nodeType":"YulIf","src":"5105:2:1"},{"nodeType":"YulVariableDeclaration","src":"5158:32:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5172:9:1"},{"name":"offset","nodeType":"YulIdentifier","src":"5183:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5168:3:1"},"nodeType":"YulFunctionCall","src":"5168:22:1"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5162:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"5238:26:1","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5247:6:1"},{"name":"value2","nodeType":"YulIdentifier","src":"5255:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5240:6:1"},"nodeType":"YulFunctionCall","src":"5240:22:1"},"nodeType":"YulExpressionStatement","src":"5240:22:1"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5217:2:1"},{"kind":"number","nodeType":"YulLiteral","src":"5221:4:1","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5213:3:1"},"nodeType":"YulFunctionCall","src":"5213:13:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5228:7:1"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5209:3:1"},"nodeType":"YulFunctionCall","src":"5209:27:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5202:6:1"},"nodeType":"YulFunctionCall","src":"5202:35:1"},"nodeType":"YulIf","src":"5199:2:1"},{"nodeType":"YulVariableDeclaration","src":"5273:19:1","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5289:2:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5283:5:1"},"nodeType":"YulFunctionCall","src":"5283:9:1"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5277:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5301:14:1","value":{"kind":"number","nodeType":"YulLiteral","src":"5311:4:1","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"5305:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5324:73:1","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5393:2:1"}],"functionName":{"name":"array_allocation_size_t_array$_IERC20_$dyn","nodeType":"YulIdentifier","src":"5350:42:1"},"nodeType":"YulFunctionCall","src":"5350:46:1"}],"functionName":{"name":"allocateMemory","nodeType":"YulIdentifier","src":"5335:14:1"},"nodeType":"YulFunctionCall","src":"5335:62:1"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5328:3:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5406:16:1","value":{"name":"dst","nodeType":"YulIdentifier","src":"5419:3:1"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"5410:5:1","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5438:3:1"},{"name":"_3","nodeType":"YulIdentifier","src":"5443:2:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5431:6:1"},"nodeType":"YulFunctionCall","src":"5431:15:1"},"nodeType":"YulExpressionStatement","src":"5431:15:1"},{"nodeType":"YulAssignment","src":"5455:19:1","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5466:3:1"},{"name":"_4","nodeType":"YulIdentifier","src":"5471:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5462:3:1"},"nodeType":"YulFunctionCall","src":"5462:12:1"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5455:3:1"}]},{"nodeType":"YulVariableDeclaration","src":"5483:22:1","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5498:2:1"},{"name":"_4","nodeType":"YulIdentifier","src":"5502:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5494:3:1"},"nodeType":"YulFunctionCall","src":"5494:11:1"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5487:3:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"5560:26:1","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5569:6:1"},{"name":"value2","nodeType":"YulIdentifier","src":"5577:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5562:6:1"},"nodeType":"YulFunctionCall","src":"5562:22:1"},"nodeType":"YulExpressionStatement","src":"5562:22:1"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5528:2:1"},{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5536:2:1"},{"name":"_4","nodeType":"YulIdentifier","src":"5540:2:1"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5532:3:1"},"nodeType":"YulFunctionCall","src":"5532:11:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5524:3:1"},"nodeType":"YulFunctionCall","src":"5524:20:1"},{"name":"_4","nodeType":"YulIdentifier","src":"5546:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5520:3:1"},"nodeType":"YulFunctionCall","src":"5520:29:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5551:7:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5517:2:1"},"nodeType":"YulFunctionCall","src":"5517:42:1"},"nodeType":"YulIf","src":"5514:2:1"},{"nodeType":"YulVariableDeclaration","src":"5595:15:1","value":{"name":"value2","nodeType":"YulIdentifier","src":"5604:6:1"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5599:1:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"5664:188:1","statements":[{"nodeType":"YulVariableDeclaration","src":"5678:23:1","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5697:3:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5691:5:1"},"nodeType":"YulFunctionCall","src":"5691:10:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5682:5:1","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5741:5:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"5714:26:1"},"nodeType":"YulFunctionCall","src":"5714:33:1"},"nodeType":"YulExpressionStatement","src":"5714:33:1"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5767:3:1"},{"name":"value","nodeType":"YulIdentifier","src":"5772:5:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5760:6:1"},"nodeType":"YulFunctionCall","src":"5760:18:1"},"nodeType":"YulExpressionStatement","src":"5760:18:1"},{"nodeType":"YulAssignment","src":"5791:19:1","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5802:3:1"},{"name":"_4","nodeType":"YulIdentifier","src":"5807:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5798:3:1"},"nodeType":"YulFunctionCall","src":"5798:12:1"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5791:3:1"}]},{"nodeType":"YulAssignment","src":"5823:19:1","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5834:3:1"},{"name":"_4","nodeType":"YulIdentifier","src":"5839:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5830:3:1"},"nodeType":"YulFunctionCall","src":"5830:12:1"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5823:3:1"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5630:1:1"},{"name":"_3","nodeType":"YulIdentifier","src":"5633:2:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5627:2:1"},"nodeType":"YulFunctionCall","src":"5627:9:1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5637:18:1","statements":[{"nodeType":"YulAssignment","src":"5639:14:1","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5648:1:1"},{"kind":"number","nodeType":"YulLiteral","src":"5651:1:1","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5644:3:1"},"nodeType":"YulFunctionCall","src":"5644:9:1"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5639:1:1"}]}]},"pre":{"nodeType":"YulBlock","src":"5623:3:1","statements":[]},"src":"5619:233:1"},{"nodeType":"YulAssignment","src":"5861:15:1","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"5871:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5861:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"5885:41:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5911:9:1"},{"name":"_4","nodeType":"YulIdentifier","src":"5922:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5907:3:1"},"nodeType":"YulFunctionCall","src":"5907:18:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5901:5:1"},"nodeType":"YulFunctionCall","src":"5901:25:1"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"5889:8:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"5955:26:1","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5964:6:1"},{"name":"value2","nodeType":"YulIdentifier","src":"5972:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5957:6:1"},"nodeType":"YulFunctionCall","src":"5957:22:1"},"nodeType":"YulExpressionStatement","src":"5957:22:1"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"5941:8:1"},{"name":"_1","nodeType":"YulIdentifier","src":"5951:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5938:2:1"},"nodeType":"YulFunctionCall","src":"5938:16:1"},"nodeType":"YulIf","src":"5935:2:1"},{"nodeType":"YulAssignment","src":"5990:90:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6050:9:1"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6061:8:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6046:3:1"},"nodeType":"YulFunctionCall","src":"6046:24:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6072:7:1"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_fromMemory","nodeType":"YulIdentifier","src":"6000:45:1"},"nodeType":"YulFunctionCall","src":"6000:80:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5990:6:1"}]},{"nodeType":"YulAssignment","src":"6089:35:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6109:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"6120:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6105:3:1"},"nodeType":"YulFunctionCall","src":"6105:18:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6099:5:1"},"nodeType":"YulFunctionCall","src":"6099:25:1"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6089:6:1"}]}]},"name":"abi_decode_tuple_t_array$_t_contract$_IERC20_$486_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4898:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4909:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4921:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4929:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4937:6:1","type":""}],"src":"4769:1361:1"},{"body":{"nodeType":"YulBlock","src":"6202:186:1","statements":[{"body":{"nodeType":"YulBlock","src":"6248:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6257:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"6265:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6250:6:1"},"nodeType":"YulFunctionCall","src":"6250:22:1"},"nodeType":"YulExpressionStatement","src":"6250:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6223:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"6232:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6219:3:1"},"nodeType":"YulFunctionCall","src":"6219:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"6244:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6215:3:1"},"nodeType":"YulFunctionCall","src":"6215:32:1"},"nodeType":"YulIf","src":"6212:2:1"},{"nodeType":"YulVariableDeclaration","src":"6283:36:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6309:9:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6296:12:1"},"nodeType":"YulFunctionCall","src":"6296:23:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6287:5:1","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6352:5:1"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6328:23:1"},"nodeType":"YulFunctionCall","src":"6328:30:1"},"nodeType":"YulExpressionStatement","src":"6328:30:1"},{"nodeType":"YulAssignment","src":"6367:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"6377:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6367:6:1"}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6168:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6179:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6191:6:1","type":""}],"src":"6135:253:1"},{"body":{"nodeType":"YulBlock","src":"6471:179:1","statements":[{"body":{"nodeType":"YulBlock","src":"6517:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6526:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"6534:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6519:6:1"},"nodeType":"YulFunctionCall","src":"6519:22:1"},"nodeType":"YulExpressionStatement","src":"6519:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6492:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"6501:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6488:3:1"},"nodeType":"YulFunctionCall","src":"6488:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"6513:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6484:3:1"},"nodeType":"YulFunctionCall","src":"6484:32:1"},"nodeType":"YulIf","src":"6481:2:1"},{"nodeType":"YulVariableDeclaration","src":"6552:29:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6571:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6565:5:1"},"nodeType":"YulFunctionCall","src":"6565:16:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6556:5:1","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6614:5:1"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6590:23:1"},"nodeType":"YulFunctionCall","src":"6590:30:1"},"nodeType":"YulExpressionStatement","src":"6590:30:1"},{"nodeType":"YulAssignment","src":"6629:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"6639:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6629:6:1"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6437:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6448:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6460:6:1","type":""}],"src":"6393:257:1"},{"body":{"nodeType":"YulBlock","src":"6861:887:1","statements":[{"body":{"nodeType":"YulBlock","src":"6908:26:1","statements":[{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"6917:6:1"},{"name":"value6","nodeType":"YulIdentifier","src":"6925:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6910:6:1"},"nodeType":"YulFunctionCall","src":"6910:22:1"},"nodeType":"YulExpressionStatement","src":"6910:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6882:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"6891:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6878:3:1"},"nodeType":"YulFunctionCall","src":"6878:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"6903:3:1","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6874:3:1"},"nodeType":"YulFunctionCall","src":"6874:33:1"},"nodeType":"YulIf","src":"6871:2:1"},{"nodeType":"YulAssignment","src":"6943:33:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6966:9:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6953:12:1"},"nodeType":"YulFunctionCall","src":"6953:23:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6943:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"6985:45:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7015:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"7026:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7011:3:1"},"nodeType":"YulFunctionCall","src":"7011:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6998:12:1"},"nodeType":"YulFunctionCall","src":"6998:32:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6989:5:1","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7066:5:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"7039:26:1"},"nodeType":"YulFunctionCall","src":"7039:33:1"},"nodeType":"YulExpressionStatement","src":"7039:33:1"},{"nodeType":"YulAssignment","src":"7081:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"7091:5:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7081:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"7105:47:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7137:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"7148:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7133:3:1"},"nodeType":"YulFunctionCall","src":"7133:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7120:12:1"},"nodeType":"YulFunctionCall","src":"7120:32:1"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"7109:7:1","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"7188:7:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"7161:26:1"},"nodeType":"YulFunctionCall","src":"7161:35:1"},"nodeType":"YulExpressionStatement","src":"7161:35:1"},{"nodeType":"YulAssignment","src":"7205:17:1","value":{"name":"value_1","nodeType":"YulIdentifier","src":"7215:7:1"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7205:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"7231:46:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7262:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"7273:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7258:3:1"},"nodeType":"YulFunctionCall","src":"7258:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7245:12:1"},"nodeType":"YulFunctionCall","src":"7245:32:1"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7235:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7286:28:1","value":{"kind":"number","nodeType":"YulLiteral","src":"7296:18:1","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7290:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"7341:26:1","statements":[{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"7350:6:1"},{"name":"value6","nodeType":"YulIdentifier","src":"7358:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7343:6:1"},"nodeType":"YulFunctionCall","src":"7343:22:1"},"nodeType":"YulExpressionStatement","src":"7343:22:1"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7329:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"7337:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7326:2:1"},"nodeType":"YulFunctionCall","src":"7326:14:1"},"nodeType":"YulIf","src":"7323:2:1"},{"nodeType":"YulAssignment","src":"7376:77:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7425:9:1"},{"name":"offset","nodeType":"YulIdentifier","src":"7436:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7421:3:1"},"nodeType":"YulFunctionCall","src":"7421:22:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7445:7:1"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"7386:34:1"},"nodeType":"YulFunctionCall","src":"7386:67:1"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7376:6:1"}]},{"nodeType":"YulAssignment","src":"7462:43:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7489:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"7500:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7485:3:1"},"nodeType":"YulFunctionCall","src":"7485:19:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7472:12:1"},"nodeType":"YulFunctionCall","src":"7472:33:1"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7462:6:1"}]},{"nodeType":"YulAssignment","src":"7514:43:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7541:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"7552:3:1","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7537:3:1"},"nodeType":"YulFunctionCall","src":"7537:19:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7524:12:1"},"nodeType":"YulFunctionCall","src":"7524:33:1"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7514:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"7566:49:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7599:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"7610:3:1","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7595:3:1"},"nodeType":"YulFunctionCall","src":"7595:19:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7582:12:1"},"nodeType":"YulFunctionCall","src":"7582:33:1"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"7570:8:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"7644:26:1","statements":[{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"7653:6:1"},{"name":"value6","nodeType":"YulIdentifier","src":"7661:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7646:6:1"},"nodeType":"YulFunctionCall","src":"7646:22:1"},"nodeType":"YulExpressionStatement","src":"7646:22:1"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"7630:8:1"},{"name":"_1","nodeType":"YulIdentifier","src":"7640:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7627:2:1"},"nodeType":"YulFunctionCall","src":"7627:16:1"},"nodeType":"YulIf","src":"7624:2:1"},{"nodeType":"YulAssignment","src":"7679:63:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7712:9:1"},{"name":"offset_1","nodeType":"YulIdentifier","src":"7723:8:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7708:3:1"},"nodeType":"YulFunctionCall","src":"7708:24:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7734:7:1"}],"functionName":{"name":"abi_decode_t_bytes","nodeType":"YulIdentifier","src":"7689:18:1"},"nodeType":"YulFunctionCall","src":"7689:53:1"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"7679:6:1"}]}]},"name":"abi_decode_tuple_t_bytes32t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6779:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6790:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6802:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6810:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6818:6:1","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6826:6:1","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6834:6:1","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6842:6:1","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6850:6:1","type":""}],"src":"6655:1093:1"},{"body":{"nodeType":"YulBlock","src":"7822:237:1","statements":[{"body":{"nodeType":"YulBlock","src":"7868:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7877:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"7885:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7870:6:1"},"nodeType":"YulFunctionCall","src":"7870:22:1"},"nodeType":"YulExpressionStatement","src":"7870:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7843:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"7852:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7839:3:1"},"nodeType":"YulFunctionCall","src":"7839:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"7864:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7835:3:1"},"nodeType":"YulFunctionCall","src":"7835:32:1"},"nodeType":"YulIf","src":"7832:2:1"},{"nodeType":"YulVariableDeclaration","src":"7903:36:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7929:9:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7916:12:1"},"nodeType":"YulFunctionCall","src":"7916:23:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7907:5:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"8003:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8012:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"8020:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8005:6:1"},"nodeType":"YulFunctionCall","src":"8005:22:1"},"nodeType":"YulExpressionStatement","src":"8005:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7961:5:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7972:5:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7983:3:1","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7988:10:1","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7979:3:1"},"nodeType":"YulFunctionCall","src":"7979:20:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7968:3:1"},"nodeType":"YulFunctionCall","src":"7968:32:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7958:2:1"},"nodeType":"YulFunctionCall","src":"7958:43:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7951:6:1"},"nodeType":"YulFunctionCall","src":"7951:51:1"},"nodeType":"YulIf","src":"7948:2:1"},{"nodeType":"YulAssignment","src":"8038:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"8048:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8038:6:1"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7788:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7799:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7811:6:1","type":""}],"src":"7753:306:1"},{"body":{"nodeType":"YulBlock","src":"8165:182:1","statements":[{"body":{"nodeType":"YulBlock","src":"8211:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8220:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"8228:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8213:6:1"},"nodeType":"YulFunctionCall","src":"8213:22:1"},"nodeType":"YulExpressionStatement","src":"8213:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8186:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"8195:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8182:3:1"},"nodeType":"YulFunctionCall","src":"8182:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"8207:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8178:3:1"},"nodeType":"YulFunctionCall","src":"8178:32:1"},"nodeType":"YulIf","src":"8175:2:1"},{"nodeType":"YulVariableDeclaration","src":"8246:29:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8265:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8259:5:1"},"nodeType":"YulFunctionCall","src":"8259:16:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8250:5:1","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8311:5:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"8284:26:1"},"nodeType":"YulFunctionCall","src":"8284:33:1"},"nodeType":"YulExpressionStatement","src":"8284:33:1"},{"nodeType":"YulAssignment","src":"8326:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"8336:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8326:6:1"}]}]},"name":"abi_decode_tuple_t_contract$_IAuthorizer_$9665_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8131:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8142:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8154:6:1","type":""}],"src":"8064:283:1"},{"body":{"nodeType":"YulBlock","src":"8462:383:1","statements":[{"body":{"nodeType":"YulBlock","src":"8508:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8517:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"8525:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8510:6:1"},"nodeType":"YulFunctionCall","src":"8510:22:1"},"nodeType":"YulExpressionStatement","src":"8510:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8483:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"8492:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8479:3:1"},"nodeType":"YulFunctionCall","src":"8479:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"8504:2:1","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8475:3:1"},"nodeType":"YulFunctionCall","src":"8475:32:1"},"nodeType":"YulIf","src":"8472:2:1"},{"nodeType":"YulVariableDeclaration","src":"8543:36:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8569:9:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8556:12:1"},"nodeType":"YulFunctionCall","src":"8556:23:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8547:5:1","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8615:5:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"8588:26:1"},"nodeType":"YulFunctionCall","src":"8588:33:1"},"nodeType":"YulExpressionStatement","src":"8588:33:1"},{"nodeType":"YulAssignment","src":"8630:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"8640:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8630:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"8654:46:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8685:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"8696:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8681:3:1"},"nodeType":"YulFunctionCall","src":"8681:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8668:12:1"},"nodeType":"YulFunctionCall","src":"8668:32:1"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8658:6:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"8743:26:1","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8752:6:1"},{"name":"value1","nodeType":"YulIdentifier","src":"8760:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8745:6:1"},"nodeType":"YulFunctionCall","src":"8745:22:1"},"nodeType":"YulExpressionStatement","src":"8745:22:1"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8715:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"8723:18:1","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8712:2:1"},"nodeType":"YulFunctionCall","src":"8712:30:1"},"nodeType":"YulIf","src":"8709:2:1"},{"nodeType":"YulAssignment","src":"8778:61:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8811:9:1"},{"name":"offset","nodeType":"YulIdentifier","src":"8822:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8807:3:1"},"nodeType":"YulFunctionCall","src":"8807:22:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8831:7:1"}],"functionName":{"name":"abi_decode_t_bytes","nodeType":"YulIdentifier","src":"8788:18:1"},"nodeType":"YulFunctionCall","src":"8788:51:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8778:6:1"}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$486t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8420:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8431:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8443:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8451:6:1","type":""}],"src":"8352:493:1"},{"body":{"nodeType":"YulBlock","src":"8944:146:1","statements":[{"body":{"nodeType":"YulBlock","src":"8990:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8999:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"9007:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8992:6:1"},"nodeType":"YulFunctionCall","src":"8992:22:1"},"nodeType":"YulExpressionStatement","src":"8992:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8965:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"8974:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8961:3:1"},"nodeType":"YulFunctionCall","src":"8961:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"8986:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8957:3:1"},"nodeType":"YulFunctionCall","src":"8957:32:1"},"nodeType":"YulIf","src":"8954:2:1"},{"nodeType":"YulAssignment","src":"9025:59:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9074:9:1"}],"functionName":{"name":"abi_decode_t_enum$_ExitKind_fromMemory","nodeType":"YulIdentifier","src":"9035:38:1"},"nodeType":"YulFunctionCall","src":"9035:49:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9025:6:1"}]}]},"name":"abi_decode_tuple_t_enum$_ExitKind_$6392_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8910:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8921:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8933:6:1","type":""}],"src":"8850:240:1"},{"body":{"nodeType":"YulBlock","src":"9206:190:1","statements":[{"body":{"nodeType":"YulBlock","src":"9252:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9261:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"9269:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9254:6:1"},"nodeType":"YulFunctionCall","src":"9254:22:1"},"nodeType":"YulExpressionStatement","src":"9254:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9227:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"9236:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9223:3:1"},"nodeType":"YulFunctionCall","src":"9223:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"9248:2:1","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9219:3:1"},"nodeType":"YulFunctionCall","src":"9219:32:1"},"nodeType":"YulIf","src":"9216:2:1"},{"nodeType":"YulAssignment","src":"9287:59:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9336:9:1"}],"functionName":{"name":"abi_decode_t_enum$_ExitKind_fromMemory","nodeType":"YulIdentifier","src":"9297:38:1"},"nodeType":"YulFunctionCall","src":"9297:49:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9287:6:1"}]},{"nodeType":"YulAssignment","src":"9355:35:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9375:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"9386:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9371:3:1"},"nodeType":"YulFunctionCall","src":"9371:18:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9365:5:1"},"nodeType":"YulFunctionCall","src":"9365:25:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9355:6:1"}]}]},"name":"abi_decode_tuple_t_enum$_ExitKind_$6392t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9164:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9175:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9187:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9195:6:1","type":""}],"src":"9095:301:1"},{"body":{"nodeType":"YulBlock","src":"9574:1418:1","statements":[{"body":{"nodeType":"YulBlock","src":"9621:26:1","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9630:6:1"},{"name":"value2","nodeType":"YulIdentifier","src":"9638:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9623:6:1"},"nodeType":"YulFunctionCall","src":"9623:22:1"},"nodeType":"YulExpressionStatement","src":"9623:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9595:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"9604:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9591:3:1"},"nodeType":"YulFunctionCall","src":"9591:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"9616:3:1","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9587:3:1"},"nodeType":"YulFunctionCall","src":"9587:33:1"},"nodeType":"YulIf","src":"9584:2:1"},{"nodeType":"YulVariableDeclaration","src":"9656:37:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9683:9:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9670:12:1"},"nodeType":"YulFunctionCall","src":"9670:23:1"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9660:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9702:28:1","value":{"kind":"number","nodeType":"YulLiteral","src":"9712:18:1","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9706:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"9757:26:1","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9766:6:1"},{"name":"value2","nodeType":"YulIdentifier","src":"9774:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9759:6:1"},"nodeType":"YulFunctionCall","src":"9759:22:1"},"nodeType":"YulExpressionStatement","src":"9759:22:1"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9745:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"9753:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9742:2:1"},"nodeType":"YulFunctionCall","src":"9742:14:1"},"nodeType":"YulIf","src":"9739:2:1"},{"nodeType":"YulVariableDeclaration","src":"9792:32:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9806:9:1"},{"name":"offset","nodeType":"YulIdentifier","src":"9817:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9802:3:1"},"nodeType":"YulFunctionCall","src":"9802:22:1"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"9796:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9833:16:1","value":{"kind":"number","nodeType":"YulLiteral","src":"9843:6:1","type":"","value":"0x0120"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"9837:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"9887:26:1","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9896:6:1"},{"name":"value2","nodeType":"YulIdentifier","src":"9904:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9889:6:1"},"nodeType":"YulFunctionCall","src":"9889:22:1"},"nodeType":"YulExpressionStatement","src":"9889:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9869:7:1"},{"name":"_2","nodeType":"YulIdentifier","src":"9878:2:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9865:3:1"},"nodeType":"YulFunctionCall","src":"9865:16:1"},{"name":"_3","nodeType":"YulIdentifier","src":"9883:2:1"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9861:3:1"},"nodeType":"YulFunctionCall","src":"9861:25:1"},"nodeType":"YulIf","src":"9858:2:1"},{"nodeType":"YulVariableDeclaration","src":"9922:31:1","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"9950:2:1"}],"functionName":{"name":"allocateMemory","nodeType":"YulIdentifier","src":"9935:14:1"},"nodeType":"YulFunctionCall","src":"9935:18:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9926:5:1","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9969:5:1"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"10004:2:1"}],"functionName":{"name":"abi_decode_t_enum$_SwapKind","nodeType":"YulIdentifier","src":"9976:27:1"},"nodeType":"YulFunctionCall","src":"9976:31:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9962:6:1"},"nodeType":"YulFunctionCall","src":"9962:46:1"},"nodeType":"YulExpressionStatement","src":"9962:46:1"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10028:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"10035:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10024:3:1"},"nodeType":"YulFunctionCall","src":"10024:14:1"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"10065:2:1"},{"kind":"number","nodeType":"YulLiteral","src":"10069:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10061:3:1"},"nodeType":"YulFunctionCall","src":"10061:11:1"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10040:20:1"},"nodeType":"YulFunctionCall","src":"10040:33:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10017:6:1"},"nodeType":"YulFunctionCall","src":"10017:57:1"},"nodeType":"YulExpressionStatement","src":"10017:57:1"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10094:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"10101:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10090:3:1"},"nodeType":"YulFunctionCall","src":"10090:14:1"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"10131:2:1"},{"kind":"number","nodeType":"YulLiteral","src":"10135:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10127:3:1"},"nodeType":"YulFunctionCall","src":"10127:11:1"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10106:20:1"},"nodeType":"YulFunctionCall","src":"10106:33:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10083:6:1"},"nodeType":"YulFunctionCall","src":"10083:57:1"},"nodeType":"YulExpressionStatement","src":"10083:57:1"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10160:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"10167:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10156:3:1"},"nodeType":"YulFunctionCall","src":"10156:14:1"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"10189:2:1"},{"kind":"number","nodeType":"YulLiteral","src":"10193:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10185:3:1"},"nodeType":"YulFunctionCall","src":"10185:11:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10172:12:1"},"nodeType":"YulFunctionCall","src":"10172:25:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10149:6:1"},"nodeType":"YulFunctionCall","src":"10149:49:1"},"nodeType":"YulExpressionStatement","src":"10149:49:1"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10218:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"10225:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10214:3:1"},"nodeType":"YulFunctionCall","src":"10214:15:1"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"10248:2:1"},{"kind":"number","nodeType":"YulLiteral","src":"10252:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10244:3:1"},"nodeType":"YulFunctionCall","src":"10244:12:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10231:12:1"},"nodeType":"YulFunctionCall","src":"10231:26:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10207:6:1"},"nodeType":"YulFunctionCall","src":"10207:51:1"},"nodeType":"YulExpressionStatement","src":"10207:51:1"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10278:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"10285:3:1","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10274:3:1"},"nodeType":"YulFunctionCall","src":"10274:15:1"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"10308:2:1"},{"kind":"number","nodeType":"YulLiteral","src":"10312:3:1","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10304:3:1"},"nodeType":"YulFunctionCall","src":"10304:12:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10291:12:1"},"nodeType":"YulFunctionCall","src":"10291:26:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10267:6:1"},"nodeType":"YulFunctionCall","src":"10267:51:1"},"nodeType":"YulExpressionStatement","src":"10267:51:1"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10338:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"10345:3:1","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10334:3:1"},"nodeType":"YulFunctionCall","src":"10334:15:1"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"10376:2:1"},{"kind":"number","nodeType":"YulLiteral","src":"10380:3:1","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10372:3:1"},"nodeType":"YulFunctionCall","src":"10372:12:1"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10351:20:1"},"nodeType":"YulFunctionCall","src":"10351:34:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10327:6:1"},"nodeType":"YulFunctionCall","src":"10327:59:1"},"nodeType":"YulExpressionStatement","src":"10327:59:1"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10406:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"10413:3:1","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10402:3:1"},"nodeType":"YulFunctionCall","src":"10402:15:1"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"10444:2:1"},{"kind":"number","nodeType":"YulLiteral","src":"10448:3:1","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10440:3:1"},"nodeType":"YulFunctionCall","src":"10440:12:1"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10419:20:1"},"nodeType":"YulFunctionCall","src":"10419:34:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10395:6:1"},"nodeType":"YulFunctionCall","src":"10395:59:1"},"nodeType":"YulExpressionStatement","src":"10395:59:1"},{"nodeType":"YulVariableDeclaration","src":"10463:13:1","value":{"kind":"number","nodeType":"YulLiteral","src":"10473:3:1","type":"","value":"256"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"10467:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10485:41:1","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"10518:2:1"},{"name":"_4","nodeType":"YulIdentifier","src":"10522:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10514:3:1"},"nodeType":"YulFunctionCall","src":"10514:11:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10501:12:1"},"nodeType":"YulFunctionCall","src":"10501:25:1"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"10489:8:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"10555:26:1","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10564:6:1"},{"name":"value2","nodeType":"YulIdentifier","src":"10572:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10557:6:1"},"nodeType":"YulFunctionCall","src":"10557:22:1"},"nodeType":"YulExpressionStatement","src":"10557:22:1"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"10541:8:1"},{"name":"_1","nodeType":"YulIdentifier","src":"10551:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10538:2:1"},"nodeType":"YulFunctionCall","src":"10538:16:1"},"nodeType":"YulIf","src":"10535:2:1"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10601:5:1"},{"name":"_4","nodeType":"YulIdentifier","src":"10608:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10597:3:1"},"nodeType":"YulFunctionCall","src":"10597:14:1"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"10636:2:1"},{"name":"offset_1","nodeType":"YulIdentifier","src":"10640:8:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10632:3:1"},"nodeType":"YulFunctionCall","src":"10632:17:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10651:7:1"}],"functionName":{"name":"abi_decode_t_bytes","nodeType":"YulIdentifier","src":"10613:18:1"},"nodeType":"YulFunctionCall","src":"10613:46:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10590:6:1"},"nodeType":"YulFunctionCall","src":"10590:70:1"},"nodeType":"YulExpressionStatement","src":"10590:70:1"},{"nodeType":"YulAssignment","src":"10669:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"10679:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10669:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"10693:48:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10726:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"10737:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10722:3:1"},"nodeType":"YulFunctionCall","src":"10722:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10709:12:1"},"nodeType":"YulFunctionCall","src":"10709:32:1"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"10697:8:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"10770:26:1","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10779:6:1"},{"name":"value2","nodeType":"YulIdentifier","src":"10787:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10772:6:1"},"nodeType":"YulFunctionCall","src":"10772:22:1"},"nodeType":"YulExpressionStatement","src":"10772:22:1"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"10756:8:1"},{"name":"_1","nodeType":"YulIdentifier","src":"10766:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10753:2:1"},"nodeType":"YulFunctionCall","src":"10753:16:1"},"nodeType":"YulIf","src":"10750:2:1"},{"nodeType":"YulAssignment","src":"10805:79:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10854:9:1"},{"name":"offset_2","nodeType":"YulIdentifier","src":"10865:8:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10850:3:1"},"nodeType":"YulFunctionCall","src":"10850:24:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10876:7:1"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"10815:34:1"},"nodeType":"YulFunctionCall","src":"10815:69:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10805:6:1"}]},{"nodeType":"YulAssignment","src":"10893:42:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10920:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"10931:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10916:3:1"},"nodeType":"YulFunctionCall","src":"10916:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10903:12:1"},"nodeType":"YulFunctionCall","src":"10903:32:1"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10893:6:1"}]},{"nodeType":"YulAssignment","src":"10944:42:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10971:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"10982:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10967:3:1"},"nodeType":"YulFunctionCall","src":"10967:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10954:12:1"},"nodeType":"YulFunctionCall","src":"10954:32:1"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10944:6:1"}]}]},"name":"abi_decode_tuple_t_struct$_SwapRequest_$29_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9516:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9527:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9539:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9547:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9555:6:1","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9563:6:1","type":""}],"src":"9401:1591:1"},{"body":{"nodeType":"YulBlock","src":"11067:120:1","statements":[{"body":{"nodeType":"YulBlock","src":"11113:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11122:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"11130:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11115:6:1"},"nodeType":"YulFunctionCall","src":"11115:22:1"},"nodeType":"YulExpressionStatement","src":"11115:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11088:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"11097:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11084:3:1"},"nodeType":"YulFunctionCall","src":"11084:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"11109:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11080:3:1"},"nodeType":"YulFunctionCall","src":"11080:32:1"},"nodeType":"YulIf","src":"11077:2:1"},{"nodeType":"YulAssignment","src":"11148:33:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11171:9:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11158:12:1"},"nodeType":"YulFunctionCall","src":"11158:23:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11148:6:1"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11033:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11044:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11056:6:1","type":""}],"src":"10997:190:1"},{"body":{"nodeType":"YulBlock","src":"11273:113:1","statements":[{"body":{"nodeType":"YulBlock","src":"11319:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11328:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"11336:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11321:6:1"},"nodeType":"YulFunctionCall","src":"11321:22:1"},"nodeType":"YulExpressionStatement","src":"11321:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11294:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"11303:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11290:3:1"},"nodeType":"YulFunctionCall","src":"11290:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"11315:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11286:3:1"},"nodeType":"YulFunctionCall","src":"11286:32:1"},"nodeType":"YulIf","src":"11283:2:1"},{"nodeType":"YulAssignment","src":"11354:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11370:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11364:5:1"},"nodeType":"YulFunctionCall","src":"11364:16:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11354:6:1"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11239:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11250:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11262:6:1","type":""}],"src":"11192:194:1"},{"body":{"nodeType":"YulBlock","src":"11478:171:1","statements":[{"body":{"nodeType":"YulBlock","src":"11524:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11533:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"11541:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11526:6:1"},"nodeType":"YulFunctionCall","src":"11526:22:1"},"nodeType":"YulExpressionStatement","src":"11526:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11499:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"11508:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11495:3:1"},"nodeType":"YulFunctionCall","src":"11495:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"11520:2:1","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11491:3:1"},"nodeType":"YulFunctionCall","src":"11491:32:1"},"nodeType":"YulIf","src":"11488:2:1"},{"nodeType":"YulAssignment","src":"11559:33:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11582:9:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11569:12:1"},"nodeType":"YulFunctionCall","src":"11569:23:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11559:6:1"}]},{"nodeType":"YulAssignment","src":"11601:42:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11628:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"11639:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11624:3:1"},"nodeType":"YulFunctionCall","src":"11624:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11611:12:1"},"nodeType":"YulFunctionCall","src":"11611:32:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11601:6:1"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11436:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11447:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11459:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11467:6:1","type":""}],"src":"11391:258:1"},{"body":{"nodeType":"YulBlock","src":"11786:315:1","statements":[{"body":{"nodeType":"YulBlock","src":"11833:26:1","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11842:6:1"},{"name":"value2","nodeType":"YulIdentifier","src":"11850:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11835:6:1"},"nodeType":"YulFunctionCall","src":"11835:22:1"},"nodeType":"YulExpressionStatement","src":"11835:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11807:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"11816:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11803:3:1"},"nodeType":"YulFunctionCall","src":"11803:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"11828:3:1","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11799:3:1"},"nodeType":"YulFunctionCall","src":"11799:33:1"},"nodeType":"YulIf","src":"11796:2:1"},{"nodeType":"YulAssignment","src":"11868:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11884:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11878:5:1"},"nodeType":"YulFunctionCall","src":"11878:16:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11868:6:1"}]},{"nodeType":"YulAssignment","src":"11903:35:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11923:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"11934:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11919:3:1"},"nodeType":"YulFunctionCall","src":"11919:18:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11913:5:1"},"nodeType":"YulFunctionCall","src":"11913:25:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11903:6:1"}]},{"nodeType":"YulAssignment","src":"11947:35:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11967:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"11978:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11963:3:1"},"nodeType":"YulFunctionCall","src":"11963:18:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11957:5:1"},"nodeType":"YulFunctionCall","src":"11957:25:1"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11947:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"11991:38:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12014:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"12025:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12010:3:1"},"nodeType":"YulFunctionCall","src":"12010:18:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12004:5:1"},"nodeType":"YulFunctionCall","src":"12004:25:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11995:5:1","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12065:5:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"12038:26:1"},"nodeType":"YulFunctionCall","src":"12038:33:1"},"nodeType":"YulExpressionStatement","src":"12038:33:1"},{"nodeType":"YulAssignment","src":"12080:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"12090:5:1"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12080:6:1"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11728:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11739:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11751:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11759:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11767:6:1","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11775:6:1","type":""}],"src":"11654:447:1"},{"body":{"nodeType":"YulBlock","src":"12173:376:1","statements":[{"nodeType":"YulVariableDeclaration","src":"12183:26:1","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12203:5:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12197:5:1"},"nodeType":"YulFunctionCall","src":"12197:12:1"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12187:6:1","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12225:3:1"},{"name":"length","nodeType":"YulIdentifier","src":"12230:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12218:6:1"},"nodeType":"YulFunctionCall","src":"12218:19:1"},"nodeType":"YulExpressionStatement","src":"12218:19:1"},{"nodeType":"YulVariableDeclaration","src":"12246:14:1","value":{"kind":"number","nodeType":"YulLiteral","src":"12256:4:1","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12250:2:1","type":""}]},{"nodeType":"YulAssignment","src":"12269:19:1","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12280:3:1"},{"name":"_1","nodeType":"YulIdentifier","src":"12285:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12276:3:1"},"nodeType":"YulFunctionCall","src":"12276:12:1"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12269:3:1"}]},{"nodeType":"YulVariableDeclaration","src":"12297:28:1","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12315:5:1"},{"name":"_1","nodeType":"YulIdentifier","src":"12322:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12311:3:1"},"nodeType":"YulFunctionCall","src":"12311:14:1"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"12301:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12334:12:1","value":{"name":"end","nodeType":"YulIdentifier","src":"12343:3:1"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12338:1:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"12404:120:1","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12425:3:1"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12436:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12430:5:1"},"nodeType":"YulFunctionCall","src":"12430:13:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12418:6:1"},"nodeType":"YulFunctionCall","src":"12418:26:1"},"nodeType":"YulExpressionStatement","src":"12418:26:1"},{"nodeType":"YulAssignment","src":"12457:19:1","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12468:3:1"},{"name":"_1","nodeType":"YulIdentifier","src":"12473:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12464:3:1"},"nodeType":"YulFunctionCall","src":"12464:12:1"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12457:3:1"}]},{"nodeType":"YulAssignment","src":"12489:25:1","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12503:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"12511:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12499:3:1"},"nodeType":"YulFunctionCall","src":"12499:15:1"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12489:6:1"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12366:1:1"},{"name":"length","nodeType":"YulIdentifier","src":"12369:6:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12363:2:1"},"nodeType":"YulFunctionCall","src":"12363:13:1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12377:18:1","statements":[{"nodeType":"YulAssignment","src":"12379:14:1","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12388:1:1"},{"kind":"number","nodeType":"YulLiteral","src":"12391:1:1","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12384:3:1"},"nodeType":"YulFunctionCall","src":"12384:9:1"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12379:1:1"}]}]},"pre":{"nodeType":"YulBlock","src":"12359:3:1","statements":[]},"src":"12355:169:1"},{"nodeType":"YulAssignment","src":"12533:10:1","value":{"name":"pos","nodeType":"YulIdentifier","src":"12540:3:1"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12533:3:1"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12150:5:1","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12157:3:1","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12165:3:1","type":""}],"src":"12106:443:1"},{"body":{"nodeType":"YulBlock","src":"12597:50:1","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12614:3:1"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12633:5:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12626:6:1"},"nodeType":"YulFunctionCall","src":"12626:13:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12619:6:1"},"nodeType":"YulFunctionCall","src":"12619:21:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12607:6:1"},"nodeType":"YulFunctionCall","src":"12607:34:1"},"nodeType":"YulExpressionStatement","src":"12607:34:1"}]},"name":"abi_encode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12581:5:1","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12588:3:1","type":""}],"src":"12554:93:1"},{"body":{"nodeType":"YulBlock","src":"12703:426:1","statements":[{"nodeType":"YulVariableDeclaration","src":"12713:26:1","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12733:5:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12727:5:1"},"nodeType":"YulFunctionCall","src":"12727:12:1"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12717:6:1","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12755:3:1"},{"name":"length","nodeType":"YulIdentifier","src":"12760:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12748:6:1"},"nodeType":"YulFunctionCall","src":"12748:19:1"},"nodeType":"YulExpressionStatement","src":"12748:19:1"},{"nodeType":"YulVariableDeclaration","src":"12776:12:1","value":{"name":"end","nodeType":"YulIdentifier","src":"12785:3:1"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12780:1:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"12849:110:1","statements":[{"nodeType":"YulVariableDeclaration","src":"12863:14:1","value":{"kind":"number","nodeType":"YulLiteral","src":"12873:4:1","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12867:2:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12905:3:1"},{"name":"i","nodeType":"YulIdentifier","src":"12910:1:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12901:3:1"},"nodeType":"YulFunctionCall","src":"12901:11:1"},{"name":"_1","nodeType":"YulIdentifier","src":"12914:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12897:3:1"},"nodeType":"YulFunctionCall","src":"12897:20:1"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12933:5:1"},{"name":"i","nodeType":"YulIdentifier","src":"12940:1:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12929:3:1"},"nodeType":"YulFunctionCall","src":"12929:13:1"},{"name":"_1","nodeType":"YulIdentifier","src":"12944:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12925:3:1"},"nodeType":"YulFunctionCall","src":"12925:22:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12919:5:1"},"nodeType":"YulFunctionCall","src":"12919:29:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12890:6:1"},"nodeType":"YulFunctionCall","src":"12890:59:1"},"nodeType":"YulExpressionStatement","src":"12890:59:1"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12808:1:1"},{"name":"length","nodeType":"YulIdentifier","src":"12811:6:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12805:2:1"},"nodeType":"YulFunctionCall","src":"12805:13:1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12819:21:1","statements":[{"nodeType":"YulAssignment","src":"12821:17:1","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12830:1:1"},{"kind":"number","nodeType":"YulLiteral","src":"12833:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12826:3:1"},"nodeType":"YulFunctionCall","src":"12826:12:1"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12821:1:1"}]}]},"pre":{"nodeType":"YulBlock","src":"12801:3:1","statements":[]},"src":"12797:162:1"},{"body":{"nodeType":"YulBlock","src":"12993:64:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13022:3:1"},{"name":"length","nodeType":"YulIdentifier","src":"13027:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13018:3:1"},"nodeType":"YulFunctionCall","src":"13018:16:1"},{"kind":"number","nodeType":"YulLiteral","src":"13036:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13014:3:1"},"nodeType":"YulFunctionCall","src":"13014:27:1"},{"name":"end","nodeType":"YulIdentifier","src":"13043:3:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13007:6:1"},"nodeType":"YulFunctionCall","src":"13007:40:1"},"nodeType":"YulExpressionStatement","src":"13007:40:1"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12974:1:1"},{"name":"length","nodeType":"YulIdentifier","src":"12977:6:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12971:2:1"},"nodeType":"YulFunctionCall","src":"12971:13:1"},"nodeType":"YulIf","src":"12968:2:1"},{"nodeType":"YulAssignment","src":"13066:57:1","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13081:3:1"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13094:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"13102:2:1","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13090:3:1"},"nodeType":"YulFunctionCall","src":"13090:15:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13111:2:1","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13107:3:1"},"nodeType":"YulFunctionCall","src":"13107:7:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13086:3:1"},"nodeType":"YulFunctionCall","src":"13086:29:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13077:3:1"},"nodeType":"YulFunctionCall","src":"13077:39:1"},{"kind":"number","nodeType":"YulLiteral","src":"13118:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13073:3:1"},"nodeType":"YulFunctionCall","src":"13073:50:1"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13066:3:1"}]}]},"name":"abi_encode_t_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12680:5:1","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12687:3:1","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12695:3:1","type":""}],"src":"12652:477:1"},{"body":{"nodeType":"YulBlock","src":"13279:127:1","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13296:3:1"},{"name":"value0","nodeType":"YulIdentifier","src":"13301:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13289:6:1"},"nodeType":"YulFunctionCall","src":"13289:19:1"},"nodeType":"YulExpressionStatement","src":"13289:19:1"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13328:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"13333:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13324:3:1"},"nodeType":"YulFunctionCall","src":"13324:12:1"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13342:6:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13354:3:1","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"13359:10:1","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13350:3:1"},"nodeType":"YulFunctionCall","src":"13350:20:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13338:3:1"},"nodeType":"YulFunctionCall","src":"13338:33:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13317:6:1"},"nodeType":"YulFunctionCall","src":"13317:55:1"},"nodeType":"YulExpressionStatement","src":"13317:55:1"},{"nodeType":"YulAssignment","src":"13381:19:1","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13392:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"13397:2:1","type":"","value":"36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13388:3:1"},"nodeType":"YulFunctionCall","src":"13388:12:1"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13381:3:1"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_bytes4__to_t_bytes32_t_bytes4__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13247:3:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13252:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13260:6:1","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13271:3:1","type":""}],"src":"13134:272:1"},{"body":{"nodeType":"YulBlock","src":"13558:126:1","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13581:3:1"},{"name":"value0","nodeType":"YulIdentifier","src":"13586:6:1"},{"name":"value1","nodeType":"YulIdentifier","src":"13594:6:1"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"13568:12:1"},"nodeType":"YulFunctionCall","src":"13568:33:1"},"nodeType":"YulExpressionStatement","src":"13568:33:1"},{"nodeType":"YulVariableDeclaration","src":"13610:26:1","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13624:3:1"},{"name":"value1","nodeType":"YulIdentifier","src":"13629:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13620:3:1"},"nodeType":"YulFunctionCall","src":"13620:16:1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13614:2:1","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"13652:2:1"},{"name":"end","nodeType":"YulIdentifier","src":"13656:3:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13645:6:1"},"nodeType":"YulFunctionCall","src":"13645:15:1"},"nodeType":"YulExpressionStatement","src":"13645:15:1"},{"nodeType":"YulAssignment","src":"13669:9:1","value":{"name":"_1","nodeType":"YulIdentifier","src":"13676:2:1"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13669:3:1"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13526:3:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13531:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13539:6:1","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13550:3:1","type":""}],"src":"13411:273:1"},{"body":{"nodeType":"YulBlock","src":"13937:144:1","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13954:3:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13963:3:1","type":"","value":"240"},{"kind":"number","nodeType":"YulLiteral","src":"13968:4:1","type":"","value":"6401"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13959:3:1"},"nodeType":"YulFunctionCall","src":"13959:14:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13947:6:1"},"nodeType":"YulFunctionCall","src":"13947:27:1"},"nodeType":"YulExpressionStatement","src":"13947:27:1"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13994:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"13999:1:1","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13990:3:1"},"nodeType":"YulFunctionCall","src":"13990:11:1"},{"name":"value0","nodeType":"YulIdentifier","src":"14003:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13983:6:1"},"nodeType":"YulFunctionCall","src":"13983:27:1"},"nodeType":"YulExpressionStatement","src":"13983:27:1"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14030:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"14035:2:1","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14026:3:1"},"nodeType":"YulFunctionCall","src":"14026:12:1"},{"name":"value1","nodeType":"YulIdentifier","src":"14040:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14019:6:1"},"nodeType":"YulFunctionCall","src":"14019:28:1"},"nodeType":"YulExpressionStatement","src":"14019:28:1"},{"nodeType":"YulAssignment","src":"14056:19:1","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14067:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"14072:2:1","type":"","value":"66"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14063:3:1"},"nodeType":"YulFunctionCall","src":"14063:12:1"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14056:3:1"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13905:3:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13910:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13918:6:1","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13929:3:1","type":""}],"src":"13689:392:1"},{"body":{"nodeType":"YulBlock","src":"14187:102:1","statements":[{"nodeType":"YulAssignment","src":"14197:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14209:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"14220:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14205:3:1"},"nodeType":"YulFunctionCall","src":"14205:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14197:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14239:9:1"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14254:6:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14270:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"14275:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14266:3:1"},"nodeType":"YulFunctionCall","src":"14266:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"14279:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14262:3:1"},"nodeType":"YulFunctionCall","src":"14262:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14250:3:1"},"nodeType":"YulFunctionCall","src":"14250:32:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14232:6:1"},"nodeType":"YulFunctionCall","src":"14232:51:1"},"nodeType":"YulExpressionStatement","src":"14232:51:1"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14156:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14167:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14178:4:1","type":""}],"src":"14086:203:1"},{"body":{"nodeType":"YulBlock","src":"14445:116:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14462:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"14473:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14455:6:1"},"nodeType":"YulFunctionCall","src":"14455:21:1"},"nodeType":"YulExpressionStatement","src":"14455:21:1"},{"nodeType":"YulAssignment","src":"14485:70:1","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14528:6:1"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14540:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"14551:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14536:3:1"},"nodeType":"YulFunctionCall","src":"14536:18:1"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"14493:34:1"},"nodeType":"YulFunctionCall","src":"14493:62:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14485:4:1"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14414:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14425:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14436:4:1","type":""}],"src":"14294:267:1"},{"body":{"nodeType":"YulBlock","src":"14795:248:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14812:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"14823:2:1","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14805:6:1"},"nodeType":"YulFunctionCall","src":"14805:21:1"},"nodeType":"YulExpressionStatement","src":"14805:21:1"},{"nodeType":"YulVariableDeclaration","src":"14835:76:1","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14884:6:1"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14896:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"14907:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14892:3:1"},"nodeType":"YulFunctionCall","src":"14892:18:1"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"14849:34:1"},"nodeType":"YulFunctionCall","src":"14849:62:1"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"14839:6:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14931:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"14942:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14927:3:1"},"nodeType":"YulFunctionCall","src":"14927:18:1"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"14951:6:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"14959:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14947:3:1"},"nodeType":"YulFunctionCall","src":"14947:22:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14920:6:1"},"nodeType":"YulFunctionCall","src":"14920:50:1"},"nodeType":"YulExpressionStatement","src":"14920:50:1"},{"nodeType":"YulAssignment","src":"14979:58:1","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15022:6:1"},{"name":"tail_1","nodeType":"YulIdentifier","src":"15030:6:1"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"14987:34:1"},"nodeType":"YulFunctionCall","src":"14987:50:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14979:4:1"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14756:9:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14767:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14775:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14786:4:1","type":""}],"src":"14566:477:1"},{"body":{"nodeType":"YulBlock","src":"15143:92:1","statements":[{"nodeType":"YulAssignment","src":"15153:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15165:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"15176:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15161:3:1"},"nodeType":"YulFunctionCall","src":"15161:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15153:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15195:9:1"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15220:6:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15213:6:1"},"nodeType":"YulFunctionCall","src":"15213:14:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15206:6:1"},"nodeType":"YulFunctionCall","src":"15206:22:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15188:6:1"},"nodeType":"YulFunctionCall","src":"15188:41:1"},"nodeType":"YulExpressionStatement","src":"15188:41:1"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15112:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15123:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15134:4:1","type":""}],"src":"15048:187:1"},{"body":{"nodeType":"YulBlock","src":"15391:178:1","statements":[{"nodeType":"YulAssignment","src":"15401:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15413:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"15424:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15409:3:1"},"nodeType":"YulFunctionCall","src":"15409:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15401:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15443:9:1"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15468:6:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15461:6:1"},"nodeType":"YulFunctionCall","src":"15461:14:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15454:6:1"},"nodeType":"YulFunctionCall","src":"15454:22:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15436:6:1"},"nodeType":"YulFunctionCall","src":"15436:41:1"},"nodeType":"YulExpressionStatement","src":"15436:41:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15497:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"15508:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15493:3:1"},"nodeType":"YulFunctionCall","src":"15493:18:1"},{"name":"value1","nodeType":"YulIdentifier","src":"15513:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15486:6:1"},"nodeType":"YulFunctionCall","src":"15486:34:1"},"nodeType":"YulExpressionStatement","src":"15486:34:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15540:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"15551:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15536:3:1"},"nodeType":"YulFunctionCall","src":"15536:18:1"},{"name":"value2","nodeType":"YulIdentifier","src":"15556:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15529:6:1"},"nodeType":"YulFunctionCall","src":"15529:34:1"},"nodeType":"YulExpressionStatement","src":"15529:34:1"}]},"name":"abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15344:9:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15355:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15363:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15371:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15382:4:1","type":""}],"src":"15240:329:1"},{"body":{"nodeType":"YulBlock","src":"15675:76:1","statements":[{"nodeType":"YulAssignment","src":"15685:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15697:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"15708:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15693:3:1"},"nodeType":"YulFunctionCall","src":"15693:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15685:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15727:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"15738:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15720:6:1"},"nodeType":"YulFunctionCall","src":"15720:25:1"},"nodeType":"YulExpressionStatement","src":"15720:25:1"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15644:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15655:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15666:4:1","type":""}],"src":"15574:177:1"},{"body":{"nodeType":"YulBlock","src":"15913:218:1","statements":[{"nodeType":"YulAssignment","src":"15923:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15935:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"15946:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15931:3:1"},"nodeType":"YulFunctionCall","src":"15931:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15923:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15965:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"15976:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15958:6:1"},"nodeType":"YulFunctionCall","src":"15958:25:1"},"nodeType":"YulExpressionStatement","src":"15958:25:1"},{"nodeType":"YulVariableDeclaration","src":"15992:29:1","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16010:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"16015:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16006:3:1"},"nodeType":"YulFunctionCall","src":"16006:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"16019:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16002:3:1"},"nodeType":"YulFunctionCall","src":"16002:19:1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15996:2:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16041:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"16052:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16037:3:1"},"nodeType":"YulFunctionCall","src":"16037:18:1"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16061:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"16069:2:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16057:3:1"},"nodeType":"YulFunctionCall","src":"16057:15:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16030:6:1"},"nodeType":"YulFunctionCall","src":"16030:43:1"},"nodeType":"YulExpressionStatement","src":"16030:43:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16093:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"16104:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16089:3:1"},"nodeType":"YulFunctionCall","src":"16089:18:1"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16113:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"16121:2:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16109:3:1"},"nodeType":"YulFunctionCall","src":"16109:15:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16082:6:1"},"nodeType":"YulFunctionCall","src":"16082:43:1"},"nodeType":"YulExpressionStatement","src":"16082:43:1"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address__to_t_bytes32_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15866:9:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15877:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15885:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15893:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15904:4:1","type":""}],"src":"15756:375:1"},{"body":{"nodeType":"YulBlock","src":"16387:1306:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16404:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"16415:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16397:6:1"},"nodeType":"YulFunctionCall","src":"16397:25:1"},"nodeType":"YulExpressionStatement","src":"16397:25:1"},{"nodeType":"YulVariableDeclaration","src":"16431:12:1","value":{"kind":"number","nodeType":"YulLiteral","src":"16441:2:1","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"16435:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16452:29:1","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16470:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"16475:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16466:3:1"},"nodeType":"YulFunctionCall","src":"16466:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"16479:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16462:3:1"},"nodeType":"YulFunctionCall","src":"16462:19:1"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"16456:2:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16501:9:1"},{"name":"_1","nodeType":"YulIdentifier","src":"16512:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16497:3:1"},"nodeType":"YulFunctionCall","src":"16497:18:1"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16521:6:1"},{"name":"_2","nodeType":"YulIdentifier","src":"16529:2:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16517:3:1"},"nodeType":"YulFunctionCall","src":"16517:15:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16490:6:1"},"nodeType":"YulFunctionCall","src":"16490:43:1"},"nodeType":"YulExpressionStatement","src":"16490:43:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16553:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"16564:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16549:3:1"},"nodeType":"YulFunctionCall","src":"16549:18:1"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16573:6:1"},{"name":"_2","nodeType":"YulIdentifier","src":"16581:2:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16569:3:1"},"nodeType":"YulFunctionCall","src":"16569:15:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16542:6:1"},"nodeType":"YulFunctionCall","src":"16542:43:1"},"nodeType":"YulExpressionStatement","src":"16542:43:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16605:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"16616:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16601:3:1"},"nodeType":"YulFunctionCall","src":"16601:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"16621:3:1","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16594:6:1"},"nodeType":"YulFunctionCall","src":"16594:31:1"},"nodeType":"YulExpressionStatement","src":"16594:31:1"},{"nodeType":"YulVariableDeclaration","src":"16634:33:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16652:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"16663:3:1","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16648:3:1"},"nodeType":"YulFunctionCall","src":"16648:19:1"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"16638:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16676:33:1","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16702:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16696:5:1"},"nodeType":"YulFunctionCall","src":"16696:13:1"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16680:12:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16729:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"16740:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16725:3:1"},"nodeType":"YulFunctionCall","src":"16725:19:1"},{"kind":"number","nodeType":"YulLiteral","src":"16746:3:1","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16718:6:1"},"nodeType":"YulFunctionCall","src":"16718:32:1"},"nodeType":"YulExpressionStatement","src":"16718:32:1"},{"nodeType":"YulVariableDeclaration","src":"16759:17:1","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"16770:6:1"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"16763:3:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16785:33:1","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16805:12:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16799:5:1"},"nodeType":"YulFunctionCall","src":"16799:19:1"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16789:6:1","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"16834:6:1"},{"name":"length","nodeType":"YulIdentifier","src":"16842:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16827:6:1"},"nodeType":"YulFunctionCall","src":"16827:22:1"},"nodeType":"YulExpressionStatement","src":"16827:22:1"},{"nodeType":"YulAssignment","src":"16858:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16869:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"16880:3:1","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16865:3:1"},"nodeType":"YulFunctionCall","src":"16865:19:1"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16858:3:1"}]},{"nodeType":"YulVariableDeclaration","src":"16893:35:1","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16911:12:1"},{"name":"_1","nodeType":"YulIdentifier","src":"16925:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16907:3:1"},"nodeType":"YulFunctionCall","src":"16907:21:1"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"16897:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16937:13:1","value":{"name":"tail","nodeType":"YulIdentifier","src":"16946:4:1"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"16941:1:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"17008:129:1","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17029:3:1"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17044:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17038:5:1"},"nodeType":"YulFunctionCall","src":"17038:13:1"},{"name":"_2","nodeType":"YulIdentifier","src":"17053:2:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17034:3:1"},"nodeType":"YulFunctionCall","src":"17034:22:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17022:6:1"},"nodeType":"YulFunctionCall","src":"17022:35:1"},"nodeType":"YulExpressionStatement","src":"17022:35:1"},{"nodeType":"YulAssignment","src":"17070:19:1","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17081:3:1"},{"name":"_1","nodeType":"YulIdentifier","src":"17086:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17077:3:1"},"nodeType":"YulFunctionCall","src":"17077:12:1"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17070:3:1"}]},{"nodeType":"YulAssignment","src":"17102:25:1","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17116:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"17124:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17112:3:1"},"nodeType":"YulFunctionCall","src":"17112:15:1"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"17102:6:1"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16970:1:1"},{"name":"length","nodeType":"YulIdentifier","src":"16973:6:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16967:2:1"},"nodeType":"YulFunctionCall","src":"16967:13:1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16981:18:1","statements":[{"nodeType":"YulAssignment","src":"16983:14:1","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16992:1:1"},{"kind":"number","nodeType":"YulLiteral","src":"16995:1:1","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16988:3:1"},"nodeType":"YulFunctionCall","src":"16988:9:1"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"16983:1:1"}]}]},"pre":{"nodeType":"YulBlock","src":"16963:3:1","statements":[]},"src":"16959:178:1"},{"nodeType":"YulVariableDeclaration","src":"17146:44:1","value":{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17178:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"17186:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17174:3:1"},"nodeType":"YulFunctionCall","src":"17174:15:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17168:5:1"},"nodeType":"YulFunctionCall","src":"17168:22:1"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"17150:14:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17199:18:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17213:3:1","type":"","value":"127"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17209:3:1"},"nodeType":"YulFunctionCall","src":"17209:8:1"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"17203:2:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17237:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"17248:3:1","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17233:3:1"},"nodeType":"YulFunctionCall","src":"17233:19:1"},{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17262:3:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"17267:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17258:3:1"},"nodeType":"YulFunctionCall","src":"17258:19:1"},{"name":"_3","nodeType":"YulIdentifier","src":"17279:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17254:3:1"},"nodeType":"YulFunctionCall","src":"17254:28:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17226:6:1"},"nodeType":"YulFunctionCall","src":"17226:57:1"},"nodeType":"YulExpressionStatement","src":"17226:57:1"},{"nodeType":"YulVariableDeclaration","src":"17292:69:1","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"17341:14:1"},{"name":"pos","nodeType":"YulIdentifier","src":"17357:3:1"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"17306:34:1"},"nodeType":"YulFunctionCall","src":"17306:55:1"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"17296:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17370:44:1","value":{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17402:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"17410:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17398:3:1"},"nodeType":"YulFunctionCall","src":"17398:15:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17392:5:1"},"nodeType":"YulFunctionCall","src":"17392:22:1"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"17374:14:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17434:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"17445:3:1","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17430:3:1"},"nodeType":"YulFunctionCall","src":"17430:19:1"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"17459:6:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"17467:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17455:3:1"},"nodeType":"YulFunctionCall","src":"17455:22:1"},{"name":"_3","nodeType":"YulIdentifier","src":"17479:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17451:3:1"},"nodeType":"YulFunctionCall","src":"17451:31:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17423:6:1"},"nodeType":"YulFunctionCall","src":"17423:60:1"},"nodeType":"YulExpressionStatement","src":"17423:60:1"},{"nodeType":"YulVariableDeclaration","src":"17492:56:1","value":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"17525:14:1"},{"name":"tail_2","nodeType":"YulIdentifier","src":"17541:6:1"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"17506:18:1"},"nodeType":"YulFunctionCall","src":"17506:42:1"},"variables":[{"name":"tail_3","nodeType":"YulTypedName","src":"17496:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17557:44:1","value":{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17589:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"17597:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17585:3:1"},"nodeType":"YulFunctionCall","src":"17585:15:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17579:5:1"},"nodeType":"YulFunctionCall","src":"17579:22:1"},"variables":[{"name":"memberValue0_3","nodeType":"YulTypedName","src":"17561:14:1","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_3","nodeType":"YulIdentifier","src":"17628:14:1"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17648:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"17659:3:1","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17644:3:1"},"nodeType":"YulFunctionCall","src":"17644:19:1"}],"functionName":{"name":"abi_encode_t_bool","nodeType":"YulIdentifier","src":"17610:17:1"},"nodeType":"YulFunctionCall","src":"17610:54:1"},"nodeType":"YulExpressionStatement","src":"17610:54:1"},{"nodeType":"YulAssignment","src":"17673:14:1","value":{"name":"tail_3","nodeType":"YulIdentifier","src":"17681:6:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17673:4:1"}]}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_struct$_JoinPoolRequest_$9262_memory_ptr__to_t_bytes32_t_address_t_address_t_struct$_JoinPoolRequest_$9262_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16332:9:1","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16343:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16351:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16359:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16367:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16378:4:1","type":""}],"src":"16136:1557:1"},{"body":{"nodeType":"YulBlock","src":"17939:350:1","statements":[{"nodeType":"YulAssignment","src":"17949:27:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17961:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"17972:3:1","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17957:3:1"},"nodeType":"YulFunctionCall","src":"17957:19:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17949:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17992:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"18003:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17985:6:1"},"nodeType":"YulFunctionCall","src":"17985:25:1"},"nodeType":"YulExpressionStatement","src":"17985:25:1"},{"nodeType":"YulVariableDeclaration","src":"18019:29:1","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18037:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"18042:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18033:3:1"},"nodeType":"YulFunctionCall","src":"18033:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"18046:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18029:3:1"},"nodeType":"YulFunctionCall","src":"18029:19:1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18023:2:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18068:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"18079:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18064:3:1"},"nodeType":"YulFunctionCall","src":"18064:18:1"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18088:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"18096:2:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18084:3:1"},"nodeType":"YulFunctionCall","src":"18084:15:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18057:6:1"},"nodeType":"YulFunctionCall","src":"18057:43:1"},"nodeType":"YulExpressionStatement","src":"18057:43:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18120:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"18131:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18116:3:1"},"nodeType":"YulFunctionCall","src":"18116:18:1"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18140:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"18148:2:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18136:3:1"},"nodeType":"YulFunctionCall","src":"18136:15:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18109:6:1"},"nodeType":"YulFunctionCall","src":"18109:43:1"},"nodeType":"YulExpressionStatement","src":"18109:43:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18172:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"18183:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18168:3:1"},"nodeType":"YulFunctionCall","src":"18168:18:1"},{"name":"value3","nodeType":"YulIdentifier","src":"18188:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18161:6:1"},"nodeType":"YulFunctionCall","src":"18161:34:1"},"nodeType":"YulExpressionStatement","src":"18161:34:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18215:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"18226:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18211:3:1"},"nodeType":"YulFunctionCall","src":"18211:19:1"},{"name":"value4","nodeType":"YulIdentifier","src":"18232:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18204:6:1"},"nodeType":"YulFunctionCall","src":"18204:35:1"},"nodeType":"YulExpressionStatement","src":"18204:35:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18259:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"18270:3:1","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18255:3:1"},"nodeType":"YulFunctionCall","src":"18255:19:1"},{"name":"value5","nodeType":"YulIdentifier","src":"18276:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18248:6:1"},"nodeType":"YulFunctionCall","src":"18248:35:1"},"nodeType":"YulExpressionStatement","src":"18248:35:1"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17868:9:1","type":""},{"name":"value5","nodeType":"YulTypedName","src":"17879:6:1","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17887:6:1","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17895:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17903:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17911:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17919:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17930:4:1","type":""}],"src":"17698:591:1"},{"body":{"nodeType":"YulBlock","src":"18507:276:1","statements":[{"nodeType":"YulAssignment","src":"18517:27:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18529:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"18540:3:1","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18525:3:1"},"nodeType":"YulFunctionCall","src":"18525:19:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18517:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18560:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"18571:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18553:6:1"},"nodeType":"YulFunctionCall","src":"18553:25:1"},"nodeType":"YulExpressionStatement","src":"18553:25:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18598:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"18609:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18594:3:1"},"nodeType":"YulFunctionCall","src":"18594:18:1"},{"name":"value1","nodeType":"YulIdentifier","src":"18614:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18587:6:1"},"nodeType":"YulFunctionCall","src":"18587:34:1"},"nodeType":"YulExpressionStatement","src":"18587:34:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18641:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"18652:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18637:3:1"},"nodeType":"YulFunctionCall","src":"18637:18:1"},{"name":"value2","nodeType":"YulIdentifier","src":"18657:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18630:6:1"},"nodeType":"YulFunctionCall","src":"18630:34:1"},"nodeType":"YulExpressionStatement","src":"18630:34:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18684:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"18695:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18680:3:1"},"nodeType":"YulFunctionCall","src":"18680:18:1"},{"name":"value3","nodeType":"YulIdentifier","src":"18700:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18673:6:1"},"nodeType":"YulFunctionCall","src":"18673:34:1"},"nodeType":"YulExpressionStatement","src":"18673:34:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18727:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"18738:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18723:3:1"},"nodeType":"YulFunctionCall","src":"18723:19:1"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"18748:6:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18764:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"18769:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18760:3:1"},"nodeType":"YulFunctionCall","src":"18760:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"18773:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18756:3:1"},"nodeType":"YulFunctionCall","src":"18756:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18744:3:1"},"nodeType":"YulFunctionCall","src":"18744:32:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18716:6:1"},"nodeType":"YulFunctionCall","src":"18716:61:1"},"nodeType":"YulExpressionStatement","src":"18716:61:1"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18444:9:1","type":""},{"name":"value4","nodeType":"YulTypedName","src":"18455:6:1","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18463:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18471:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18479:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18487:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18498:4:1","type":""}],"src":"18294:489:1"},{"body":{"nodeType":"YulBlock","src":"18935:143:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18952:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"18963:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18945:6:1"},"nodeType":"YulFunctionCall","src":"18945:25:1"},"nodeType":"YulExpressionStatement","src":"18945:25:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18990:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"19001:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18986:3:1"},"nodeType":"YulFunctionCall","src":"18986:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"19006:2:1","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18979:6:1"},"nodeType":"YulFunctionCall","src":"18979:30:1"},"nodeType":"YulExpressionStatement","src":"18979:30:1"},{"nodeType":"YulAssignment","src":"19018:54:1","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19045:6:1"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19057:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"19068:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19053:3:1"},"nodeType":"YulFunctionCall","src":"19053:18:1"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"19026:18:1"},"nodeType":"YulFunctionCall","src":"19026:46:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19018:4:1"}]}]},"name":"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18896:9:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18907:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18915:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18926:4:1","type":""}],"src":"18788:290:1"},{"body":{"nodeType":"YulBlock","src":"19226:145:1","statements":[{"nodeType":"YulAssignment","src":"19236:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19248:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"19259:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19244:3:1"},"nodeType":"YulFunctionCall","src":"19244:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19236:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19278:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"19289:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19271:6:1"},"nodeType":"YulFunctionCall","src":"19271:25:1"},"nodeType":"YulExpressionStatement","src":"19271:25:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19316:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"19327:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19312:3:1"},"nodeType":"YulFunctionCall","src":"19312:18:1"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19336:6:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19352:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"19357:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19348:3:1"},"nodeType":"YulFunctionCall","src":"19348:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"19361:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19344:3:1"},"nodeType":"YulFunctionCall","src":"19344:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19332:3:1"},"nodeType":"YulFunctionCall","src":"19332:32:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19305:6:1"},"nodeType":"YulFunctionCall","src":"19305:60:1"},"nodeType":"YulExpressionStatement","src":"19305:60:1"}]},"name":"abi_encode_tuple_t_bytes32_t_contract$_IERC20_$486__to_t_bytes32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19187:9:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19198:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19206:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19217:4:1","type":""}],"src":"19083:288:1"},{"body":{"nodeType":"YulBlock","src":"19557:217:1","statements":[{"nodeType":"YulAssignment","src":"19567:27:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19579:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"19590:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19575:3:1"},"nodeType":"YulFunctionCall","src":"19575:19:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19567:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19610:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"19621:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19603:6:1"},"nodeType":"YulFunctionCall","src":"19603:25:1"},"nodeType":"YulExpressionStatement","src":"19603:25:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19648:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"19659:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19644:3:1"},"nodeType":"YulFunctionCall","src":"19644:18:1"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19668:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"19676:4:1","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19664:3:1"},"nodeType":"YulFunctionCall","src":"19664:17:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19637:6:1"},"nodeType":"YulFunctionCall","src":"19637:45:1"},"nodeType":"YulExpressionStatement","src":"19637:45:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19702:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"19713:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19698:3:1"},"nodeType":"YulFunctionCall","src":"19698:18:1"},{"name":"value2","nodeType":"YulIdentifier","src":"19718:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19691:6:1"},"nodeType":"YulFunctionCall","src":"19691:34:1"},"nodeType":"YulExpressionStatement","src":"19691:34:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19745:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"19756:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19741:3:1"},"nodeType":"YulFunctionCall","src":"19741:18:1"},{"name":"value3","nodeType":"YulIdentifier","src":"19761:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19734:6:1"},"nodeType":"YulFunctionCall","src":"19734:34:1"},"nodeType":"YulExpressionStatement","src":"19734:34:1"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19502:9:1","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19513:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19521:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19529:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19537:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19548:4:1","type":""}],"src":"19376:398:1"},{"body":{"nodeType":"YulBlock","src":"19900:102:1","statements":[{"nodeType":"YulAssignment","src":"19910:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19922:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"19933:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19918:3:1"},"nodeType":"YulFunctionCall","src":"19918:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19910:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19952:9:1"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19967:6:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19983:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"19988:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19979:3:1"},"nodeType":"YulFunctionCall","src":"19979:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"19992:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19975:3:1"},"nodeType":"YulFunctionCall","src":"19975:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19963:3:1"},"nodeType":"YulFunctionCall","src":"19963:32:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19945:6:1"},"nodeType":"YulFunctionCall","src":"19945:51:1"},"nodeType":"YulExpressionStatement","src":"19945:51:1"}]},"name":"abi_encode_tuple_t_contract$_IAuthorizer_$9665__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19869:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19880:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19891:4:1","type":""}],"src":"19779:223:1"},{"body":{"nodeType":"YulBlock","src":"20123:102:1","statements":[{"nodeType":"YulAssignment","src":"20133:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20145:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"20156:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20141:3:1"},"nodeType":"YulFunctionCall","src":"20141:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20133:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20175:9:1"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20190:6:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20206:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"20211:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20202:3:1"},"nodeType":"YulFunctionCall","src":"20202:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"20215:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20198:3:1"},"nodeType":"YulFunctionCall","src":"20198:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20186:3:1"},"nodeType":"YulFunctionCall","src":"20186:32:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20168:6:1"},"nodeType":"YulFunctionCall","src":"20168:51:1"},"nodeType":"YulExpressionStatement","src":"20168:51:1"}]},"name":"abi_encode_tuple_t_contract$_IVault_$9483__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20092:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20103:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20114:4:1","type":""}],"src":"20007:218:1"},{"body":{"nodeType":"YulBlock","src":"20351:100:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20368:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"20379:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20361:6:1"},"nodeType":"YulFunctionCall","src":"20361:21:1"},"nodeType":"YulExpressionStatement","src":"20361:21:1"},{"nodeType":"YulAssignment","src":"20391:54:1","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20418:6:1"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20430:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"20441:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20426:3:1"},"nodeType":"YulFunctionCall","src":"20426:18:1"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"20399:18:1"},"nodeType":"YulFunctionCall","src":"20399:46:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20391:4:1"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20320:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20331:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20342:4:1","type":""}],"src":"20230:221:1"},{"body":{"nodeType":"YulBlock","src":"20557:76:1","statements":[{"nodeType":"YulAssignment","src":"20567:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20579:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"20590:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20575:3:1"},"nodeType":"YulFunctionCall","src":"20575:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20567:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20609:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"20620:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20602:6:1"},"nodeType":"YulFunctionCall","src":"20602:25:1"},"nodeType":"YulExpressionStatement","src":"20602:25:1"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20526:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20537:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20548:4:1","type":""}],"src":"20456:177:1"},{"body":{"nodeType":"YulBlock","src":"20817:159:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20834:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"20845:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20827:6:1"},"nodeType":"YulFunctionCall","src":"20827:25:1"},"nodeType":"YulExpressionStatement","src":"20827:25:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20872:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"20883:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20868:3:1"},"nodeType":"YulFunctionCall","src":"20868:18:1"},{"kind":"number","nodeType":"YulLiteral","src":"20888:2:1","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20861:6:1"},"nodeType":"YulFunctionCall","src":"20861:30:1"},"nodeType":"YulExpressionStatement","src":"20861:30:1"},{"nodeType":"YulAssignment","src":"20900:70:1","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20943:6:1"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20955:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"20966:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20951:3:1"},"nodeType":"YulFunctionCall","src":"20951:18:1"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn","nodeType":"YulIdentifier","src":"20908:34:1"},"nodeType":"YulFunctionCall","src":"20908:62:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20900:4:1"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20778:9:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20789:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20797:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20808:4:1","type":""}],"src":"20638:338:1"},{"body":{"nodeType":"YulBlock","src":"21110:119:1","statements":[{"nodeType":"YulAssignment","src":"21120:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21132:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"21143:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21128:3:1"},"nodeType":"YulFunctionCall","src":"21128:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21120:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21162:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"21173:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21155:6:1"},"nodeType":"YulFunctionCall","src":"21155:25:1"},"nodeType":"YulExpressionStatement","src":"21155:25:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21200:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"21211:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21196:3:1"},"nodeType":"YulFunctionCall","src":"21196:18:1"},{"name":"value1","nodeType":"YulIdentifier","src":"21216:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21189:6:1"},"nodeType":"YulFunctionCall","src":"21189:34:1"},"nodeType":"YulExpressionStatement","src":"21189:34:1"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21071:9:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21082:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21090:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21101:4:1","type":""}],"src":"20981:248:1"},{"body":{"nodeType":"YulBlock","src":"21331:87:1","statements":[{"nodeType":"YulAssignment","src":"21341:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21353:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"21364:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21349:3:1"},"nodeType":"YulFunctionCall","src":"21349:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21341:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21383:9:1"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21398:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"21406:4:1","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21394:3:1"},"nodeType":"YulFunctionCall","src":"21394:17:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21376:6:1"},"nodeType":"YulFunctionCall","src":"21376:36:1"},"nodeType":"YulExpressionStatement","src":"21376:36:1"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21300:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21311:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21322:4:1","type":""}],"src":"21234:184:1"},{"body":{"nodeType":"YulBlock","src":"21467:198:1","statements":[{"nodeType":"YulAssignment","src":"21477:19:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21493:2:1","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21487:5:1"},"nodeType":"YulFunctionCall","src":"21487:9:1"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21477:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"21505:35:1","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21527:6:1"},{"name":"size","nodeType":"YulIdentifier","src":"21535:4:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21523:3:1"},"nodeType":"YulFunctionCall","src":"21523:17:1"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"21509:10:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"21615:13:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"21617:7:1"},"nodeType":"YulFunctionCall","src":"21617:9:1"},"nodeType":"YulExpressionStatement","src":"21617:9:1"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21558:10:1"},{"kind":"number","nodeType":"YulLiteral","src":"21570:18:1","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21555:2:1"},"nodeType":"YulFunctionCall","src":"21555:34:1"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21594:10:1"},{"name":"memPtr","nodeType":"YulIdentifier","src":"21606:6:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21591:2:1"},"nodeType":"YulFunctionCall","src":"21591:22:1"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"21552:2:1"},"nodeType":"YulFunctionCall","src":"21552:62:1"},"nodeType":"YulIf","src":"21549:2:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21644:2:1","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"21648:10:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21637:6:1"},"nodeType":"YulFunctionCall","src":"21637:22:1"},"nodeType":"YulExpressionStatement","src":"21637:22:1"}]},"name":"allocateMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"21447:4:1","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"21456:6:1","type":""}],"src":"21423:242:1"},{"body":{"nodeType":"YulBlock","src":"21742:108:1","statements":[{"body":{"nodeType":"YulBlock","src":"21786:13:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"21788:7:1"},"nodeType":"YulFunctionCall","src":"21788:9:1"},"nodeType":"YulExpressionStatement","src":"21788:9:1"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21758:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"21766:18:1","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21755:2:1"},"nodeType":"YulFunctionCall","src":"21755:30:1"},"nodeType":"YulIf","src":"21752:2:1"},{"nodeType":"YulAssignment","src":"21808:36:1","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21824:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"21832:4:1","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"21820:3:1"},"nodeType":"YulFunctionCall","src":"21820:17:1"},{"kind":"number","nodeType":"YulLiteral","src":"21839:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21816:3:1"},"nodeType":"YulFunctionCall","src":"21816:28:1"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"21808:4:1"}]}]},"name":"array_allocation_size_t_array$_IERC20_$dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"21722:6:1","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"21733:4:1","type":""}],"src":"21670:180:1"},{"body":{"nodeType":"YulBlock","src":"21902:86:1","statements":[{"body":{"nodeType":"YulBlock","src":"21966:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21975:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21978:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21968:6:1"},"nodeType":"YulFunctionCall","src":"21968:12:1"},"nodeType":"YulExpressionStatement","src":"21968:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21925:5:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21936:5:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21951:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"21956:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"21947:3:1"},"nodeType":"YulFunctionCall","src":"21947:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"21960:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21943:3:1"},"nodeType":"YulFunctionCall","src":"21943:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21932:3:1"},"nodeType":"YulFunctionCall","src":"21932:31:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21922:2:1"},"nodeType":"YulFunctionCall","src":"21922:42:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21915:6:1"},"nodeType":"YulFunctionCall","src":"21915:50:1"},"nodeType":"YulIf","src":"21912:2:1"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21891:5:1","type":""}],"src":"21855:133:1"},{"body":{"nodeType":"YulBlock","src":"22037:76:1","statements":[{"body":{"nodeType":"YulBlock","src":"22091:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22100:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22103:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22093:6:1"},"nodeType":"YulFunctionCall","src":"22093:12:1"},"nodeType":"YulExpressionStatement","src":"22093:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22060:5:1"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22081:5:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22074:6:1"},"nodeType":"YulFunctionCall","src":"22074:13:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22067:6:1"},"nodeType":"YulFunctionCall","src":"22067:21:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22057:2:1"},"nodeType":"YulFunctionCall","src":"22057:32:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22050:6:1"},"nodeType":"YulFunctionCall","src":"22050:40:1"},"nodeType":"YulIf","src":"22047:2:1"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22026:5:1","type":""}],"src":"21993:120:1"}]},"contents":"{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n    function abi_decode_t_array$_t_uint256_$dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocateMemory(array_allocation_size_t_array$_IERC20_$dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, mul(_1, _2)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_t_array$_t_uint256_$dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocateMemory(array_allocation_size_t_array$_IERC20_$dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, mul(_1, _2)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_t_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { invalid() }\n        let array_1 := allocateMemory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), array)\n        array := array_1\n    }\n    function abi_decode_t_enum$_ExitKind_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(lt(value, 1)) { revert(0, 0) }\n    }\n    function abi_decode_t_enum$_SwapKind(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(value2, value2) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value_2 := calldataload(add(headStart, 128))\n        if iszero(eq(value_2, and(value_2, 0xff))) { revert(value4, value4) }\n        value4 := value_2\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_contract$_IERC20_$486_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value2, value2) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value2, value2) }\n        let _3 := mload(_2)\n        let _4 := 0x20\n        let dst := allocateMemory(array_allocation_size_t_array$_IERC20_$dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let src := add(_2, _4)\n        if gt(add(add(_2, mul(_3, _4)), _4), dataEnd) { revert(value2, value2) }\n        let i := value2\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            let value := mload(src)\n            validator_revert_t_address(value)\n            mstore(dst, value)\n            dst := add(dst, _4)\n            src := add(src, _4)\n        }\n        value0 := dst_1\n        let offset_1 := mload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(value2, value2) }\n        value1 := abi_decode_t_array$_t_uint256_$dyn_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(value6, value6) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_t_address(value)\n        value1 := value\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_t_address(value_1)\n        value2 := value_1\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value6, value6) }\n        value3 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset), dataEnd)\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        let offset_1 := calldataload(add(headStart, 192))\n        if gt(offset_1, _1) { revert(value6, value6) }\n        value6 := abi_decode_t_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IAuthorizer_$9665_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$486t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(value1, value1) }\n        value1 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_enum$_ExitKind_$6392_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_enum$_ExitKind_fromMemory(headStart)\n    }\n    function abi_decode_tuple_t_enum$_ExitKind_$6392t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_enum$_ExitKind_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_struct$_SwapRequest_$29_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value2, value2) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value2, value2) }\n        let _2 := add(headStart, offset)\n        let _3 := 0x0120\n        if slt(sub(dataEnd, _2), _3) { revert(value2, value2) }\n        let value := allocateMemory(_3)\n        mstore(value, abi_decode_t_enum$_SwapKind(_2))\n        mstore(add(value, 32), abi_decode_t_address(add(_2, 32)))\n        mstore(add(value, 64), abi_decode_t_address(add(_2, 64)))\n        mstore(add(value, 96), calldataload(add(_2, 96)))\n        mstore(add(value, 128), calldataload(add(_2, 128)))\n        mstore(add(value, 160), calldataload(add(_2, 160)))\n        mstore(add(value, 192), abi_decode_t_address(add(_2, 192)))\n        mstore(add(value, 224), abi_decode_t_address(add(_2, 224)))\n        let _4 := 256\n        let offset_1 := calldataload(add(_2, _4))\n        if gt(offset_1, _1) { revert(value2, value2) }\n        mstore(add(value, _4), abi_decode_t_bytes(add(_2, offset_1), dataEnd))\n        value0 := value\n        let offset_2 := calldataload(add(headStart, 32))\n        if gt(offset_2, _1) { revert(value2, value2) }\n        value1 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset_2), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value2, value2) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        let value := mload(add(headStart, 96))\n        validator_revert_t_address(value)\n        value3 := value\n    }\n    function abi_encode_t_array$_t_uint256_$dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_t_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_bytes4__to_t_bytes32_t_bytes4__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), and(value1, shl(224, 0xffffffff)))\n        end := add(pos, 36)\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, end)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, shl(240, 6401))\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_array$_t_uint256_$dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_t_array$_t_uint256_$dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address__to_t_bytes32_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_struct$_JoinPoolRequest_$9262_memory_ptr__to_t_bytes32_t_address_t_address_t_struct$_JoinPoolRequest_$9262_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        let _1 := 32\n        let _2 := sub(shl(160, 1), 1)\n        mstore(add(headStart, _1), and(value1, _2))\n        mstore(add(headStart, 64), and(value2, _2))\n        mstore(add(headStart, 96), 128)\n        let tail_1 := add(headStart, 256)\n        let memberValue0 := mload(value3)\n        mstore(add(headStart, 128), 128)\n        let pos := tail_1\n        let length := mload(memberValue0)\n        mstore(tail_1, length)\n        pos := add(headStart, 288)\n        let srcPtr := add(memberValue0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), _2))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        let memberValue0_1 := mload(add(value3, _1))\n        let _3 := not(127)\n        mstore(add(headStart, 160), add(sub(pos, headStart), _3))\n        let tail_2 := abi_encode_t_array$_t_uint256_$dyn(memberValue0_1, pos)\n        let memberValue0_2 := mload(add(value3, 64))\n        mstore(add(headStart, 192), add(sub(tail_2, headStart), _3))\n        let tail_3 := abi_encode_t_bytes(memberValue0_2, tail_2)\n        let memberValue0_3 := mload(add(value3, 96))\n        abi_encode_t_bool(memberValue0_3, add(headStart, 224))\n        tail := tail_3\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_t_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32_t_contract$_IERC20_$486__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_contract$_IAuthorizer_$9665__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IVault_$9483__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_t_array$_t_uint256_$dyn(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function allocateMemory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_t_array$_IERC20_$dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { invalid() }\n        size := add(mul(length, 0x20), 0x20)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}","id":1,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"125":[{"length":32,"start":3528}],"199":[{"length":32,"start":3646}],"321":[{"length":32,"start":6555}],"323":[{"length":32,"start":6588}],"325":[{"length":32,"start":6522}],"977":[{"length":32,"start":4057}],"1115":[{"length":32,"start":3682}],"1345":[{"length":32,"start":6224}],"1347":[{"length":32,"start":6260}],"1558":[{"length":32,"start":2131}],"2724":[{"length":32,"start":2262},{"length":32,"start":3875},{"length":32,"start":5557},{"length":32,"start":5761},{"length":32,"start":6891},{"length":32,"start":8689},{"length":32,"start":9367},{"length":32,"start":9656},{"length":32,"start":10098},{"length":32,"start":10513},{"length":32,"start":10801},{"length":32,"start":11223}],"2726":[{"length":32,"start":4938},{"length":32,"start":5630},{"length":32,"start":5834},{"length":32,"start":8786},{"length":32,"start":9430},{"length":32,"start":9750},{"length":32,"start":10576},{"length":32,"start":10880}],"2728":[{"length":32,"start":2802},{"length":32,"start":3259},{"length":32,"start":3490},{"length":32,"start":4855},{"length":32,"start":5347},{"length":32,"start":8561},{"length":32,"start":9612},{"length":32,"start":10044},{"length":32,"start":10387},{"length":32,"start":10757},{"length":32,"start":11169},{"length":32,"start":11512},{"length":32,"start":11997},{"length":32,"start":12053}],"2730":[{"length":32,"start":2226},{"length":32,"start":2679},{"length":32,"start":5176},{"length":32,"start":6837},{"length":32,"start":9505},{"length":32,"start":9866},{"length":32,"start":9937},{"length":32,"start":10214},{"length":32,"start":10280},{"length":32,"start":10650},{"length":32,"start":10996},{"length":32,"start":11062},{"length":32,"start":11339},{"length":32,"start":11405}],"2732":[{"length":32,"start":1826},{"length":32,"start":2737},{"length":32,"start":5282},{"length":32,"start":9557},{"length":32,"start":9989},{"length":32,"start":10332},{"length":32,"start":10702},{"length":32,"start":11114},{"length":32,"start":11457}],"2734":[{"length":32,"start":5142},{"length":32,"start":8748}],"2736":[{"length":32,"start":5242}],"4249":[{"length":32,"start":8928}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x253 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x679AEFCE GT PUSH2 0x146 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xD5C096C4 EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xDE82CD34 EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0xF174E241 EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0xF5431AA8 EQ PUSH2 0x4FB JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0x9F11080E EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0x4AA JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x82687A56 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x82687A56 EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0x851C1BB3 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0x87EC6817 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x461 JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x74F3B009 EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x423 JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x4DE046D5 GT PUSH2 0x198 JUMPI DUP1 PUSH4 0x4DE046D5 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x50DD6ED9 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x55C67628 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x6028BFD4 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x63FE3B56 EQ PUSH2 0x3BE JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x38E9922E EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x4D64CD74 EQ PUSH2 0x365 JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x21B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x1C0DE051 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x1DD746EA EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x31A JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x1EC954A EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x16B8D6FF EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2BE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26B PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BA6 JUMP JUMPDEST PUSH2 0x503 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH2 0x673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x4021 JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x38FD JUMP JUMPDEST PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x3E6B JUMP JUMPDEST PUSH2 0x26B PUSH2 0x720 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x39F4 JUMP JUMPDEST PUSH2 0x744 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26B PUSH2 0x758 JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E76 JUMP JUMPDEST PUSH2 0x2FA PUSH2 0x787 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x3848 JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH2 0x322 PUSH2 0x80C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x405B JUMP JUMPDEST PUSH2 0x26B PUSH2 0x815 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH2 0x26B PUSH2 0x851 JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x360 CALLDATASIZE PUSH1 0x4 PUSH2 0x38FD JUMP JUMPDEST PUSH2 0x875 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x8B0 JUMP JUMPDEST PUSH2 0x375 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x3E1F JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B13 JUMP JUMPDEST PUSH2 0x8F8 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x916 JUMP JUMPDEST PUSH2 0x3B0 PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2C JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP3 SWAP2 SWAP1 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP3 SWAP2 SWAP1 PUSH2 0x404D JUMP JUMPDEST PUSH2 0x26B PUSH2 0x98C JUMP JUMPDEST PUSH2 0x26B PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x37F4 JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x402 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2C JUMP JUMPDEST PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP3 SWAP2 SWAP1 PUSH2 0x3E46 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x37F4 JUMP JUMPDEST PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0xBF2 JUMP JUMPDEST PUSH2 0x26B PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x441 CALLDATASIZE PUSH1 0x4 PUSH2 0x3ACF JUMP JUMPDEST PUSH2 0xDC4 JUMP JUMPDEST PUSH2 0x3B0 PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2C JUMP JUMPDEST PUSH2 0xE16 JUMP JUMPDEST PUSH2 0x375 PUSH2 0xE3C JUMP JUMPDEST PUSH2 0x375 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x289 PUSH2 0xE84 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x47F CALLDATASIZE PUSH1 0x4 PUSH2 0x3CF0 JUMP JUMPDEST PUSH2 0xEE5 JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x38FD JUMP JUMPDEST PUSH2 0xF4F JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x4A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x38FD JUMP JUMPDEST PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x375 PUSH2 0xF9A JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x4C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3888 JUMP JUMPDEST PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x4D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2C JUMP JUMPDEST PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x26B PUSH2 0x4E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3810 JUMP JUMPDEST PUSH2 0x121D JUMP JUMPDEST PUSH2 0x26B PUSH2 0x125A JUMP JUMPDEST PUSH2 0x375 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x136C JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x530 PUSH2 0x515 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0xCD PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x545 PUSH2 0x53B PUSH2 0x851 JUMP JUMPDEST DUP3 EQ PUSH2 0x1F4 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x54D PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0x567 PUSH1 0x3 DUP6 LT DUP1 ISZERO PUSH2 0x560 JUMPI POP PUSH1 0x3 DUP5 LT JUMPDEST PUSH1 0x64 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x571 PUSH2 0x13EE JUMP JUMPDEST SWAP1 POP PUSH2 0x57D DUP7 DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x588 PUSH2 0x95E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x5A1 PUSH2 0x916 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 ADD DUP4 SWAP1 MSTORE SWAP1 POP PUSH1 0x0 DUP11 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5C1 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x625 JUMPI PUSH2 0x5E8 DUP11 PUSH1 0x60 ADD MLOAD DUP6 DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x5DB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x157D JUMP JUMPDEST PUSH1 0x60 DUP12 ADD MSTORE PUSH1 0x0 PUSH2 0x5FA DUP12 DUP12 DUP5 PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP PUSH2 0x619 DUP2 DUP7 DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x60C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1650 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP PUSH2 0x66A JUMP JUMPDEST PUSH2 0x639 DUP11 PUSH1 0x60 ADD MLOAD DUP6 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x5DB JUMPI INVALID JUMPDEST PUSH1 0x60 DUP12 ADD MSTORE PUSH1 0x0 PUSH2 0x64B DUP12 DUP12 DUP5 PUSH2 0x165C JUMP JUMPDEST SWAP1 POP PUSH2 0x619 DUP2 DUP7 DUP12 DUP2 MLOAD DUP2 LT PUSH2 0x65D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1711 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x6FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x716 CALLER DUP5 DUP5 PUSH2 0x171D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x74C PUSH2 0x1785 JUMP JUMPDEST PUSH2 0x755 DUP2 PUSH2 0x17B3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x76B PUSH2 0x1831 JUMP JUMPDEST ISZERO SWAP3 POP PUSH2 0x776 PUSH2 0x184E JUMP JUMPDEST SWAP2 POP PUSH2 0x780 PUSH2 0x1872 JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x791 PUSH2 0x13EE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7A3 DUP6 CALLER PUSH2 0x121D JUMP JUMPDEST SWAP1 POP PUSH2 0x7C7 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ DUP1 PUSH2 0x7BF JUMPI POP DUP4 DUP3 LT ISZERO JUMPDEST PUSH2 0x19E PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x7D2 DUP6 DUP6 DUP6 PUSH2 0x1896 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x7ED JUMPI POP PUSH1 0x0 NOT DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x7FF JUMPI PUSH2 0x7FF DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x171D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x791 PUSH2 0x1976 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x82A PUSH2 0x95E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x843 PUSH2 0x83B DUP4 DUP4 PUSH2 0x1A13 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x84C DUP4 PUSH2 0x1B2B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x716 SWAP2 DUP6 SWAP1 PUSH2 0x8AB SWAP1 DUP7 PUSH2 0x1B44 JUMP JUMPDEST PUSH2 0x171D JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x900 PUSH2 0x1785 JUMP JUMPDEST PUSH2 0x908 PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0x912 DUP3 DUP3 PUSH2 0x1B56 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x791 SWAP1 PUSH1 0xC0 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x93D DUP7 MLOAD PUSH2 0x938 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0x1C30 JUMP JUMPDEST PUSH2 0x952 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1C3D PUSH2 0x1CE1 PUSH2 0x1D42 JUMP JUMPDEST SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x96B PUSH2 0x1E64 JUMP JUMPDEST SWAP1 POP PUSH2 0x978 DUP2 PUSH1 0x0 PUSH2 0x1E6A JUMP JUMPDEST SWAP3 POP PUSH2 0x985 DUP2 PUSH1 0x60 PUSH2 0x1E6A JUMP JUMPDEST SWAP2 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x997 PUSH2 0x851 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9A3 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CE SWAP2 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xA22 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3928 JUMP JUMPDEST POP SWAP2 POP POP PUSH2 0xA37 DUP2 PUSH2 0xA32 PUSH2 0x13EE JUMP JUMPDEST PUSH2 0x151C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA42 PUSH2 0x95E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0xA5B PUSH2 0x916 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0xAE7 PUSH2 0xAAE DUP7 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAA0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x1E7C JUMP JUMPDEST DUP7 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xADA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH2 0xB2F PUSH2 0xB28 DUP7 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1EE9 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0xB68 PUSH2 0x515 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0xB73 PUSH2 0x53B PUSH2 0x851 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7D PUSH2 0x13EE JUMP JUMPDEST SWAP1 POP PUSH2 0xB89 DUP9 DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xB9E DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP11 DUP16 PUSH2 0x1C3D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xBAE DUP14 DUP5 PUSH2 0x1F4C JUMP JUMPDEST PUSH2 0xBB8 DUP3 DUP6 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0xBC2 DUP2 DUP6 PUSH2 0x1CE1 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP POP JUMPDEST POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFC PUSH2 0x851 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC08 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC33 SWAP2 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xC87 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3928 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCE4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0xD06 DUP6 PUSH2 0x1F56 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP PUSH2 0xD37 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB95CAC28 DUP6 ADDRESS ADDRESS DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD68 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3EB6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDF9 SWAP3 SWAP2 SWAP1 PUSH2 0x3DDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0xE27 DUP7 MLOAD PUSH2 0x938 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0x952 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1F59 PUSH2 0x1F77 PUSH2 0x1D42 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x6FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FF JUMP JUMPDEST PUSH2 0xEED PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xEF8 PUSH2 0x95E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xF09 PUSH2 0x83B DUP4 DUP4 PUSH2 0x1A13 JUMP JUMPDEST PUSH2 0xF1E PUSH2 0xF16 DUP6 DUP6 PUSH2 0x1A13 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0xF49 PUSH32 0x0 DUP6 DUP6 PUSH2 0x1FD8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF5C CALLER DUP6 PUSH2 0x121D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT PUSH2 0xF76 JUMPI PUSH2 0xF71 CALLER DUP6 PUSH1 0x0 PUSH2 0x171D JUMP JUMPDEST PUSH2 0xF83 JUMP JUMPDEST PUSH2 0xF83 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x171D JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x716 CALLER DUP5 DUP5 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x791 PUSH2 0x2069 JUMP JUMPDEST PUSH2 0xFB2 DUP5 TIMESTAMP GT ISZERO PUSH1 0xD1 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH2 0x1009 SWAP2 PUSH32 0x0 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP9 SWAP2 DUP14 SWAP2 ADD PUSH2 0x3F73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x102C DUP3 PUSH2 0x20E3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1053 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4003 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1075 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP PUSH2 0x10B7 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x10AF JUMPI POP DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1F8 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP6 ADD SWAP1 SSTORE PUSH2 0x10E0 DUP12 DUP12 DUP12 PUSH2 0x171D JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0x10FC PUSH2 0x515 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x1107 PUSH2 0x53B PUSH2 0x851 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1111 PUSH2 0x13EE JUMP JUMPDEST SWAP1 POP PUSH2 0x111B PUSH2 0x758 JUMP JUMPDEST PUSH2 0x11CD JUMPI PUSH1 0x0 DUP1 PUSH2 0x112F DUP14 DUP14 DUP14 DUP7 DUP12 PUSH2 0x20FF JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1148 PUSH2 0x113E PUSH2 0x21B3 JUMP JUMPDEST DUP4 LT ISZERO PUSH1 0xCC PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x115A PUSH1 0x0 PUSH2 0x1155 PUSH2 0x21B3 JUMP JUMPDEST PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x116D DUP12 PUSH2 0x1166 PUSH2 0x21B3 JUMP JUMPDEST DUP5 SUB PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x1177 DUP2 DUP5 PUSH2 0x1F77 JUMP JUMPDEST DUP1 PUSH2 0x1180 PUSH2 0x1C2B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11C0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x11D7 DUP9 DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x11EC DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP11 DUP16 PUSH2 0x1F59 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x11FC DUP13 DUP5 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x1206 DUP3 DUP6 PUSH2 0x1F77 JUMP JUMPDEST PUSH2 0x1210 DUP2 DUP6 PUSH2 0x1CE1 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0xBCA SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1227 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1249 JUMPI POP PUSH1 0x0 NOT PUSH2 0x71A JUMP JUMPDEST PUSH2 0x1253 DUP4 DUP4 PUSH2 0x21C2 JUMP JUMPDEST SWAP1 POP PUSH2 0x71A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1265 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 PUSH2 0x127B PUSH2 0x851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1297 SWAP2 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x12EB SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3928 JUMP JUMPDEST POP SWAP2 POP POP PUSH1 0x0 PUSH2 0x1336 DUP3 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1320 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1331 ADDRESS PUSH2 0x21ED JUMP JUMPDEST PUSH2 0x157D JUMP JUMPDEST SWAP1 POP PUSH2 0x1341 DUP2 PUSH2 0x22C7 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x791 PUSH2 0x22DB JUMP JUMPDEST DUP1 PUSH2 0x912 DUP2 PUSH2 0x238E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A6 DUP4 DUP4 GT ISZERO PUSH1 0x1 PUSH2 0x13CB JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP3 DUP2 AND DUP3 SHL SWAP1 DUP3 SHL NOT DUP5 AND OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x912 JUMPI PUSH2 0x912 DUP2 PUSH2 0x2407 JUMP JUMPDEST PUSH2 0x13EC PUSH2 0x13E4 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x13CB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP5 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH32 0x0 DUP2 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1461 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x149F PUSH2 0x1478 PUSH2 0x22DB JUMP JUMPDEST PUSH32 0x0 SWAP1 PUSH2 0x245A JUMP JUMPDEST DUP2 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x14CB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x150C JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x1527 PUSH2 0x1C2B JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x84C JUMPI PUSH2 0x155E DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x153D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1551 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x245A JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x156A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x151F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x805 DUP4 DUP4 PUSH2 0x245A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x15B3 JUMPI PUSH2 0x15AC DUP5 DUP5 DUP5 PUSH2 0x2490 JUMP JUMPDEST SWAP1 POP PUSH2 0x805 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x15FC JUMPI PUSH2 0x15AC DUP5 DUP5 DUP5 PUSH2 0x260F JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1645 JUMPI PUSH2 0x15AC DUP5 DUP5 DUP5 PUSH2 0x276B JUMP JUMPDEST PUSH2 0x805 PUSH2 0x135 PUSH2 0x2407 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x805 DUP4 DUP4 PUSH2 0x28C2 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x167F JUMPI PUSH2 0x15AC DUP5 DUP5 DUP5 PUSH2 0x290A JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x16C8 JUMPI PUSH2 0x15AC DUP5 DUP5 DUP5 PUSH2 0x2A79 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1645 JUMPI PUSH2 0x15AC DUP5 DUP5 DUP5 PUSH2 0x2BD0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x805 DUP4 DUP4 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x1778 SWAP1 DUP6 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179C PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0xDC4 JUMP JUMPDEST SWAP1 POP PUSH2 0x755 PUSH2 0x17AB DUP3 CALLER PUSH2 0x2D27 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x13CB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17D3 JUMPI PUSH2 0x17CE PUSH2 0x17C4 PUSH2 0x184E JUMP JUMPDEST TIMESTAMP LT PUSH2 0x193 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x17E8 JUMP JUMPDEST PUSH2 0x17E8 PUSH2 0x17DE PUSH2 0x1872 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1A9 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x9E3A5E37224532DEA67B89FACE185703738A228A6E8A23DEE546960180D3BE64 SWAP1 PUSH2 0x1826 SWAP1 DUP4 SWAP1 PUSH2 0x3E6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x183B PUSH2 0x1872 JUMP JUMPDEST TIMESTAMP GT DUP1 PUSH2 0x791 JUMPI POP POP PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x18AD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x18C4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x18CF DUP4 DUP4 DUP4 PUSH2 0x84C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x18F5 SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x2E10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1924 SWAP1 DUP3 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x1778 SWAP1 DUP6 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x19E3 PUSH2 0x2E26 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x19F8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A1E PUSH2 0x851 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A2A PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A55 SWAP2 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1AA9 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3928 JUMP JUMPDEST POP SWAP2 POP POP PUSH1 0x0 PUSH2 0x1B0F DUP3 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1ADE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1331 PUSH32 0x0 PUSH2 0x21ED JUMP JUMPDEST SWAP1 POP DUP6 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x1B21 JUMPI POP DUP5 DUP2 GT ISZERO JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B33 PUSH2 0x1785 JUMP JUMPDEST PUSH2 0x1B3B PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0x755 DUP2 PUSH2 0x2E2A JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x805 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B60 PUSH2 0x851 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B6C PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB05F8E48 DUP4 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B99 SWAP3 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BE9 SWAP2 SWAP1 PUSH2 0x3D11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x639CDB5 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP4 POP PUSH4 0x18E736D4 SWAP3 POP PUSH2 0xD68 SWAP2 POP DUP6 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3FD3 JUMP JUMPDEST SHR PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SWAP1 JUMP JUMPDEST PUSH2 0x912 DUP2 DUP4 EQ PUSH1 0x67 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x1C4D DUP6 PUSH2 0x2E95 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP1 ISZERO PUSH2 0x1C5A JUMPI INVALID JUMPDEST EQ PUSH2 0x1C6F JUMPI PUSH2 0x1C6A PUSH2 0x14E PUSH2 0x2407 JUMP JUMPDEST PUSH2 0x1CD2 JUMP JUMPDEST PUSH2 0x1C77 PUSH2 0x2EAB JUMP JUMPDEST PUSH2 0x1C81 DUP10 DUP7 PUSH2 0x2EBF JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x1C8E PUSH2 0x1C2B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1CA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1CCE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP JUMPDEST POP SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x1CEC PUSH2 0x1C2B JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x84C JUMPI PUSH2 0x1D23 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1D02 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1D16 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x28C2 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1D2F JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1CE4 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x1E00 JUMPI PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x1D66 SWAP3 SWAP2 SWAP1 PUSH2 0x3DF4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DA3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DA8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DB7 JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43ADBAFB PUSH1 0xE0 SHL DUP2 EQ PUSH2 0x1DE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x4 PUSH1 0x0 RETURNDATACOPY PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x24 RETURNDATASIZE SUB PUSH1 0x24 PUSH1 0x40 RETURNDATACOPY PUSH1 0x1C RETURNDATASIZE ADD PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x1E0A PUSH2 0x13EE JUMP JUMPDEST SWAP1 POP PUSH2 0x1E16 DUP8 DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E2D DUP13 DUP13 DUP13 DUP13 DUP13 DUP13 DUP10 DUP14 DUP14 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1E40 DUP2 DUP5 DUP7 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1F NOT DUP3 ADD DUP4 SWAP1 MSTORE PUSH4 0x43ADBAFB PUSH1 0x3F NOT DUP4 ADD MSTORE PUSH1 0x20 MUL PUSH1 0x23 NOT DUP3 ADD PUSH1 0x44 DUP3 ADD DUP2 REVERT JUMPDEST PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SHR PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD DUP4 LT ISZERO PUSH2 0x1EB5 JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP2 PUSH2 0x1EA1 SWAP2 DUP7 SWAP1 SUB SWAP1 PUSH2 0x245A JUMP JUMPDEST SWAP1 POP PUSH2 0x1EAD DUP5 DUP3 PUSH2 0x1396 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x71A JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD DUP4 GT PUSH2 0x1EC7 JUMPI POP DUP2 PUSH2 0x71A JUMP JUMPDEST DUP2 MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x0 SWAP2 PUSH2 0x1EA1 SWAP2 DUP7 SUB SWAP1 PUSH2 0x245A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x805 DUP4 DUP4 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F04 DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x13CB JUMP JUMPDEST DUP3 PUSH2 0x1F11 JUMPI POP PUSH1 0x0 PUSH2 0x71A JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 PUSH2 0x1F34 SWAP1 DUP6 DUP4 DUP2 PUSH2 0x1F2B JUMPI INVALID JUMPDEST DIV EQ PUSH1 0x5 PUSH2 0x13CB JUMP JUMPDEST DUP3 PUSH1 0x1 DUP3 SUB DUP2 PUSH2 0x1F40 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x71A JUMP JUMPDEST PUSH2 0x912 DUP3 DUP3 PUSH2 0x2F46 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH2 0x1F69 PUSH2 0x14E PUSH2 0x2407 JUMP JUMPDEST SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x1F82 PUSH2 0x1C2B JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x84C JUMPI PUSH2 0x1FB9 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F98 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FAC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1EF5 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1FC5 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1F7A JUMP JUMPDEST PUSH2 0x1FE7 DUP2 DUP4 GT ISZERO PUSH2 0x14C PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2002 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14D PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2021 PUSH2 0x2010 DUP3 PUSH1 0x60 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x201B DUP5 PUSH1 0x0 PUSH2 0x13AC JUMP JUMPDEST OR PUSH2 0x3002 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD0E27A0D0C2CB09280FA5E4487315455B32AFCDCF012DC35B6EF2A0E3C4D1280 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x205C SWAP3 SWAP2 SWAP1 PUSH2 0x404D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2073 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x791 SWAP2 SWAP1 PUSH2 0x3AF7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20ED PUSH2 0x1976 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDF9 SWAP3 SWAP2 SWAP1 PUSH2 0x3E04 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x210B PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0x2122 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ADDRESS EQ PUSH2 0x156 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2139 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ADDRESS EQ PUSH2 0x156 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x219A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x912 DUP3 DUP3 PUSH2 0x3017 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2250 JUMPI POP PUSH32 0x0 PUSH2 0xB54 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x229C JUMPI PUSH2 0x2295 PUSH2 0x1478 PUSH2 0x22DB JUMP JUMPDEST SWAP1 POP PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ ISZERO PUSH2 0x22BC JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH2 0xB54 JUMP JUMPDEST PUSH2 0xB54 PUSH2 0x135 PUSH2 0x2407 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71A DUP3 PUSH2 0x22D5 PUSH2 0x758 JUMP JUMPDEST SWAP1 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD15E0053 PUSH2 0x2315 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2331 SWAP2 SWAP1 PUSH2 0x3E1F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x235D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2381 SWAP2 SWAP1 PUSH2 0x3CD8 JUMP JUMPDEST PUSH4 0x3B9ACA00 SWAP1 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD LT ISZERO PUSH2 0x239D JUMPI PUSH2 0x755 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x23AC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x23D4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x23FD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH1 0x65 PUSH2 0x13CB JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x23BD JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x247E DUP5 ISZERO DUP1 PUSH2 0x2477 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x2474 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x13CB JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2516 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x250E JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x135 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2607 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x254A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x257E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x25B5 DUP8 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST DUP7 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x25FB JUMPI PUSH2 0x30A5 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x3105 JUMPDEST PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x266B PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x250E JUMPI POP PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x135 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x26C6 JUMPI PUSH2 0x26C1 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x26B3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x316E JUMP JUMPDEST PUSH2 0x2607 JUMP JUMPDEST PUSH2 0x2607 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x26FA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x272E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2765 DUP8 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST DUP7 PUSH2 0x319E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27C7 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x250E JUMPI POP PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x135 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x281D JUMPI PUSH2 0x26C1 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x280F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x3204 JUMP JUMPDEST PUSH2 0x2607 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2851 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2885 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x28BC DUP8 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST DUP7 PUSH2 0x3244 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D1 DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x13CB JUMP JUMPDEST DUP3 PUSH2 0x28DE JUMPI POP PUSH1 0x0 PUSH2 0x71A JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 PUSH2 0x28F8 SWAP1 DUP6 DUP4 DUP2 PUSH2 0x1F2B JUMPI INVALID JUMPDEST DUP3 DUP2 DUP2 PUSH2 0x2901 JUMPI INVALID JUMPDEST DIV SWAP2 POP POP PUSH2 0x71A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x298F PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x250E JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x135 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2607 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x29C3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x29F7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2A2E DUP8 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST DUP7 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2A74 JUMPI PUSH2 0x32AB PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x3302 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD5 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x250E JUMPI POP PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x135 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x2B2B JUMPI PUSH2 0x26C1 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2B1D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x336C JUMP JUMPDEST PUSH2 0x2607 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2B5F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2B93 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2BCA DUP8 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST DUP7 PUSH2 0x3396 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C2C PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x250E JUMPI POP PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x135 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x2C82 JUMPI PUSH2 0x26C1 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2C74 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x33E5 JUMP JUMPDEST PUSH2 0x2607 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2CB6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2CEA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2D21 DUP8 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST DUP7 PUSH2 0x341A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xBA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1B PUSH2 0x2D46 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x2D61 JUMPI POP PUSH2 0x2D61 DUP4 PUSH2 0x346E JUMP JUMPDEST ISZERO PUSH2 0x2D89 JUMPI PUSH2 0x2D6E PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH2 0x71A JUMP JUMPDEST PUSH2 0x2D91 PUSH2 0x2069 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9BE2A884 DUP5 DUP5 ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DC0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1253 SWAP2 SWAP1 PUSH2 0x3A10 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E1F DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x13CB JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH2 0x2E3D PUSH5 0xE8D4A51000 DUP3 LT ISZERO PUSH1 0xCB PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2E53 PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH1 0xCA PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x2E62 SWAP1 DUP3 PUSH1 0xC0 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA9BA3FFE0B6C366B81232CAAB38605A0699AD5398D6CCE76F91EE809E322DAFC SWAP1 PUSH2 0x1826 SWAP1 DUP4 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x3B61 JUMP JUMPDEST PUSH2 0x13EC PUSH2 0x2EB6 PUSH2 0x1831 JUMP JUMPDEST ISZERO PUSH2 0x1AF PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x2ECE DUP5 PUSH2 0x3491 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F39 DUP7 DUP4 PUSH2 0x2F13 DUP10 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2F06 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x22C7 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x34A7 JUMP JUMPDEST SWAP2 SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2F5D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x19B PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2F69 DUP3 PUSH1 0x0 DUP4 PUSH2 0x84C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2F8F SWAP1 DUP3 PUSH2 0x1A1 PUSH2 0x2E10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x2FB5 SWAP1 DUP3 PUSH2 0x3563 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x2FF6 SWAP1 DUP6 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x3011 SWAP1 DUP3 PUSH1 0x0 PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0x8 SSTORE POP JUMP JUMPDEST PUSH2 0x3023 PUSH1 0x0 DUP4 DUP4 PUSH2 0x84C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x3030 SWAP1 DUP3 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3056 SWAP1 DUP3 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x2FF6 SWAP1 DUP6 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x30B2 DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30C0 DUP3 DUP8 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30CE DUP7 DUP11 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30E9 DUP5 PUSH2 0x22D5 PUSH2 0x30E3 DUP6 DUP8 PUSH2 0x3571 JUMP JUMPDEST DUP11 PUSH2 0x358B JUMP JUMPDEST SWAP1 POP PUSH2 0x30F5 DUP9 DUP3 PUSH2 0x1396 JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3112 DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3120 DUP3 DUP8 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3137 PUSH2 0x3131 DUP4 DUP12 PUSH2 0x3571 JUMP JUMPDEST DUP8 PUSH2 0x35BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3145 DUP5 DUP4 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3153 DUP3 DUP9 PUSH2 0x35DE JUMP JUMPDEST SWAP1 POP PUSH2 0x315F DUP11 DUP3 PUSH2 0x1396 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x317B DUP5 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3192 PUSH2 0x318C DUP7 DUP9 PUSH2 0x1B44 JUMP JUMPDEST DUP6 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH2 0x1B21 DUP2 DUP4 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x31B6 JUMPI PUSH2 0x31AF DUP7 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH2 0x30FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C2 DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x31D3 PUSH2 0x318C DUP9 DUP11 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x31E1 DUP3 DUP5 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x31EF DUP5 DUP10 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH2 0x30F5 PUSH2 0x31FE DUP9 DUP5 PUSH2 0x3571 JUMP JUMPDEST DUP3 PUSH2 0x35BE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3211 DUP5 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x321F DUP3 DUP8 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x322D DUP3 DUP7 PUSH2 0x35DE JUMP JUMPDEST SWAP1 POP PUSH2 0x3239 DUP7 DUP3 PUSH2 0x1396 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3252 JUMPI POP DUP5 PUSH2 0x30FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x325E DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x326C DUP3 DUP8 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x327A DUP8 DUP11 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3288 DUP5 DUP4 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x329F PUSH2 0x3299 DUP10 DUP5 PUSH2 0x3571 JUMP JUMPDEST DUP6 PUSH2 0x35BE JUMP JUMPDEST SWAP1 POP PUSH2 0x315F DUP2 DUP10 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x32B9 JUMPI POP DUP5 PUSH2 0x30FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32C5 DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x32D3 DUP3 DUP8 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x32E1 DUP7 DUP11 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x32F6 DUP5 PUSH2 0x22D5 PUSH2 0x30E3 DUP6 DUP8 PUSH2 0x3571 JUMP JUMPDEST SWAP1 POP PUSH2 0x30F5 DUP2 DUP10 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3313 JUMPI PUSH2 0x31AF DUP7 DUP4 PUSH2 0x35DE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x331F DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x332D DUP3 DUP8 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3344 PUSH2 0x333E DUP4 DUP12 PUSH2 0x3571 JUMP JUMPDEST DUP8 PUSH2 0x358B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3352 DUP5 DUP4 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3360 DUP3 DUP9 PUSH2 0x35DE JUMP JUMPDEST SWAP1 POP PUSH2 0x315F DUP2 DUP12 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3379 DUP5 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x338A PUSH2 0x318C DUP7 DUP9 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B21 DUP3 DUP3 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x33A3 DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x33B4 PUSH2 0x318C DUP9 DUP11 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x33C2 DUP4 DUP4 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x33D0 DUP5 DUP10 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH2 0x30F5 PUSH2 0x33DF DUP9 DUP5 PUSH2 0x3571 JUMP JUMPDEST DUP3 PUSH2 0x358B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x33F2 DUP5 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3400 DUP3 DUP8 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x340E DUP3 DUP7 PUSH2 0x35DE JUMP JUMPDEST SWAP1 POP PUSH2 0x3239 DUP2 DUP8 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3427 DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3435 DUP3 DUP8 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3443 DUP8 DUP11 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3451 DUP5 DUP4 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3462 PUSH2 0x3299 DUP10 DUP5 PUSH2 0x3571 JUMP JUMPDEST SWAP1 POP PUSH2 0x315F DUP9 DUP3 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3480 PUSH4 0x4F888407 PUSH1 0xE1 SHL PUSH2 0xDC4 JUMP JUMPDEST DUP3 EQ DUP1 PUSH2 0x71A JUMPI POP PUSH2 0x71A DUP3 PUSH2 0x366E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x805 SWAP2 SWAP1 PUSH2 0x3B7B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x34B5 DUP6 DUP6 PUSH2 0x28C2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x34D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x34FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x3558 JUMPI DUP5 DUP2 EQ PUSH2 0x3550 JUMPI PUSH2 0x3537 DUP4 DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3521 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x245A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3543 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3501 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x805 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2E10 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x805 DUP5 ISZERO DUP1 PUSH2 0x2477 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x2474 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH2 0x359A DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x13CB JUMP JUMPDEST DUP3 PUSH2 0x35A7 JUMPI POP PUSH1 0x0 PUSH2 0x71A JUMP JUMPDEST DUP2 PUSH1 0x1 DUP5 SUB DUP2 PUSH2 0x35B3 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP1 POP PUSH2 0x71A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35CD DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x13CB JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x35D6 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD DUP4 LT ISZERO PUSH2 0x3627 JUMPI DUP2 MLOAD PUSH2 0x1253 SWAP1 PUSH2 0x3605 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD DUP5 MLOAD PUSH2 0x3621 SWAP2 PUSH2 0x361A SWAP2 SWAP1 PUSH2 0x245A JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 PUSH2 0x28C2 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD DUP4 GT PUSH2 0x3639 JUMPI POP DUP2 PUSH2 0x71A JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1253 SWAP1 PUSH2 0x3652 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD DUP5 MLOAD PUSH2 0x3621 SWAP2 PUSH2 0x3667 SWAP2 SWAP1 PUSH2 0x245A JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3680 PUSH4 0x1C74C917 PUSH1 0xE1 SHL PUSH2 0xDC4 JUMP JUMPDEST DUP3 EQ DUP1 PUSH2 0x71A JUMPI POP PUSH2 0x3698 PUSH4 0x50DD6ED9 PUSH1 0xE0 SHL PUSH2 0xDC4 JUMP JUMPDEST SWAP1 SWAP2 EQ SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xB54 DUP2 PUSH2 0x40AB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x36BB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x36D0 PUSH2 0x36CB DUP4 PUSH2 0x408D JUMP JUMPDEST PUSH2 0x4069 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x36EC JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x370A JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x36EE JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3727 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x3737 PUSH2 0x36CB DUP4 PUSH2 0x408D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x3753 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x370A JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3755 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3781 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3795 JUMPI INVALID JUMPDEST PUSH2 0x37A8 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x4069 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x37BC JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 DUP2 LT PUSH2 0xB54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0xB54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3805 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x805 DUP2 PUSH2 0x40AB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3822 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x382D DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x383D DUP2 PUSH2 0x40AB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x385C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3867 DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x3877 DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x38A2 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x38AD DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x38BD DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x38E0 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x390F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x391A DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x393C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3953 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3966 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x3976 PUSH2 0x36CB DUP4 PUSH2 0x408D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP13 LT ISZERO PUSH2 0x3992 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x39BD JUMPI DUP1 MLOAD PUSH2 0x39A9 DUP2 PUSH2 0x40AB JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x3996 JUMP JUMPDEST POP SWAP2 DUP10 ADD MLOAD SWAP2 SWAP8 POP SWAP1 SWAP4 POP POP POP DUP1 DUP3 GT ISZERO PUSH2 0x39D6 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x39E3 DUP7 DUP3 DUP8 ADD PUSH2 0x3717 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A05 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x805 DUP2 PUSH2 0x40C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A21 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x805 DUP2 PUSH2 0x40C0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3A46 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x3A58 DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x3A68 DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3A84 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3A90 DUP12 DUP4 DUP13 ADD PUSH2 0x36AB JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3AB3 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x3AC0 DUP11 DUP3 DUP12 ADD PUSH2 0x3771 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AE0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x805 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B08 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x805 DUP2 PUSH2 0x40AB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B25 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3B30 DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B4B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3B57 DUP6 DUP3 DUP7 ADD PUSH2 0x3771 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B72 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x805 DUP3 PUSH2 0x37D6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B8D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3B96 DUP4 PUSH2 0x37D6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3BBB JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3BD2 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP PUSH2 0x120 DUP1 DUP4 DUP11 SUB SLT ISZERO PUSH2 0x3BE8 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x3BF1 DUP2 PUSH2 0x4069 JUMP JUMPDEST SWAP1 POP PUSH2 0x3BFC DUP4 PUSH2 0x37E5 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x3C0A PUSH1 0x20 DUP5 ADD PUSH2 0x36A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3C1B PUSH1 0x40 DUP5 ADD PUSH2 0x36A0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x3C4A PUSH1 0xC0 DUP5 ADD PUSH2 0x36A0 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x3C5B PUSH1 0xE0 DUP5 ADD PUSH2 0x36A0 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD CALLDATALOAD DUP4 DUP2 GT ISZERO PUSH2 0x3C73 JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH2 0x3C7F DUP12 DUP3 DUP8 ADD PUSH2 0x3771 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP DUP1 SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3C9C JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x3CA9 DUP8 DUP3 DUP9 ADD PUSH2 0x36AB JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x60 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CD1 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CE9 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D02 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3D26 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x3D46 DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3D80 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3D64 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3DB6 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x3D9A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3DC7 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x805 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x3E59 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3D51 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x30FC DUP2 DUP6 PUSH2 0x3D51 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP3 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP3 DUP6 ADD MSTORE DUP1 DUP7 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD DUP6 MLOAD PUSH1 0x80 DUP1 DUP8 ADD MSTORE DUP2 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x120 DUP9 ADD SWAP2 POP DUP6 DUP4 ADD SWAP4 POP DUP7 SWAP3 POP JUMPDEST DUP1 DUP4 LT ISZERO PUSH2 0x3F1F JUMPI DUP4 MLOAD DUP6 AND DUP3 MSTORE SWAP3 DUP6 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 PUSH2 0x3EFD JUMP JUMPDEST POP DUP5 DUP9 ADD MLOAD SWAP5 POP PUSH1 0x7F NOT SWAP4 POP DUP4 DUP8 DUP3 SUB ADD PUSH1 0xA0 DUP9 ADD MSTORE PUSH2 0x3F3F DUP2 DUP7 PUSH2 0x3D51 JUMP JUMPDEST SWAP5 POP POP POP POP PUSH1 0x40 DUP6 ADD MLOAD DUP2 DUP6 DUP5 SUB ADD PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x3F5D DUP4 DUP3 PUSH2 0x3D91 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x3558 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x3D8B JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2607 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3D91 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x805 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D91 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2607 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3D51 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4085 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x40A1 JUMPI INVALID JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0xE6 PUSH3 0x3BD7B6 DUP3 0xA9 0xCC 0xA6 DUP5 PUSH3 0x828092 0xDF SWAP3 0xCA 0xC1 SWAP16 PUSH1 0x81 SELFDESTRUCT PUSH4 0x4D7FF9C0 0xB8 DUP11 0xD5 ISZERO PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"103642:1657:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;83068:2507;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23320:83;;;:::i;:::-;;;;;;;:::i;25424:167::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;81133:98::-;;;:::i;49294:91::-;;;;;;:::i;:::-;;:::i;:::-;;24395:100;;;:::i;40860:376::-;;;:::i;:::-;;;;;;;;;:::i;63947:113::-;;;:::i;:::-;;;;;;;:::i;36356:671::-;;;;;;:::i;:::-;;:::i;24247:83::-;;;:::i;:::-;;;;;;;:::i;34445:115::-;;;:::i;100646:844::-;;;;;;:::i;:::-;;:::i;47324:93::-;;;:::i;26880:214::-;;;;;;:::i;:::-;;:::i;81033:92::-;;;:::i;80713:99::-;;;:::i;:::-;;;;;;;:::i;48773:221::-;;;;;;:::i;:::-;;:::i;48028:139::-;;;:::i;56164:930::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;98646:273::-;;;:::i;:::-;;;;;;;;:::i;97404:1035::-;;;:::i;24558:119::-;;;;;;:::i;:::-;;:::i;52705:1229::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;34205:110::-;;;;;;:::i;:::-;;:::i;81946:1038::-;;;:::i;80935:90::-;;;:::i;9989:435::-;;;;;;:::i;:::-;;:::i;54601:928::-;;;;;;:::i;:::-;;:::i;11466:82::-;;;:::i;35555:81::-;;;:::i;23522:87::-;;;:::i;99654:984::-;;;;;;:::i;:::-;;:::i;37158:440::-;;;;;;:::i;:::-;;:::i;24890:173::-;;;;;;:::i;:::-;;:::i;11556:103::-;;;:::i;33364:775::-;;;;;;:::i;:::-;;:::i;50342:2355::-;;;;;;:::i;:::-;;:::i;35948:260::-;;;;;;:::i;:::-;;:::i;102448:457::-;;;:::i;80820:107::-;;;:::i;98447:111::-;;;:::i;83068:2507::-;83287:7;83248;:14;;;50180:68;50211:10;:8;:10::i;:::-;-1:-1:-1;;;;;50189:33:0;:10;:33;111005:3;50180:8;:68::i;:::-;50259:55;50278:11;:9;:11::i;:::-;50268:6;:21;116305:3;50259:8;:55::i;:::-;40668:18:::1;:16;:18::i;:::-;83965:83:::2;76123:1;83974:7;:23;:51;;;;;76123:1;84001:8;:24;83974:51;110439:3;83965:8;:83::i;:::-;84330:31;84364:17;:15;:17::i;:::-;84330:51;;84392:39;84406:8;84416:14;84392:13;:39::i;:::-;84445:19;84466::::0;84489:12:::2;:10;:12::i;:::-;84444:57;;;;84512:31;84546:150;;;;;;;;84584:22;:20;:22::i;:::-;84546:150:::0;;::::2;::::0;::::2;::::0;;;;;;;;84512:184;-1:-1:-1;;84713:12:0;;:40:::2;::::0;::::2;;;;;;;84709:859;;;84876:49;84885:7;:14;;;84901;84916:7;84901:23;;;;;;;;;;;;;;84876:8;:49::i;:::-;84859:14;::::0;::::2;:66:::0;84940:17:::2;84960:41;84859:7:::0;84984:8;84994:6;84960:14:::2;:41::i;:::-;84940:61;;85098:51;85113:9;85124:14;85139:8;85124:24;;;;;;;;;;;;;;85098:14;:51::i;:::-;85091:58;;;;;;;;;84709:859;85288:50;85297:7;:14;;;85313;85328:8;85313:24;;;;;;;85288:50;85271:14;::::0;::::2;:67:::0;85353:16:::2;85372:42;85271:7:::0;85397:8;85407:6;85372:15:::2;:42::i;:::-;85353:61;;85509:47;85522:8;85532:14;85547:7;85532:23;;;;;;;;;;;;;;85509:12;:47::i;40697:1::-;83068:2507:::0;;;;;;;:::o;23320:83::-;23390:5;23383:12;;;;;;;;;;;;;-1:-1:-1;;23383:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;23357:13;;23383:12;;23390:5;;23383:12;;;23390:5;23383:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23320:83;:::o;25424:167::-;25507:4;25524:37;25533:10;25545:7;25554:6;25524:8;:37::i;:::-;-1:-1:-1;25579:4:0;25424:167;;;;;:::o;81133:98::-;81210:13;81133:98;:::o;49294:91::-;9646:21;:19;:21::i;:::-;49359:18:::1;49370:6;49359:10;:18::i;:::-;49294:91:::0;:::o;24395:100::-;24475:12;;24395:100;:::o;40860:376::-;40968:11;40994:26;41035:27;41100:14;:12;:14::i;:::-;41099:15;41090:24;;41146;:22;:24::i;:::-;41125:45;;41203:25;:23;:25::i;:::-;41181:47;;40860:376;;;:::o;63947:113::-;63999:16;64035:17;:15;:17::i;:::-;64028:24;;63947:113;:::o;36356:671::-;36488:4;36505:24;36532:29;36542:6;36550:10;36532:9;:29::i;:::-;36505:56;-1:-1:-1;36572:101:0;-1:-1:-1;;;;;36581:20:0;;:10;:20;;:50;;;36625:6;36605:16;:26;;36581:50;115042:3;36572:8;:101::i;:::-;36686:36;36696:6;36704:9;36715:6;36686:9;:36::i;:::-;-1:-1:-1;;;;;36739:20:0;;:10;:20;;;;:55;;-1:-1:-1;;;36763:31:0;;;36739:55;36735:261;;;36929:55;36938:6;36946:10;36977:6;36958:16;:25;36929:8;:55::i;:::-;37015:4;37008:11;;;36356:671;;;;;;:::o;24247:83::-;24313:9;;;;24247:83;:::o;34445:115::-;34505:7;34532:20;:18;:20::i;100646:844::-;101266:19;101287;101310:12;:10;:12::i;:::-;101265:57;;;;101333:91;101342:53;101370:11;101383;101342:27;:53::i;:::-;113449:3;101333:8;:91::i;:::-;101437:45;101464:17;101437:26;:45::i;:::-;100646:844;;;:::o;47324:93::-;47402:7;47324:93;:::o;26880:214::-;26994:10;26968:4;27015:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;27015:32:0;;;;;;;;;;26968:4;;26985:79;;27015:32;;:48;;27052:10;27015:36;:48::i;:::-;26985:8;:79::i;81033:92::-;81107:10;81033:92;:::o;80713:99::-;80793:10;80713:99;:::o;48773:221::-;9646:21;:19;:21::i;:::-;40668:18:::1;:16;:18::i;:::-;48941:45:::2;48968:5;48975:10;48941:26;:45::i;:::-;48773:221:::0;;:::o;48028:139::-;48108:9;;48081:7;;48108:51;;45009:3;48108:22;:51::i;56164:930::-;56432:13;56447:27;56487:71;56523:8;:15;56540:17;:15;:17::i;:::-;56487:35;:71::i;:::-;56571:265;56598:6;56619;56640:9;56664:8;56687:15;56717:25;56757:8;56780:11;56806:19;56571:12;:265::i;:::-;56164:930;;;;;;;;;;:::o;98646:273::-;98689:19;98710;98742:16;98761:14;:12;:14::i;:::-;98742:33;-1:-1:-1;98800:43:0;98742:33;78902:1;98800:21;:43::i;:::-;98786:57;-1:-1:-1;98868:43:0;:8;78958:2;98868:21;:43::i;:::-;98854:57;;98646:273;;;:::o;97404:1035::-;97455:7;97475:14;97492:11;:9;:11::i;:::-;97475:28;;97517:25;97548:10;:8;:10::i;:::-;:32;;-1:-1:-1;;;97548:32:0;;-1:-1:-1;;;;;97548:24:0;;;;;;;:32;;97573:6;;97548:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;97548:32:0;;;;;;;;;;;;:::i;:::-;97514:66;;;;97591:42;97605:8;97615:17;:15;:17::i;:::-;97591:13;:42::i;:::-;97647:19;97668;97691:12;:10;:12::i;:::-;97646:57;;;;97714:31;97748:150;;;;;;;;97786:22;:20;:22::i;:::-;97748:150;;;;97836:11;97748:150;;;;97875:11;97748:150;;;97714:184;;97911:20;97934:140;97974:51;97996:8;98005:10;97996:20;;;;;;;;;;;;;;98018:6;97974:21;:51::i;:::-;98040:8;98049:13;98040:23;;;;;;;;;;;;;;97934:25;:140::i;:::-;97911:163;;98362:69;98381:49;98410:8;98419:9;98410:19;;;;;;;;;;;;;;98381:28;:49::i;:::-;98362:12;;:18;:69::i;:::-;98355:76;;;;;;;;97404:1035;:::o;24558:119::-;-1:-1:-1;;;;;24651:18:0;;24624:7;24651:18;;;;;;;;;;;24558:119;;;;:::o;52705:1229::-;53007:16;53025;52990:6;50180:68;50211:10;:8;:10::i;50180:68::-;50259:55;50278:11;:9;:11::i;50259:55::-;53054:31:::1;53088:17;:15;:17::i;:::-;53054:51;;53116:39;53130:8;53140:14;53116:13;:39::i;:::-;53169:19;53190:27:::0;53219:38:::1;53261:233;53287:6;53308;53329:9;53353:8;53376:15;53406:25;53446:14;53475:8;53261:11;:233::i;:::-;53168:326;;;;;;53604:36;53620:6;53628:11;53604:15;:36::i;:::-;53755:47;53775:10;53787:14;53755:19;:47::i;:::-;53813:58;53833:21;53856:14;53813:19;:58::i;:::-;53892:10:::0;;-1:-1:-1;53904:21:0;-1:-1:-1;;;50325:1:0::1;52705:1229:::0;;;;;;;;;;;:::o;34205:110::-;-1:-1:-1;;;;;34293:14:0;34266:7;34293:14;;;:7;:14;;;;;;;34205:110::o;81946:1038::-;81988:14;82005:11;:9;:11::i;:::-;81988:28;;82028:22;82058:10;:8;:10::i;:::-;:32;;-1:-1:-1;;;82058:32:0;;-1:-1:-1;;;;;82058:24:0;;;;;;;:32;;82083:6;;82058:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;82058:32:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;82342:28:0;;;76123:1;82342:28;;;;;;;;;82027:63;;-1:-1:-1;82310:29:0;;82342:28;;;;;;;;;-1:-1:-1;;82381:23:0;;82310:60;;-1:-1:-1;;;;;;;82310:60:0;;-1:-1:-1;82394:9:0;;82381:23;;;;;;;;;;;:45;;;;;82673:37;82713:184;;;;;;;;82759:17;82769:6;82759:9;:17::i;:::-;82713:184;;;;82805:12;82713:184;;;;;;;;;;;;;;;;;;;;82880:5;82713:184;;;;;82673:224;;82910:10;:8;:10::i;:::-;:66;;-1:-1:-1;;;82910:66:0;;-1:-1:-1;;;;;82910:19:0;;;;;;;:66;;82930:6;;82946:4;;;;82968:7;;82910:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;81946:1038;;;;:::o;80935:90::-;81008:9;80935:90;:::o;9989:435::-;10057:7;10382:22;10406:8;10365:50;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10355:61;;;;;;10348:68;;9989:435;;;:::o;54601:928::-;54869:14;54885:26;54924:71;54960:8;:15;54977:17;:15;:17::i;54924:71::-;55008:263;55035:6;55056;55077:9;55101:8;55124:15;55154:25;55194:8;55217:11;55243:17;55008:12;:263::i;11466:82::-;11534:6;11466:82;:::o;35555:81::-;35622:6;35555:81;:::o;23522:87::-;23594:7;23587:14;;;;;;;;;;;;;-1:-1:-1;;23587:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;23561:13;;23587:14;;23594:7;;23587:14;;;23594:7;23587:14;;;;;;;;;;;;;;;;;;;;;;;;99654:984;9646:21;:19;:21::i;:::-;100264:26:::1;100292::::0;100322:12:::1;:10;:12::i;:::-;100263:71;;;;100345:105;100354:67;100382:18;100402;100354:27;:67::i;100345:105::-;100461:101;100470:59;100498:14;100514;100470:27;:59::i;:::-;113959:3;100461:8;:101::i;:::-;100575:55;100587:10;100599:14;100615;100575:11;:55::i;:::-;9678:1;;99654:984:::0;;:::o;37158:440::-;37243:4;37260:24;37287:30;37297:10;37309:7;37287:9;:30::i;:::-;37260:57;;37344:16;37334:6;:26;37330:237;;37377:32;37386:10;37398:7;37407:1;37377:8;:32::i;:::-;37330:237;;;37499:56;37508:10;37520:7;37548:6;37529:16;:25;37499:8;:56::i;:::-;-1:-1:-1;37586:4:0;;37158:440;-1:-1:-1;;;37158:440:0:o;24890:173::-;24976:4;24993:40;25003:10;25015:9;25026:6;24993:9;:40::i;11556:103::-;11604:11;11635:16;:14;:16::i;33364:775::-;33636:60;33664:8;33645:15;:27;;111223:3;33636:8;:60::i;:::-;-1:-1:-1;;;;;33725:14:0;;33709:13;33725:14;;;:7;:14;;;;;;;;;33781:68;;33725:14;;33709:13;33781:68;;33792:16;;33725:14;;33817:7;;33826:5;;33725:14;;33840:8;;33781:68;;:::i;:::-;;;;;;;;;;;;;33771:79;;;;;;33750:100;;33863:12;33878:28;33895:10;33878:16;:28::i;:::-;33863:43;;33919:14;33936:24;33946:4;33952:1;33955;33958;33936:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;33936:24:0;;-1:-1:-1;;33936:24:0;;;-1:-1:-1;33971:79:0;;-1:-1:-1;;;;;;33981:20:0;;;;;;33980:43;;-1:-1:-1;;;;;;34007:15:0;;;;;;;33980:43;116542:3;33971:8;:79::i;:::-;-1:-1:-1;;;;;34063:14:0;;;;;;:7;:14;;;;;-1:-1:-1;34080:9:0;;34063:26;;34100:31;34063:14;34116:7;34125:5;34100:8;:31::i;:::-;33364:775;;;;;;;;;;;:::o;50342:2355::-;50644:16;50662;50627:6;50180:68;50211:10;:8;:10::i;50180:68::-;50259:55;50278:11;:9;:11::i;50259:55::-;50691:31:::1;50725:17;:15;:17::i;:::-;50691:51;;50759:13;:11;:13::i;:::-;50755:1935;;50795:20;50817:26:::0;50847:170:::1;50883:6;50908;50933:9;50961:14;50994:8;50847:17;:170::i;:::-;50794:223;;;;51321:62;51346:16;:14;:16::i;:::-;51330:12;:32;;110950:3;51321:8;:62::i;:::-;51398:45;51422:1;51426:16;:14;:16::i;:::-;51398:15;:45::i;:::-;51458:59;51474:9;51500:16;:14;:16::i;:::-;51485:12;:31;51458:15;:59::i;:::-;51607:44;51625:9;51636:14;51607:17;:44::i;:::-;51676:9;51701:17;:15;:17::i;:::-;51687:32;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;51687:32:0::1;;51668:52;;;;;;;;;50755:1935;51753:39;51767:8;51777:14;51753:13;:39::i;:::-;51808:20;51830:26:::0;51858:38:::1;51900:269;51930:6;51955;51980:9;52008:8;52035:15;52069:25;52113:14;52146:8;51900:11;:269::i;:::-;51807:362;;;;;;52287:40;52303:9;52314:12;52287:15;:40::i;:::-;52417:44;52435:9;52446:14;52417:17;:44::i;:::-;52562:58;52582:21;52605:14;52562:19;:58::i;:::-;52645:9:::0;;-1:-1:-1;52656:21:0;-1:-1:-1;52637:41:0::1;::::0;-1:-1:-1;;52637:41:0::1;35948:260:::0;36029:7;36072:10;:8;:10::i;:::-;-1:-1:-1;;;;;36053:30:0;;;;;;36049:152;;;-1:-1:-1;;;36100:18:0;;36049:152;36158:31;36174:5;36181:7;36158:15;:31::i;:::-;36151:38;;;;102448:457;102499:7;102522:25;102553:10;:8;:10::i;:::-;-1:-1:-1;;;;;102553:24:0;;102578:11;:9;:11::i;:::-;102553:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;102553:37:0;;;;;;;;;;;;:::i;:::-;102519:71;;;;102776:18;102797:51;102806:8;102815:9;102806:19;;;;;;;;;;;;;;102827:20;102842:4;102827:14;:20::i;:::-;102797:8;:51::i;:::-;102776:72;;102868:29;102886:10;102868:17;:29::i;:::-;102861:36;;;;102448:457;:::o;80820:107::-;80905:13;80820:107;:::o;98447:111::-;98501:7;98528:22;:20;:22::i;166320:281::-;166534:5;166560:33;166534:5;166560:19;:33::i;173408:276::-;168944:11;173600:18;;173598:21;173582:37;;;;173660:15;;173638:38;;173408:276::o;164266:170::-;164324:7;164344:37;164358:1;164353;:6;;109960:1;164344:8;:37::i;:::-;-1:-1:-1;164404:5:0;;;164266:170::o;175177:133::-;175286:15;;175177:133::o;174544:301::-;-1:-1:-1;;;;;174799:26:0;;;174798:38;;174737:19;;;174735:22;174719:38;;;;174776:61;;174544:301::o;106393:103::-;106463:9;106458:34;;106474:18;106482:9;106474:7;:18::i;41961:100::-;42014:39;42023:14;:12;:14::i;:::-;114253:3;42014:8;:39::i;:::-;41961:100::o;96603:560::-;96733:28;;;76123:1;96733:28;;;;;;;;;96670:16;;96699:31;;96733:28;;;;96670:16;;96733:28;;;;;-1:-1:-1;96733:28:0;96699:62;;96944:23;96915:14;96930:10;96915:26;;;;;;;;;;;;;:52;;;;;97010:58;97045:22;:20;:22::i;:::-;97010:26;;:34;:58::i;:::-;96978:14;96993:13;96978:29;;;;;;;;;;;;;:90;;;;;120365:4;97079:14;97094:9;97079:25;;;;;;;;;;;;;;;;;:42;97141:14;-1:-1:-1;96603:560:0;:::o;64988:251::-;65100:9;65095:137;65119:17;:15;:17::i;:::-;65115:1;:21;65095:137;;;65171:49;65190:7;65198:1;65190:10;;;;;;;;;;;;;;65202:14;65217:1;65202:17;;;;;;;;;;;;;;65171:18;:49::i;:::-;65158:7;65166:1;65158:10;;;;;;;;;;;;;;;;;:62;65138:3;;65095:137;;64228:585;64308:7;64764:41;64783:6;64791:13;64764:18;:41::i;85583:605::-;85776:15;;;;85752:7;;-1:-1:-1;;;;;85776:23:0;85795:4;85776:23;85772:409;;;85823:42;85839:7;85848:8;85858:6;85823:15;:42::i;:::-;85816:49;;;;85772:409;85887:15;;;;85906:10;-1:-1:-1;;;;;85887:29:0;;;;;;85883:298;;;85940:43;85957:7;85966:8;85976:6;85940:16;:43::i;85883:298::-;86005:15;;;;86024:13;-1:-1:-1;;;;;86005:32:0;;;;;;86001:180;;;86061:46;86081:7;86090:8;86100:6;86061:19;:46::i;86001:180::-;86140:29;111836:3;86140:7;:29::i;65449:162::-;65535:7;65562:41;65581:6;65589:13;65562:18;:41::i;88366:612::-;88560:16;;;;88536:7;;-1:-1:-1;;;;;88560:24:0;88580:4;88560:24;88556:415;;;88608:43;88625:7;88634:8;88644:6;88608:16;:43::i;88556:415::-;88673:16;;;;88693:10;-1:-1:-1;;;;;88673:30:0;;;;;;88669:302;;;88727:44;88745:7;88754:8;88764:6;88727:17;:44::i;88669:302::-;88793:16;;;;88813:13;-1:-1:-1;;;;;88793:33:0;;;;;;88789:182;;;88850:47;88871:7;88880:8;88890:6;88850:20;:47::i;66257:158::-;66341:7;66368:39;66385:6;66393:13;66368:16;:39::i;30749:220::-;-1:-1:-1;;;;;30877:18:0;;;;;;;-1:-1:-1;30877:18:0;;;;;;;;:27;;;;;;;;;;;;;;:36;;;30929:32;;;;;30877:36;;30929:32;:::i;:::-;;;;;;;;30749:220;;;:::o;9797:184::-;9853:16;9872:20;-1:-1:-1;;;;;;9884:7:0;;;9872:11;:20::i;:::-;9853:39;;9903:70;9912:33;9924:8;9934:10;9912:11;:33::i;:::-;114208:3;9903:8;:70::i;41520:367::-;41577:6;41573:236;;;41600:81;41627:24;:22;:24::i;:::-;41609:15;:42;114312:3;41600:8;:81::i;:::-;41573:236;;;41714:83;41741:25;:23;:25::i;:::-;41723:15;:43;115764:3;41714:8;:83::i;:::-;41821:7;:16;;-1:-1:-1;;41821:16:0;;;;;;;41853:26;;;;;;41821:16;;41853:26;:::i;:::-;;;;;;;;41520:367;:::o;42475:240::-;42522:4;42670:25;:23;:25::i;:::-;42652:15;:43;:55;;;-1:-1:-1;;42700:7:0;;;;42699:8;;42475:240::o;42832:110::-;42915:19;42832:110;:::o;42950:112::-;43034:20;42950:112;:::o;28406:572::-;28538:71;-1:-1:-1;;;;;28547:20:0;;;;114632:3;28538:8;:71::i;:::-;28620:72;-1:-1:-1;;;;;28629:23:0;;;;114701:3;28620:8;:72::i;:::-;28705:47;28726:6;28734:9;28745:6;28705:20;:47::i;:::-;-1:-1:-1;;;;;28785:17:0;;:9;:17;;;;;;;;;;;:68;;28807:6;115186:3;28785:21;:68::i;:::-;-1:-1:-1;;;;;28765:17:0;;;:9;:17;;;;;;;;;;;:88;;;;28887:20;;;;;;;:32;;28912:6;28887:24;:32::i;:::-;-1:-1:-1;;;;;28864:20:0;;;:9;:20;;;;;;;;;;;;:55;;;;28935:35;;;;;;;;;;28963:6;;28935:35;:::i;16999:190::-;17060:7;17108:10;17120:12;17134:15;17151:13;:11;:13::i;:::-;17174:4;17097:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17087:94;;;;;;17080:101;;16999:190;:::o;101498:413::-;101599:4;101616:14;101633:11;:9;:11::i;:::-;101616:28;;101658:25;101689:10;:8;:10::i;:::-;:32;;-1:-1:-1;;;101689:32:0;;-1:-1:-1;;;;;101689:24:0;;;;;;;:32;;101714:6;;101689:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;101689:32:0;;;;;;;;;;;;:::i;:::-;101655:66;;;;101732:24;101759:58;101768:8;101777:10;101768:20;;;;;;;;;;;;;;101790:26;101805:10;101790:14;:26::i;101759:58::-;101732:85;;101857:11;101837:16;:31;;:66;;;;;101892:11;101872:16;:31;;101837:66;101830:73;101498:413;-1:-1:-1;;;;;;101498:413:0:o;48175:158::-;9646:21;:19;:21::i;:::-;40668:18:::1;:16;:18::i;:::-;48285:40:::2;48307:17;48285:21;:40::i;222020:172::-:0;222078:7;222110:5;;;222126:37;222135:6;;;;222078:7;222126:8;:37::i;49002:284::-;49096:14;49113:11;:9;:11::i;:::-;49096:28;;49142:20;49166:10;:8;:10::i;:::-;:42;;-1:-1:-1;;;49166:42:0;;-1:-1:-1;;;;;49166:27:0;;;;;;;:42;;49194:6;;49202:5;;49166:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;49221:57;;-1:-1:-1;;;49221:57:0;;49135:73;;-1:-1:-1;;;;;;49221:37:0;;;-1:-1:-1;49221:37:0;;-1:-1:-1;49221:57:0;;-1:-1:-1;49259:6:0;;49267:10;;49221:57;;;:::i;178246:144::-;178356:14;168944:11;178348:34;;178246:144::o;95875:115::-;76123:1;95875:115;:::o;165983:133::-;166062:46;166076:1;166071;:6;110606:3;166062:8;:46::i;92496:1872::-;92791:19;92825:27;92867:38;93509:32;93544:19;:8;:17;:19::i;:::-;93509:54;-1:-1:-1;93586:65:0;93578:4;:73;;;;;;;93574:787;;93668:40;113391:3;93668:7;:40::i;:::-;93574:787;;;93741:15;:13;:15::i;:::-;94124:46;94151:8;94161;94124:26;:46::i;:::-;94096:74;;-1:-1:-1;94096:74:0;-1:-1:-1;94331:17:0;:15;:17::i;:::-;94317:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;94317:32:0;;94293:56;;93574:787;92496:1872;;;;;;;;;;;;;:::o;65792:257::-;65910:9;65905:137;65929:17;:15;:17::i;:::-;65925:1;:21;65905:137;;;65981:49;66000:7;66008:1;66000:10;;;;;;;;;;;;;;66012:14;66027:1;66012:17;;;;;;;;;;;;;;65981:18;:49::i;:::-;65968:7;65976:1;65968:10;;;;;;;;;;;;;;;;;:62;65948:3;;65905:137;;67357:7005;68072:10;68094:4;68072:27;68068:6287;;68391:28;;68373:12;;68399:4;;68391:28;;68373:12;;68410:8;;68391:28;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;68372:47;;;68642:7;68676:1;68671:3383;;;;72217:9;68671:3383;69153:4;69150:1;69147;69132:26;69207:1;69201:8;-1:-1:-1;;;;;;69197:81:0;-1:-1:-1;;;69432:77:0;;69426:2;;69566:16;69563:1;69560;69545:38;69623:16;69620:1;69613:27;69426:2;;71054;71048:4;71045:1;71030:27;71255:2;71249:4;71242:16;71684:2;71666:16;71662:25;71656:4;71650;71635:53;72027:2;72009:16;72005:25;72002:1;71995:36;68506:3758;72296:31;72330:17;:15;:17::i;:::-;72296:51;;72362:39;72376:8;72386:14;72362:13;:39::i;:::-;72419:17;72438:29;72473:265;72499:6;72524;72549:9;72577:8;72604:15;72638:25;72682:14;72715:8;72473:7;:265;;:::i;:::-;72418:320;;;;;72755:45;72771:12;72785:14;72755:15;:45;;:::i;:::-;73288:19;;-1:-1:-1;;73680:23:0;;73721:24;;;73971:66;-1:-1:-1;;73953:16:0;;73946:92;-1:-1:-1;73284:28:0;-1:-1:-1;;74065:16:0;;74325:2;74315:13;;74065:16;74301:28;49676:91;49750:9;;49676:91;:::o;178517:144::-;178627:14;168998:11;178619:34;;178517:144::o;138922:616::-;139001:7;139179:6;:18;;;139172:4;:25;139168:363;;;139265:10;;139230:18;;;;139214:12;;139229:47;;139230:25;;;;139229:35;:47::i;:::-;139214:62;-1:-1:-1;139298:14:0;:4;139214:62;139298:8;:14::i;:::-;139291:21;;;;;139168:363;139342:6;:18;;;139334:4;:26;139330:201;;-1:-1:-1;139384:4:0;139377:11;;139330:201;139472:10;;139444:18;;;;139421:12;;139436:47;;139437:25;;;139436:35;:47::i;138742:172::-;138841:7;138868:38;:18;138891:14;138868:22;:38::i;103336:266::-;-1:-1:-1;;;;;103562:32:0;;103336:266::o;122377:699::-;122437:7;122457:38;122466:6;;;110109:1;122457:8;:38::i;:::-;122512:6;122508:561;;-1:-1:-1;122542:1:0;122535:8;;122508:561;120365:4;122596:7;;;;122618:51;;122596:1;:7;:1;122627:13;;;;;:20;110158:1;122618:8;:51::i;:::-;123051:1;123046;123034:9;:13;123033:19;;;;;;123056:1;123032:25;123025:32;;;;;37755:106;37832:21;37838:6;37846;37832:5;:21::i;118264:187::-;118435:6;118414:34::o;92066:422::-;92343:7;92365:16;92396;92440:40;113391:3;92440:7;:40::i;:::-;92066:422;;;;;;;;;;;;:::o;66594:253::-;66710:9;66705:135;66729:17;:15;:17::i;:::-;66725:1;:21;66705:135;;;66781:47;66798:7;66806:1;66798:10;;;;;;;;;;;;;;66810:14;66825:1;66810:17;;;;;;;;;;;;;;66781:16;:47::i;:::-;66768:7;66776:1;66768:10;;;;;;;;;;;;;;;;;:60;66748:3;;66705:135;;98927:719;99061:76;99085:11;99070;:26;;113268:3;99061:8;:76::i;:::-;99148:72;79014:11;99157;:32;;113328:3;99148:8;:72::i;:::-;99405:168;99507:55;99528:11;78958:2;99507:20;:55::i;:::-;99432;99453:11;78902:1;99432:20;:55::i;:::-;:130;99405:12;:168::i;:::-;99591:47;;-1:-1:-1;;;;;99591:47:0;;;;;;;99613:11;;99626;;99591:47;:::i;:::-;;;;;;;;98927:719;;;:::o;66855:494::-;66913:11;67315:10;:8;:10::i;:::-;-1:-1:-1;;;;;67315:24:0;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;17831:185::-;17908:7;17974:20;:18;:20::i;:::-;17996:10;17945:62;;;;;;;;;:::i;91150:908::-;91351:7;91360:16;40668:18;:16;:18::i;:::-;91509:64:::1;91536:4;-1:-1:-1::0;;;;;91518:23:0;::::1;;113897:3;91509:8;:64::i;:::-;91584:67;91614:4;-1:-1:-1::0;;;;;91593:26:0;::::1;;113897:3;91584:8;:67::i;:::-;91924:28;::::0;;76123:1:::1;91924:28:::0;;;;;::::1;::::0;;;-1:-1:-1;;;;;;91840:20:0::1;::::0;91924:28;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;91963:20:0;;91895:57;;-1:-1:-1;;;;;;;91895:57:0;;-1:-1:-1;91973:9:0::1;::::0;91963:20;::::1;;;;;;::::0;;::::1;::::0;;;;;:42;92026:12;;;;-1:-1:-1;91150:908:0;-1:-1:-1;;;;;;91150:908:0:o;95588:279::-;95646:7;95588:279;:::o;37635:112::-;37715:24;37721:9;37732:6;37715:5;:24::i;25126:151::-;-1:-1:-1;;;;;25242:18:0;;;25215:7;25242:18;;;-1:-1:-1;25242:18:0;;;;;;;;:27;;;;;;;;;;;;;25126:151::o;95998:597::-;96076:7;96109:10;-1:-1:-1;;;;;96100:19:0;;;;;;;96096:492;;;-1:-1:-1;96143:23:0;96136:30;;96096:492;96197:13;-1:-1:-1;;;;;96188:22:0;;;;;;;96184:404;;;96383:58;96418:22;:20;:22::i;96383:58::-;96376:65;;;;96184:404;96472:4;-1:-1:-1;;;;;96463:13:0;;;96459:129;;;-1:-1:-1;120365:4:0;96493:21;;96459:129;96547:29;111836:3;96547:7;:29::i;102913:134::-;102983:7;103010:29;103028:10;103010:13;:11;:13::i;:::-;:17;;:29::i;104563:733::-;104627:7;;-1:-1:-1;;;;;105048:12:0;:39;;105088:14;:12;:14::i;:::-;105048:55;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;105283:5;105276:12;;;104563:733;-1:-1:-1;;104563:733:0:o;166609:385::-;166706:1;166691:5;:12;:16;166687:55;;;166724:7;;166687:55;166754:16;166773:5;166779:1;166773:8;;;;;;;;;;;;;;166754:27;;166797:9;166809:1;166797:13;;166792:195;166816:5;:12;166812:1;:16;166792:195;;;166850:15;166868:5;166874:1;166868:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;166891:51:0;-1:-1:-1;;;;;166900:18:0;;;;;;;110492:3;166891:8;:51::i;:::-;166968:7;-1:-1:-1;166830:3:0;;166792:195;;106608:3223;-1:-1:-1;;;109161:3:0;109154:79;;;109374:66;109368:4;109361:80;109518:1;109512:4;109505:15;107760:2;107795:18;;;107891;;;107939;;;107765:4;107935:29;;;108622:2;108618:17;107745:18;;;;107841;;;;107837:29;;;;108605:1;108601:14;108590:26;;;;108586:50;;;;108564:73;;108559:3;108555:83;109587:4;109580:26;109817:3;;109807:14;121141:214;121203:7;121241:5;;;121257:57;121266:6;;;:26;;;121291:1;121286;121276:7;:11;;;;;;:16;121266:26;110059:1;121257:8;:57::i;:::-;120365:4;121334:13;;;;-1:-1:-1;;;121141:214:0:o;86196:653::-;86395:16;;;;86366:7;;86386:99;;86415:10;-1:-1:-1;;;;;86395:30:0;;;;;;;:67;;-1:-1:-1;86429:16:0;;;;86449:13;-1:-1:-1;;;;;86429:33:0;;;;;;86395:67;111836:3;86386:8;:99::i;:::-;86516:325;86638:7;:14;;;86671:8;86680:10;86671:20;;;;;;;;;;;;;;86710:8;86719:13;86710:23;;;;;;;;;;;;;;86752:49;86781:8;86790:9;86781:19;;;;;;;86752:49;86517:16;;;;86820:6;;86537:10;-1:-1:-1;;;;;86517:30:0;;;;;;:101;;86584:34;86517:101;;;86550:31;86517:101;86516:325;;:::i;:::-;86496:345;86196:653;-1:-1:-1;;;;86196:653:0:o;86857:745::-;87057:16;;;;87028:7;;87048:93;;87077:13;-1:-1:-1;;;;;87057:33:0;;;;;;;:61;;-1:-1:-1;87094:16:0;;;;-1:-1:-1;;;;;87094:24:0;87114:4;87094:24;111836:3;87048:8;:93::i;:::-;87172:16;;;;-1:-1:-1;;;;;87172:24:0;87192:4;87172:24;:422;;87513:81;87549:7;:14;;;87565:8;87574:10;87565:20;;;;;;;;;;;;;;87587:6;87513:35;:81::i;:::-;87172:422;;;87216:277;87270:7;:14;;;87307:8;87316:10;87307:20;;;;;;;;;;;;;;87350:8;87359:13;87350:23;;;;;;;;;;;;;;87396:49;87425:8;87434:9;87425:19;;;;;;;87396:49;87468:6;87216:31;:277::i;87610:748::-;87813:16;;;;87784:7;;87804:90;;87833:10;-1:-1:-1;;;;;87813:30:0;;;;;;;:58;;-1:-1:-1;87847:16:0;;;;-1:-1:-1;;;;;87847:24:0;87867:4;87847:24;111836:3;87804:8;:90::i;:::-;87925:16;;;;-1:-1:-1;;;;;87925:24:0;87945:4;87925:24;:425;;88269:81;88305:7;:14;;;88321:8;88330:10;88321:20;;;;;;;;;;;;;;88343:6;88269:35;:81::i;87925:425::-;87969:280;88026:7;:14;;;88063:8;88072:10;88063:20;;;;;;;;;;;;;;88106:8;88115:13;88106:23;;;;;;;;;;;;;;88152:49;88181:8;88190:9;88181:19;;;;;;;88152:49;88224:6;87969:34;:280::i;122003:366::-;122065:7;122085:38;122094:6;;;110109:1;122085:8;:38::i;:::-;122140:6;122136:226;;-1:-1:-1;122170:1:0;122163:8;;122136:226;120365:4;122224:7;;;;122246:51;;122224:1;:7;:1;122255:13;;;122246:51;122349:1;122337:9;:13;;;;;;122330:20;;;;;88986:651;89186:15;;;;89157:7;;89177:97;;89205:10;-1:-1:-1;;;;;89186:29:0;;;;;;;:65;;-1:-1:-1;89219:15:0;;;;89238:13;-1:-1:-1;;;;;89219:32:0;;;;;;111836:3;89177:8;:97::i;:::-;89305:324;89426:7;:14;;;89459:8;89468:10;89459:20;;;;;;;;;;;;;;89498:8;89507:13;89498:23;;;;;;;;;;;;;;89540:49;89569:8;89578:9;89569:19;;;;;;;89540:49;89306:15;;;;89608:6;;89325:10;-1:-1:-1;;;;;89306:29:0;;;;;;:100;;89372:34;89306:100;;;89338:31;89305:324::i;89645:743::-;89846:15;;;;89817:7;;89837:91;;89865:13;-1:-1:-1;;;;;89846:32:0;;;;;;;:59;;-1:-1:-1;89882:15:0;;;;-1:-1:-1;;;;;89882:23:0;89901:4;89882:23;111836:3;89837:8;:91::i;:::-;89959:15;;;;-1:-1:-1;;;;;89959:23:0;89978:4;89959:23;:421;;90299:81;90335:7;:14;;;90351:8;90360:10;90351:20;;;;;;;;;;;;;;90373:6;90299:35;:81::i;89959:421::-;90002:277;90056:7;:14;;;90093:8;90102:10;90093:20;;;;;;;;;;;;;;90136:8;90145:13;90136:23;;;;;;;;;;;;;;90182:49;90211:8;90220:9;90211:19;;;;;;;90182:49;90254:6;90002:31;:277::i;90396:746::-;90600:15;;;;90571:7;;90591:88;;90619:10;-1:-1:-1;;;;;90600:29:0;;;;;;;:56;;-1:-1:-1;90633:15:0;;;;-1:-1:-1;;;;;90633:23:0;90652:4;90633:23;111836:3;90591:8;:88::i;:::-;90710:15;;;;-1:-1:-1;;;;;90710:23:0;90729:4;90710:23;:424;;91053:81;91089:7;:14;;;91105:8;91114:10;91105:20;;;;;;;;;;;;;;91127:6;91053:35;:81::i;90710:424::-;90753:280;90810:7;:14;;;90847:8;90856:10;90847:20;;;;;;;;;;;;;;90890:8;90899:13;90890:23;;;;;;;;;;;;;;90936:49;90965:8;90974:9;90965:19;;;;;;;90936:49;91008:6;90753:34;:280::i;11667:552::-;11755:4;11347:42;11777:10;:8;:10::i;:::-;-1:-1:-1;;;;;11777:29:0;;;;;11776:63;;;11811:28;11830:8;11811:18;:28::i;:::-;11772:440;;;11973:10;:8;:10::i;:::-;-1:-1:-1;;;;;11959:24:0;:10;:24;;-1:-1:-1;11952:31:0;;11772:440;12139:16;:14;:16::i;:::-;:61;;-1:-1:-1;;;12139:61:0;;-1:-1:-1;;;;;12139:27:0;;;;;;;:61;;12167:8;;12177:7;;12194:4;;12139:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;222901:181::-;222978:7;222998:27;223012:1;223007;:6;;223015:9;222998:8;:27::i;:::-;-1:-1:-1;;223048:5:0;;;222901:181::o;18024:437::-;18434:9;;18408:46::o;48341:424::-;48418:87;44400:4;48427:17;:45;;110900:3;48418:8;:87::i;:::-;48516;44474:4;48525:17;:45;;110838:3;48516:8;:87::i;:::-;48628:9;;:70;;48651:17;45009:3;48628:22;:70::i;:::-;48616:9;:82;48714:43;;;;;;48739:17;;48714:43;:::i;141956:124::-;142016:8;142055:4;142044:28;;;;;;;;;;;;:::i;42139:102::-;42189:44;42199:14;:12;:14::i;:::-;42198:15;116107:3;42189:8;:44::i;94376:1091::-;94511:7;94520:16;94918:19;94940:33;:8;:31;:33::i;:::-;94918:55;;95207:27;95237:177;95292:8;95315:11;95341:38;95359:8;95368:9;95359:19;;;;;;;;;;;;;;95341:17;:38::i;:::-;95394:9;95237:40;:177::i;:::-;95435:11;;;;-1:-1:-1;94376:1091:0;;-1:-1:-1;;;;94376:1091:0:o;29893:418::-;29969:68;-1:-1:-1;;;;;29978:21:0;;;;114833:3;29969:8;:68::i;:::-;30050:49;30071:7;30088:1;30092:6;30050:20;:49::i;:::-;-1:-1:-1;;;;;30133:18:0;;:9;:18;;;;;;;;;;;:67;;30156:6;115253:3;30133:22;:67::i;:::-;-1:-1:-1;;;;;30112:18:0;;:9;:18;;;;;;;;;;:88;30226:12;;:24;;30243:6;30226:16;:24::i;:::-;30211:12;:39;30266:37;;30292:1;;-1:-1:-1;;;;;30266:37:0;;;;;;;30296:6;;30266:37;:::i;:::-;;;;;;;;29893:418;;:::o;49984:114::-;50055:9;;:35;;50079:7;50088:1;50055:23;:35::i;:::-;50043:9;:47;-1:-1:-1;49984:114:0:o;29260:300::-;29336:49;29365:1;29369:7;29378:6;29336:20;:49::i;:::-;29413:12;;:24;;29430:6;29413:16;:24::i;:::-;29398:12;:39;-1:-1:-1;;;;;29469:18:0;;:9;:18;;;;;;;;;;;:30;;29492:6;29469:22;:30::i;:::-;-1:-1:-1;;;;;29448:18:0;;:9;:18;;;;;;;;;;;:51;;;;29515:37;;29448:18;;:9;29515:37;;;;29545:6;;29515:37;:::i;138075:659::-;138284:7;138356:19;138378:31;138389:11;138402:6;138378:10;:31::i;:::-;138356:53;;138420:25;138448:43;138463:11;138476:14;138448;:43::i;:::-;138420:71;-1:-1:-1;138504:21:0;138528:20;:9;138542:5;138528:13;:20::i;:::-;138504:44;;138559:25;138587:82;138657:11;138587:65;138598:42;138607:13;138622:17;138598:8;:42::i;:::-;138642:9;138587:10;:65::i;:82::-;138559:110;-1:-1:-1;138689:37:0;:14;138559:110;138689:18;:37::i;:::-;138682:44;;;;;;138075:659;;;;;;;;:::o;133508:720::-;133714:7;133786:27;133816:31;133827:11;133840:6;133816:10;:31::i;:::-;133786:61;;133858:17;133878:51;133893:19;133914:14;133878;:51::i;:::-;133858:71;;133940:24;133967:51;133980:26;133989:9;134000:5;133980:8;:26::i;:::-;134008:9;133967:12;:51::i;:::-;133940:78;-1:-1:-1;134029:24:0;134056:41;:19;133940:78;134056:23;:41::i;:::-;134029:68;;134108:22;134133:38;134146:16;134164:6;134133:12;:38::i;:::-;134108:63;-1:-1:-1;134189:31:0;:11;134108:63;134189:15;:31::i;:::-;134182:38;133508:720;-1:-1:-1;;;;;;;;;;;133508:720:0:o;131524:431::-;131674:7;131746:27;131776:31;131787:11;131800:6;131776:10;:31::i;:::-;131746:61;-1:-1:-1;131818:24:0;131845:43;131856:23;:11;131872:6;131856:15;:23::i;:::-;131881:6;131845:10;:43::i;:::-;131818:70;-1:-1:-1;131906:41:0;131818:70;131927:19;131906:20;:41::i;129791:1050::-;129998:7;130074:14;130070:368;;130400:26;130411:6;130419;130400:10;:26::i;:::-;130393:33;;;;130070:368;130450:27;130480:31;130491:11;130504:6;130480:10;:31::i;:::-;130450:61;-1:-1:-1;130522:24:0;130549:43;130560:23;:11;130576:6;130560:15;:23::i;130549:43::-;130522:70;-1:-1:-1;130603:24:0;130630:41;130522:70;130651:19;130630:20;:41::i;:::-;130603:68;;130682:17;130702:51;130717:19;130738:14;130702;:51::i;:::-;130682:71;;130771:62;130784:37;130793:9;130804:16;130784:8;:37::i;:::-;130823:9;130771:12;:62::i;134236:489::-;134389:7;134461:27;134491:31;134502:11;134515:6;134491:10;:31::i;:::-;134461:61;-1:-1:-1;134533:24:0;134560:34;134461:61;134584:9;134560:23;:34::i;:::-;134533:61;;134605:22;134630:38;134643:16;134661:6;134630:12;:38::i;:::-;134605:63;-1:-1:-1;134686:31:0;:11;134605:63;134686:15;:31::i;:::-;134679:38;134236:489;-1:-1:-1;;;;;;;134236:489:0:o;135229:1084::-;135442:7;135518:14;135514:343;;-1:-1:-1;135836:9:0;135829:16;;135514:343;135869:19;135891:31;135902:11;135915:6;135891:10;:31::i;:::-;135869:53;;135933:25;135961:43;135976:11;135989:14;135961;:43::i;:::-;135933:71;-1:-1:-1;136017:25:0;136045:29;:14;136064:9;136045:18;:29::i;:::-;136017:57;;136085:20;136108:46;136123:11;136136:17;136108:14;:46::i;:::-;136085:69;;136167:21;136191:66;136204:33;136213:9;136224:12;136204:8;:33::i;:::-;136239:17;136191:12;:66::i;:::-;136167:90;-1:-1:-1;136277:28:0;136167:90;136295:9;136277:17;:28::i;137057:1010::-;137267:7;137340:14;137336:340;;-1:-1:-1;137658:6:0;137651:13;;137336:340;137688:19;137710:31;137721:11;137734:6;137710:10;:31::i;:::-;137688:53;;137752:25;137780:43;137795:11;137808:14;137780;:43::i;:::-;137752:71;-1:-1:-1;137836:21:0;137860;:9;137874:6;137860:13;:21::i;:::-;137836:45;;137892:25;137920:82;137990:11;137920:65;137931:42;137940:13;137955:17;137931:8;:42::i;137920:82::-;137892:110;-1:-1:-1;138022:37:0;137892:110;138044:14;138022:21;:37::i;132401:1099::-;132608:7;132681:14;132677:370;;133007:28;133020:6;133028;133007:12;:28::i;132677:370::-;133059:27;133089:31;133100:11;133113:6;133089:10;:31::i;:::-;133059:61;;133131:17;133151:51;133166:19;133187:14;133151;:51::i;:::-;133131:71;;133213:24;133240:50;133251:27;133260:9;133271:6;133251:8;:27::i;:::-;133280:9;133240:10;:50::i;:::-;133213:77;-1:-1:-1;133301:24:0;133328:41;:19;133213:77;133328:23;:41::i;:::-;133301:68;;133380:22;133405:38;133418:16;133436:6;133405:12;:38::i;:::-;133380:63;-1:-1:-1;133461:31:0;133380:63;133480:11;133461:18;:31::i;131963:430::-;132114:7;132183:27;132213:31;132224:11;132237:6;132213:10;:31::i;:::-;132183:61;-1:-1:-1;132255:24:0;132282:44;132293:24;:11;132309:7;132293:15;:24::i;132282:44::-;132255:71;-1:-1:-1;132344:41:0;:19;132255:71;132344:23;:41::i;130849:667::-;131057:7;131126:27;131156:31;131167:11;131180:6;131156:10;:31::i;:::-;131126:61;-1:-1:-1;131198:24:0;131225:44;131236:24;:11;131252:7;131236:15;:24::i;131225:44::-;131198:71;-1:-1:-1;131280:24:0;131307:41;:19;131198:71;131307:23;:41::i;:::-;131280:68;;131359:17;131379:51;131394:19;131415:14;131379;:51::i;:::-;131359:71;;131448:60;131459:37;131468:9;131479:16;131459:8;:37::i;:::-;131498:9;131448:10;:60::i;134733:488::-;134887:7;134956:27;134986:31;134997:11;135010:6;134986:10;:31::i;:::-;134956:61;-1:-1:-1;135028:24:0;135055:35;134956:61;135079:10;135055:23;:35::i;:::-;135028:62;;135101:22;135126:38;135139:16;135157:6;135126:12;:38::i;:::-;135101:63;-1:-1:-1;135182:31:0;135101:63;135201:11;135182:18;:31::i;136321:728::-;136535:7;136604:19;136626:31;136637:11;136650:6;136626:10;:31::i;:::-;136604:53;;136668:25;136696:43;136711:11;136724:14;136696;:43::i;:::-;136668:71;-1:-1:-1;136752:25:0;136780:30;:14;136799:10;136780:18;:30::i;:::-;136752:58;;136821:20;136844:46;136859:11;136872:17;136844:14;:46::i;:::-;136821:69;;136903:21;136927:66;136940:33;136949:9;136960:12;136940:8;:33::i;136927:66::-;136903:90;-1:-1:-1;137013:28:0;:9;136903:90;137013:13;:28::i;101919:205::-;102005:4;102041:37;-1:-1:-1;;;102041:11:0;:37::i;:::-;102029:8;:49;:87;;;;102082:34;102107:8;102082:24;:34::i;142088:169::-;142162:19;142223:4;142212:37;;;;;;;;;;;;:::i;140140:1679::-;140335:16;141358;141377:35;:11;141397:14;141377:19;:35::i;:::-;141358:54;;141425:27;141469:8;:15;141455:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;141455:30:0;;141425:60;;141501:9;141496:286;141520:8;:15;141516:1;:19;141496:286;;;141681:8;141676:1;:13;141672:99;;141726:29;141746:8;141726;141735:1;141726:11;;;;;;;;;;;;;;:19;;:29;;;;:::i;:::-;141710:10;141721:1;141710:13;;;;;;;;;;;;;:45;;;;;141672:99;141537:3;;141496:286;;;-1:-1:-1;141801:10:0;140140:1679;-1:-1:-1;;;;;;140140:1679:0:o;222475:123::-;222533:7;222560:30;222564:1;222567;109960;222560:3;:30::i;165140:184::-;165198:7;165230:5;;;165246:51;165255:6;;;:20;;;165274:1;165269;165265;:5;;;;165677:240;165737:7;165757:38;165766:6;;;110109:1;165757:8;:38::i;:::-;165812:6;165808:102;;-1:-1:-1;165842:1:0;165835:8;;165808:102;165897:1;165892;165888;:5;165887:11;;;;;;165883:1;:15;165876:22;;;;165518:151;165580:7;165600:38;165609:6;;;110109:1;165600:8;:38::i;:::-;165660:1;165656;:5;;;;;;;165518:151;-1:-1:-1;;;165518:151:0:o;139546:586::-;139630:7;139763:6;:18;;;139753:7;:28;139749:376;;;139886:10;;139805:93;;139867:30;;120365:4;;139867:18;:30::i;:::-;139837:18;;;;139818:10;;139806:51;;139818:38;;:10;:18;:38::i;:::-;139806:7;;:11;:51::i;:::-;139805:61;;:93::i;139749:376::-;139931:6;:18;;;139920:7;:29;139916:209;;-1:-1:-1;139973:7:0;139966:14;;139916:209;140100:10;;140021:91;;140081:30;;120365:4;;140081:18;:30::i;:::-;140052:18;;;;140033:10;;140021:51;;140033:38;;:10;:18;:38::i;:::-;140021:7;;:11;:51::i;49393:275::-;49479:4;49529:47;-1:-1:-1;;;49529:11:0;:47::i;:::-;49517:8;:59;49516:144;;;-1:-1:-1;49607:52:0;-1:-1:-1;;;49607:11:0;:52::i;:::-;49595:64;;;;49393:275;-1:-1:-1;49393:275:0:o;14:138:1:-;84:20;;113:33;84:20;113:33;:::i;157:702::-;;270:3;263:4;255:6;251:17;247:27;237:2;;292:5;285;278:20;237:2;332:6;319:20;358:4;382:62;397:46;440:2;397:46;:::i;:::-;382:62;:::i;:::-;478:15;;;509:12;;;;541:15;;;587:11;;;575:24;;571:33;;568:42;-1:-1:-1;565:2:1;;;627:5;620;613:20;565:2;653:5;667:163;681:2;678:1;675:9;667:163;;;738:17;;726:30;;776:12;;;;808;;;;699:1;692:9;667:163;;;-1:-1:-1;848:5:1;;227:632;-1:-1:-1;;;;;;;227:632:1:o;864:699::-;;988:3;981:4;973:6;969:17;965:27;955:2;;1010:5;1003;996:20;955:2;1043:6;1037:13;1069:4;1093:62;1108:46;1151:2;1108:46;:::i;1093:62::-;1189:15;;;1220:12;;;;1252:15;;;1298:11;;;1286:24;;1282:33;;1279:42;-1:-1:-1;1276:2:1;;;1338:5;1331;1324:20;1276:2;1364:5;1378:156;1392:2;1389:1;1386:9;1378:156;;;1449:10;;1437:23;;1480:12;;;;1512;;;;1410:1;1403:9;1378:156;;1568:542;;1665:3;1658:4;1650:6;1646:17;1642:27;1632:2;;1687:5;1680;1673:20;1632:2;1727:6;1714:20;1753:18;1749:2;1746:26;1743:2;;;1775:9;1743:2;1810:54;1858:4;-1:-1:-1;;1852:2:1;1833:13;;1829:27;1825:38;1810:54;:::i;:::-;1889:2;1880:7;1873:19;1935:3;1928:4;1923:2;1915:6;1911:15;1907:26;1904:35;1901:2;;;1956:5;1949;1942:20;1901:2;2025;2018:4;2010:6;2006:17;1999:4;1990:7;1986:18;1973:55;2048:16;;;2066:4;2044:27;2037:42;;;;2052:7;1622:488;-1:-1:-1;;1622:488:1:o;2115:156::-;2203:13;;2245:1;2235:12;;2225:2;;2261:1;2258;2251:12;2276:152;2353:20;;2402:1;2392:12;;2382:2;;2418:1;2415;2408:12;2433:259;;2545:2;2533:9;2524:7;2520:23;2516:32;2513:2;;;2566:6;2558;2551:22;2513:2;2610:9;2597:23;2629:33;2656:5;2629:33;:::i;2697:402::-;;;2826:2;2814:9;2805:7;2801:23;2797:32;2794:2;;;2847:6;2839;2832:22;2794:2;2891:9;2878:23;2910:33;2937:5;2910:33;:::i;:::-;2962:5;-1:-1:-1;3019:2:1;3004:18;;2991:32;3032:35;2991:32;3032:35;:::i;:::-;3086:7;3076:17;;;2784:315;;;;;:::o;3104:470::-;;;;3250:2;3238:9;3229:7;3225:23;3221:32;3218:2;;;3271:6;3263;3256:22;3218:2;3315:9;3302:23;3334:33;3361:5;3334:33;:::i;:::-;3386:5;-1:-1:-1;3443:2:1;3428:18;;3415:32;3456:35;3415:32;3456:35;:::i;:::-;3208:366;;3510:7;;-1:-1:-1;;;3564:2:1;3549:18;;;;3536:32;;3208:366::o;3579:853::-;;;;;;;;3791:3;3779:9;3770:7;3766:23;3762:33;3759:2;;;3813:6;3805;3798:22;3759:2;3857:9;3844:23;3876:33;3903:5;3876:33;:::i;:::-;3928:5;-1:-1:-1;3985:2:1;3970:18;;3957:32;3998:35;3957:32;3998:35;:::i;:::-;4052:7;-1:-1:-1;4106:2:1;4091:18;;4078:32;;-1:-1:-1;4157:2:1;4142:18;;4129:32;;-1:-1:-1;4213:3:1;4198:19;;4185:33;4262:4;4249:18;;4237:31;;4227:2;;4287:6;4279;4272:22;4227:2;3749:683;;;;-1:-1:-1;3749:683:1;;;;4315:7;4369:3;4354:19;;4341:33;;-1:-1:-1;4421:3:1;4406:19;;;4393:33;;3749:683;-1:-1:-1;;3749:683:1:o;4437:327::-;;;4566:2;4554:9;4545:7;4541:23;4537:32;4534:2;;;4587:6;4579;4572:22;4534:2;4631:9;4618:23;4650:33;4677:5;4650:33;:::i;:::-;4702:5;4754:2;4739:18;;;;4726:32;;-1:-1:-1;;;4524:240:1:o;4769:1361::-;;;;4990:2;4978:9;4969:7;4965:23;4961:32;4958:2;;;5011:6;5003;4996:22;4958:2;5049:9;5043:16;5078:18;5119:2;5111:6;5108:14;5105:2;;;5140:6;5132;5125:22;5105:2;5183:6;5172:9;5168:22;5158:32;;5228:7;5221:4;5217:2;5213:13;5209:27;5199:2;;5255:6;5247;5240:22;5199:2;5289;5283:9;5311:4;5335:62;5350:46;5393:2;5350:46;:::i;5335:62::-;5431:15;;;5462:12;;;;5494:11;;;5532;;;5524:20;;5520:29;;5517:42;-1:-1:-1;5514:2:1;;;5577:6;5569;5562:22;5514:2;5604:6;5595:15;;5619:233;5633:2;5630:1;5627:9;5619:233;;;5697:3;5691:10;5714:33;5741:5;5714:33;:::i;:::-;5760:18;;5651:1;5644:9;;;;;5798:12;;;;5830;;5619:233;;;-1:-1:-1;5907:18:1;;;5901:25;5871:5;;-1:-1:-1;5901:25:1;;-1:-1:-1;;;5938:16:1;;;5935:2;;;5972:6;5964;5957:22;5935:2;;6000:80;6072:7;6061:8;6050:9;6046:24;6000:80;:::i;:::-;5990:90;;;6120:2;6109:9;6105:18;6099:25;6089:35;;4948:1182;;;;;:::o;6135:253::-;;6244:2;6232:9;6223:7;6219:23;6215:32;6212:2;;;6265:6;6257;6250:22;6212:2;6309:9;6296:23;6328:30;6352:5;6328:30;:::i;6393:257::-;;6513:2;6501:9;6492:7;6488:23;6484:32;6481:2;;;6534:6;6526;6519:22;6481:2;6571:9;6565:16;6590:30;6614:5;6590:30;:::i;6655:1093::-;;;;;;;;6903:3;6891:9;6882:7;6878:23;6874:33;6871:2;;;6925:6;6917;6910:22;6871:2;6966:9;6953:23;6943:33;;7026:2;7015:9;7011:18;6998:32;7039:33;7066:5;7039:33;:::i;:::-;7091:5;-1:-1:-1;7148:2:1;7133:18;;7120:32;7161:35;7120:32;7161:35;:::i;:::-;7215:7;-1:-1:-1;7273:2:1;7258:18;;7245:32;7296:18;7326:14;;;7323:2;;;7358:6;7350;7343:22;7323:2;7386:67;7445:7;7436:6;7425:9;7421:22;7386:67;:::i;:::-;7376:77;;7500:3;7489:9;7485:19;7472:33;7462:43;;7552:3;7541:9;7537:19;7524:33;7514:43;;7610:3;7599:9;7595:19;7582:33;7566:49;;7640:2;7630:8;7627:16;7624:2;;;7661:6;7653;7646:22;7624:2;;7689:53;7734:7;7723:8;7712:9;7708:24;7689:53;:::i;:::-;7679:63;;;6861:887;;;;;;;;;;:::o;7753:306::-;;7864:2;7852:9;7843:7;7839:23;7835:32;7832:2;;;7885:6;7877;7870:22;7832:2;7916:23;;-1:-1:-1;;;;;;7968:32:1;;7958:43;;7948:2;;8020:6;8012;8005:22;8064:283;;8207:2;8195:9;8186:7;8182:23;8178:32;8175:2;;;8228:6;8220;8213:22;8175:2;8265:9;8259:16;8284:33;8311:5;8284:33;:::i;8352:493::-;;;8504:2;8492:9;8483:7;8479:23;8475:32;8472:2;;;8525:6;8517;8510:22;8472:2;8569:9;8556:23;8588:33;8615:5;8588:33;:::i;:::-;8640:5;-1:-1:-1;8696:2:1;8681:18;;8668:32;8723:18;8712:30;;8709:2;;;8760:6;8752;8745:22;8709:2;8788:51;8831:7;8822:6;8811:9;8807:22;8788:51;:::i;:::-;8778:61;;;8462:383;;;;;:::o;8850:240::-;;8986:2;8974:9;8965:7;8961:23;8957:32;8954:2;;;9007:6;8999;8992:22;8954:2;9035:49;9074:9;9035:49;:::i;9095:301::-;;;9248:2;9236:9;9227:7;9223:23;9219:32;9216:2;;;9269:6;9261;9254:22;9216:2;9297:49;9336:9;9297:49;:::i;:::-;9287:59;;9386:2;9375:9;9371:18;9365:25;9355:35;;9206:190;;;;;:::o;9401:1591::-;;;;;9616:3;9604:9;9595:7;9591:23;9587:33;9584:2;;;9638:6;9630;9623:22;9584:2;9683:9;9670:23;9712:18;9753:2;9745:6;9742:14;9739:2;;;9774:6;9766;9759:22;9739:2;9817:6;9806:9;9802:22;9792:32;;9843:6;9883:2;9878;9869:7;9865:16;9861:25;9858:2;;;9904:6;9896;9889:22;9858:2;9935:18;9950:2;9935:18;:::i;:::-;9922:31;;9976;10004:2;9976:31;:::i;:::-;9969:5;9962:46;10040:33;10069:2;10065;10061:11;10040:33;:::i;:::-;10035:2;10028:5;10024:14;10017:57;10106:33;10135:2;10131;10127:11;10106:33;:::i;:::-;10101:2;10094:5;10090:14;10083:57;10193:2;10189;10185:11;10172:25;10167:2;10160:5;10156:14;10149:49;10252:3;10248:2;10244:12;10231:26;10225:3;10218:5;10214:15;10207:51;10312:3;10308:2;10304:12;10291:26;10285:3;10278:5;10274:15;10267:51;10351:34;10380:3;10376:2;10372:12;10351:34;:::i;:::-;10345:3;10338:5;10334:15;10327:59;10419:34;10448:3;10444:2;10440:12;10419:34;:::i;:::-;10413:3;10406:5;10402:15;10395:59;10473:3;10522:2;10518;10514:11;10501:25;10551:2;10541:8;10538:16;10535:2;;;10572:6;10564;10557:22;10535:2;10613:46;10651:7;10640:8;10636:2;10632:17;10613:46;:::i;:::-;10608:2;10601:5;10597:14;10590:70;;;10679:5;10669:15;;;10737:2;10726:9;10722:18;10709:32;10693:48;;10766:2;10756:8;10753:16;10750:2;;;10787:6;10779;10772:22;10750:2;;10815:69;10876:7;10865:8;10854:9;10850:24;10815:69;:::i;:::-;9574:1418;;10805:79;;-1:-1:-1;;;;10931:2:1;10916:18;;10903:32;;10982:2;10967:18;10954:32;;9574:1418;-1:-1:-1;9574:1418:1:o;10997:190::-;;11109:2;11097:9;11088:7;11084:23;11080:32;11077:2;;;11130:6;11122;11115:22;11077:2;-1:-1:-1;11158:23:1;;11067:120;-1:-1:-1;11067:120:1:o;11192:194::-;;11315:2;11303:9;11294:7;11290:23;11286:32;11283:2;;;11336:6;11328;11321:22;11283:2;-1:-1:-1;11364:16:1;;11273:113;-1:-1:-1;11273:113:1:o;11391:258::-;;;11520:2;11508:9;11499:7;11495:23;11491:32;11488:2;;;11541:6;11533;11526:22;11488:2;-1:-1:-1;;11569:23:1;;;11639:2;11624:18;;;11611:32;;-1:-1:-1;11478:171:1:o;11654:447::-;;;;;11828:3;11816:9;11807:7;11803:23;11799:33;11796:2;;;11850:6;11842;11835:22;11796:2;11884:9;11878:16;11868:26;;11934:2;11923:9;11919:18;11913:25;11903:35;;11978:2;11967:9;11963:18;11957:25;11947:35;;12025:2;12014:9;12010:18;12004:25;12038:33;12065:5;12038:33;:::i;:::-;11786:315;;;;-1:-1:-1;11786:315:1;;-1:-1:-1;;11786:315:1:o;12106:443::-;;12203:5;12197:12;12230:6;12225:3;12218:19;12256:4;12285:2;12280:3;12276:12;12269:19;;12322:2;12315:5;12311:14;12343:3;12355:169;12369:6;12366:1;12363:13;12355:169;;;12430:13;;12418:26;;12464:12;;;;12499:15;;;;12391:1;12384:9;12355:169;;;-1:-1:-1;12540:3:1;;12173:376;-1:-1:-1;;;;;12173:376:1:o;12554:93::-;12626:13;12619:21;12607:34;;12597:50::o;12652:477::-;;12733:5;12727:12;12760:6;12755:3;12748:19;12785:3;12797:162;12811:6;12808:1;12805:13;12797:162;;;12873:4;12929:13;;;12925:22;;12919:29;12901:11;;;12897:20;;12890:59;12826:12;12797:162;;;12977:6;12974:1;12971:13;12968:2;;;13043:3;13036:4;13027:6;13022:3;13018:16;13014:27;13007:40;12968:2;-1:-1:-1;13111:2:1;13090:15;-1:-1:-1;;13086:29:1;13077:39;;;;13118:4;13073:50;;12703:426;-1:-1:-1;;12703:426:1:o;13134:272::-;13289:19;;;-1:-1:-1;;;;;;13338:33:1;13333:2;13324:12;;13317:55;13397:2;13388:12;;13279:127::o;13411:273::-;;13594:6;13586;13581:3;13568:33;13620:16;;13645:15;;;13620:16;13558:126;-1:-1:-1;13558:126:1:o;13689:392::-;-1:-1:-1;;;13947:27:1;;13999:1;13990:11;;13983:27;;;;14035:2;14026:12;;14019:28;14072:2;14063:12;;13937:144::o;14086:203::-;-1:-1:-1;;;;;14250:32:1;;;;14232:51;;14220:2;14205:18;;14187:102::o;14294:267::-;;14473:2;14462:9;14455:21;14493:62;14551:2;14540:9;14536:18;14528:6;14493:62;:::i;14566:477::-;;14823:2;14812:9;14805:21;14849:62;14907:2;14896:9;14892:18;14884:6;14849:62;:::i;:::-;14959:9;14951:6;14947:22;14942:2;14931:9;14927:18;14920:50;14987;15030:6;15022;14987:50;:::i;15048:187::-;15213:14;;15206:22;15188:41;;15176:2;15161:18;;15143:92::o;15240:329::-;15461:14;;15454:22;15436:41;;15508:2;15493:18;;15486:34;;;;15551:2;15536:18;;15529:34;15424:2;15409:18;;15391:178::o;15574:177::-;15720:25;;;15708:2;15693:18;;15675:76::o;15756:375::-;15958:25;;;-1:-1:-1;;;;;16057:15:1;;;16052:2;16037:18;;16030:43;16109:15;16104:2;16089:18;;16082:43;15946:2;15931:18;;15913:218::o;16136:1557::-;;16415:6;16404:9;16397:25;16441:2;16479:1;16475;16470:3;16466:11;16462:19;16529:2;16521:6;16517:15;16512:2;16501:9;16497:18;16490:43;16581:2;16573:6;16569:15;16564:2;16553:9;16549:18;16542:43;16621:3;16616:2;16605:9;16601:18;16594:31;16663:3;16652:9;16648:19;16702:6;16696:13;16746:3;16740;16729:9;16725:19;16718:32;16770:6;16805:12;16799:19;16842:6;16834;16827:22;16880:3;16869:9;16865:19;16858:26;;16925:2;16911:12;16907:21;16893:35;;16946:4;16937:13;;16959:178;16973:6;16970:1;16967:13;16959:178;;;17038:13;;17034:22;;17022:35;;17112:15;;;;16995:1;16988:9;;;;;17077:12;;;;16959:178;;;16963:3;17186:2;17178:6;17174:15;17168:22;17146:44;;17213:3;17209:8;17199:18;;17279:2;17267:9;17262:3;17258:19;17254:28;17248:3;17237:9;17233:19;17226:57;17306:55;17357:3;17341:14;17306:55;:::i;:::-;17292:69;;;;;17410:2;17402:6;17398:15;17392:22;17479:2;17467:9;17459:6;17455:22;17451:31;17445:3;17434:9;17430:19;17423:60;17506:42;17541:6;17525:14;17506:42;:::i;:::-;17492:56;;;;17597:2;17589:6;17585:15;17579:22;17610:54;17659:3;17648:9;17644:19;17628:14;17610:54;:::i;17698:591::-;17985:25;;;-1:-1:-1;;;;;18084:15:1;;;18079:2;18064:18;;18057:43;18136:15;;;;18131:2;18116:18;;18109:43;18183:2;18168:18;;18161:34;18226:3;18211:19;;18204:35;;;;-1:-1:-1;18255:19:1;;18248:35;17972:3;17957:19;;17939:350::o;18294:489::-;18553:25;;;18609:2;18594:18;;18587:34;;;;18652:2;18637:18;;18630:34;;;;18695:2;18680:18;;18673:34;-1:-1:-1;;;;;18744:32:1;18738:3;18723:19;;18716:61;-1:-1:-1;18525:19:1;;18507:276::o;18788:290::-;;18963:6;18952:9;18945:25;19006:2;19001;18990:9;18986:18;18979:30;19026:46;19068:2;19057:9;19053:18;19045:6;19026:46;:::i;19083:288::-;19271:25;;;-1:-1:-1;;;;;19332:32:1;19327:2;19312:18;;19305:60;19259:2;19244:18;;19226:145::o;19376:398::-;19603:25;;;19676:4;19664:17;;;;19659:2;19644:18;;19637:45;19713:2;19698:18;;19691:34;19756:2;19741:18;;19734:34;19590:3;19575:19;;19557:217::o;20230:221::-;;20379:2;20368:9;20361:21;20399:46;20441:2;20430:9;20426:18;20418:6;20399:46;:::i;20638:338::-;;20845:6;20834:9;20827:25;20888:2;20883;20872:9;20868:18;20861:30;20908:62;20966:2;20955:9;20951:18;20943:6;20908:62;:::i;20981:248::-;21155:25;;;21211:2;21196:18;;21189:34;21143:2;21128:18;;21110:119::o;21234:184::-;21406:4;21394:17;;;;21376:36;;21364:2;21349:18;;21331:87::o;21423:242::-;21493:2;21487:9;21523:17;;;21570:18;21555:34;;21591:22;;;21552:62;21549:2;;;21617:9;21549:2;21644;21637:22;21467:198;;-1:-1:-1;21467:198:1:o;21670:180::-;;21766:18;21758:6;21755:30;21752:2;;;21788:9;21752:2;-1:-1:-1;21839:4:1;21820:17;;;21816:28;;21742:108::o;21855:133::-;-1:-1:-1;;;;;21932:31:1;;21922:42;;21912:2;;21978:1;21975;21968:12;21993:120;22081:5;22074:13;22067:21;22060:5;22057:32;22047:2;;22103:1;22100;22093:12"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","getActionId(bytes4)":"851c1bb3","getAuthorizer()":"aaabadc5","getBptIndex()":"82687a56","getMainIndex()":"4d64cd74","getMainToken()":"4de046d5","getOwner()":"893d20e8","getPausedState()":"1c0de051","getPoolId()":"38fff2d0","getRate()":"679aefce","getScalingFactors()":"1dd746ea","getSwapFeePercentage()":"55c67628","getTargets()":"63fe3b56","getVault()":"8d928af8","getVirtualSupply()":"de82cd34","getWrappedIndex()":"16b8d6ff","getWrappedToken()":"f174e241","getWrappedTokenRate()":"f5431aa8","increaseAllowance(address,uint256)":"39509351","initialize()":"8129fc1c","name()":"06fdde03","nonces(address)":"7ecebe00","onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)":"74f3b009","onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)":"d5c096c4","onSwap((uint8,address,address,uint256,bytes32,uint256,address,address,bytes),uint256[],uint256,uint256)":"01ec954a","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","queryExit(bytes32,address,address,uint256[],uint256,uint256,bytes)":"6028bfd4","queryJoin(bytes32,address,address,uint256[],uint256,uint256,bytes)":"87ec6817","setAssetManagerPoolConfig(address,bytes)":"50dd6ed9","setPaused(bool)":"16c38b3c","setSwapFeePercentage(uint256)":"38e9922e","setTargets(uint256,uint256)":"9f11080e","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"contract IERC20\",\"name\":\"mainToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"upperTarget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodDuration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"SwapFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lowerTarget\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"upperTarget\",\"type\":\"uint256\"}],\"name\":\"TargetsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBptIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMainIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMainToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getScalingFactors\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTargets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lowerTarget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperTarget\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVirtualSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWrappedIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWrappedToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWrappedTokenRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onExitPool\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onJoinPool\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPoolSwapStructs.SwapRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"}],\"name\":\"onSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryExit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryJoin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"poolConfig\",\"type\":\"bytes\"}],\"name\":\"setAssetManagerPoolConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newLowerTarget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newUpperTarget\",\"type\":\"uint256\"}],\"name\":\"setTargets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"Override to grant the Vault infinite allowance, causing for Pool Tokens to not require approval. This is sound as the Vault already provides authorization mechanisms when initiation token transfers, which this contract inherits.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Override to allow decreasing allowance by more than the current amount (setting it to zero)\"},\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"getPausedState()\":{\"details\":\"Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period.\"},\"getRate()\":{\"details\":\"For a Linear Pool, the rate represents the appreciation of BPT with respect to the underlying tokens. This rate increases slowly as the wrapped token appreciates in value.\"},\"getVirtualSupply()\":{\"details\":\"Returns the number of tokens in circulation. In other pools, this would be the same as `totalSupply`, but since this pool pre-mints all BPT, `totalSupply` remains constant, whereas `virtualSupply` increases as users join the pool and decreases as they exit it.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize()\":{\"details\":\"Finishes initialization of the Linear Pool: it is unusable before calling this function as no BPT will have been minted. Since Linear Pools have preminted BPT stored in the Vault, they require an initial join to deposit said BPT as their balance. Unfortunately, this cannot be performed during construction, as a join involves calling the `onJoinPool` function on the Pool, and the Pool will not have any code until construction finishes. Therefore, this must happen in a separate call. It is highly recommended to create Linear pools using the LinearPoolFactory, which calls `initialize` automatically.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)\":{\"details\":\"Called by the Vault when a user calls `IVault.exitPool` to remove liquidity from this Pool. Returns how many tokens the Vault should deduct from the Pool's balances, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from the Pool's balances and send them to `recipient`, as well as collect the reported amount in protocol fees, which the Pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are charged on exit events to guarantee that users exiting the Pool have paid their share. `sender` is the account performing the exit (typically the pool shareholder), and `recipient` is the account to which the Vault will send the proceeds. `balances` contains the total token balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of exit (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as burning pool shares.\"},\"onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)\":{\"details\":\"Called by the Vault when a user calls `IVault.joinPool` to add liquidity to this Pool. Returns how many of each registered token the user should provide, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from `sender` and add them to the Pool's balances, as well as collect the reported amount in protocol fees, which the pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are reported and charged on join events so that the Pool is free of debt whenever new users join. `sender` is the account performing the join (from which tokens will be withdrawn), and `recipient` is the account designated to receive any benefits (typically pool shares). `balances` contains the total balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of join (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as minting pool shares.\"},\"onSwap((uint8,address,address,uint256,bytes32,uint256,address,address,bytes),uint256[],uint256,uint256)\":{\"details\":\"Implementation of onSwap, from IGeneralPool.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"queryExit(bytes32,address,address,uint256[],uint256,uint256,bytes)\":{\"details\":\"Returns the amount of BPT that would be burned from `sender` if the `onExitPool` hook were called by the Vault with the same arguments, along with the number of tokens `recipient` would receive. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction.\"},\"queryJoin(bytes32,address,address,uint256[],uint256,uint256,bytes)\":{\"details\":\"Returns the amount of BPT that would be granted to `recipient` if the `onJoinPool` hook were called by the Vault with the same arguments, along with the number of tokens `sender` would have to supply. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Override to allow for 'infinite allowance' and let the token owner use `transferFrom` with no self-allowance\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"AaveLinearPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"AaveLinearPoolFactory":{"abi":[{"inputs":[{"internalType":"contract IVault","name":"vault","type":"address"},{"internalType":"address","name":"defaultPoolOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"}],"name":"PoolCreated","type":"event"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"contract IERC20","name":"mainToken","type":"address"},{"internalType":"contract IERC20","name":"wrappedToken","type":"address"},{"internalType":"uint256","name":"upperTarget","type":"uint256"},{"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}],"name":"create","outputs":[{"internalType":"contract LinearPool","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getCreationCode","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCreationCodeContracts","outputs":[{"internalType":"address","name":"contractA","type":"address"},{"internalType":"address","name":"contractB","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDefaultPoolOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPauseConfiguration","outputs":[{"internalType":"uint256","name":"pauseWindowDuration","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodDuration","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"isPoolFromFactory","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:568:1","statements":[{"nodeType":"YulBlock","src":"6:3:1","statements":[]},{"body":{"nodeType":"YulBlock","src":"127:301:1","statements":[{"body":{"nodeType":"YulBlock","src":"173:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"190:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"175:6:1"},"nodeType":"YulFunctionCall","src":"175:22:1"},"nodeType":"YulExpressionStatement","src":"175:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"148:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"157:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"144:3:1"},"nodeType":"YulFunctionCall","src":"144:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"169:2:1","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"140:3:1"},"nodeType":"YulFunctionCall","src":"140:32:1"},"nodeType":"YulIf","src":"137:2:1"},{"nodeType":"YulVariableDeclaration","src":"208:29:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"227:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"221:5:1"},"nodeType":"YulFunctionCall","src":"221:16:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"212:5:1","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"273:5:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"246:26:1"},"nodeType":"YulFunctionCall","src":"246:33:1"},"nodeType":"YulExpressionStatement","src":"246:33:1"},{"nodeType":"YulAssignment","src":"288:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"298:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"288:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"312:40:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"337:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"348:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"333:3:1"},"nodeType":"YulFunctionCall","src":"333:18:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"327:5:1"},"nodeType":"YulFunctionCall","src":"327:25:1"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"316:7:1","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"388:7:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"361:26:1"},"nodeType":"YulFunctionCall","src":"361:35:1"},"nodeType":"YulExpressionStatement","src":"361:35:1"},{"nodeType":"YulAssignment","src":"405:17:1","value":{"name":"value_1","nodeType":"YulIdentifier","src":"415:7:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"405:6:1"}]}]},"name":"abi_decode_tuple_t_contract$_IVault_$9483t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"85:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"96:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"108:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"116:6:1","type":""}],"src":"14:414:1"},{"body":{"nodeType":"YulBlock","src":"480:86:1","statements":[{"body":{"nodeType":"YulBlock","src":"544:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"553:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"556:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"546:6:1"},"nodeType":"YulFunctionCall","src":"546:12:1"},"nodeType":"YulExpressionStatement","src":"546:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"503:5:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"514:5:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"529:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"534:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"525:3:1"},"nodeType":"YulFunctionCall","src":"525:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"538:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"521:3:1"},"nodeType":"YulFunctionCall","src":"521:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"510:3:1"},"nodeType":"YulFunctionCall","src":"510:31:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"500:2:1"},"nodeType":"YulFunctionCall","src":"500:42:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"493:6:1"},"nodeType":"YulFunctionCall","src":"493:50:1"},"nodeType":"YulIf","src":"490:2:1"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"469:5:1","type":""}],"src":"433:133:1"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_contract$_IVault_$9483t_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":1,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101406040523480156200001257600080fd5b5060405162005b1038038062005b108339810160408190526200003591620001e6565b81604051806020016200004890620001d8565b601f1982820381018352601f9091011660405280518390829060006002820460a081905280830360e08190528185529091508362000092816200011c602090811b620002f917901c565b60601b6001600160601b0319166080528285018051838252620000c1826200011c602090811b620002f917901c565b606090811b6001600160601b031990811660c0529690935290529690961b909116610100525050600080546001600160a01b0319166001600160a01b03929092169190911790555050506276a700420161012052506200023d565b80517f602038038060206000396000f3fefefefefefefefefefefefefefefefefefefe808352600091602081018484f090845291506200016a6001600160a01b03831615156101ac62000170565b50919050565b816200018157620001818162000185565b5050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6150768062000a9a83390190565b60008060408385031215620001f9578182fd5b8251620002068162000224565b6020840151909250620002198162000224565b809150509250929050565b6001600160a01b03811681146200023a57600080fd5b50565b60805160601c60a05160c05160601c60e0516101005160601c610120516107fb6200029f6000398061018652806101af5250806102d752508061035352508061015d52806103cf52508061037452508061013c52806103ab52506107fb6000f3fe608060405234801561001057600080fd5b506004361061007c5760003560e01c80636634b7531161005b5780636634b753146100cb57806374dcc7a4146100eb5780637ff52b011461010b5780638d928af8146101135761007c565b8062c194db14610081578063174481fa1461009f5780632da47c40146100b5575b600080fd5b61008961011b565b6040516100969190610711565b60405180910390f35b6100a761013a565b6040516100969291906106ec565b6100bd610180565b60405161009692919061079f565b6100de6100d93660046105d9565b6101ea565b6040516100969190610706565b6100fe6100f93660046105f5565b610208565b60405161009691906106d8565b6100fe6102c6565b6100fe6102d5565b60606101356040518060200160405280600081525061034b565b905090565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000009091565b600080427f00000000000000000000000000000000000000000000000000000000000000008110156101dc57807f000000000000000000000000000000000000000000000000000000000000000003925062278d0091506101e5565b60009250600091505b509091565b6001600160a01b031660009081526001602052604090205460ff1690565b6000806000610215610180565b9150915060006102636102266102d5565b8b8b8b8b8b8b8a8a6102366102c6565b60405160200161024f9a99989796959493929190610724565b604051602081830303815290604052610424565b9050806001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156102a057600080fd5b505af11580156102b4573d6000803e3d6000fd5b50929c9b505050505050505050505050565b6000546001600160a01b031690565b7f000000000000000000000000000000000000000000000000000000000000000090565b80517f602038038060206000396000f3fefefefefefefefefefefefefefefefefefefe808352600091602081018484f090845291506103456001600160a01b03831615156101ac610487565b50919050565b8051604080517f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000818101858101848101602090810190965280855293957f00000000000000000000000000000000000000000000000000000000000000009592947f000000000000000000000000000000000000000000000000000000000000000094938801866000828a3c846000888301883c5060208981019089850101610416818386610499565b505050505050505050919050565b600080610430836104d7565b6001600160a01b0381166000818152600160208190526040808320805460ff19169092179091555192935090917f83a48fbcfc991335314e74d0496aab6a1987e992ddc85dddbcc4d6dd6ef2e9fc9190a292915050565b816104955761049581610511565b5050565b5b602081106104b9578151835260209283019290910190601f190161049a565b905182516020929092036101000a6000190180199091169116179052565b6000806104e38361034b565b905060008151602083016000f090506001600160a01b03811661050a573d6000803e3d6000fd5b9392505050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600082601f830112610574578081fd5b813567ffffffffffffffff8082111561058957fe5b604051601f8301601f1916810160200182811182821017156105a757fe5b6040528281528483016020018610156105be578384fd5b82602086016020830137918201602001929092529392505050565b6000602082840312156105ea578081fd5b813561050a816107ad565b60008060008060008060c0878903121561060d578182fd5b863567ffffffffffffffff80821115610624578384fd5b6106308a838b01610564565b97506020890135915080821115610645578384fd5b5061065289828a01610564565b9550506040870135610663816107ad565b93506060870135610673816107ad565b9598949750929560808101359460a0909101359350915050565b60008151808452815b818110156106b257602081850181015186830182015201610696565b818111156106c35782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b901515815260200190565b60006020825261050a602083018461068d565b6001600160a01b038b811682526101406020830181905260009161074a8483018e61068d565b9150838203604085015261075e828d61068d565b9a811660608501529889166080840152505060a081019590955260c085019390935260e0840191909152610100830152909116610120909101529392505050565b918252602082015260400190565b6001600160a01b03811681146107c257600080fd5b5056fea2646970667358221220be970d9deadd714a351f5fd25ffb213227866b09f43de5ac3b862f9cf5e4d1c964736f6c634300070600336102c06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120523480156200003757600080fd5b5060405162005076380380620050768339810160408190526200005a9162000bbe565b898989898989898989898960008a8a620000768b8b30620004e1565b6040805160038082526080820190925290602082016060803683370190505089898989828289898d8280604051806040016040528060018152602001603160f81b81525085858a336001600160a01b031660001b806080818152505050806001600160a01b031660a0816001600160a01b031660601b815250505081600390805190602001906200010992919062000a2b565b5080516200011f90600490602084019062000a2b565b505060058054601260ff1990911617905550815160209283012060c052805191012060e052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6101005260601b6001600160601b03191661014052506200019290506276a700831115610194620005b0565b620001a662278d00821115610195620005b0565b4290910161016081905201610180528551620001c8906002111560c8620005b0565b620001e2620001d6620005c5565b8751111560c9620005b0565b620001f886620005ca60201b620013761760201c565b6200020384620005d6565b6040516309b2760f60e01b81526000906001600160a01b038c16906309b2760f9062000234908d9060040162000d56565b602060405180830381600087803b1580156200024f57600080fd5b505af115801562000264573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200028a919062000ba5565b604051633354e3e960e11b81529091506001600160a01b038c16906366a9c7d290620002bf9084908b908b9060040162000cbc565b600060405180830381600087803b158015620002da57600080fd5b505af1158015620002ef573d6000803e3d6000fd5b50505050806101a081815250505050505050505050505050866001600160a01b03166101c0816001600160a01b031660601b81525050856001600160a01b03166101e0816001600160a01b031660601b8152505060008060006200035b8a8a306200066260201b60201c565b610200819052610220839052610240829052919450925090506200037f8a62000758565b610260526200038e8962000758565b610280526000620003a18b828b6200082c565b5050505050505050505050505050856001600160a01b031663b4dcfc776040518163ffffffff1660e01b815260040160206040518083038186803b158015620003e957600080fd5b505afa158015620003fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000424919062000b7f565b6001600160a01b03166102a0816001600160a01b031660601b81525050620004d1866001600160a01b0316634800d97f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200047f57600080fd5b505afa15801562000494573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004ba919062000b7f565b6001600160a01b03898116911614610208620005b0565b5050505050505050505062000d98565b606060008080620004f487878762000662565b60408051600380825260808201909252939650919450925060208201606080368337019050509350868484815181106200052a57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050858483815181106200055857fe5b60200260200101906001600160a01b031690816001600160a01b031681525050848482815181106200058657fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505050509392505050565b81620005c157620005c181620008da565b5050565b600390565b80620005c1816200092d565b620005eb64e8d4a5100082101560cb620005b0565b6200060367016345785d8a000082111560ca620005b0565b620006228160c0600854620009ba60201b62001380179092919060201c565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906200065790839062000d6b565b60405180910390a150565b6000806000846001600160a01b0316866001600160a01b03161015620006eb57836001600160a01b0316856001600160a01b03161015620006ae5750600091506001905060026200074f565b836001600160a01b0316866001600160a01b03161015620006da5750600091506002905060016200074f565b50600191506002905060006200074f565b846001600160a01b0316846001600160a01b03161015620007175750600291506001905060006200074f565b856001600160a01b0316846001600160a01b03161015620007435750600291506000905060016200074f565b50600191506000905060025b93509350939050565b60006001600160a01b0382163014156200077c5750670de0b6b3a764000062000827565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015620007b857600080fd5b505afa158015620007cd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007f3919062000c99565b60ff169050600062000812601283620009cf60201b620013961760201c565b905080600a0a670de0b6b3a764000002925050505b919050565b6200083d8183111561014c620005b0565b620008556001600160601b0382111561014d620005b0565b6200089062000871826060620009e760201b620013ac1760201c565b62000889846000620009e760201b620013ac1760201c565b17620009eb565b826001600160a01b03167fd0e27a0d0c2cb09280fa5e4487315455b32afcdcf012dc35b6ef2a0e3c4d12808383604051620008cd92919062000d74565b60405180910390a2505050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6002815110156200093e57620009b7565b6000816000815181106200094e57fe5b602002602001015190506000600190505b8251811015620009b45760008382815181106200097857fe5b60200260200101519050620009a9816001600160a01b0316846001600160a01b0316106065620005b060201b60201c565b91506001016200095f565b50505b50565b6001600160401b03811b1992909216911b1790565b6000620009e1838311156001620005b0565b50900390565b1b90565b62000a0a81600060085462000a1060201b620013b0179092919060201c565b60085550565b6001600160c01b03828116821b90821b198416179392505050565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928262000a63576000855562000aae565b82601f1062000a7e57805160ff191683800117855562000aae565b8280016001018555821562000aae579182015b8281111562000aae57825182559160200191906001019062000a91565b5062000abc92915062000ac0565b5090565b5b8082111562000abc576000815560010162000ac1565b8051620008278162000d82565b600082601f83011262000af5578081fd5b81516001600160401b038082111562000b0a57fe5b6040516020601f8401601f191682018101838111838210171562000b2a57fe5b604052838252858401810187101562000b41578485fd5b8492505b8383101562000b64578583018101518284018201529182019162000b45565b8383111562000b7557848185840101525b5095945050505050565b60006020828403121562000b91578081fd5b815162000b9e8162000d82565b9392505050565b60006020828403121562000bb7578081fd5b5051919050565b6000806000806000806000806000806101408b8d03121562000bde578586fd5b62000be98b62000ad7565b60208c0151909a506001600160401b038082111562000c06578788fd5b62000c148e838f0162000ae4565b9a5060408d015191508082111562000c2a578788fd5b5062000c398d828e0162000ae4565b98505062000c4a60608c0162000ad7565b965062000c5a60808c0162000ad7565b955060a08b0151945060c08b0151935060e08b015192506101008b0151915062000c886101208c0162000ad7565b90509295989b9194979a5092959850565b60006020828403121562000cab578081fd5b815160ff8116811462000b9e578182fd5b60006060820185835260206060818501528186518084526080860191508288019350845b8181101562000d075784516001600160a01b03168352938301939183019160010162000ce0565b505084810360408601528551808252908201925081860190845b8181101562000d485782516001600160a01b03168552938301939183019160010162000d21565b509298975050505050505050565b602081016003831062000d6557fe5b91905290565b90815260200190565b918252602082015260400190565b6001600160a01b0381168114620009b757600080fd5b60805160a05160601c60c05160e05161010051610120516101405160601c61016051610180516101a0516101c05160601c6101e05160601c61020051610220516102405161026051610280516102a05160601c61410462000f72600039806122e052508061147a525080611416528061222c5250806107225280610ab152806114a252806125555280612705528061285c52806129ce5280612b6a5280612cc15250806108b25280610a7752806114385280611ab55280612521528061268a52806126d152806127e65280612828528061299a5280612af45280612b365280612c4b5280612c8d525080610af25280610cbb5280610da252806112f752806114e35280612171528061258c528061273c52806128935280612a055280612ba15280612cf85280612edd5280612f1552508061134a52806115fe52806116ca528061225252806124d6528061261652806129505280612a805250806108d65280610f2352806115b552806116815280611aeb52806121f1528061249752806125b8528061277252806129115280612a315280612bd7525080610853525080611874525080611850525080610e62525080610fd952508061197a5250806119bc52508061199b525080610e3e525080610dc852506141046000f3fe608060405234801561001057600080fd5b50600436106102535760003560e01c8063679aefce1161014657806395d89b41116100c3578063d505accf11610087578063d505accf146104b2578063d5c096c4146104c5578063dd62ed3e146104d8578063de82cd34146104eb578063f174e241146104f3578063f5431aa8146104fb57610253565b806395d89b41146104695780639f11080e14610471578063a457c2d714610484578063a9059cbb14610497578063aaabadc5146104aa57610253565b806382687a561161010a57806382687a561461042b578063851c1bb31461043357806387ec681714610446578063893d20e8146104595780638d928af81461046157610253565b8063679aefce146103d457806370a08231146103dc57806374f3b009146103ef5780637ecebe00146104105780638129fc1c1461042357610253565b80633644e515116101d45780634de046d5116101985780634de046d51461036d57806350dd6ed91461038257806355c67628146103955780636028bfd41461039d57806363fe3b56146103be57610253565b80633644e5151461032f57806338e9922e1461033757806338fff2d01461034a57806339509351146103525780634d64cd741461036557610253565b806318160ddd1161021b57806318160ddd146102d35780631c0de051146102db5780631dd746ea146102f257806323b872dd14610307578063313ce5671461031a57610253565b806301ec954a1461025857806306fdde0314610281578063095ea7b31461029657806316b8d6ff146102b657806316c38b3c146102be575b600080fd5b61026b610266366004613ba6565b610503565b6040516102789190613e8e565b60405180910390f35b610289610673565b6040516102789190614021565b6102a96102a43660046138fd565b610709565b6040516102789190613e6b565b61026b610720565b6102d16102cc3660046139f4565b610744565b005b61026b610758565b6102e361075e565b60405161027893929190613e76565b6102fa610787565b6040516102789190613e33565b6102a9610315366004613848565b610796565b61032261080c565b604051610278919061405b565b61026b610815565b6102d1610345366004613cc0565b61081f565b61026b610851565b6102a96103603660046138fd565b610875565b61026b6108b0565b6103756108d4565b6040516102789190613e1f565b6102d1610390366004613b13565b6108f8565b61026b610916565b6103b06103ab366004613a2c565b610927565b604051610278929190614034565b6103c661095e565b60405161027892919061404d565b61026b61098c565b61026b6103ea3660046137f4565b610b3a565b6104026103fd366004613a2c565b610b59565b604051610278929190613e46565b61026b61041e3660046137f4565b610bd7565b6102d1610bf2565b61026b610da0565b61026b610441366004613acf565b610dc4565b6103b0610454366004613a2c565b610e16565b610375610e3c565b610375610e60565b610289610e84565b6102d161047f366004613cf0565b610ee5565b6102a96104923660046138fd565b610f4f565b6102a96104a53660046138fd565b610f8d565b610375610f9a565b6102d16104c0366004613888565b610fa4565b6104026104d3366004613a2c565b6110ed565b61026b6104e6366004613810565b61121d565b61026b61125a565b610375611348565b61026b61136c565b60008460800151610530610515610e60565b6001600160a01b0316336001600160a01b03161460cd6113cb565b61054561053b610851565b82146101f46113cb565b61054d6113d9565b6105676003851080156105605750600384105b60646113cb565b60006105716113ee565b905061057d868261151c565b60008061058861095e565b91509150600060405180606001604052806105a1610916565b815260208101859052604001839052905060008a5160018111156105c157fe5b1415610625576105e88a60600151858a815181106105db57fe5b602002602001015161157d565b60608b015260006105fa8b8b84611589565b905061061981868a8151811061060c57fe5b6020026020010151611650565b9650505050505061066a565b6106398a606001518589815181106105db57fe5b60608b0152600061064b8b8b8461165c565b905061061981868b8151811061065d57fe5b6020026020010151611711565b50949350505050565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ff5780601f106106d4576101008083540402835291602001916106ff565b820191906000526020600020905b8154815290600101906020018083116106e257829003601f168201915b5050505050905090565b600061071633848461171d565b5060015b92915050565b7f000000000000000000000000000000000000000000000000000000000000000090565b61074c611785565b610755816117b3565b50565b60025490565b600080600061076b611831565b15925061077661184e565b9150610780611872565b9050909192565b60606107916113ee565b905090565b6000806107a3853361121d565b90506107c7336001600160a01b03871614806107bf5750838210155b61019e6113cb565b6107d2858585611896565b336001600160a01b038616148015906107ed57506000198114155b156107ff576107ff853385840361171d565b60019150505b9392505050565b60055460ff1690565b6000610791611976565b60008061082a61095e565b9150915061084361083b8383611a13565b61014f6113cb565b61084c83611b2b565b505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916107169185906108ab9086611b44565b61171d565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b610900611785565b6109086113d9565b6109128282611b56565b5050565b6008546000906107919060c0611c1d565b6000606061093d8651610938611c2b565b611c30565b61095289898989898989611c3d611ce1611d42565b97509795505050505050565b600080600061096b611e64565b9050610978816000611e6a565b9250610985816060611e6a565b9150509091565b600080610997610851565b905060006109a3610e60565b6001600160a01b031663f94d4668836040518263ffffffff1660e01b81526004016109ce9190613e8e565b60006040518083038186803b1580156109e657600080fd5b505afa1580156109fa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a229190810190613928565b50915050610a3781610a326113ee565b61151c565b600080610a4261095e565b9150915060006040518060600160405280610a5b610916565b81526020018481526020018381525090506000610ae7610aae867f000000000000000000000000000000000000000000000000000000000000000081518110610aa057fe5b602002602001015184611e7c565b867f000000000000000000000000000000000000000000000000000000000000000081518110610ada57fe5b6020026020010151611edd565b9050610b2f610b28867f000000000000000000000000000000000000000000000000000000000000000081518110610b1b57fe5b6020026020010151611ee9565b8290611ef5565b965050505050505090565b6001600160a01b0381166000908152602081905260409020545b919050565b60608088610b68610515610e60565b610b7361053b610851565b6000610b7d6113ee565b9050610b89888261151c565b6000806000610b9e8e8e8e8e8e8e8a8f611c3d565b925092509250610bae8d84611f4c565b610bb88285611ce1565b610bc28185611ce1565b909550935050505b5097509795505050505050565b6001600160a01b031660009081526006602052604090205490565b6000610bfc610851565b90506000610c08610e60565b6001600160a01b031663f94d4668836040518263ffffffff1660e01b8152600401610c339190613e8e565b60006040518083038186803b158015610c4b57600080fd5b505afa158015610c5f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c879190810190613928565b50506040805160038082526080820190925291925060009190602082016060803683370190505090506001600160701b03817f000000000000000000000000000000000000000000000000000000000000000081518110610ce457fe5b60200260200101818152505060006040518060800160405280610d0685611f56565b8152602001838152602001604051806020016040528060008152508152602001600015158152509050610d37610e60565b6001600160a01b031663b95cac28853030856040518563ffffffff1660e01b8152600401610d689493929190613eb6565b600060405180830381600087803b158015610d8257600080fd5b505af1158015610d96573d6000803e3d6000fd5b5050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b60007f000000000000000000000000000000000000000000000000000000000000000082604051602001610df9929190613ddc565b604051602081830303815290604052805190602001209050919050565b60006060610e278651610938611c2b565b61095289898989898989611f59611f77611d42565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ff5780601f106106d4576101008083540402835291602001916106ff565b610eed611785565b600080610ef861095e565b91509150610f0961083b8383611a13565b610f1e610f168585611a13565b6101576113cb565b610f497f00000000000000000000000000000000000000000000000000000000000000008585611fd8565b50505050565b600080610f5c338561121d565b9050808310610f7657610f713385600061171d565b610f83565b610f83338585840361171d565b5060019392505050565b6000610716338484611896565b6000610791612069565b610fb28442111560d16113cb565b6001600160a01b0387166000908152600660209081526040808320549051909291611009917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d9101613f73565b604051602081830303815290604052805190602001209050600061102c826120e3565b90506000600182888888604051600081526020016040526040516110539493929190614003565b6020604051602081039080840390855afa158015611075573d6000803e3d6000fd5b5050604051601f19015191506110b790506001600160a01b038216158015906110af57508b6001600160a01b0316826001600160a01b0316145b6101f86113cb565b6001600160a01b038b1660009081526006602052604090206001850190556110e08b8b8b61171d565b5050505050505050505050565b606080886110fc610515610e60565b61110761053b610851565b60006111116113ee565b905061111b610758565b6111cd5760008061112f8d8d8d868b6120ff565b9150915061114861113e6121b3565b83101560cc6113cb565b61115a60006111556121b3565b6121b8565b61116d8b6111666121b3565b84036121b8565b6111778184611f77565b80611180611c2b565b67ffffffffffffffff8111801561119657600080fd5b506040519080825280602002602001820160405280156111c0578160200160208202803683370190505b5095509550505050610bca565b6111d7888261151c565b60008060006111ec8e8e8e8e8e8e8a8f611f59565b9250925092506111fc8c846121b8565b6112068285611f77565b6112108185611ce1565b9095509350610bca915050565b6000611227610e60565b6001600160a01b0316826001600160a01b03161415611249575060001961071a565b61125383836121c2565b905061071a565b600080611265610e60565b6001600160a01b031663f94d466861127b610851565b6040518263ffffffff1660e01b81526004016112979190613e8e565b60006040518083038186803b1580156112af57600080fd5b505afa1580156112c3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112eb9190810190613928565b509150506000611336827f00000000000000000000000000000000000000000000000000000000000000008151811061132057fe5b6020026020010151611331306121ed565b61157d565b9050611341816122c7565b9250505090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60006107916122db565b806109128161238e565b67ffffffffffffffff811b1992909216911b1790565b60006113a68383111560016113cb565b50900390565b1b90565b6001600160c01b03828116821b90821b198416179392505050565b816109125761091281612407565b6113ec6113e4611831565b6101926113cb565b565b60408051600380825260808201909252606091600091906020820184803683370190505090507f0000000000000000000000000000000000000000000000000000000000000000817f00000000000000000000000000000000000000000000000000000000000000008151811061146157fe5b60200260200101818152505061149f6114786122db565b7f00000000000000000000000000000000000000000000000000000000000000009061245a565b817f0000000000000000000000000000000000000000000000000000000000000000815181106114cb57fe5b602002602001018181525050670de0b6b3a7640000817f00000000000000000000000000000000000000000000000000000000000000008151811061150c57fe5b6020908102919091010152905090565b60005b611527611c2b565b81101561084c5761155e83828151811061153d57fe5b602002602001015183838151811061155157fe5b602002602001015161245a565b83828151811061156a57fe5b602090810291909101015260010161151f565b6000610805838361245a565b60208301516000906001600160a01b03163014156115b3576115ac848484612490565b9050610805565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031684602001516001600160a01b031614156115fc576115ac84848461260f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031684602001516001600160a01b03161415611645576115ac84848461276b565b610805610135612407565b600061080583836128c2565b60408301516000906001600160a01b031630141561167f576115ac84848461290a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031684604001516001600160a01b031614156116c8576115ac848484612a79565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031684604001516001600160a01b03161415611645576115ac848484612bd0565b60006108058383611ef5565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590611778908590613e8e565b60405180910390a3505050565b600061179c6000356001600160e01b031916610dc4565b90506107556117ab8233612d27565b6101916113cb565b80156117d3576117ce6117c461184e565b42106101936113cb565b6117e8565b6117e86117de611872565b42106101a96113cb565b6007805460ff19168215151790556040517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be6490611826908390613e6b565b60405180910390a150565b600061183b611872565b42118061079157505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6118ad6001600160a01b03841615156101986113cb565b6118c46001600160a01b03831615156101996113cb565b6118cf83838361084c565b6001600160a01b0383166000908152602081905260409020546118f590826101a0612e10565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546119249082611b44565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611778908590613e8e565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006119e3612e26565b306040516020016119f8959493929190613fa7565b60405160208183030381529060405280519060200120905090565b600080611a1e610851565b90506000611a2a610e60565b6001600160a01b031663f94d4668836040518263ffffffff1660e01b8152600401611a559190613e8e565b60006040518083038186803b158015611a6d57600080fd5b505afa158015611a81573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611aa99190810190613928565b509150506000611b0f827f000000000000000000000000000000000000000000000000000000000000000081518110611ade57fe5b60200260200101516113317f00000000000000000000000000000000000000000000000000000000000000006121ed565b9050858110158015611b215750848111155b9695505050505050565b611b33611785565b611b3b6113d9565b61075581612e2a565b600082820161080584821015836113cb565b6000611b60610851565b90506000611b6c610e60565b6001600160a01b031663b05f8e4883866040518363ffffffff1660e01b8152600401611b99929190613fec565b60806040518083038186803b158015611bb157600080fd5b505afa158015611bc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be99190613d11565b604051630639cdb560e21b81529094506001600160a01b03851693506318e736d49250610d68915085908790600401613fd3565b1c67ffffffffffffffff1690565b600390565b61091281831460676113cb565b60006060806000611c4d85612e95565b90506000818015611c5a57fe5b14611c6f57611c6a61014e612407565b611cd2565b611c77612eab565b611c818986612ebf565b9094509250611c8e611c2b565b67ffffffffffffffff81118015611ca457600080fd5b50604051908082528060200260200182016040528015611cce578160200160208202803683370190505b5091505b50985098509895505050505050565b60005b611cec611c2b565b81101561084c57611d23838281518110611d0257fe5b6020026020010151838381518110611d1657fe5b60200260200101516128c2565b838281518110611d2f57fe5b6020908102919091010152600101611ce4565b333014611e00576000306001600160a01b0316600036604051611d66929190613df4565b6000604051808303816000865af19150503d8060008114611da3576040519150601f19603f3d011682016040523d82523d6000602084013e611da8565b606091505b505090508060008114611db757fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b8114611de2573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b6000611e0a6113ee565b9050611e16878261151c565b600080611e2d8c8c8c8c8c8c898d8d63ffffffff16565b5091509150611e4081848663ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b60085490565b1c6bffffffffffffffffffffffff1690565b60008160200151831015611eb55781516020830151600091611ea1918690039061245a565b9050611ead8482611396565b91505061071a565b81604001518311611ec757508161071a565b81516040830151600091611ea19186039061245a565b60006108058383611b44565b6001600160701b030390565b6000611f0482151560046113cb565b82611f115750600061071a565b670de0b6b3a764000083810290611f3490858381611f2b57fe5b041460056113cb565b826001820381611f4057fe5b0460010191505061071a565b6109128282612f46565b90565b6000606080611f6961014e612407565b985098509895505050505050565b60005b611f82611c2b565b81101561084c57611fb9838281518110611f9857fe5b6020026020010151838381518110611fac57fe5b6020026020010151611ef5565b838281518110611fc557fe5b6020908102919091010152600101611f7a565b611fe78183111561014c6113cb565b6120026bffffffffffffffffffffffff82111561014d6113cb565b6120216120108260606113ac565b61201b8460006113ac565b17613002565b826001600160a01b03167fd0e27a0d0c2cb09280fa5e4487315455b32afcdcf012dc35b6ef2a0e3c4d1280838360405161205c92919061404d565b60405180910390a2505050565b6000612073610e60565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b1580156120ab57600080fd5b505afa1580156120bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107919190613af7565b60006120ed611976565b82604051602001610df9929190613e04565b6000606061210b6113d9565b6121226001600160a01b03871630146101566113cb565b6121396001600160a01b03861630146101566113cb565b604080516003808252608082019092526001600160701b039160009190602082016060803683370190505090506001600160701b03817f00000000000000000000000000000000000000000000000000000000000000008151811061219a57fe5b6020908102919091010152909890975095505050505050565b600090565b6109128282613017565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316141561225057507f0000000000000000000000000000000000000000000000000000000000000000610b54565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316141561229c576122956114786122db565b9050610b54565b6001600160a01b0382163014156122bc5750670de0b6b3a7640000610b54565b610b54610135612407565b600061071a826122d5610758565b90611396565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d15e00536123156108d4565b6040518263ffffffff1660e01b81526004016123319190613e1f565b60206040518083038186803b15801561234957600080fd5b505afa15801561235d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123819190613cd8565b633b9aca00900492915050565b60028151101561239d57610755565b6000816000815181106123ac57fe5b602002602001015190506000600190505b825181101561084c5760008382815181106123d457fe5b602002602001015190506123fd816001600160a01b0316846001600160a01b03161060656113cb565b91506001016123bd565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600082820261247e84158061247757508385838161247457fe5b04145b60036113cb565b670de0b6b3a764000090049392505050565b60006125167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685604001516001600160a01b0316148061250e57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685604001516001600160a01b0316145b6101356113cb565b6126078460600151847f00000000000000000000000000000000000000000000000000000000000000008151811061254a57fe5b6020026020010151857f00000000000000000000000000000000000000000000000000000000000000008151811061257e57fe5b60200260200101516125b5877f000000000000000000000000000000000000000000000000000000000000000081518110610b1b57fe5b867f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168a604001516001600160a01b0316146125fb576130a56125ff565b6131055b63ffffffff16565b949350505050565b600061266b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685604001516001600160a01b0316148061250e575060408501516001600160a01b031630146101356113cb565b60408401516001600160a01b031630146126c6576126c18460600151847f0000000000000000000000000000000000000000000000000000000000000000815181106126b357fe5b60200260200101518461316e565b612607565b6126078460600151847f0000000000000000000000000000000000000000000000000000000000000000815181106126fa57fe5b6020026020010151857f00000000000000000000000000000000000000000000000000000000000000008151811061272e57fe5b6020026020010151612765877f000000000000000000000000000000000000000000000000000000000000000081518110610b1b57fe5b8661319e565b60006127c77f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685604001516001600160a01b0316148061250e575060408501516001600160a01b031630146101356113cb565b60408401516001600160a01b0316301461281d576126c18460600151847f00000000000000000000000000000000000000000000000000000000000000008151811061280f57fe5b602002602001015184613204565b6126078460600151847f00000000000000000000000000000000000000000000000000000000000000008151811061285157fe5b6020026020010151857f00000000000000000000000000000000000000000000000000000000000000008151811061288557fe5b60200260200101516128bc877f000000000000000000000000000000000000000000000000000000000000000081518110610b1b57fe5b86613244565b60006128d182151560046113cb565b826128de5750600061071a565b670de0b6b3a7640000838102906128f890858381611f2b57fe5b82818161290157fe5b0491505061071a565b600061298f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685602001516001600160a01b0316148061250e57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685602001516001600160a01b0316146101356113cb565b6126078460600151847f0000000000000000000000000000000000000000000000000000000000000000815181106129c357fe5b6020026020010151857f0000000000000000000000000000000000000000000000000000000000000000815181106129f757fe5b6020026020010151612a2e877f000000000000000000000000000000000000000000000000000000000000000081518110610b1b57fe5b867f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168a602001516001600160a01b031614612a74576132ab6125ff565b613302565b6000612ad57f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685602001516001600160a01b0316148061250e575060208501516001600160a01b031630146101356113cb565b60208401516001600160a01b03163014612b2b576126c18460600151847f000000000000000000000000000000000000000000000000000000000000000081518110612b1d57fe5b60200260200101518461336c565b6126078460600151847f000000000000000000000000000000000000000000000000000000000000000081518110612b5f57fe5b6020026020010151857f000000000000000000000000000000000000000000000000000000000000000081518110612b9357fe5b6020026020010151612bca877f000000000000000000000000000000000000000000000000000000000000000081518110610b1b57fe5b86613396565b6000612c2c7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031685602001516001600160a01b0316148061250e575060208501516001600160a01b031630146101356113cb565b60208401516001600160a01b03163014612c82576126c18460600151847f000000000000000000000000000000000000000000000000000000000000000081518110612c7457fe5b6020026020010151846133e5565b6126078460600151847f000000000000000000000000000000000000000000000000000000000000000081518110612cb657fe5b6020026020010151857f000000000000000000000000000000000000000000000000000000000000000081518110612cea57fe5b6020026020010151612d21877f000000000000000000000000000000000000000000000000000000000000000081518110610b1b57fe5b8661341a565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b612d46610e3c565b6001600160a01b031614158015612d615750612d618361346e565b15612d8957612d6e610e3c565b6001600160a01b0316336001600160a01b031614905061071a565b612d91612069565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b8152600401612dc093929190613e97565b60206040518083038186803b158015612dd857600080fd5b505afa158015612dec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112539190613a10565b6000612e1f84841115836113cb565b5050900390565b4690565b612e3d64e8d4a5100082101560cb6113cb565b612e5367016345785d8a000082111560ca6113cb565b600854612e62908260c0611380565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90611826908390613e8e565b60008180602001905181019061071a9190613b61565b6113ec612eb6611831565b156101af6113cb565b600060606000612ece84613491565b90506000612f398683612f13897f000000000000000000000000000000000000000000000000000000000000000081518110612f0657fe5b60200260200101516122c7565b7f00000000000000000000000000000000000000000000000000000000000000006134a7565b9196919550909350505050565b612f5d6001600160a01b038316151561019b6113cb565b612f698260008361084c565b6001600160a01b038216600090815260208190526040902054612f8f90826101a1612e10565b6001600160a01b038316600090815260208190526040902055600254612fb59082613563565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612ff6908590613e8e565b60405180910390a35050565b600854613011908260006113b0565b60085550565b6130236000838361084c565b6002546130309082611b44565b6002556001600160a01b0382166000908152602081905260409020546130569082611b44565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612ff6908590613e8e565b6000806130b28684611e7c565b905060006130c08287611edd565b905060006130ce868a611396565b905060006130e9846122d56130e38587613571565b8a61358b565b90506130f58882611396565b9450505050505b95945050505050565b6000806131128684611e7c565b905060006131208287611edd565b90506000613137613131838b613571565b876135be565b905060006131458483611396565b9050600061315382886135de565b905061315f8a82611396565b9b9a5050505050505050505050565b60008061317b8484611e7c565b9050600061319261318c8688611b44565b85611e7c565b9050611b218183611396565b6000826131b6576131af8683611e7c565b90506130fc565b60006131c28684611e7c565b905060006131d361318c888a611b44565b905060006131e18284611396565b905060006131ef8489611edd565b90506130f56131fe8884613571565b826135be565b6000806132118484611e7c565b9050600061321f8287611396565b9050600061322d82866135de565b90506132398682611396565b979650505050505050565b6000826132525750846130fc565b600061325e8684611e7c565b9050600061326c8287611edd565b9050600061327a878a611b44565b905060006132888483611edd565b9050600061329f6132998984613571565b856135be565b905061315f8189611396565b6000826132b95750846130fc565b60006132c58684611e7c565b905060006132d38287611edd565b905060006132e1868a611b44565b905060006132f6846122d56130e38587613571565b90506130f58189611396565b600082613313576131af86836135de565b600061331f8684611e7c565b9050600061332d8287611edd565b9050600061334461333e838b613571565b8761358b565b905060006133528483611b44565b9050600061336082886135de565b905061315f818b611396565b6000806133798484611e7c565b9050600061338a61318c8688611396565b9050611b218282611396565b6000806133a38684611e7c565b905060006133b461318c888a611396565b905060006133c28383611396565b905060006133d08489611edd565b90506130f56133df8884613571565b8261358b565b6000806133f28484611e7c565b905060006134008287611b44565b9050600061340e82866135de565b90506132398187611396565b6000806134278684611e7c565b905060006134358287611edd565b90506000613443878a611396565b905060006134518483611edd565b905060006134626132998984613571565b905061315f8882611396565b6000613480634f88840760e11b610dc4565b82148061071a575061071a8261366e565b6000818060200190518101906108059190613b7b565b606060006134b585856128c2565b90506000865167ffffffffffffffff811180156134d157600080fd5b506040519080825280602002602001820160405280156134fb578160200160208202803683370190505b50905060005b875181101561355857848114613550576135378389838151811061352157fe5b602002602001015161245a90919063ffffffff16565b82828151811061354357fe5b6020026020010181815250505b600101613501565b509695505050505050565b600061080583836001612e10565b600082820261080584158061247757508385838161247457fe5b600061359a82151560046113cb565b826135a75750600061071a565b8160018403816135b357fe5b04600101905061071a565b60006135cd82151560046113cb565b8183816135d657fe5b049392505050565b600081602001518310156136275781516112539061360590670de0b6b3a764000090611b44565b602084015184516136219161361a919061245a565b8690611b44565b906128c2565b8160400151831161363957508161071a565b81516112539061365290670de0b6b3a764000090611396565b6040840151845161362191613667919061245a565b8690611396565b6000613680631c74c91760e11b610dc4565b82148061071a57506136986350dd6ed960e01b610dc4565b909114919050565b8035610b54816140ab565b600082601f8301126136bb578081fd5b813560206136d06136cb8361408d565b614069565b82815281810190858301838502870184018810156136ec578586fd5b855b8581101561370a578135845292840192908401906001016136ee565b5090979650505050505050565b600082601f830112613727578081fd5b815160206137376136cb8361408d565b8281528181019085830183850287018401881015613753578586fd5b855b8581101561370a57815184529284019290840190600101613755565b600082601f830112613781578081fd5b813567ffffffffffffffff81111561379557fe5b6137a8601f8201601f1916602001614069565b8181528460208386010111156137bc578283fd5b816020850160208301379081016020019190915292915050565b805160018110610b5457600080fd5b803560028110610b5457600080fd5b600060208284031215613805578081fd5b8135610805816140ab565b60008060408385031215613822578081fd5b823561382d816140ab565b9150602083013561383d816140ab565b809150509250929050565b60008060006060848603121561385c578081fd5b8335613867816140ab565b92506020840135613877816140ab565b929592945050506040919091013590565b600080600080600080600060e0888a0312156138a2578485fd5b87356138ad816140ab565b965060208801356138bd816140ab565b95506040880135945060608801359350608088013560ff811681146138e0578384fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561390f578182fd5b823561391a816140ab565b946020939093013593505050565b60008060006060848603121561393c578081fd5b835167ffffffffffffffff80821115613953578283fd5b818601915086601f830112613966578283fd5b815160206139766136cb8361408d565b82815281810190858301838502870184018c1015613992578788fd5b8796505b848710156139bd5780516139a9816140ab565b835260019690960195918301918301613996565b50918901519197509093505050808211156139d6578283fd5b506139e386828701613717565b925050604084015190509250925092565b600060208284031215613a05578081fd5b8135610805816140c0565b600060208284031215613a21578081fd5b8151610805816140c0565b600080600080600080600060e0888a031215613a46578081fd5b873596506020880135613a58816140ab565b95506040880135613a68816140ab565b9450606088013567ffffffffffffffff80821115613a84578283fd5b613a908b838c016136ab565b955060808a0135945060a08a0135935060c08a0135915080821115613ab3578283fd5b50613ac08a828b01613771565b91505092959891949750929550565b600060208284031215613ae0578081fd5b81356001600160e01b031981168114610805578182fd5b600060208284031215613b08578081fd5b8151610805816140ab565b60008060408385031215613b25578182fd5b8235613b30816140ab565b9150602083013567ffffffffffffffff811115613b4b578182fd5b613b5785828601613771565b9150509250929050565b600060208284031215613b72578081fd5b610805826137d6565b60008060408385031215613b8d578182fd5b613b96836137d6565b9150602083015190509250929050565b60008060008060808587031215613bbb578182fd5b843567ffffffffffffffff80821115613bd2578384fd5b818701915061012080838a031215613be8578485fd5b613bf181614069565b9050613bfc836137e5565b8152613c0a602084016136a0565b6020820152613c1b604084016136a0565b6040820152606083013560608201526080830135608082015260a083013560a0820152613c4a60c084016136a0565b60c0820152613c5b60e084016136a0565b60e08201526101008084013583811115613c73578687fd5b613c7f8b828701613771565b828401525050809650506020870135915080821115613c9c578384fd5b50613ca9878288016136ab565b949794965050505060408301359260600135919050565b600060208284031215613cd1578081fd5b5035919050565b600060208284031215613ce9578081fd5b5051919050565b60008060408385031215613d02578182fd5b50508035926020909101359150565b60008060008060808587031215613d26578182fd5b8451935060208501519250604085015191506060850151613d46816140ab565b939692955090935050565b6000815180845260208085019450808401835b83811015613d8057815187529582019590820190600101613d64565b509495945050505050565b15159052565b60008151808452815b81811015613db657602081850181015186830182015201613d9a565b81811115613dc75782602083870101525b50601f01601f19169290920160200192915050565b9182526001600160e01b031916602082015260240190565b6000828483379101908152919050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6000602082526108056020830184613d51565b600060408252613e596040830185613d51565b82810360208401526130fc8185613d51565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9283526001600160a01b03918216602084015216604082015260600190565b6000858252602060018060a01b0380871682850152808616604085015260806060850152610100840185516080808701528181518084526101208801915085830193508692505b80831015613f1f57835185168252928501926001929092019190850190613efd565b50848801519450607f199350838782030160a0880152613f3f8186613d51565b94505050506040850151818584030160c0860152613f5d8382613d91565b92505050606084015161355860e0850182613d8b565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b6000838252604060208301526126076040830184613d91565b9182526001600160a01b0316602082015260400190565b93845260ff9290921660208401526040830152606082015260800190565b6000602082526108056020830184613d91565b6000838252604060208301526126076040830184613d51565b918252602082015260400190565b60ff91909116815260200190565b60405181810167ffffffffffffffff8111828210171561408557fe5b604052919050565b600067ffffffffffffffff8211156140a157fe5b5060209081020190565b6001600160a01b038116811461075557600080fd5b801515811461075557600080fdfea264697066735822122090e6623bd7b682a9cca68462828092df92cac19f6081ff634d7ff9c0b88ad51564736f6c63430007060033","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x5B10 CODESIZE SUB DUP1 PUSH3 0x5B10 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0x1E6 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH3 0x48 SWAP1 PUSH3 0x1D8 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 DUP3 SUB DUP2 ADD DUP4 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD AND PUSH1 0x40 MSTORE DUP1 MLOAD DUP4 SWAP1 DUP3 SWAP1 PUSH1 0x0 PUSH1 0x2 DUP3 DIV PUSH1 0xA0 DUP2 SWAP1 MSTORE DUP1 DUP4 SUB PUSH1 0xE0 DUP2 SWAP1 MSTORE DUP2 DUP6 MSTORE SWAP1 SWAP2 POP DUP4 PUSH3 0x92 DUP2 PUSH3 0x11C PUSH1 0x20 SWAP1 DUP2 SHL PUSH3 0x2F9 OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE DUP3 DUP6 ADD DUP1 MLOAD DUP4 DUP3 MSTORE PUSH3 0xC1 DUP3 PUSH3 0x11C PUSH1 0x20 SWAP1 DUP2 SHL PUSH3 0x2F9 OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x60 SWAP1 DUP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0xC0 MSTORE SWAP7 SWAP1 SWAP4 MSTORE SWAP1 MSTORE SWAP7 SWAP1 SWAP7 SHL SWAP1 SWAP2 AND PUSH2 0x100 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP PUSH3 0x76A700 TIMESTAMP ADD PUSH2 0x120 MSTORE POP PUSH3 0x23D JUMP JUMPDEST DUP1 MLOAD PUSH32 0x602038038060206000396000F3FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE DUP1 DUP4 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP2 ADD DUP5 DUP5 CREATE SWAP1 DUP5 MSTORE SWAP2 POP PUSH3 0x16A PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x1AC PUSH3 0x170 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH3 0x181 JUMPI PUSH3 0x181 DUP2 PUSH3 0x185 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x5076 DUP1 PUSH3 0xA9A DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1F9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x206 DUP2 PUSH3 0x224 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x219 DUP2 PUSH3 0x224 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x60 SHR PUSH2 0x120 MLOAD PUSH2 0x7FB PUSH3 0x29F PUSH1 0x0 CODECOPY DUP1 PUSH2 0x186 MSTORE DUP1 PUSH2 0x1AF MSTORE POP DUP1 PUSH2 0x2D7 MSTORE POP DUP1 PUSH2 0x353 MSTORE POP DUP1 PUSH2 0x15D MSTORE DUP1 PUSH2 0x3CF MSTORE POP DUP1 PUSH2 0x374 MSTORE POP DUP1 PUSH2 0x13C MSTORE DUP1 PUSH2 0x3AB MSTORE POP PUSH2 0x7FB PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6634B753 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6634B753 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x74DCC7A4 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x7FF52B01 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x113 JUMPI PUSH2 0x7C JUMP JUMPDEST DUP1 PUSH3 0xC194DB EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x174481FA EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x2DA47C40 EQ PUSH2 0xB5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x89 PUSH2 0x11B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x711 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP3 SWAP2 SWAP1 PUSH2 0x6EC JUMP JUMPDEST PUSH2 0xBD PUSH2 0x180 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP3 SWAP2 SWAP1 PUSH2 0x79F JUMP JUMPDEST PUSH2 0xDE PUSH2 0xD9 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x706 JUMP JUMPDEST PUSH2 0xFE PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0x208 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x2C6 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x135 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x34B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP PUSH32 0x0 DUP2 LT ISZERO PUSH2 0x1DC JUMPI DUP1 PUSH32 0x0 SUB SWAP3 POP PUSH3 0x278D00 SWAP2 POP PUSH2 0x1E5 JUMP JUMPDEST PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x215 PUSH2 0x180 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x263 PUSH2 0x226 PUSH2 0x2D5 JUMP JUMPDEST DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP11 DUP11 PUSH2 0x236 PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x24F SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x724 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x424 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8129FC1C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP3 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH32 0x602038038060206000396000F3FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE DUP1 DUP4 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP2 ADD DUP5 DUP5 CREATE SWAP1 DUP5 MSTORE SWAP2 POP PUSH2 0x345 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x1AC PUSH2 0x487 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH32 0x0 DUP2 DUP2 ADD DUP6 DUP2 ADD DUP5 DUP2 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 SWAP7 MSTORE DUP1 DUP6 MSTORE SWAP4 SWAP6 PUSH32 0x0 SWAP6 SWAP3 SWAP5 PUSH32 0x0 SWAP5 SWAP4 DUP9 ADD DUP7 PUSH1 0x0 DUP3 DUP11 EXTCODECOPY DUP5 PUSH1 0x0 DUP9 DUP4 ADD DUP9 EXTCODECOPY POP PUSH1 0x20 DUP10 DUP2 ADD SWAP1 DUP10 DUP6 ADD ADD PUSH2 0x416 DUP2 DUP4 DUP7 PUSH2 0x499 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x430 DUP4 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH32 0x83A48FBCFC991335314E74D0496AAB6A1987E992DDC85DDDBCC4D6DD6EF2E9FC SWAP2 SWAP1 LOG2 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH2 0x495 JUMPI PUSH2 0x495 DUP2 PUSH2 0x511 JUMP JUMPDEST POP POP JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x4B9 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1F NOT ADD PUSH2 0x49A JUMP JUMPDEST SWAP1 MLOAD DUP3 MLOAD PUSH1 0x20 SWAP3 SWAP1 SWAP3 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP2 AND OR SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4E3 DUP4 PUSH2 0x34B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH1 0x0 CREATE SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x50A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x574 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x589 JUMPI INVALID JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD DUP3 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x5A7 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP5 DUP4 ADD PUSH1 0x20 ADD DUP7 LT ISZERO PUSH2 0x5BE JUMPI DUP4 DUP5 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP2 DUP3 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5EA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x50A DUP2 PUSH2 0x7AD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x60D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x624 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x630 DUP11 DUP4 DUP12 ADD PUSH2 0x564 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x645 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x652 DUP10 DUP3 DUP11 ADD PUSH2 0x564 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x663 DUP2 PUSH2 0x7AD JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x673 DUP2 PUSH2 0x7AD JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x696 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6C3 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x50A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x68D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP3 MSTORE PUSH2 0x140 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH2 0x74A DUP5 DUP4 ADD DUP15 PUSH2 0x68D JUMP JUMPDEST SWAP2 POP DUP4 DUP3 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x75E DUP3 DUP14 PUSH2 0x68D JUMP JUMPDEST SWAP11 DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE SWAP9 DUP10 AND PUSH1 0x80 DUP5 ADD MSTORE POP POP PUSH1 0xA0 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xE0 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE SWAP8 0xD SWAP14 0xEA 0xDD PUSH18 0x4A351F5FD25FFB213227866B09F43DE5AC3B DUP7 0x2F SWAP13 CREATE2 0xE4 0xD1 0xC9 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER PUSH2 0x2C0 PUSH1 0x40 MSTORE PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH2 0x120 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x5076 CODESIZE SUB DUP1 PUSH3 0x5076 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x5A SWAP2 PUSH3 0xBBE JUMP JUMPDEST DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH1 0x0 DUP11 DUP11 PUSH3 0x76 DUP12 DUP12 ADDRESS PUSH3 0x4E1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP DUP10 DUP10 DUP10 DUP10 DUP3 DUP3 DUP10 DUP10 DUP14 DUP3 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP6 DUP6 DUP11 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SHL DUP1 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x109 SWAP3 SWAP2 SWAP1 PUSH3 0xA2B JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x11F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xA2B JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x12 PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0xC0 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0xE0 MSTORE POP PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x100 MSTORE PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH2 0x140 MSTORE POP PUSH3 0x192 SWAP1 POP PUSH3 0x76A700 DUP4 GT ISZERO PUSH2 0x194 PUSH3 0x5B0 JUMP JUMPDEST PUSH3 0x1A6 PUSH3 0x278D00 DUP3 GT ISZERO PUSH2 0x195 PUSH3 0x5B0 JUMP JUMPDEST TIMESTAMP SWAP1 SWAP2 ADD PUSH2 0x160 DUP2 SWAP1 MSTORE ADD PUSH2 0x180 MSTORE DUP6 MLOAD PUSH3 0x1C8 SWAP1 PUSH1 0x2 GT ISZERO PUSH1 0xC8 PUSH3 0x5B0 JUMP JUMPDEST PUSH3 0x1E2 PUSH3 0x1D6 PUSH3 0x5C5 JUMP JUMPDEST DUP8 MLOAD GT ISZERO PUSH1 0xC9 PUSH3 0x5B0 JUMP JUMPDEST PUSH3 0x1F8 DUP7 PUSH3 0x5CA PUSH1 0x20 SHL PUSH3 0x1376 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x203 DUP5 PUSH3 0x5D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9B2760F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP1 PUSH4 0x9B2760F SWAP1 PUSH3 0x234 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH3 0xD56 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x264 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x28A SWAP2 SWAP1 PUSH3 0xBA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3354E3E9 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP1 PUSH4 0x66A9C7D2 SWAP1 PUSH3 0x2BF SWAP1 DUP5 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH3 0xCBC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH2 0x1A0 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP POP POP POP POP POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE POP POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x35B DUP11 DUP11 ADDRESS PUSH3 0x662 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x200 DUP2 SWAP1 MSTORE PUSH2 0x220 DUP4 SWAP1 MSTORE PUSH2 0x240 DUP3 SWAP1 MSTORE SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH3 0x37F DUP11 PUSH3 0x758 JUMP JUMPDEST PUSH2 0x260 MSTORE PUSH3 0x38E DUP10 PUSH3 0x758 JUMP JUMPDEST PUSH2 0x280 MSTORE PUSH1 0x0 PUSH3 0x3A1 DUP12 DUP3 DUP12 PUSH3 0x82C JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB4DCFC77 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x3FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x424 SWAP2 SWAP1 PUSH3 0xB7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE POP POP PUSH3 0x4D1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4800D97F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x494 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x4BA SWAP2 SWAP1 PUSH3 0xB7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 AND EQ PUSH2 0x208 PUSH3 0x5B0 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH3 0xD98 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP1 PUSH3 0x4F4 DUP8 DUP8 DUP8 PUSH3 0x662 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP4 SWAP7 POP SWAP2 SWAP5 POP SWAP3 POP PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP4 POP DUP7 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x52A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP6 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH3 0x558 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x586 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH3 0x5C1 JUMPI PUSH3 0x5C1 DUP2 PUSH3 0x8DA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 SWAP1 JUMP JUMPDEST DUP1 PUSH3 0x5C1 DUP2 PUSH3 0x92D JUMP JUMPDEST PUSH3 0x5EB PUSH5 0xE8D4A51000 DUP3 LT ISZERO PUSH1 0xCB PUSH3 0x5B0 JUMP JUMPDEST PUSH3 0x603 PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH1 0xCA PUSH3 0x5B0 JUMP JUMPDEST PUSH3 0x622 DUP2 PUSH1 0xC0 PUSH1 0x8 SLOAD PUSH3 0x9BA PUSH1 0x20 SHL PUSH3 0x1380 OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA9BA3FFE0B6C366B81232CAAB38605A0699AD5398D6CCE76F91EE809E322DAFC SWAP1 PUSH3 0x657 SWAP1 DUP4 SWAP1 PUSH3 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH3 0x6EB JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH3 0x6AE JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x1 SWAP1 POP PUSH1 0x2 PUSH3 0x74F JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH3 0x6DA JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 POP PUSH1 0x1 PUSH3 0x74F JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP PUSH1 0x2 SWAP1 POP PUSH1 0x0 PUSH3 0x74F JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH3 0x717 JUMPI POP PUSH1 0x2 SWAP2 POP PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH3 0x74F JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH3 0x743 JUMPI POP PUSH1 0x2 SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH1 0x1 PUSH3 0x74F JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ ISZERO PUSH3 0x77C JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH3 0x827 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x7CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x7F3 SWAP2 SWAP1 PUSH3 0xC99 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH3 0x812 PUSH1 0x12 DUP4 PUSH3 0x9CF PUSH1 0x20 SHL PUSH3 0x1396 OR PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA EXP PUSH8 0xDE0B6B3A7640000 MUL SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x83D DUP2 DUP4 GT ISZERO PUSH2 0x14C PUSH3 0x5B0 JUMP JUMPDEST PUSH3 0x855 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 GT ISZERO PUSH2 0x14D PUSH3 0x5B0 JUMP JUMPDEST PUSH3 0x890 PUSH3 0x871 DUP3 PUSH1 0x60 PUSH3 0x9E7 PUSH1 0x20 SHL PUSH3 0x13AC OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x889 DUP5 PUSH1 0x0 PUSH3 0x9E7 PUSH1 0x20 SHL PUSH3 0x13AC OR PUSH1 0x20 SHR JUMP JUMPDEST OR PUSH3 0x9EB JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD0E27A0D0C2CB09280FA5E4487315455B32AFCDCF012DC35B6EF2A0E3C4D1280 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH3 0x8CD SWAP3 SWAP2 SWAP1 PUSH3 0xD74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 MLOAD LT ISZERO PUSH3 0x93E JUMPI PUSH3 0x9B7 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH3 0x94E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH3 0x9B4 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x978 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH3 0x9A9 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH1 0x65 PUSH3 0x5B0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH3 0x95F JUMP JUMPDEST POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9E1 DUP4 DUP4 GT ISZERO PUSH1 0x1 PUSH3 0x5B0 JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST PUSH3 0xA0A DUP2 PUSH1 0x0 PUSH1 0x8 SLOAD PUSH3 0xA10 PUSH1 0x20 SHL PUSH3 0x13B0 OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x8 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP3 DUP2 AND DUP3 SHL SWAP1 DUP3 SHL NOT DUP5 AND OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA63 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xAAE JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xA7E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xAAE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xAAE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xAAE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xA91 JUMP JUMPDEST POP PUSH3 0xABC SWAP3 SWAP2 POP PUSH3 0xAC0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xABC JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xAC1 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x827 DUP2 PUSH3 0xD82 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xAF5 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xB0A JUMPI INVALID JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND DUP3 ADD DUP2 ADD DUP4 DUP2 GT DUP4 DUP3 LT OR ISZERO PUSH3 0xB2A JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP3 MSTORE DUP6 DUP5 ADD DUP2 ADD DUP8 LT ISZERO PUSH3 0xB41 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH3 0xB64 JUMPI DUP6 DUP4 ADD DUP2 ADD MLOAD DUP3 DUP5 ADD DUP3 ADD MSTORE SWAP2 DUP3 ADD SWAP2 PUSH3 0xB45 JUMP JUMPDEST DUP4 DUP4 GT ISZERO PUSH3 0xB75 JUMPI DUP5 DUP2 DUP6 DUP5 ADD ADD MSTORE JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xB91 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH3 0xB9E DUP2 PUSH3 0xD82 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xBB7 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH3 0xBDE JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH3 0xBE9 DUP12 PUSH3 0xAD7 JUMP JUMPDEST PUSH1 0x20 DUP13 ADD MLOAD SWAP1 SWAP11 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xC06 JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH3 0xC14 DUP15 DUP4 DUP16 ADD PUSH3 0xAE4 JUMP JUMPDEST SWAP11 POP PUSH1 0x40 DUP14 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0xC2A JUMPI DUP8 DUP9 REVERT JUMPDEST POP PUSH3 0xC39 DUP14 DUP3 DUP15 ADD PUSH3 0xAE4 JUMP JUMPDEST SWAP9 POP POP PUSH3 0xC4A PUSH1 0x60 DUP13 ADD PUSH3 0xAD7 JUMP JUMPDEST SWAP7 POP PUSH3 0xC5A PUSH1 0x80 DUP13 ADD PUSH3 0xAD7 JUMP JUMPDEST SWAP6 POP PUSH1 0xA0 DUP12 ADD MLOAD SWAP5 POP PUSH1 0xC0 DUP12 ADD MLOAD SWAP4 POP PUSH1 0xE0 DUP12 ADD MLOAD SWAP3 POP PUSH2 0x100 DUP12 ADD MLOAD SWAP2 POP PUSH3 0xC88 PUSH2 0x120 DUP13 ADD PUSH3 0xAD7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xCAB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0xB9E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP6 DUP4 MSTORE PUSH1 0x20 PUSH1 0x60 DUP2 DUP6 ADD MSTORE DUP2 DUP7 MLOAD DUP1 DUP5 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 POP DUP3 DUP9 ADD SWAP4 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xD07 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH3 0xCE0 JUMP JUMPDEST POP POP DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE SWAP1 DUP3 ADD SWAP3 POP DUP2 DUP7 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xD48 JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH3 0xD21 JUMP JUMPDEST POP SWAP3 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH3 0xD65 JUMPI INVALID JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x9B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH1 0x60 SHR PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD PUSH1 0x60 SHR PUSH2 0x1E0 MLOAD PUSH1 0x60 SHR PUSH2 0x200 MLOAD PUSH2 0x220 MLOAD PUSH2 0x240 MLOAD PUSH2 0x260 MLOAD PUSH2 0x280 MLOAD PUSH2 0x2A0 MLOAD PUSH1 0x60 SHR PUSH2 0x4104 PUSH3 0xF72 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x22E0 MSTORE POP DUP1 PUSH2 0x147A MSTORE POP DUP1 PUSH2 0x1416 MSTORE DUP1 PUSH2 0x222C MSTORE POP DUP1 PUSH2 0x722 MSTORE DUP1 PUSH2 0xAB1 MSTORE DUP1 PUSH2 0x14A2 MSTORE DUP1 PUSH2 0x2555 MSTORE DUP1 PUSH2 0x2705 MSTORE DUP1 PUSH2 0x285C MSTORE DUP1 PUSH2 0x29CE MSTORE DUP1 PUSH2 0x2B6A MSTORE DUP1 PUSH2 0x2CC1 MSTORE POP DUP1 PUSH2 0x8B2 MSTORE DUP1 PUSH2 0xA77 MSTORE DUP1 PUSH2 0x1438 MSTORE DUP1 PUSH2 0x1AB5 MSTORE DUP1 PUSH2 0x2521 MSTORE DUP1 PUSH2 0x268A MSTORE DUP1 PUSH2 0x26D1 MSTORE DUP1 PUSH2 0x27E6 MSTORE DUP1 PUSH2 0x2828 MSTORE DUP1 PUSH2 0x299A MSTORE DUP1 PUSH2 0x2AF4 MSTORE DUP1 PUSH2 0x2B36 MSTORE DUP1 PUSH2 0x2C4B MSTORE DUP1 PUSH2 0x2C8D MSTORE POP DUP1 PUSH2 0xAF2 MSTORE DUP1 PUSH2 0xCBB MSTORE DUP1 PUSH2 0xDA2 MSTORE DUP1 PUSH2 0x12F7 MSTORE DUP1 PUSH2 0x14E3 MSTORE DUP1 PUSH2 0x2171 MSTORE DUP1 PUSH2 0x258C MSTORE DUP1 PUSH2 0x273C MSTORE DUP1 PUSH2 0x2893 MSTORE DUP1 PUSH2 0x2A05 MSTORE DUP1 PUSH2 0x2BA1 MSTORE DUP1 PUSH2 0x2CF8 MSTORE DUP1 PUSH2 0x2EDD MSTORE DUP1 PUSH2 0x2F15 MSTORE POP DUP1 PUSH2 0x134A MSTORE DUP1 PUSH2 0x15FE MSTORE DUP1 PUSH2 0x16CA MSTORE DUP1 PUSH2 0x2252 MSTORE DUP1 PUSH2 0x24D6 MSTORE DUP1 PUSH2 0x2616 MSTORE DUP1 PUSH2 0x2950 MSTORE DUP1 PUSH2 0x2A80 MSTORE POP DUP1 PUSH2 0x8D6 MSTORE DUP1 PUSH2 0xF23 MSTORE DUP1 PUSH2 0x15B5 MSTORE DUP1 PUSH2 0x1681 MSTORE DUP1 PUSH2 0x1AEB MSTORE DUP1 PUSH2 0x21F1 MSTORE DUP1 PUSH2 0x2497 MSTORE DUP1 PUSH2 0x25B8 MSTORE DUP1 PUSH2 0x2772 MSTORE DUP1 PUSH2 0x2911 MSTORE DUP1 PUSH2 0x2A31 MSTORE DUP1 PUSH2 0x2BD7 MSTORE POP DUP1 PUSH2 0x853 MSTORE POP DUP1 PUSH2 0x1874 MSTORE POP DUP1 PUSH2 0x1850 MSTORE POP DUP1 PUSH2 0xE62 MSTORE POP DUP1 PUSH2 0xFD9 MSTORE POP DUP1 PUSH2 0x197A MSTORE POP DUP1 PUSH2 0x19BC MSTORE POP DUP1 PUSH2 0x199B MSTORE POP DUP1 PUSH2 0xE3E MSTORE POP DUP1 PUSH2 0xDC8 MSTORE POP PUSH2 0x4104 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x253 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x679AEFCE GT PUSH2 0x146 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xD5C096C4 EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xDE82CD34 EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0xF174E241 EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0xF5431AA8 EQ PUSH2 0x4FB JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0x9F11080E EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0xAAABADC5 EQ PUSH2 0x4AA JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x82687A56 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x82687A56 EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0x851C1BB3 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0x87EC6817 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x461 JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x74F3B009 EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x423 JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x4DE046D5 GT PUSH2 0x198 JUMPI DUP1 PUSH4 0x4DE046D5 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x50DD6ED9 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x55C67628 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x6028BFD4 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x63FE3B56 EQ PUSH2 0x3BE JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x38E9922E EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x4D64CD74 EQ PUSH2 0x365 JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x21B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x1C0DE051 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x1DD746EA EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x31A JUMPI PUSH2 0x253 JUMP JUMPDEST DUP1 PUSH4 0x1EC954A EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x16B8D6FF EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x2BE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26B PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x3BA6 JUMP JUMPDEST PUSH2 0x503 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH2 0x673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x4021 JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x38FD JUMP JUMPDEST PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x3E6B JUMP JUMPDEST PUSH2 0x26B PUSH2 0x720 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x39F4 JUMP JUMPDEST PUSH2 0x744 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26B PUSH2 0x758 JUMP JUMPDEST PUSH2 0x2E3 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E76 JUMP JUMPDEST PUSH2 0x2FA PUSH2 0x787 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x3E33 JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x3848 JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH2 0x322 PUSH2 0x80C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x405B JUMP JUMPDEST PUSH2 0x26B PUSH2 0x815 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CC0 JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH2 0x26B PUSH2 0x851 JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x360 CALLDATASIZE PUSH1 0x4 PUSH2 0x38FD JUMP JUMPDEST PUSH2 0x875 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x8B0 JUMP JUMPDEST PUSH2 0x375 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x3E1F JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0x3B13 JUMP JUMPDEST PUSH2 0x8F8 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x916 JUMP JUMPDEST PUSH2 0x3B0 PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2C JUMP JUMPDEST PUSH2 0x927 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP3 SWAP2 SWAP1 PUSH2 0x4034 JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP3 SWAP2 SWAP1 PUSH2 0x404D JUMP JUMPDEST PUSH2 0x26B PUSH2 0x98C JUMP JUMPDEST PUSH2 0x26B PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x37F4 JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x402 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2C JUMP JUMPDEST PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP3 SWAP2 SWAP1 PUSH2 0x3E46 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x37F4 JUMP JUMPDEST PUSH2 0xBD7 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0xBF2 JUMP JUMPDEST PUSH2 0x26B PUSH2 0xDA0 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x441 CALLDATASIZE PUSH1 0x4 PUSH2 0x3ACF JUMP JUMPDEST PUSH2 0xDC4 JUMP JUMPDEST PUSH2 0x3B0 PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2C JUMP JUMPDEST PUSH2 0xE16 JUMP JUMPDEST PUSH2 0x375 PUSH2 0xE3C JUMP JUMPDEST PUSH2 0x375 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x289 PUSH2 0xE84 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x47F CALLDATASIZE PUSH1 0x4 PUSH2 0x3CF0 JUMP JUMPDEST PUSH2 0xEE5 JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x38FD JUMP JUMPDEST PUSH2 0xF4F JUMP JUMPDEST PUSH2 0x2A9 PUSH2 0x4A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x38FD JUMP JUMPDEST PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x375 PUSH2 0xF9A JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x4C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3888 JUMP JUMPDEST PUSH2 0xFA4 JUMP JUMPDEST PUSH2 0x402 PUSH2 0x4D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A2C JUMP JUMPDEST PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x26B PUSH2 0x4E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3810 JUMP JUMPDEST PUSH2 0x121D JUMP JUMPDEST PUSH2 0x26B PUSH2 0x125A JUMP JUMPDEST PUSH2 0x375 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x136C JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x530 PUSH2 0x515 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH1 0xCD PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x545 PUSH2 0x53B PUSH2 0x851 JUMP JUMPDEST DUP3 EQ PUSH2 0x1F4 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x54D PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0x567 PUSH1 0x3 DUP6 LT DUP1 ISZERO PUSH2 0x560 JUMPI POP PUSH1 0x3 DUP5 LT JUMPDEST PUSH1 0x64 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x571 PUSH2 0x13EE JUMP JUMPDEST SWAP1 POP PUSH2 0x57D DUP7 DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x588 PUSH2 0x95E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x5A1 PUSH2 0x916 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 ADD DUP4 SWAP1 MSTORE SWAP1 POP PUSH1 0x0 DUP11 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5C1 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x625 JUMPI PUSH2 0x5E8 DUP11 PUSH1 0x60 ADD MLOAD DUP6 DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x5DB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x157D JUMP JUMPDEST PUSH1 0x60 DUP12 ADD MSTORE PUSH1 0x0 PUSH2 0x5FA DUP12 DUP12 DUP5 PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP PUSH2 0x619 DUP2 DUP7 DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x60C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1650 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP PUSH2 0x66A JUMP JUMPDEST PUSH2 0x639 DUP11 PUSH1 0x60 ADD MLOAD DUP6 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x5DB JUMPI INVALID JUMPDEST PUSH1 0x60 DUP12 ADD MSTORE PUSH1 0x0 PUSH2 0x64B DUP12 DUP12 DUP5 PUSH2 0x165C JUMP JUMPDEST SWAP1 POP PUSH2 0x619 DUP2 DUP7 DUP12 DUP2 MLOAD DUP2 LT PUSH2 0x65D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1711 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x6FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x716 CALLER DUP5 DUP5 PUSH2 0x171D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x74C PUSH2 0x1785 JUMP JUMPDEST PUSH2 0x755 DUP2 PUSH2 0x17B3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x76B PUSH2 0x1831 JUMP JUMPDEST ISZERO SWAP3 POP PUSH2 0x776 PUSH2 0x184E JUMP JUMPDEST SWAP2 POP PUSH2 0x780 PUSH2 0x1872 JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x791 PUSH2 0x13EE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7A3 DUP6 CALLER PUSH2 0x121D JUMP JUMPDEST SWAP1 POP PUSH2 0x7C7 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ DUP1 PUSH2 0x7BF JUMPI POP DUP4 DUP3 LT ISZERO JUMPDEST PUSH2 0x19E PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x7D2 DUP6 DUP6 DUP6 PUSH2 0x1896 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x7ED JUMPI POP PUSH1 0x0 NOT DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x7FF JUMPI PUSH2 0x7FF DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x171D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x791 PUSH2 0x1976 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x82A PUSH2 0x95E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x843 PUSH2 0x83B DUP4 DUP4 PUSH2 0x1A13 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x84C DUP4 PUSH2 0x1B2B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x716 SWAP2 DUP6 SWAP1 PUSH2 0x8AB SWAP1 DUP7 PUSH2 0x1B44 JUMP JUMPDEST PUSH2 0x171D JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x900 PUSH2 0x1785 JUMP JUMPDEST PUSH2 0x908 PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0x912 DUP3 DUP3 PUSH2 0x1B56 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x791 SWAP1 PUSH1 0xC0 PUSH2 0x1C1D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x93D DUP7 MLOAD PUSH2 0x938 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0x1C30 JUMP JUMPDEST PUSH2 0x952 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1C3D PUSH2 0x1CE1 PUSH2 0x1D42 JUMP JUMPDEST SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x96B PUSH2 0x1E64 JUMP JUMPDEST SWAP1 POP PUSH2 0x978 DUP2 PUSH1 0x0 PUSH2 0x1E6A JUMP JUMPDEST SWAP3 POP PUSH2 0x985 DUP2 PUSH1 0x60 PUSH2 0x1E6A JUMP JUMPDEST SWAP2 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x997 PUSH2 0x851 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9A3 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CE SWAP2 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xA22 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3928 JUMP JUMPDEST POP SWAP2 POP POP PUSH2 0xA37 DUP2 PUSH2 0xA32 PUSH2 0x13EE JUMP JUMPDEST PUSH2 0x151C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA42 PUSH2 0x95E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0xA5B PUSH2 0x916 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0xAE7 PUSH2 0xAAE DUP7 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAA0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x1E7C JUMP JUMPDEST DUP7 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xADA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH2 0xB2F PUSH2 0xB28 DUP7 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1EE9 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0xB68 PUSH2 0x515 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0xB73 PUSH2 0x53B PUSH2 0x851 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7D PUSH2 0x13EE JUMP JUMPDEST SWAP1 POP PUSH2 0xB89 DUP9 DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xB9E DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP11 DUP16 PUSH2 0x1C3D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xBAE DUP14 DUP5 PUSH2 0x1F4C JUMP JUMPDEST PUSH2 0xBB8 DUP3 DUP6 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0xBC2 DUP2 DUP6 PUSH2 0x1CE1 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP POP JUMPDEST POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFC PUSH2 0x851 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC08 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC33 SWAP2 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xC87 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3928 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCE4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0xD06 DUP6 PUSH2 0x1F56 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP PUSH2 0xD37 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB95CAC28 DUP6 ADDRESS ADDRESS DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD68 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3EB6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDF9 SWAP3 SWAP2 SWAP1 PUSH2 0x3DDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0xE27 DUP7 MLOAD PUSH2 0x938 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0x952 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x1F59 PUSH2 0x1F77 PUSH2 0x1D42 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x6FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FF JUMP JUMPDEST PUSH2 0xEED PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xEF8 PUSH2 0x95E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xF09 PUSH2 0x83B DUP4 DUP4 PUSH2 0x1A13 JUMP JUMPDEST PUSH2 0xF1E PUSH2 0xF16 DUP6 DUP6 PUSH2 0x1A13 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0xF49 PUSH32 0x0 DUP6 DUP6 PUSH2 0x1FD8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF5C CALLER DUP6 PUSH2 0x121D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT PUSH2 0xF76 JUMPI PUSH2 0xF71 CALLER DUP6 PUSH1 0x0 PUSH2 0x171D JUMP JUMPDEST PUSH2 0xF83 JUMP JUMPDEST PUSH2 0xF83 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x171D JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x716 CALLER DUP5 DUP5 PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x791 PUSH2 0x2069 JUMP JUMPDEST PUSH2 0xFB2 DUP5 TIMESTAMP GT ISZERO PUSH1 0xD1 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH2 0x1009 SWAP2 PUSH32 0x0 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP9 SWAP2 DUP14 SWAP2 ADD PUSH2 0x3F73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x102C DUP3 PUSH2 0x20E3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1053 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4003 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1075 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP PUSH2 0x10B7 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x10AF JUMPI POP DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1F8 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP6 ADD SWAP1 SSTORE PUSH2 0x10E0 DUP12 DUP12 DUP12 PUSH2 0x171D JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP9 PUSH2 0x10FC PUSH2 0x515 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x1107 PUSH2 0x53B PUSH2 0x851 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1111 PUSH2 0x13EE JUMP JUMPDEST SWAP1 POP PUSH2 0x111B PUSH2 0x758 JUMP JUMPDEST PUSH2 0x11CD JUMPI PUSH1 0x0 DUP1 PUSH2 0x112F DUP14 DUP14 DUP14 DUP7 DUP12 PUSH2 0x20FF JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1148 PUSH2 0x113E PUSH2 0x21B3 JUMP JUMPDEST DUP4 LT ISZERO PUSH1 0xCC PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x115A PUSH1 0x0 PUSH2 0x1155 PUSH2 0x21B3 JUMP JUMPDEST PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x116D DUP12 PUSH2 0x1166 PUSH2 0x21B3 JUMP JUMPDEST DUP5 SUB PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x1177 DUP2 DUP5 PUSH2 0x1F77 JUMP JUMPDEST DUP1 PUSH2 0x1180 PUSH2 0x1C2B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11C0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x11D7 DUP9 DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x11EC DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP11 DUP16 PUSH2 0x1F59 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x11FC DUP13 DUP5 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x1206 DUP3 DUP6 PUSH2 0x1F77 JUMP JUMPDEST PUSH2 0x1210 DUP2 DUP6 PUSH2 0x1CE1 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0xBCA SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1227 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1249 JUMPI POP PUSH1 0x0 NOT PUSH2 0x71A JUMP JUMPDEST PUSH2 0x1253 DUP4 DUP4 PUSH2 0x21C2 JUMP JUMPDEST SWAP1 POP PUSH2 0x71A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1265 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 PUSH2 0x127B PUSH2 0x851 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1297 SWAP2 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x12EB SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3928 JUMP JUMPDEST POP SWAP2 POP POP PUSH1 0x0 PUSH2 0x1336 DUP3 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1320 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1331 ADDRESS PUSH2 0x21ED JUMP JUMPDEST PUSH2 0x157D JUMP JUMPDEST SWAP1 POP PUSH2 0x1341 DUP2 PUSH2 0x22C7 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x791 PUSH2 0x22DB JUMP JUMPDEST DUP1 PUSH2 0x912 DUP2 PUSH2 0x238E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 SHL NOT SWAP3 SWAP1 SWAP3 AND SWAP2 SHL OR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A6 DUP4 DUP4 GT ISZERO PUSH1 0x1 PUSH2 0x13CB JUMP JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST SHL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP3 DUP2 AND DUP3 SHL SWAP1 DUP3 SHL NOT DUP5 AND OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x912 JUMPI PUSH2 0x912 DUP2 PUSH2 0x2407 JUMP JUMPDEST PUSH2 0x13EC PUSH2 0x13E4 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x13CB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP5 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH32 0x0 DUP2 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1461 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x149F PUSH2 0x1478 PUSH2 0x22DB JUMP JUMPDEST PUSH32 0x0 SWAP1 PUSH2 0x245A JUMP JUMPDEST DUP2 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x14CB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x150C JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x1527 PUSH2 0x1C2B JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x84C JUMPI PUSH2 0x155E DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x153D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1551 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x245A JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x156A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x151F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x805 DUP4 DUP4 PUSH2 0x245A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x15B3 JUMPI PUSH2 0x15AC DUP5 DUP5 DUP5 PUSH2 0x2490 JUMP JUMPDEST SWAP1 POP PUSH2 0x805 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x15FC JUMPI PUSH2 0x15AC DUP5 DUP5 DUP5 PUSH2 0x260F JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1645 JUMPI PUSH2 0x15AC DUP5 DUP5 DUP5 PUSH2 0x276B JUMP JUMPDEST PUSH2 0x805 PUSH2 0x135 PUSH2 0x2407 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x805 DUP4 DUP4 PUSH2 0x28C2 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ ISZERO PUSH2 0x167F JUMPI PUSH2 0x15AC DUP5 DUP5 DUP5 PUSH2 0x290A JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x16C8 JUMPI PUSH2 0x15AC DUP5 DUP5 DUP5 PUSH2 0x2A79 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1645 JUMPI PUSH2 0x15AC DUP5 DUP5 DUP5 PUSH2 0x2BD0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x805 DUP4 DUP4 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x1778 SWAP1 DUP6 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179C PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0xDC4 JUMP JUMPDEST SWAP1 POP PUSH2 0x755 PUSH2 0x17AB DUP3 CALLER PUSH2 0x2D27 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x13CB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17D3 JUMPI PUSH2 0x17CE PUSH2 0x17C4 PUSH2 0x184E JUMP JUMPDEST TIMESTAMP LT PUSH2 0x193 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x17E8 JUMP JUMPDEST PUSH2 0x17E8 PUSH2 0x17DE PUSH2 0x1872 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1A9 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x9E3A5E37224532DEA67B89FACE185703738A228A6E8A23DEE546960180D3BE64 SWAP1 PUSH2 0x1826 SWAP1 DUP4 SWAP1 PUSH2 0x3E6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x183B PUSH2 0x1872 JUMP JUMPDEST TIMESTAMP GT DUP1 PUSH2 0x791 JUMPI POP POP PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x18AD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x18C4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x18CF DUP4 DUP4 DUP4 PUSH2 0x84C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x18F5 SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x2E10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1924 SWAP1 DUP3 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x1778 SWAP1 DUP6 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x19E3 PUSH2 0x2E26 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x19F8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A1E PUSH2 0x851 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A2A PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF94D4668 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A55 SWAP2 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1AA9 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3928 JUMP JUMPDEST POP SWAP2 POP POP PUSH1 0x0 PUSH2 0x1B0F DUP3 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1ADE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1331 PUSH32 0x0 PUSH2 0x21ED JUMP JUMPDEST SWAP1 POP DUP6 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x1B21 JUMPI POP DUP5 DUP2 GT ISZERO JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B33 PUSH2 0x1785 JUMP JUMPDEST PUSH2 0x1B3B PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0x755 DUP2 PUSH2 0x2E2A JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x805 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B60 PUSH2 0x851 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B6C PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB05F8E48 DUP4 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B99 SWAP3 SWAP2 SWAP1 PUSH2 0x3FEC JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BE9 SWAP2 SWAP1 PUSH2 0x3D11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x639CDB5 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP4 POP PUSH4 0x18E736D4 SWAP3 POP PUSH2 0xD68 SWAP2 POP DUP6 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3FD3 JUMP JUMPDEST SHR PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SWAP1 JUMP JUMPDEST PUSH2 0x912 DUP2 DUP4 EQ PUSH1 0x67 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x1C4D DUP6 PUSH2 0x2E95 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP1 ISZERO PUSH2 0x1C5A JUMPI INVALID JUMPDEST EQ PUSH2 0x1C6F JUMPI PUSH2 0x1C6A PUSH2 0x14E PUSH2 0x2407 JUMP JUMPDEST PUSH2 0x1CD2 JUMP JUMPDEST PUSH2 0x1C77 PUSH2 0x2EAB JUMP JUMPDEST PUSH2 0x1C81 DUP10 DUP7 PUSH2 0x2EBF JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x1C8E PUSH2 0x1C2B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1CA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1CCE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP JUMPDEST POP SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x1CEC PUSH2 0x1C2B JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x84C JUMPI PUSH2 0x1D23 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1D02 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1D16 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x28C2 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1D2F JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1CE4 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x1E00 JUMPI PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x1D66 SWAP3 SWAP2 SWAP1 PUSH2 0x3DF4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DA3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DA8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DB7 JUMPI INVALID JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43ADBAFB PUSH1 0xE0 SHL DUP2 EQ PUSH2 0x1DE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x4 PUSH1 0x0 RETURNDATACOPY PUSH1 0x40 PUSH1 0x20 MSTORE PUSH1 0x24 RETURNDATASIZE SUB PUSH1 0x24 PUSH1 0x40 RETURNDATACOPY PUSH1 0x1C RETURNDATASIZE ADD PUSH1 0x0 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x1E0A PUSH2 0x13EE JUMP JUMPDEST SWAP1 POP PUSH2 0x1E16 DUP8 DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E2D DUP13 DUP13 DUP13 DUP13 DUP13 DUP13 DUP10 DUP14 DUP14 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1E40 DUP2 DUP5 DUP7 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1F NOT DUP3 ADD DUP4 SWAP1 MSTORE PUSH4 0x43ADBAFB PUSH1 0x3F NOT DUP4 ADD MSTORE PUSH1 0x20 MUL PUSH1 0x23 NOT DUP3 ADD PUSH1 0x44 DUP3 ADD DUP2 REVERT JUMPDEST PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SHR PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD DUP4 LT ISZERO PUSH2 0x1EB5 JUMPI DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x0 SWAP2 PUSH2 0x1EA1 SWAP2 DUP7 SWAP1 SUB SWAP1 PUSH2 0x245A JUMP JUMPDEST SWAP1 POP PUSH2 0x1EAD DUP5 DUP3 PUSH2 0x1396 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x71A JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD DUP4 GT PUSH2 0x1EC7 JUMPI POP DUP2 PUSH2 0x71A JUMP JUMPDEST DUP2 MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x0 SWAP2 PUSH2 0x1EA1 SWAP2 DUP7 SUB SWAP1 PUSH2 0x245A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x805 DUP4 DUP4 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F04 DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x13CB JUMP JUMPDEST DUP3 PUSH2 0x1F11 JUMPI POP PUSH1 0x0 PUSH2 0x71A JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 PUSH2 0x1F34 SWAP1 DUP6 DUP4 DUP2 PUSH2 0x1F2B JUMPI INVALID JUMPDEST DIV EQ PUSH1 0x5 PUSH2 0x13CB JUMP JUMPDEST DUP3 PUSH1 0x1 DUP3 SUB DUP2 PUSH2 0x1F40 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x71A JUMP JUMPDEST PUSH2 0x912 DUP3 DUP3 PUSH2 0x2F46 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH2 0x1F69 PUSH2 0x14E PUSH2 0x2407 JUMP JUMPDEST SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x1F82 PUSH2 0x1C2B JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x84C JUMPI PUSH2 0x1FB9 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F98 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FAC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1EF5 JUMP JUMPDEST DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1FC5 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1F7A JUMP JUMPDEST PUSH2 0x1FE7 DUP2 DUP4 GT ISZERO PUSH2 0x14C PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2002 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14D PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2021 PUSH2 0x2010 DUP3 PUSH1 0x60 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x201B DUP5 PUSH1 0x0 PUSH2 0x13AC JUMP JUMPDEST OR PUSH2 0x3002 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD0E27A0D0C2CB09280FA5E4487315455B32AFCDCF012DC35B6EF2A0E3C4D1280 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x205C SWAP3 SWAP2 SWAP1 PUSH2 0x404D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2073 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAAABADC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x791 SWAP2 SWAP1 PUSH2 0x3AF7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20ED PUSH2 0x1976 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDF9 SWAP3 SWAP2 SWAP1 PUSH2 0x3E04 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x210B PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0x2122 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ADDRESS EQ PUSH2 0x156 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2139 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ADDRESS EQ PUSH2 0x156 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x219A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x912 DUP3 DUP3 PUSH2 0x3017 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2250 JUMPI POP PUSH32 0x0 PUSH2 0xB54 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x229C JUMPI PUSH2 0x2295 PUSH2 0x1478 PUSH2 0x22DB JUMP JUMPDEST SWAP1 POP PUSH2 0xB54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ ISZERO PUSH2 0x22BC JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH2 0xB54 JUMP JUMPDEST PUSH2 0xB54 PUSH2 0x135 PUSH2 0x2407 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71A DUP3 PUSH2 0x22D5 PUSH2 0x758 JUMP JUMPDEST SWAP1 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD15E0053 PUSH2 0x2315 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2331 SWAP2 SWAP1 PUSH2 0x3E1F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x235D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2381 SWAP2 SWAP1 PUSH2 0x3CD8 JUMP JUMPDEST PUSH4 0x3B9ACA00 SWAP1 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD LT ISZERO PUSH2 0x239D JUMPI PUSH2 0x755 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x23AC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x23D4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x23FD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH1 0x65 PUSH2 0x13CB JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x23BD JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x247E DUP5 ISZERO DUP1 PUSH2 0x2477 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x2474 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH1 0x3 PUSH2 0x13CB JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP1 DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2516 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x250E JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x135 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2607 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x254A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x257E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x25B5 DUP8 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST DUP7 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x25FB JUMPI PUSH2 0x30A5 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x3105 JUMPDEST PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x266B PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x250E JUMPI POP PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x135 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x26C6 JUMPI PUSH2 0x26C1 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x26B3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x316E JUMP JUMPDEST PUSH2 0x2607 JUMP JUMPDEST PUSH2 0x2607 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x26FA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x272E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2765 DUP8 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST DUP7 PUSH2 0x319E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27C7 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x250E JUMPI POP PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x135 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x281D JUMPI PUSH2 0x26C1 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x280F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x3204 JUMP JUMPDEST PUSH2 0x2607 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2851 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2885 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x28BC DUP8 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST DUP7 PUSH2 0x3244 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D1 DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x13CB JUMP JUMPDEST DUP3 PUSH2 0x28DE JUMPI POP PUSH1 0x0 PUSH2 0x71A JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP4 DUP2 MUL SWAP1 PUSH2 0x28F8 SWAP1 DUP6 DUP4 DUP2 PUSH2 0x1F2B JUMPI INVALID JUMPDEST DUP3 DUP2 DUP2 PUSH2 0x2901 JUMPI INVALID JUMPDEST DIV SWAP2 POP POP PUSH2 0x71A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x298F PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x250E JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x135 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2607 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x29C3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x29F7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2A2E DUP8 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST DUP7 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2A74 JUMPI PUSH2 0x32AB PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x3302 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD5 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x250E JUMPI POP PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x135 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x2B2B JUMPI PUSH2 0x26C1 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2B1D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x336C JUMP JUMPDEST PUSH2 0x2607 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2B5F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2B93 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2BCA DUP8 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST DUP7 PUSH2 0x3396 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C2C PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x250E JUMPI POP PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x135 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ PUSH2 0x2C82 JUMPI PUSH2 0x26C1 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2C74 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x33E5 JUMP JUMPDEST PUSH2 0x2607 DUP5 PUSH1 0x60 ADD MLOAD DUP5 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2CB6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2CEA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2D21 DUP8 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xB1B JUMPI INVALID JUMPDEST DUP7 PUSH2 0x341A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xBA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1BA1B PUSH2 0x2D46 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x2D61 JUMPI POP PUSH2 0x2D61 DUP4 PUSH2 0x346E JUMP JUMPDEST ISZERO PUSH2 0x2D89 JUMPI PUSH2 0x2D6E PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP PUSH2 0x71A JUMP JUMPDEST PUSH2 0x2D91 PUSH2 0x2069 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9BE2A884 DUP5 DUP5 ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DC0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1253 SWAP2 SWAP1 PUSH2 0x3A10 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E1F DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x13CB JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST PUSH2 0x2E3D PUSH5 0xE8D4A51000 DUP3 LT ISZERO PUSH1 0xCB PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2E53 PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH1 0xCA PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x2E62 SWAP1 DUP3 PUSH1 0xC0 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA9BA3FFE0B6C366B81232CAAB38605A0699AD5398D6CCE76F91EE809E322DAFC SWAP1 PUSH2 0x1826 SWAP1 DUP4 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x3B61 JUMP JUMPDEST PUSH2 0x13EC PUSH2 0x2EB6 PUSH2 0x1831 JUMP JUMPDEST ISZERO PUSH2 0x1AF PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x2ECE DUP5 PUSH2 0x3491 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F39 DUP7 DUP4 PUSH2 0x2F13 DUP10 PUSH32 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2F06 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x22C7 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x34A7 JUMP JUMPDEST SWAP2 SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2F5D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x19B PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x2F69 DUP3 PUSH1 0x0 DUP4 PUSH2 0x84C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2F8F SWAP1 DUP3 PUSH2 0x1A1 PUSH2 0x2E10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x2FB5 SWAP1 DUP3 PUSH2 0x3563 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x2FF6 SWAP1 DUP6 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x3011 SWAP1 DUP3 PUSH1 0x0 PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0x8 SSTORE POP JUMP JUMPDEST PUSH2 0x3023 PUSH1 0x0 DUP4 DUP4 PUSH2 0x84C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x3030 SWAP1 DUP3 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3056 SWAP1 DUP3 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x2FF6 SWAP1 DUP6 SWAP1 PUSH2 0x3E8E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x30B2 DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30C0 DUP3 DUP8 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30CE DUP7 DUP11 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30E9 DUP5 PUSH2 0x22D5 PUSH2 0x30E3 DUP6 DUP8 PUSH2 0x3571 JUMP JUMPDEST DUP11 PUSH2 0x358B JUMP JUMPDEST SWAP1 POP PUSH2 0x30F5 DUP9 DUP3 PUSH2 0x1396 JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3112 DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3120 DUP3 DUP8 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3137 PUSH2 0x3131 DUP4 DUP12 PUSH2 0x3571 JUMP JUMPDEST DUP8 PUSH2 0x35BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3145 DUP5 DUP4 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3153 DUP3 DUP9 PUSH2 0x35DE JUMP JUMPDEST SWAP1 POP PUSH2 0x315F DUP11 DUP3 PUSH2 0x1396 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x317B DUP5 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3192 PUSH2 0x318C DUP7 DUP9 PUSH2 0x1B44 JUMP JUMPDEST DUP6 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH2 0x1B21 DUP2 DUP4 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x31B6 JUMPI PUSH2 0x31AF DUP7 DUP4 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH2 0x30FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C2 DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x31D3 PUSH2 0x318C DUP9 DUP11 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x31E1 DUP3 DUP5 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x31EF DUP5 DUP10 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH2 0x30F5 PUSH2 0x31FE DUP9 DUP5 PUSH2 0x3571 JUMP JUMPDEST DUP3 PUSH2 0x35BE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3211 DUP5 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x321F DUP3 DUP8 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x322D DUP3 DUP7 PUSH2 0x35DE JUMP JUMPDEST SWAP1 POP PUSH2 0x3239 DUP7 DUP3 PUSH2 0x1396 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3252 JUMPI POP DUP5 PUSH2 0x30FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x325E DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x326C DUP3 DUP8 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x327A DUP8 DUP11 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3288 DUP5 DUP4 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x329F PUSH2 0x3299 DUP10 DUP5 PUSH2 0x3571 JUMP JUMPDEST DUP6 PUSH2 0x35BE JUMP JUMPDEST SWAP1 POP PUSH2 0x315F DUP2 DUP10 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x32B9 JUMPI POP DUP5 PUSH2 0x30FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32C5 DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x32D3 DUP3 DUP8 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x32E1 DUP7 DUP11 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x32F6 DUP5 PUSH2 0x22D5 PUSH2 0x30E3 DUP6 DUP8 PUSH2 0x3571 JUMP JUMPDEST SWAP1 POP PUSH2 0x30F5 DUP2 DUP10 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3313 JUMPI PUSH2 0x31AF DUP7 DUP4 PUSH2 0x35DE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x331F DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x332D DUP3 DUP8 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3344 PUSH2 0x333E DUP4 DUP12 PUSH2 0x3571 JUMP JUMPDEST DUP8 PUSH2 0x358B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3352 DUP5 DUP4 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3360 DUP3 DUP9 PUSH2 0x35DE JUMP JUMPDEST SWAP1 POP PUSH2 0x315F DUP2 DUP12 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3379 DUP5 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x338A PUSH2 0x318C DUP7 DUP9 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B21 DUP3 DUP3 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x33A3 DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x33B4 PUSH2 0x318C DUP9 DUP11 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x33C2 DUP4 DUP4 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x33D0 DUP5 DUP10 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH2 0x30F5 PUSH2 0x33DF DUP9 DUP5 PUSH2 0x3571 JUMP JUMPDEST DUP3 PUSH2 0x358B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x33F2 DUP5 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3400 DUP3 DUP8 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x340E DUP3 DUP7 PUSH2 0x35DE JUMP JUMPDEST SWAP1 POP PUSH2 0x3239 DUP2 DUP8 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3427 DUP7 DUP5 PUSH2 0x1E7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3435 DUP3 DUP8 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3443 DUP8 DUP11 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3451 DUP5 DUP4 PUSH2 0x1EDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3462 PUSH2 0x3299 DUP10 DUP5 PUSH2 0x3571 JUMP JUMPDEST SWAP1 POP PUSH2 0x315F DUP9 DUP3 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3480 PUSH4 0x4F888407 PUSH1 0xE1 SHL PUSH2 0xDC4 JUMP JUMPDEST DUP3 EQ DUP1 PUSH2 0x71A JUMPI POP PUSH2 0x71A DUP3 PUSH2 0x366E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x805 SWAP2 SWAP1 PUSH2 0x3B7B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x34B5 DUP6 DUP6 PUSH2 0x28C2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x34D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x34FB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x3558 JUMPI DUP5 DUP2 EQ PUSH2 0x3550 JUMPI PUSH2 0x3537 DUP4 DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3521 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x245A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3543 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3501 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x805 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2E10 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MUL PUSH2 0x805 DUP5 ISZERO DUP1 PUSH2 0x2477 JUMPI POP DUP4 DUP6 DUP4 DUP2 PUSH2 0x2474 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH2 0x359A DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x13CB JUMP JUMPDEST DUP3 PUSH2 0x35A7 JUMPI POP PUSH1 0x0 PUSH2 0x71A JUMP JUMPDEST DUP2 PUSH1 0x1 DUP5 SUB DUP2 PUSH2 0x35B3 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 ADD SWAP1 POP PUSH2 0x71A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35CD DUP3 ISZERO ISZERO PUSH1 0x4 PUSH2 0x13CB JUMP JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x35D6 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD DUP4 LT ISZERO PUSH2 0x3627 JUMPI DUP2 MLOAD PUSH2 0x1253 SWAP1 PUSH2 0x3605 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD DUP5 MLOAD PUSH2 0x3621 SWAP2 PUSH2 0x361A SWAP2 SWAP1 PUSH2 0x245A JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 PUSH2 0x28C2 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD DUP4 GT PUSH2 0x3639 JUMPI POP DUP2 PUSH2 0x71A JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1253 SWAP1 PUSH2 0x3652 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD DUP5 MLOAD PUSH2 0x3621 SWAP2 PUSH2 0x3667 SWAP2 SWAP1 PUSH2 0x245A JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3680 PUSH4 0x1C74C917 PUSH1 0xE1 SHL PUSH2 0xDC4 JUMP JUMPDEST DUP3 EQ DUP1 PUSH2 0x71A JUMPI POP PUSH2 0x3698 PUSH4 0x50DD6ED9 PUSH1 0xE0 SHL PUSH2 0xDC4 JUMP JUMPDEST SWAP1 SWAP2 EQ SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xB54 DUP2 PUSH2 0x40AB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x36BB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x36D0 PUSH2 0x36CB DUP4 PUSH2 0x408D JUMP JUMPDEST PUSH2 0x4069 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x36EC JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x370A JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x36EE JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3727 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x3737 PUSH2 0x36CB DUP4 PUSH2 0x408D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x3753 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x370A JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3755 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3781 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3795 JUMPI INVALID JUMPDEST PUSH2 0x37A8 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x4069 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x37BC JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 DUP2 LT PUSH2 0xB54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0xB54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3805 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x805 DUP2 PUSH2 0x40AB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3822 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x382D DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x383D DUP2 PUSH2 0x40AB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x385C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3867 DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x3877 DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x38A2 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x38AD DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x38BD DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x38E0 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x390F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x391A DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x393C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3953 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3966 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x3976 PUSH2 0x36CB DUP4 PUSH2 0x408D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP13 LT ISZERO PUSH2 0x3992 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x39BD JUMPI DUP1 MLOAD PUSH2 0x39A9 DUP2 PUSH2 0x40AB JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x3996 JUMP JUMPDEST POP SWAP2 DUP10 ADD MLOAD SWAP2 SWAP8 POP SWAP1 SWAP4 POP POP POP DUP1 DUP3 GT ISZERO PUSH2 0x39D6 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x39E3 DUP7 DUP3 DUP8 ADD PUSH2 0x3717 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A05 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x805 DUP2 PUSH2 0x40C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A21 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x805 DUP2 PUSH2 0x40C0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3A46 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP8 CALLDATALOAD SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x3A58 DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x3A68 DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3A84 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3A90 DUP12 DUP4 DUP13 ADD PUSH2 0x36AB JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3AB3 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x3AC0 DUP11 DUP3 DUP12 ADD PUSH2 0x3771 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AE0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x805 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B08 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x805 DUP2 PUSH2 0x40AB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B25 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3B30 DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B4B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3B57 DUP6 DUP3 DUP7 ADD PUSH2 0x3771 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B72 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x805 DUP3 PUSH2 0x37D6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B8D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3B96 DUP4 PUSH2 0x37D6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3BBB JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3BD2 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP PUSH2 0x120 DUP1 DUP4 DUP11 SUB SLT ISZERO PUSH2 0x3BE8 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x3BF1 DUP2 PUSH2 0x4069 JUMP JUMPDEST SWAP1 POP PUSH2 0x3BFC DUP4 PUSH2 0x37E5 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x3C0A PUSH1 0x20 DUP5 ADD PUSH2 0x36A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3C1B PUSH1 0x40 DUP5 ADD PUSH2 0x36A0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x3C4A PUSH1 0xC0 DUP5 ADD PUSH2 0x36A0 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x3C5B PUSH1 0xE0 DUP5 ADD PUSH2 0x36A0 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD CALLDATALOAD DUP4 DUP2 GT ISZERO PUSH2 0x3C73 JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH2 0x3C7F DUP12 DUP3 DUP8 ADD PUSH2 0x3771 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP DUP1 SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3C9C JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x3CA9 DUP8 DUP3 DUP9 ADD PUSH2 0x36AB JUMP JUMPDEST SWAP5 SWAP8 SWAP5 SWAP7 POP POP POP POP PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x60 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CD1 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CE9 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D02 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3D26 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x3D46 DUP2 PUSH2 0x40AB JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3D80 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3D64 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3DB6 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x3D9A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3DC7 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x805 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D51 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x3E59 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3D51 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x30FC DUP2 DUP6 PUSH2 0x3D51 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP3 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP3 DUP6 ADD MSTORE DUP1 DUP7 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD DUP6 MLOAD PUSH1 0x80 DUP1 DUP8 ADD MSTORE DUP2 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x120 DUP9 ADD SWAP2 POP DUP6 DUP4 ADD SWAP4 POP DUP7 SWAP3 POP JUMPDEST DUP1 DUP4 LT ISZERO PUSH2 0x3F1F JUMPI DUP4 MLOAD DUP6 AND DUP3 MSTORE SWAP3 DUP6 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 PUSH2 0x3EFD JUMP JUMPDEST POP DUP5 DUP9 ADD MLOAD SWAP5 POP PUSH1 0x7F NOT SWAP4 POP DUP4 DUP8 DUP3 SUB ADD PUSH1 0xA0 DUP9 ADD MSTORE PUSH2 0x3F3F DUP2 DUP7 PUSH2 0x3D51 JUMP JUMPDEST SWAP5 POP POP POP POP PUSH1 0x40 DUP6 ADD MLOAD DUP2 DUP6 DUP5 SUB ADD PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x3F5D DUP4 DUP3 PUSH2 0x3D91 JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x3558 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x3D8B JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2607 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3D91 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x805 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D91 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2607 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3D51 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4085 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x40A1 JUMPI INVALID JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0xE6 PUSH3 0x3BD7B6 DUP3 0xA9 0xCC 0xA6 DUP5 PUSH3 0x828092 0xDF SWAP3 0xCA 0xC1 SWAP16 PUSH1 0x81 SELFDESTRUCT PUSH4 0x4D7FF9C0 0xB8 DUP11 0xD5 ISZERO PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"238086:1423:0:-:0;;;238176:203;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;238253:5;238260:33;;;;;;;;:::i;:::-;-1:-1:-1;;238260:33:0;;;;;;;;;;;;;;226699:19;;238295:16;;238260:33;;226672:24;227099:1;226699:19;227080:20;227111:38;;;;227190:36;;;227237:38;;;;227953:40;;;227080:20;;-1:-1:-1;227953:40:0;228134:34;227953:40;228134:19;;;;;;;:34;;:::i;:::-;228109:59;;-1:-1:-1;;;;;;228109:59:0;;;228719:36;;;228782:20;;228816:40;;;229047:34;228719:36;229047:19;;;;;;;:34;;:::i;:::-;229022:59;;;;-1:-1:-1;;;;;;229022:59:0;;;;;229240:39;;;;229293:32;;234883:14;;;;;;;::::1;::::0;-1:-1:-1;;234908:17:0::1;:36:::0;;-1:-1:-1;;;;;;234908:36:0::1;-1:-1:-1::0;;;;;234908:36:0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;236395:7:0;236718:15;:48;236691:75;;-1:-1:-1;238086:1423:0;;241437:1138;241688:11;;241207:66;241925:34;;;241490:19;;242232:2;242216:19;;241694:4;241490:19;242200:36;242339:24;;;242185:51;-1:-1:-1;242501:66:0;-1:-1:-1;;;;;242510:25:0;;;;115939:3;242501:8;:66::i;:::-;241437:1138;;;;:::o;106393:103::-;106463:9;106458:34;;106474:18;106482:9;106474:7;:18::i;:::-;106393:103;;:::o;106608:3223::-;-1:-1:-1;;;109161:3:0;109154:79;;;109374:66;109368:4;109361:80;109518:1;109512:4;109505:15;108564:73;107760:2;107795:18;;;107841;;;107765:4;107837:29;;;108605:1;108601:14;107745:18;;;;108590:26;;;;107891:18;;;;107939;;;107935:29;;;108622:2;108618:17;108586:50;;;;108564:73;108559:3;108555:83;109587:4;109580:26;109817:3;;109807:14;238086:1423;;;;;;;;:::o;14:414:1:-;;;169:2;157:9;148:7;144:23;140:32;137:2;;;190:6;182;175:22;137:2;227:9;221:16;246:33;273:5;246:33;:::i;:::-;348:2;333:18;;327:25;298:5;;-1:-1:-1;361:35:1;327:25;361:35;:::i;:::-;415:7;405:17;;;127:301;;;;;:::o;433:133::-;-1:-1:-1;;;;;510:31:1;;500:42;;490:2;;556:1;553;546:12;490:2;480:86;:::o;:::-;238086:1423:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5363:1","statements":[{"nodeType":"YulBlock","src":"6:3:1","statements":[]},{"body":{"nodeType":"YulBlock","src":"69:640:1","statements":[{"body":{"nodeType":"YulBlock","src":"118:24:1","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"127:5:1"},{"name":"array","nodeType":"YulIdentifier","src":"134:5:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:1"},"nodeType":"YulFunctionCall","src":"120:20:1"},"nodeType":"YulExpressionStatement","src":"120:20:1"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"97:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"105:4:1","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"93:3:1"},"nodeType":"YulFunctionCall","src":"93:17:1"},{"name":"end","nodeType":"YulIdentifier","src":"112:3:1"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"89:3:1"},"nodeType":"YulFunctionCall","src":"89:27:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"82:6:1"},"nodeType":"YulFunctionCall","src":"82:35:1"},"nodeType":"YulIf","src":"79:2:1"},{"nodeType":"YulVariableDeclaration","src":"151:30:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"174:6:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"161:12:1"},"nodeType":"YulFunctionCall","src":"161:20:1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"155:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"190:28:1","value":{"kind":"number","nodeType":"YulLiteral","src":"200:18:1","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"194:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"241:13:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"243:7:1"},"nodeType":"YulFunctionCall","src":"243:9:1"},"nodeType":"YulExpressionStatement","src":"243:9:1"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"233:2:1"},{"name":"_2","nodeType":"YulIdentifier","src":"237:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"230:2:1"},"nodeType":"YulFunctionCall","src":"230:10:1"},"nodeType":"YulIf","src":"227:2:1"},{"nodeType":"YulVariableDeclaration","src":"263:23:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"283:2:1","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"277:5:1"},"nodeType":"YulFunctionCall","src":"277:9:1"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"267:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"295:69:1","value":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"321:6:1"},{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"337:2:1"},{"kind":"number","nodeType":"YulLiteral","src":"341:4:1","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"333:3:1"},"nodeType":"YulFunctionCall","src":"333:13:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"352:2:1","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"348:3:1"},"nodeType":"YulFunctionCall","src":"348:7:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"329:3:1"},"nodeType":"YulFunctionCall","src":"329:27:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"317:3:1"},"nodeType":"YulFunctionCall","src":"317:40:1"},{"kind":"number","nodeType":"YulLiteral","src":"359:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"313:3:1"},"nodeType":"YulFunctionCall","src":"313:51:1"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"299:10:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"423:13:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"425:7:1"},"nodeType":"YulFunctionCall","src":"425:9:1"},"nodeType":"YulExpressionStatement","src":"425:9:1"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"382:10:1"},{"name":"_2","nodeType":"YulIdentifier","src":"394:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"379:2:1"},"nodeType":"YulFunctionCall","src":"379:18:1"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"402:10:1"},{"name":"memPtr","nodeType":"YulIdentifier","src":"414:6:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"399:2:1"},"nodeType":"YulFunctionCall","src":"399:22:1"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"376:2:1"},"nodeType":"YulFunctionCall","src":"376:46:1"},"nodeType":"YulIf","src":"373:2:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"452:2:1","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"456:10:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"445:6:1"},"nodeType":"YulFunctionCall","src":"445:22:1"},"nodeType":"YulExpressionStatement","src":"445:22:1"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"483:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"491:2:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"476:6:1"},"nodeType":"YulFunctionCall","src":"476:18:1"},"nodeType":"YulExpressionStatement","src":"476:18:1"},{"body":{"nodeType":"YulBlock","src":"542:24:1","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"551:5:1"},{"name":"array","nodeType":"YulIdentifier","src":"558:5:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"544:6:1"},"nodeType":"YulFunctionCall","src":"544:20:1"},"nodeType":"YulExpressionStatement","src":"544:20:1"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"517:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"525:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"513:3:1"},"nodeType":"YulFunctionCall","src":"513:15:1"},{"kind":"number","nodeType":"YulLiteral","src":"530:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"509:3:1"},"nodeType":"YulFunctionCall","src":"509:26:1"},{"name":"end","nodeType":"YulIdentifier","src":"537:3:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"506:2:1"},"nodeType":"YulFunctionCall","src":"506:35:1"},"nodeType":"YulIf","src":"503:2:1"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"592:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"600:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"588:3:1"},"nodeType":"YulFunctionCall","src":"588:17:1"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"611:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"619:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"607:3:1"},"nodeType":"YulFunctionCall","src":"607:17:1"},{"name":"_1","nodeType":"YulIdentifier","src":"626:2:1"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"575:12:1"},"nodeType":"YulFunctionCall","src":"575:54:1"},"nodeType":"YulExpressionStatement","src":"575:54:1"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"653:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"661:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"649:3:1"},"nodeType":"YulFunctionCall","src":"649:15:1"},{"kind":"number","nodeType":"YulLiteral","src":"666:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"645:3:1"},"nodeType":"YulFunctionCall","src":"645:26:1"},{"name":"array","nodeType":"YulIdentifier","src":"673:5:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"638:6:1"},"nodeType":"YulFunctionCall","src":"638:41:1"},"nodeType":"YulExpressionStatement","src":"638:41:1"},{"nodeType":"YulAssignment","src":"688:15:1","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"697:6:1"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"688:5:1"}]}]},"name":"abi_decode_t_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"43:6:1","type":""},{"name":"end","nodeType":"YulTypedName","src":"51:3:1","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"59:5:1","type":""}],"src":"14:695:1"},{"body":{"nodeType":"YulBlock","src":"784:189:1","statements":[{"body":{"nodeType":"YulBlock","src":"830:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"839:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"847:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"832:6:1"},"nodeType":"YulFunctionCall","src":"832:22:1"},"nodeType":"YulExpressionStatement","src":"832:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"805:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"814:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"801:3:1"},"nodeType":"YulFunctionCall","src":"801:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"826:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"797:3:1"},"nodeType":"YulFunctionCall","src":"797:32:1"},"nodeType":"YulIf","src":"794:2:1"},{"nodeType":"YulVariableDeclaration","src":"865:36:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"891:9:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"878:12:1"},"nodeType":"YulFunctionCall","src":"878:23:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"869:5:1","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"910:26:1"},"nodeType":"YulFunctionCall","src":"910:33:1"},"nodeType":"YulExpressionStatement","src":"910:33:1"},{"nodeType":"YulAssignment","src":"952:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"962:5:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"952:6:1"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"750:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"761:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"773:6:1","type":""}],"src":"714:259:1"},{"body":{"nodeType":"YulBlock","src":"1181:821:1","statements":[{"body":{"nodeType":"YulBlock","src":"1228:26:1","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1237:6:1"},{"name":"value4","nodeType":"YulIdentifier","src":"1245:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1230:6:1"},"nodeType":"YulFunctionCall","src":"1230:22:1"},"nodeType":"YulExpressionStatement","src":"1230:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1202:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"1211:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1198:3:1"},"nodeType":"YulFunctionCall","src":"1198:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"1223:3:1","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1194:3:1"},"nodeType":"YulFunctionCall","src":"1194:33:1"},"nodeType":"YulIf","src":"1191:2:1"},{"nodeType":"YulVariableDeclaration","src":"1263:37:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1290:9:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1277:12:1"},"nodeType":"YulFunctionCall","src":"1277:23:1"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1267:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1309:28:1","value":{"kind":"number","nodeType":"YulLiteral","src":"1319:18:1","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1313:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1364:26:1","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1373:6:1"},{"name":"value4","nodeType":"YulIdentifier","src":"1381:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1366:6:1"},"nodeType":"YulFunctionCall","src":"1366:22:1"},"nodeType":"YulExpressionStatement","src":"1366:22:1"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1352:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"1360:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1349:2:1"},"nodeType":"YulFunctionCall","src":"1349:14:1"},"nodeType":"YulIf","src":"1346:2:1"},{"nodeType":"YulAssignment","src":"1399:62:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1433:9:1"},{"name":"offset","nodeType":"YulIdentifier","src":"1444:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1429:3:1"},"nodeType":"YulFunctionCall","src":"1429:22:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1453:7:1"}],"functionName":{"name":"abi_decode_t_string","nodeType":"YulIdentifier","src":"1409:19:1"},"nodeType":"YulFunctionCall","src":"1409:52:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1399:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"1470:48:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1503:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1514:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1499:3:1"},"nodeType":"YulFunctionCall","src":"1499:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1486:12:1"},"nodeType":"YulFunctionCall","src":"1486:32:1"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1474:8:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1547:26:1","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1556:6:1"},{"name":"value4","nodeType":"YulIdentifier","src":"1564:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1549:6:1"},"nodeType":"YulFunctionCall","src":"1549:22:1"},"nodeType":"YulExpressionStatement","src":"1549:22:1"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1533:8:1"},{"name":"_1","nodeType":"YulIdentifier","src":"1543:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1530:2:1"},"nodeType":"YulFunctionCall","src":"1530:16:1"},"nodeType":"YulIf","src":"1527:2:1"},{"nodeType":"YulAssignment","src":"1582:64:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1616:9:1"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1627:8:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1612:3:1"},"nodeType":"YulFunctionCall","src":"1612:24:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1638:7:1"}],"functionName":{"name":"abi_decode_t_string","nodeType":"YulIdentifier","src":"1592:19:1"},"nodeType":"YulFunctionCall","src":"1592:54:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1582:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"1655:45:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:1"},"nodeType":"YulFunctionCall","src":"1681:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:1"},"nodeType":"YulFunctionCall","src":"1668:32:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1659:5:1","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1736:5:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1709:26:1"},"nodeType":"YulFunctionCall","src":"1709:33:1"},"nodeType":"YulExpressionStatement","src":"1709:33:1"},{"nodeType":"YulAssignment","src":"1751:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"1761:5:1"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1751:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"1775:47:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1807:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1818:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1803:3:1"},"nodeType":"YulFunctionCall","src":"1803:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1790:12:1"},"nodeType":"YulFunctionCall","src":"1790:32:1"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1779:7:1","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1858:7:1"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1831:26:1"},"nodeType":"YulFunctionCall","src":"1831:35:1"},"nodeType":"YulExpressionStatement","src":"1831:35:1"},{"nodeType":"YulAssignment","src":"1875:17:1","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1885:7:1"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1875:6:1"}]},{"nodeType":"YulAssignment","src":"1901:43:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1928:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1939:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1924:3:1"},"nodeType":"YulFunctionCall","src":"1924:19:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1911:12:1"},"nodeType":"YulFunctionCall","src":"1911:33:1"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1901:6:1"}]},{"nodeType":"YulAssignment","src":"1953:43:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1980:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1991:3:1","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1976:3:1"},"nodeType":"YulFunctionCall","src":"1976:19:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1963:12:1"},"nodeType":"YulFunctionCall","src":"1963:33:1"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1953:6:1"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_contract$_IERC20_$486t_contract$_IERC20_$486t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1107:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1118:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1130:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1138:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1146:6:1","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1154:6:1","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1162:6:1","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1170:6:1","type":""}],"src":"978:1024:1"},{"body":{"nodeType":"YulBlock","src":"2058:426:1","statements":[{"nodeType":"YulVariableDeclaration","src":"2068:26:1","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2088:5:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2082:5:1"},"nodeType":"YulFunctionCall","src":"2082:12:1"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2072:6:1","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2110:3:1"},{"name":"length","nodeType":"YulIdentifier","src":"2115:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2103:6:1"},"nodeType":"YulFunctionCall","src":"2103:19:1"},"nodeType":"YulExpressionStatement","src":"2103:19:1"},{"nodeType":"YulVariableDeclaration","src":"2131:12:1","value":{"name":"end","nodeType":"YulIdentifier","src":"2140:3:1"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2135:1:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"2204:110:1","statements":[{"nodeType":"YulVariableDeclaration","src":"2218:14:1","value":{"kind":"number","nodeType":"YulLiteral","src":"2228:4:1","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2222:2:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2260:3:1"},{"name":"i","nodeType":"YulIdentifier","src":"2265:1:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2256:3:1"},"nodeType":"YulFunctionCall","src":"2256:11:1"},{"name":"_1","nodeType":"YulIdentifier","src":"2269:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2252:3:1"},"nodeType":"YulFunctionCall","src":"2252:20:1"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2288:5:1"},{"name":"i","nodeType":"YulIdentifier","src":"2295:1:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2284:3:1"},"nodeType":"YulFunctionCall","src":"2284:13:1"},{"name":"_1","nodeType":"YulIdentifier","src":"2299:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2280:3:1"},"nodeType":"YulFunctionCall","src":"2280:22:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2274:5:1"},"nodeType":"YulFunctionCall","src":"2274:29:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2245:6:1"},"nodeType":"YulFunctionCall","src":"2245:59:1"},"nodeType":"YulExpressionStatement","src":"2245:59:1"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2163:1:1"},{"name":"length","nodeType":"YulIdentifier","src":"2166:6:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2160:2:1"},"nodeType":"YulFunctionCall","src":"2160:13:1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2174:21:1","statements":[{"nodeType":"YulAssignment","src":"2176:17:1","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2185:1:1"},{"kind":"number","nodeType":"YulLiteral","src":"2188:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2181:3:1"},"nodeType":"YulFunctionCall","src":"2181:12:1"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2176:1:1"}]}]},"pre":{"nodeType":"YulBlock","src":"2156:3:1","statements":[]},"src":"2152:162:1"},{"body":{"nodeType":"YulBlock","src":"2348:64:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2377:3:1"},{"name":"length","nodeType":"YulIdentifier","src":"2382:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2373:3:1"},"nodeType":"YulFunctionCall","src":"2373:16:1"},{"kind":"number","nodeType":"YulLiteral","src":"2391:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2369:3:1"},"nodeType":"YulFunctionCall","src":"2369:27:1"},{"name":"end","nodeType":"YulIdentifier","src":"2398:3:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2362:6:1"},"nodeType":"YulFunctionCall","src":"2362:40:1"},"nodeType":"YulExpressionStatement","src":"2362:40:1"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2329:1:1"},{"name":"length","nodeType":"YulIdentifier","src":"2332:6:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2326:2:1"},"nodeType":"YulFunctionCall","src":"2326:13:1"},"nodeType":"YulIf","src":"2323:2:1"},{"nodeType":"YulAssignment","src":"2421:57:1","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2436:3:1"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2449:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"2457:2:1","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2445:3:1"},"nodeType":"YulFunctionCall","src":"2445:15:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2466:2:1","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2462:3:1"},"nodeType":"YulFunctionCall","src":"2462:7:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2441:3:1"},"nodeType":"YulFunctionCall","src":"2441:29:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2432:3:1"},"nodeType":"YulFunctionCall","src":"2432:39:1"},{"kind":"number","nodeType":"YulLiteral","src":"2473:4:1","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2428:3:1"},"nodeType":"YulFunctionCall","src":"2428:50:1"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2421:3:1"}]}]},"name":"abi_encode_t_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2035:5:1","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2042:3:1","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2050:3:1","type":""}],"src":"2007:477:1"},{"body":{"nodeType":"YulBlock","src":"2590:102:1","statements":[{"nodeType":"YulAssignment","src":"2600:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2612:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2623:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2608:3:1"},"nodeType":"YulFunctionCall","src":"2608:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2600:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2642:9:1"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2657:6:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2673:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2678:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2669:3:1"},"nodeType":"YulFunctionCall","src":"2669:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"2682:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2665:3:1"},"nodeType":"YulFunctionCall","src":"2665:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2653:3:1"},"nodeType":"YulFunctionCall","src":"2653:32:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2635:6:1"},"nodeType":"YulFunctionCall","src":"2635:51:1"},"nodeType":"YulExpressionStatement","src":"2635:51:1"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2559:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2570:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2581:4:1","type":""}],"src":"2489:203:1"},{"body":{"nodeType":"YulBlock","src":"2826:175:1","statements":[{"nodeType":"YulAssignment","src":"2836:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2848:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2859:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2844:3:1"},"nodeType":"YulFunctionCall","src":"2844:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2836:4:1"}]},{"nodeType":"YulVariableDeclaration","src":"2871:29:1","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2889:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2894:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2885:3:1"},"nodeType":"YulFunctionCall","src":"2885:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"2898:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2881:3:1"},"nodeType":"YulFunctionCall","src":"2881:19:1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2875:2:1","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2916:9:1"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2931:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"2939:2:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2927:3:1"},"nodeType":"YulFunctionCall","src":"2927:15:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2909:6:1"},"nodeType":"YulFunctionCall","src":"2909:34:1"},"nodeType":"YulExpressionStatement","src":"2909:34:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2963:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2974:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2959:3:1"},"nodeType":"YulFunctionCall","src":"2959:18:1"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2983:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"2991:2:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2979:3:1"},"nodeType":"YulFunctionCall","src":"2979:15:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2952:6:1"},"nodeType":"YulFunctionCall","src":"2952:43:1"},"nodeType":"YulExpressionStatement","src":"2952:43:1"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2787:9:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2798:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2806:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2817:4:1","type":""}],"src":"2697:304:1"},{"body":{"nodeType":"YulBlock","src":"3101:92:1","statements":[{"nodeType":"YulAssignment","src":"3111:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3123:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3134:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3119:3:1"},"nodeType":"YulFunctionCall","src":"3119:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3111:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3153:9:1"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3178:6:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3171:6:1"},"nodeType":"YulFunctionCall","src":"3171:14:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3164:6:1"},"nodeType":"YulFunctionCall","src":"3164:22:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3146:6:1"},"nodeType":"YulFunctionCall","src":"3146:41:1"},"nodeType":"YulExpressionStatement","src":"3146:41:1"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3070:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3081:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3092:4:1","type":""}],"src":"3006:187:1"},{"body":{"nodeType":"YulBlock","src":"3317:100:1","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3334:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3345:2:1","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3327:6:1"},"nodeType":"YulFunctionCall","src":"3327:21:1"},"nodeType":"YulExpressionStatement","src":"3327:21:1"},{"nodeType":"YulAssignment","src":"3357:54:1","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3384:6:1"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3396:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3407:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3392:3:1"},"nodeType":"YulFunctionCall","src":"3392:18:1"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"3365:18:1"},"nodeType":"YulFunctionCall","src":"3365:46:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3357:4:1"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3286:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3297:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3308:4:1","type":""}],"src":"3198:219:1"},{"body":{"nodeType":"YulBlock","src":"3538:102:1","statements":[{"nodeType":"YulAssignment","src":"3548:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3560:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3571:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3556:3:1"},"nodeType":"YulFunctionCall","src":"3556:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3548:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3590:9:1"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3605:6:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3621:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3626:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3617:3:1"},"nodeType":"YulFunctionCall","src":"3617:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"3630:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3613:3:1"},"nodeType":"YulFunctionCall","src":"3613:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3601:3:1"},"nodeType":"YulFunctionCall","src":"3601:32:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3583:6:1"},"nodeType":"YulFunctionCall","src":"3583:51:1"},"nodeType":"YulExpressionStatement","src":"3583:51:1"}]},"name":"abi_encode_tuple_t_contract$_IVault_$9483__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3507:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3518:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3529:4:1","type":""}],"src":"3422:218:1"},{"body":{"nodeType":"YulBlock","src":"4081:662:1","statements":[{"nodeType":"YulVariableDeclaration","src":"4091:13:1","value":{"kind":"number","nodeType":"YulLiteral","src":"4101:3:1","type":"","value":"320"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4095:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4113:29:1","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4131:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4136:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4127:3:1"},"nodeType":"YulFunctionCall","src":"4127:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"4140:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4123:3:1"},"nodeType":"YulFunctionCall","src":"4123:19:1"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4117:2:1","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:1"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4173:6:1"},{"name":"_2","nodeType":"YulIdentifier","src":"4181:2:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4169:3:1"},"nodeType":"YulFunctionCall","src":"4169:15:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4151:6:1"},"nodeType":"YulFunctionCall","src":"4151:34:1"},"nodeType":"YulExpressionStatement","src":"4151:34:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4205:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4216:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4201:3:1"},"nodeType":"YulFunctionCall","src":"4201:18:1"},{"name":"_1","nodeType":"YulIdentifier","src":"4221:2:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4194:6:1"},"nodeType":"YulFunctionCall","src":"4194:30:1"},"nodeType":"YulExpressionStatement","src":"4194:30:1"},{"nodeType":"YulVariableDeclaration","src":"4233:60:1","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4266:6:1"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4278:9:1"},{"name":"_1","nodeType":"YulIdentifier","src":"4289:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4274:3:1"},"nodeType":"YulFunctionCall","src":"4274:18:1"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"4247:18:1"},"nodeType":"YulFunctionCall","src":"4247:46:1"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"4237:6:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4313:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4324:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4309:3:1"},"nodeType":"YulFunctionCall","src":"4309:18:1"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4333:6:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"4341:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4329:3:1"},"nodeType":"YulFunctionCall","src":"4329:22:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4302:6:1"},"nodeType":"YulFunctionCall","src":"4302:50:1"},"nodeType":"YulExpressionStatement","src":"4302:50:1"},{"nodeType":"YulAssignment","src":"4361:42:1","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4388:6:1"},{"name":"tail_1","nodeType":"YulIdentifier","src":"4396:6:1"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"4369:18:1"},"nodeType":"YulFunctionCall","src":"4369:34:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4361:4:1"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4423:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4434:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4419:3:1"},"nodeType":"YulFunctionCall","src":"4419:18:1"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"4443:6:1"},{"name":"_2","nodeType":"YulIdentifier","src":"4451:2:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4439:3:1"},"nodeType":"YulFunctionCall","src":"4439:15:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4412:6:1"},"nodeType":"YulFunctionCall","src":"4412:43:1"},"nodeType":"YulExpressionStatement","src":"4412:43:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4475:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4486:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4471:3:1"},"nodeType":"YulFunctionCall","src":"4471:19:1"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"4496:6:1"},{"name":"_2","nodeType":"YulIdentifier","src":"4504:2:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4492:3:1"},"nodeType":"YulFunctionCall","src":"4492:15:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4464:6:1"},"nodeType":"YulFunctionCall","src":"4464:44:1"},"nodeType":"YulExpressionStatement","src":"4464:44:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4528:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4539:3:1","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4524:3:1"},"nodeType":"YulFunctionCall","src":"4524:19:1"},{"name":"value5","nodeType":"YulIdentifier","src":"4545:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4517:6:1"},"nodeType":"YulFunctionCall","src":"4517:35:1"},"nodeType":"YulExpressionStatement","src":"4517:35:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4572:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4583:3:1","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4568:3:1"},"nodeType":"YulFunctionCall","src":"4568:19:1"},{"name":"value6","nodeType":"YulIdentifier","src":"4589:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4561:6:1"},"nodeType":"YulFunctionCall","src":"4561:35:1"},"nodeType":"YulExpressionStatement","src":"4561:35:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4616:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4627:3:1","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4612:3:1"},"nodeType":"YulFunctionCall","src":"4612:19:1"},{"name":"value7","nodeType":"YulIdentifier","src":"4633:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4605:6:1"},"nodeType":"YulFunctionCall","src":"4605:35:1"},"nodeType":"YulExpressionStatement","src":"4605:35:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4660:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4671:3:1","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:1"},"nodeType":"YulFunctionCall","src":"4656:19:1"},{"name":"value8","nodeType":"YulIdentifier","src":"4677:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4649:6:1"},"nodeType":"YulFunctionCall","src":"4649:35:1"},"nodeType":"YulExpressionStatement","src":"4649:35:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4704:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4715:3:1","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:1"},"nodeType":"YulFunctionCall","src":"4700:19:1"},{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"4725:6:1"},{"name":"_2","nodeType":"YulIdentifier","src":"4733:2:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4721:3:1"},"nodeType":"YulFunctionCall","src":"4721:15:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4693:6:1"},"nodeType":"YulFunctionCall","src":"4693:44:1"},"nodeType":"YulExpressionStatement","src":"4693:44:1"}]},"name":"abi_encode_tuple_t_contract$_IVault_$9483_t_string_memory_ptr_t_string_memory_ptr_t_contract$_IERC20_$486_t_contract$_IERC20_$486_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3978:9:1","type":""},{"name":"value9","nodeType":"YulTypedName","src":"3989:6:1","type":""},{"name":"value8","nodeType":"YulTypedName","src":"3997:6:1","type":""},{"name":"value7","nodeType":"YulTypedName","src":"4005:6:1","type":""},{"name":"value6","nodeType":"YulTypedName","src":"4013:6:1","type":""},{"name":"value5","nodeType":"YulTypedName","src":"4021:6:1","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4029:6:1","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4037:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4045:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4053:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4061:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4072:4:1","type":""}],"src":"3645:1098:1"},{"body":{"nodeType":"YulBlock","src":"4868:102:1","statements":[{"nodeType":"YulAssignment","src":"4878:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4890:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4901:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4886:3:1"},"nodeType":"YulFunctionCall","src":"4886:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4878:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:1"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4935:6:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4951:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4956:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4947:3:1"},"nodeType":"YulFunctionCall","src":"4947:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"4960:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4943:3:1"},"nodeType":"YulFunctionCall","src":"4943:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4931:3:1"},"nodeType":"YulFunctionCall","src":"4931:32:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4913:6:1"},"nodeType":"YulFunctionCall","src":"4913:51:1"},"nodeType":"YulExpressionStatement","src":"4913:51:1"}]},"name":"abi_encode_tuple_t_contract$_LinearPool_$4244__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4837:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4848:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4859:4:1","type":""}],"src":"4748:222:1"},{"body":{"nodeType":"YulBlock","src":"5104:119:1","statements":[{"nodeType":"YulAssignment","src":"5114:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5126:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5137:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5122:3:1"},"nodeType":"YulFunctionCall","src":"5122:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5114:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5156:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"5167:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5149:6:1"},"nodeType":"YulFunctionCall","src":"5149:25:1"},"nodeType":"YulExpressionStatement","src":"5149:25:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5194:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5205:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5190:3:1"},"nodeType":"YulFunctionCall","src":"5190:18:1"},{"name":"value1","nodeType":"YulIdentifier","src":"5210:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5183:6:1"},"nodeType":"YulFunctionCall","src":"5183:34:1"},"nodeType":"YulExpressionStatement","src":"5183:34:1"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5065:9:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5076:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5084:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5095:4:1","type":""}],"src":"4975:248:1"},{"body":{"nodeType":"YulBlock","src":"5275:86:1","statements":[{"body":{"nodeType":"YulBlock","src":"5339:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5348:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5351:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5341:6:1"},"nodeType":"YulFunctionCall","src":"5341:12:1"},"nodeType":"YulExpressionStatement","src":"5341:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5298:5:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5309:5:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5324:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5329:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5320:3:1"},"nodeType":"YulFunctionCall","src":"5320:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"5333:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5316:3:1"},"nodeType":"YulFunctionCall","src":"5316:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5305:3:1"},"nodeType":"YulFunctionCall","src":"5305:31:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5295:2:1"},"nodeType":"YulFunctionCall","src":"5295:42:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5288:6:1"},"nodeType":"YulFunctionCall","src":"5288:50:1"},"nodeType":"YulIf","src":"5285:2:1"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5264:5:1","type":""}],"src":"5228:133:1"}]},"contents":"{\n    { }\n    function abi_decode_t_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { invalid() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_1, 0x1f), not(31))), 0x20)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), array)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_contract$_IERC20_$486t_contract$_IERC20_$486t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        value0 := abi_decode_t_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value1 := abi_decode_t_string(add(headStart, offset_1), dataEnd)\n        let value := calldataload(add(headStart, 64))\n        validator_revert_t_address(value)\n        value2 := value\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_t_address(value_1)\n        value3 := value_1\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IVault_$9483__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IVault_$9483_t_string_memory_ptr_t_string_memory_ptr_t_contract$_IERC20_$486_t_contract$_IERC20_$486_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 320\n        let _2 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _2))\n        mstore(add(headStart, 32), _1)\n        let tail_1 := abi_encode_t_bytes(value1, add(headStart, _1))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_t_bytes(value2, tail_1)\n        mstore(add(headStart, 96), and(value3, _2))\n        mstore(add(headStart, 128), and(value4, _2))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), and(value9, _2))\n    }\n    function abi_encode_tuple_t_contract$_LinearPool_$4244__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":1,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"9746":[{"length":32,"start":316},{"length":32,"start":939}],"9748":[{"length":32,"start":884}],"9750":[{"length":32,"start":349},{"length":32,"start":975}],"9752":[{"length":32,"start":851}],"9967":[{"length":32,"start":727}],"10068":[{"length":32,"start":390},{"length":32,"start":431}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061007c5760003560e01c80636634b7531161005b5780636634b753146100cb57806374dcc7a4146100eb5780637ff52b011461010b5780638d928af8146101135761007c565b8062c194db14610081578063174481fa1461009f5780632da47c40146100b5575b600080fd5b61008961011b565b6040516100969190610711565b60405180910390f35b6100a761013a565b6040516100969291906106ec565b6100bd610180565b60405161009692919061079f565b6100de6100d93660046105d9565b6101ea565b6040516100969190610706565b6100fe6100f93660046105f5565b610208565b60405161009691906106d8565b6100fe6102c6565b6100fe6102d5565b60606101356040518060200160405280600081525061034b565b905090565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000009091565b600080427f00000000000000000000000000000000000000000000000000000000000000008110156101dc57807f000000000000000000000000000000000000000000000000000000000000000003925062278d0091506101e5565b60009250600091505b509091565b6001600160a01b031660009081526001602052604090205460ff1690565b6000806000610215610180565b9150915060006102636102266102d5565b8b8b8b8b8b8b8a8a6102366102c6565b60405160200161024f9a99989796959493929190610724565b604051602081830303815290604052610424565b9050806001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156102a057600080fd5b505af11580156102b4573d6000803e3d6000fd5b50929c9b505050505050505050505050565b6000546001600160a01b031690565b7f000000000000000000000000000000000000000000000000000000000000000090565b80517f602038038060206000396000f3fefefefefefefefefefefefefefefefefefefe808352600091602081018484f090845291506103456001600160a01b03831615156101ac610487565b50919050565b8051604080517f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000818101858101848101602090810190965280855293957f00000000000000000000000000000000000000000000000000000000000000009592947f000000000000000000000000000000000000000000000000000000000000000094938801866000828a3c846000888301883c5060208981019089850101610416818386610499565b505050505050505050919050565b600080610430836104d7565b6001600160a01b0381166000818152600160208190526040808320805460ff19169092179091555192935090917f83a48fbcfc991335314e74d0496aab6a1987e992ddc85dddbcc4d6dd6ef2e9fc9190a292915050565b816104955761049581610511565b5050565b5b602081106104b9578151835260209283019290910190601f190161049a565b905182516020929092036101000a6000190180199091169116179052565b6000806104e38361034b565b905060008151602083016000f090506001600160a01b03811661050a573d6000803e3d6000fd5b9392505050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600082601f830112610574578081fd5b813567ffffffffffffffff8082111561058957fe5b604051601f8301601f1916810160200182811182821017156105a757fe5b6040528281528483016020018610156105be578384fd5b82602086016020830137918201602001929092529392505050565b6000602082840312156105ea578081fd5b813561050a816107ad565b60008060008060008060c0878903121561060d578182fd5b863567ffffffffffffffff80821115610624578384fd5b6106308a838b01610564565b97506020890135915080821115610645578384fd5b5061065289828a01610564565b9550506040870135610663816107ad565b93506060870135610673816107ad565b9598949750929560808101359460a0909101359350915050565b60008151808452815b818110156106b257602081850181015186830182015201610696565b818111156106c35782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b901515815260200190565b60006020825261050a602083018461068d565b6001600160a01b038b811682526101406020830181905260009161074a8483018e61068d565b9150838203604085015261075e828d61068d565b9a811660608501529889166080840152505060a081019590955260c085019390935260e0840191909152610100830152909116610120909101529392505050565b918252602082015260400190565b6001600160a01b03811681146107c257600080fd5b5056fea2646970667358221220be970d9deadd714a351f5fd25ffb213227866b09f43de5ac3b862f9cf5e4d1c964736f6c63430007060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6634B753 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6634B753 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x74DCC7A4 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x7FF52B01 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x113 JUMPI PUSH2 0x7C JUMP JUMPDEST DUP1 PUSH3 0xC194DB EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x174481FA EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x2DA47C40 EQ PUSH2 0xB5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x89 PUSH2 0x11B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x711 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP3 SWAP2 SWAP1 PUSH2 0x6EC JUMP JUMPDEST PUSH2 0xBD PUSH2 0x180 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP3 SWAP2 SWAP1 PUSH2 0x79F JUMP JUMPDEST PUSH2 0xDE PUSH2 0xD9 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x706 JUMP JUMPDEST PUSH2 0xFE PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0x208 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x2C6 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x135 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x34B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP PUSH32 0x0 DUP2 LT ISZERO PUSH2 0x1DC JUMPI DUP1 PUSH32 0x0 SUB SWAP3 POP PUSH3 0x278D00 SWAP2 POP PUSH2 0x1E5 JUMP JUMPDEST PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x215 PUSH2 0x180 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x263 PUSH2 0x226 PUSH2 0x2D5 JUMP JUMPDEST DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP11 DUP11 PUSH2 0x236 PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x24F SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x724 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x424 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8129FC1C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP3 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH32 0x602038038060206000396000F3FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE DUP1 DUP4 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP2 ADD DUP5 DUP5 CREATE SWAP1 DUP5 MSTORE SWAP2 POP PUSH2 0x345 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x1AC PUSH2 0x487 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH32 0x0 DUP2 DUP2 ADD DUP6 DUP2 ADD DUP5 DUP2 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 SWAP7 MSTORE DUP1 DUP6 MSTORE SWAP4 SWAP6 PUSH32 0x0 SWAP6 SWAP3 SWAP5 PUSH32 0x0 SWAP5 SWAP4 DUP9 ADD DUP7 PUSH1 0x0 DUP3 DUP11 EXTCODECOPY DUP5 PUSH1 0x0 DUP9 DUP4 ADD DUP9 EXTCODECOPY POP PUSH1 0x20 DUP10 DUP2 ADD SWAP1 DUP10 DUP6 ADD ADD PUSH2 0x416 DUP2 DUP4 DUP7 PUSH2 0x499 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x430 DUP4 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH32 0x83A48FBCFC991335314E74D0496AAB6A1987E992DDC85DDDBCC4D6DD6EF2E9FC SWAP2 SWAP1 LOG2 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH2 0x495 JUMPI PUSH2 0x495 DUP2 PUSH2 0x511 JUMP JUMPDEST POP POP JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x4B9 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1F NOT ADD PUSH2 0x49A JUMP JUMPDEST SWAP1 MLOAD DUP3 MLOAD PUSH1 0x20 SWAP3 SWAP1 SWAP3 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP2 AND OR SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4E3 DUP4 PUSH2 0x34B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 DUP4 ADD PUSH1 0x0 CREATE SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x50A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x574 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x589 JUMPI INVALID JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD DUP3 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x5A7 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP5 DUP4 ADD PUSH1 0x20 ADD DUP7 LT ISZERO PUSH2 0x5BE JUMPI DUP4 DUP5 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP2 DUP3 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5EA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x50A DUP2 PUSH2 0x7AD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x60D JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x624 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x630 DUP11 DUP4 DUP12 ADD PUSH2 0x564 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x645 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x652 DUP10 DUP3 DUP11 ADD PUSH2 0x564 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x663 DUP2 PUSH2 0x7AD JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x673 DUP2 PUSH2 0x7AD JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x696 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6C3 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x50A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x68D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP3 MSTORE PUSH2 0x140 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH2 0x74A DUP5 DUP4 ADD DUP15 PUSH2 0x68D JUMP JUMPDEST SWAP2 POP DUP4 DUP3 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x75E DUP3 DUP14 PUSH2 0x68D JUMP JUMPDEST SWAP11 DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE SWAP9 DUP10 AND PUSH1 0x80 DUP5 ADD MSTORE POP POP PUSH1 0xA0 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xE0 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE SWAP8 0xD SWAP14 0xEA 0xDD PUSH18 0x4A351F5FD25FFB213227866B09F43DE5AC3B DUP7 0x2F SWAP13 CREATE2 0xE4 0xD1 0xC9 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"238086:1423:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;229754:116;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;229482:169;;;:::i;:::-;;;;;;;;:::i;237142:902::-;;;:::i;:::-;;;;;;;;:::i;235383:120::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;238450:1056::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;235180:104::-;;;:::i;235020:81::-;;;:::i;229754:116::-;229802:12;229834:28;;;;;;;;;;;;;:24;:28::i;:::-;229827:35;;229754:116;:::o;229482:169::-;229596:22;229620;229482:169;;:::o;237142:902::-;237196:27;;237288:15;237332:24;237318:38;;237314:723;;;237659:11;237632:24;:38;237610:60;;236460:7;237720:46;;237314:723;;;237985:1;237963:23;;238024:1;238001:24;;237314:723;237142:902;;;:::o;235383:120::-;-1:-1:-1;;;;;235471:24:0;235447:4;235471:24;;;:18;:24;;;;;;;;;235383:120::o;238450:1056::-;238674:10;238698:27;238727:28;238759:23;:21;:23::i;:::-;238697:85;;;;238795:15;238842:429;238901:10;:8;:10::i;:::-;238934:4;238961:6;238990:9;239022:12;239057:11;239091:17;239131:19;239173:20;239216:21;:19;:21::i;:::-;238868:388;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;238842:7;:429::i;:::-;238795:487;;239457:4;-1:-1:-1;;;;;239457:15:0;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;239494:4:0;;238450:1056;-1:-1:-1;;;;;;;;;;;;238450:1056:0:o;235180:104::-;235232:7;235259:17;-1:-1:-1;;;;;235259:17:0;235180:104;:::o;235020:81::-;235087:6;235020:81;:::o;241437:1138::-;241688:11;;241207:66;241925:34;;;241490:19;;242232:2;242216:19;;241694:4;241490:19;242200:36;242339:24;;;242185:51;-1:-1:-1;242501:66:0;-1:-1:-1;;;;;242510:25:0;;;;115939:3;242501:8;:66::i;:::-;241437:1138;;;;:::o;230005:2737::-;231282:22;;231663:4;231657:11;;231146:18;231024;231204:37;;;231336:38;;;231695:28;;;231719:2;231695:28;;;231682:42;;;231820:22;;;231657:11;;230963:22;;231024:18;;231085:22;;231146:18;231949:13;;231024:18;230931:29;231949:13;230963:22;231976:67;232130:17;232127:1;232107:17;232096:9;232092:33;232069:21;232057:91;-1:-1:-1;232548:2:0;232527:24;;;;232595:36;;;;232654:80;232595:36;232527:24;232714:19;232654:7;:80::i;:::-;230005:2737;;;;;;;;;;;;:::o;235511:248::-;235585:7;235605:12;235620:30;235634:15;235620:13;:30::i;:::-;-1:-1:-1;;;;;235663:24:0;;;;;;235690:4;235663:24;;;;;;;;:31;;-1:-1:-1;;235663:31:0;;;;;;;235710:17;235605:45;;-1:-1:-1;235663:24:0;;235710:17;;235663:24;235710:17;235747:4;235511:248;-1:-1:-1;;235511:248:0:o;106393:103::-;106463:9;106458:34;;106474:18;106482:9;106474:7;:18::i;:::-;106393:103;;:::o;233726:611::-;233892:171;233906:2;233899:3;:9;233892:171;;233977:10;;233964:24;;234025:2;234017:10;;;;234042:9;;;;-1:-1:-1;;233910:9:0;233892:171;;;234196:10;;234252:11;;234129:2;:8;;;;234123:3;:15;-1:-1:-1;;234123:19:0;234208:9;;234192:26;;;234248:22;;234297:21;234284:35;;234162:168::o;232938:648::-;233011:7;233031:25;233059:41;233084:15;233059:24;:41::i;:::-;233031:69;;233113:19;233221:12;233215:19;233210:2;233196:12;233192:21;233189:1;233182:53;233167:68;-1:-1:-1;;;;;;233262:25:0;;233258:290;;233460:16;233457:1;;233439:38;233505:16;233457:1;233495:27;233420:117;233567:11;232938:648;-1:-1:-1;;;232938:648:0:o;106608:3223::-;-1:-1:-1;;;109161:3:0;109154:79;;;109374:66;109368:4;109361:80;109518:1;109512:4;109505:15;108564:73;107760:2;107795:18;;;107841;;;107765:4;107837:29;;;108605:1;108601:14;107745:18;;;;108590:26;;;;107891:18;;;;107939;;;107935:29;;;108622:2;108618:17;108586:50;;;;108564:73;108559:3;108555:83;109587:4;109580:26;109817:3;;109807:14;14:695:1;;112:3;105:4;97:6;93:17;89:27;79:2;;134:5;127;120:20;79:2;174:6;161:20;200:18;237:2;233;230:10;227:2;;;243:9;227:2;283;277:9;352:2;333:13;;-1:-1:-1;;329:27:1;317:40;;359:4;313:51;379:18;;;399:22;;;376:46;373:2;;;425:9;373:2;452;445:22;476:18;;;513:15;;;530:4;509:26;506:35;-1:-1:-1;503:2:1;;;558:5;551;544:20;503:2;626;619:4;611:6;607:17;600:4;592:6;588:17;575:54;649:15;;;666:4;645:26;638:41;;;;653:6;69:640;-1:-1:-1;;;69:640:1:o;714:259::-;;826:2;814:9;805:7;801:23;797:32;794:2;;;847:6;839;832:22;794:2;891:9;878:23;910:33;937:5;910:33;:::i;978:1024::-;;;;;;;1223:3;1211:9;1202:7;1198:23;1194:33;1191:2;;;1245:6;1237;1230:22;1191:2;1290:9;1277:23;1319:18;1360:2;1352:6;1349:14;1346:2;;;1381:6;1373;1366:22;1346:2;1409:52;1453:7;1444:6;1433:9;1429:22;1409:52;:::i;:::-;1399:62;;1514:2;1503:9;1499:18;1486:32;1470:48;;1543:2;1533:8;1530:16;1527:2;;;1564:6;1556;1549:22;1527:2;;1592:54;1638:7;1627:8;1616:9;1612:24;1592:54;:::i;:::-;1582:64;;;1696:2;1685:9;1681:18;1668:32;1709:33;1736:5;1709:33;:::i;:::-;1761:5;-1:-1:-1;1818:2:1;1803:18;;1790:32;1831:35;1790:32;1831:35;:::i;:::-;1181:821;;;;-1:-1:-1;1181:821:1;;1939:3;1924:19;;1911:33;;1991:3;1976:19;;;1963:33;;-1:-1:-1;1181:821:1;-1:-1:-1;;1181:821:1:o;2007:477::-;;2088:5;2082:12;2115:6;2110:3;2103:19;2140:3;2152:162;2166:6;2163:1;2160:13;2152:162;;;2228:4;2284:13;;;2280:22;;2274:29;2256:11;;;2252:20;;2245:59;2181:12;2152:162;;;2332:6;2329:1;2326:13;2323:2;;;2398:3;2391:4;2382:6;2377:3;2373:16;2369:27;2362:40;2323:2;-1:-1:-1;2466:2:1;2445:15;-1:-1:-1;;2441:29:1;2432:39;;;;2473:4;2428:50;;2058:426;-1:-1:-1;;2058:426:1:o;2489:203::-;-1:-1:-1;;;;;2653:32:1;;;;2635:51;;2623:2;2608:18;;2590:102::o;2697:304::-;-1:-1:-1;;;;;2927:15:1;;;2909:34;;2979:15;;2974:2;2959:18;;2952:43;2859:2;2844:18;;2826:175::o;3006:187::-;3171:14;;3164:22;3146:41;;3134:2;3119:18;;3101:92::o;3198:219::-;;3345:2;3334:9;3327:21;3365:46;3407:2;3396:9;3392:18;3384:6;3365:46;:::i;3645:1098::-;-1:-1:-1;;;;;4169:15:1;;;4151:34;;4101:3;4216:2;4201:18;;4194:30;;;3645:1098;;4247:46;4274:18;;;4266:6;4247:46;:::i;:::-;4233:60;;4341:9;4333:6;4329:22;4324:2;4313:9;4309:18;4302:50;4369:34;4396:6;4388;4369:34;:::i;:::-;4439:15;;;4434:2;4419:18;;4412:43;4492:15;;;4486:3;4471:19;;4464:44;-1:-1:-1;;4539:3:1;4524:19;;4517:35;;;;4583:3;4568:19;;4561:35;;;;4627:3;4612:19;;4605:35;;;;4671:3;4656:19;;4649:35;4721:15;;;4715:3;4700:19;;;4693:44;4361:42;4081:662;-1:-1:-1;;;4081:662:1:o;4975:248::-;5149:25;;;5205:2;5190:18;;5183:34;5137:2;5122:18;;5104:119::o;5228:133::-;-1:-1:-1;;;;;5305:31:1;;5295:42;;5285:2;;5351:1;5348;5341:12;5285:2;5275:86;:::o"},"methodIdentifiers":{"create(string,string,address,address,uint256,uint256)":"74dcc7a4","getCreationCode()":"00c194db","getCreationCodeContracts()":"174481fa","getDefaultPoolOwner()":"7ff52b01","getPauseConfiguration()":"2da47c40","getVault()":"8d928af8","isPoolFromFactory(address)":"6634b753"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"defaultPoolOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"contract IERC20\",\"name\":\"mainToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"wrappedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"upperTarget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"contract LinearPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCreationCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCreationCodeContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractB\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultPoolOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPauseConfiguration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pauseWindowDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodDuration\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPoolFromFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"create(string,string,address,address,uint256,uint256)\":{\"details\":\"Deploys a new `AaveLinearPool`.\"},\"getCreationCode()\":{\"details\":\"Returns the creation code of the contract this factory creates.\"},\"getCreationCodeContracts()\":{\"details\":\"Returns the two addresses where the creation code of the contract crated by this factory is stored.\"},\"getDefaultPoolOwner()\":{\"details\":\"Returns the defaultPoolOwner's address.\"},\"getPauseConfiguration()\":{\"details\":\"Returns the current `TemporarilyPausable` configuration that will be applied to Pools created by this factory. `pauseWindowDuration` will decrease over time until it reaches zero, at which point both it and `bufferPeriodDuration` will be zero forever, meaning deployed Pools will not be pausable.\"},\"getVault()\":{\"details\":\"Returns the Vault's address.\"},\"isPoolFromFactory(address)\":{\"details\":\"Returns true if `pool` was created by this factory.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"AaveLinearPoolFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"Authentication":{"abi":[{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getActionId(bytes4)":"851c1bb3"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Building block for performing access control on external functions. This contract is used via the `authenticate` modifier (or the `_authenticateCaller` function), which can be applied to external functions to only make them callable by authorized accounts. Derived contracts must implement the `_canPerform` function, which holds the actual access control logic.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The main purpose of the `actionIdDisambiguator` is to prevent accidental function selector collisions in multi contract systems. There are two main uses for it:  - if the contract is a singleton, any unique identifier can be used to make the associated action identifiers    unique. The contract's own address is a good option.  - if the contract belongs to a family that shares action identifiers for the same functions, an identifier    shared by the entire family (and no other contract) should be used instead.\"},\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"Authentication\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"BalancerPoolToken":{"abi":[{"inputs":[{"internalType":"string","name":"tokenName","type":"string"},{"internalType":"string","name":"tokenSymbol","type":"string"},{"internalType":"contract IVault","name":"vault","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getVault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1672:1","statements":[{"nodeType":"YulBlock","src":"6:3:1","statements":[]},{"body":{"nodeType":"YulBlock","src":"80:797:1","statements":[{"body":{"nodeType":"YulBlock","src":"129:24:1","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"138:5:1"},{"name":"array","nodeType":"YulIdentifier","src":"145:5:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:1"},"nodeType":"YulFunctionCall","src":"131:20:1"},"nodeType":"YulExpressionStatement","src":"131:20:1"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"108:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"116:4:1","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"104:3:1"},"nodeType":"YulFunctionCall","src":"104:17:1"},{"name":"end","nodeType":"YulIdentifier","src":"123:3:1"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"100:3:1"},"nodeType":"YulFunctionCall","src":"100:27:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"93:6:1"},"nodeType":"YulFunctionCall","src":"93:35:1"},"nodeType":"YulIf","src":"90:2:1"},{"nodeType":"YulVariableDeclaration","src":"162:23:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"178:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"172:5:1"},"nodeType":"YulFunctionCall","src":"172:13:1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"166:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"194:28:1","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"212:2:1","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"216:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"208:3:1"},"nodeType":"YulFunctionCall","src":"208:10:1"},{"kind":"number","nodeType":"YulLiteral","src":"220:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"204:3:1"},"nodeType":"YulFunctionCall","src":"204:18:1"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"198:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"245:13:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"247:7:1"},"nodeType":"YulFunctionCall","src":"247:9:1"},"nodeType":"YulExpressionStatement","src":"247:9:1"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"237:2:1"},{"name":"_2","nodeType":"YulIdentifier","src":"241:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"234:2:1"},"nodeType":"YulFunctionCall","src":"234:10:1"},"nodeType":"YulIf","src":"231:2:1"},{"nodeType":"YulVariableDeclaration","src":"267:23:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"287:2:1","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"281:5:1"},"nodeType":"YulFunctionCall","src":"281:9:1"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"271:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"299:14:1","value":{"kind":"number","nodeType":"YulLiteral","src":"309:4:1","type":"","value":"0x20"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"303:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"322:67:1","value":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"348:6:1"},{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"364:2:1"},{"kind":"number","nodeType":"YulLiteral","src":"368:4:1","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"360:3:1"},"nodeType":"YulFunctionCall","src":"360:13:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"379:2:1","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"375:3:1"},"nodeType":"YulFunctionCall","src":"375:7:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"356:3:1"},"nodeType":"YulFunctionCall","src":"356:27:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"344:3:1"},"nodeType":"YulFunctionCall","src":"344:40:1"},{"name":"_3","nodeType":"YulIdentifier","src":"386:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"340:3:1"},"nodeType":"YulFunctionCall","src":"340:49:1"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"326:10:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"448:13:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"450:7:1"},"nodeType":"YulFunctionCall","src":"450:9:1"},"nodeType":"YulExpressionStatement","src":"450:9:1"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"407:10:1"},{"name":"_2","nodeType":"YulIdentifier","src":"419:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"404:2:1"},"nodeType":"YulFunctionCall","src":"404:18:1"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"427:10:1"},{"name":"memPtr","nodeType":"YulIdentifier","src":"439:6:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"424:2:1"},"nodeType":"YulFunctionCall","src":"424:22:1"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"401:2:1"},"nodeType":"YulFunctionCall","src":"401:46:1"},"nodeType":"YulIf","src":"398:2:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"477:2:1","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"481:10:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"470:6:1"},"nodeType":"YulFunctionCall","src":"470:22:1"},"nodeType":"YulExpressionStatement","src":"470:22:1"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"508:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"516:2:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"501:6:1"},"nodeType":"YulFunctionCall","src":"501:18:1"},"nodeType":"YulExpressionStatement","src":"501:18:1"},{"body":{"nodeType":"YulBlock","src":"565:24:1","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"574:5:1"},{"name":"array","nodeType":"YulIdentifier","src":"581:5:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"567:6:1"},"nodeType":"YulFunctionCall","src":"567:20:1"},"nodeType":"YulExpressionStatement","src":"567:20:1"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"542:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"550:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"538:3:1"},"nodeType":"YulFunctionCall","src":"538:15:1"},{"name":"_3","nodeType":"YulIdentifier","src":"555:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"534:3:1"},"nodeType":"YulFunctionCall","src":"534:24:1"},{"name":"end","nodeType":"YulIdentifier","src":"560:3:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"531:2:1"},"nodeType":"YulFunctionCall","src":"531:33:1"},"nodeType":"YulIf","src":"528:2:1"},{"nodeType":"YulVariableDeclaration","src":"598:14:1","value":{"name":"array","nodeType":"YulIdentifier","src":"607:5:1"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"602:1:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"667:87:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"696:6:1"},{"name":"i","nodeType":"YulIdentifier","src":"704:1:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"692:3:1"},"nodeType":"YulFunctionCall","src":"692:14:1"},{"name":"_3","nodeType":"YulIdentifier","src":"708:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"688:3:1"},"nodeType":"YulFunctionCall","src":"688:23:1"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"727:6:1"},{"name":"i","nodeType":"YulIdentifier","src":"735:1:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"723:3:1"},"nodeType":"YulFunctionCall","src":"723:14:1"},{"name":"_3","nodeType":"YulIdentifier","src":"739:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"719:3:1"},"nodeType":"YulFunctionCall","src":"719:23:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"713:5:1"},"nodeType":"YulFunctionCall","src":"713:30:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"681:6:1"},"nodeType":"YulFunctionCall","src":"681:63:1"},"nodeType":"YulExpressionStatement","src":"681:63:1"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"632:1:1"},{"name":"_1","nodeType":"YulIdentifier","src":"635:2:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"629:2:1"},"nodeType":"YulFunctionCall","src":"629:9:1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"639:19:1","statements":[{"nodeType":"YulAssignment","src":"641:15:1","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"650:1:1"},{"name":"_3","nodeType":"YulIdentifier","src":"653:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"646:3:1"},"nodeType":"YulFunctionCall","src":"646:10:1"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"641:1:1"}]}]},"pre":{"nodeType":"YulBlock","src":"625:3:1","statements":[]},"src":"621:133:1"},{"body":{"nodeType":"YulBlock","src":"784:63:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"813:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"821:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"809:3:1"},"nodeType":"YulFunctionCall","src":"809:15:1"},{"name":"_3","nodeType":"YulIdentifier","src":"826:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"805:3:1"},"nodeType":"YulFunctionCall","src":"805:24:1"},{"name":"array","nodeType":"YulIdentifier","src":"831:5:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"798:6:1"},"nodeType":"YulFunctionCall","src":"798:39:1"},"nodeType":"YulExpressionStatement","src":"798:39:1"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"769:1:1"},{"name":"_1","nodeType":"YulIdentifier","src":"772:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"766:2:1"},"nodeType":"YulFunctionCall","src":"766:9:1"},"nodeType":"YulIf","src":"763:2:1"},{"nodeType":"YulAssignment","src":"856:15:1","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"865:6:1"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"856:5:1"}]}]},"name":"abi_decode_t_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"54:6:1","type":""},{"name":"end","nodeType":"YulTypedName","src":"62:3:1","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"70:5:1","type":""}],"src":"14:863:1"},{"body":{"nodeType":"YulBlock","src":"1032:638:1","statements":[{"body":{"nodeType":"YulBlock","src":"1078:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1087:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"1095:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1080:6:1"},"nodeType":"YulFunctionCall","src":"1080:22:1"},"nodeType":"YulExpressionStatement","src":"1080:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1053:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"1062:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1049:3:1"},"nodeType":"YulFunctionCall","src":"1049:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"1074:2:1","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1045:3:1"},"nodeType":"YulFunctionCall","src":"1045:32:1"},"nodeType":"YulIf","src":"1042:2:1"},{"nodeType":"YulVariableDeclaration","src":"1113:30:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1133:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1127:5:1"},"nodeType":"YulFunctionCall","src":"1127:16:1"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1117:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1152:28:1","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1170:2:1","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1174:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1166:3:1"},"nodeType":"YulFunctionCall","src":"1166:10:1"},{"kind":"number","nodeType":"YulLiteral","src":"1178:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1162:3:1"},"nodeType":"YulFunctionCall","src":"1162:18:1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1156:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1207:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1216:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"1224:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1209:6:1"},"nodeType":"YulFunctionCall","src":"1209:22:1"},"nodeType":"YulExpressionStatement","src":"1209:22:1"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1195:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"1203:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1192:2:1"},"nodeType":"YulFunctionCall","src":"1192:14:1"},"nodeType":"YulIf","src":"1189:2:1"},{"nodeType":"YulAssignment","src":"1242:73:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1287:9:1"},{"name":"offset","nodeType":"YulIdentifier","src":"1298:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1283:3:1"},"nodeType":"YulFunctionCall","src":"1283:22:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1307:7:1"}],"functionName":{"name":"abi_decode_t_string_fromMemory","nodeType":"YulIdentifier","src":"1252:30:1"},"nodeType":"YulFunctionCall","src":"1252:63:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1242:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"1324:41:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1350:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1361:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1346:3:1"},"nodeType":"YulFunctionCall","src":"1346:18:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1340:5:1"},"nodeType":"YulFunctionCall","src":"1340:25:1"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1328:8:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1394:26:1","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1403:6:1"},{"name":"value1","nodeType":"YulIdentifier","src":"1411:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1396:6:1"},"nodeType":"YulFunctionCall","src":"1396:22:1"},"nodeType":"YulExpressionStatement","src":"1396:22:1"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1380:8:1"},{"name":"_1","nodeType":"YulIdentifier","src":"1390:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1377:2:1"},"nodeType":"YulFunctionCall","src":"1377:16:1"},"nodeType":"YulIf","src":"1374:2:1"},{"nodeType":"YulAssignment","src":"1429:75:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1474:9:1"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1485:8:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1470:3:1"},"nodeType":"YulFunctionCall","src":"1470:24:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1496:7:1"}],"functionName":{"name":"abi_decode_t_string_fromMemory","nodeType":"YulIdentifier","src":"1439:30:1"},"nodeType":"YulFunctionCall","src":"1439:65:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1429:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"1513:38:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1536:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1547:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1532:3:1"},"nodeType":"YulFunctionCall","src":"1532:18:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1526:5:1"},"nodeType":"YulFunctionCall","src":"1526:25:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1517:5:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1614:26:1","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1623:6:1"},{"name":"value2","nodeType":"YulIdentifier","src":"1631:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1616:6:1"},"nodeType":"YulFunctionCall","src":"1616:22:1"},"nodeType":"YulExpressionStatement","src":"1616:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1573:5:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1584:5:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1599:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1604:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1595:3:1"},"nodeType":"YulFunctionCall","src":"1595:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"1608:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1591:3:1"},"nodeType":"YulFunctionCall","src":"1591:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1580:3:1"},"nodeType":"YulFunctionCall","src":"1580:31:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1570:2:1"},"nodeType":"YulFunctionCall","src":"1570:42:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1563:6:1"},"nodeType":"YulFunctionCall","src":"1563:50:1"},"nodeType":"YulIf","src":"1560:2:1"},{"nodeType":"YulAssignment","src":"1649:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"1659:5:1"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1649:6:1"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_contract$_IVault_$9483_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"982:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"993:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1005:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1013:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1021:6:1","type":""}],"src":"882:788:1"}]},"contents":"{\n    { }\n    function abi_decode_t_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { invalid() }\n        let memPtr := mload(64)\n        let _3 := 0x20\n        let newFreePtr := add(add(memPtr, and(add(_1, 0x1f), not(31))), _3)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), _3), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _3) }\n        {\n            mstore(add(add(memPtr, i), _3), mload(add(add(offset, i), _3)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _3), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_contract$_IVault_$9483_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_t_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value2, value2) }\n        value2 := value\n    }\n}","id":1,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101206040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960e0523480156200003657600080fd5b5060405162000ebd38038062000ebd833981016040819052620000599162000250565b8280604051806040016040528060018152602001603160f81b815250858581600390805190602001906200008f92919062000109565b508051620000a590600490602084019062000109565b505060058054601260ff19909116179055508151602092830120608052805191012060a052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60c05260601b6001600160601b0319166101005250620002d99050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200014157600085556200018c565b82601f106200015c57805160ff19168380011785556200018c565b828001600101855582156200018c579182015b828111156200018c5782518255916020019190600101906200016f565b506200019a9291506200019e565b5090565b5b808211156200019a57600081556001016200019f565b600082601f830112620001c6578081fd5b81516001600160401b0380821115620001db57fe5b6040516020601f8401601f1916820181018381118382101715620001fb57fe5b604052838252858401810187101562000212578485fd5b8492505b8383101562000235578583018101518284018201529182019162000216565b838311156200024657848185840101525b5095945050505050565b60008060006060848603121562000265578283fd5b83516001600160401b03808211156200027c578485fd5b6200028a87838801620001b5565b94506020860151915080821115620002a0578384fd5b50620002af86828701620001b5565b604086015190935090506001600160a01b0381168114620002ce578182fd5b809150509250925092565b60805160a05160c05160e0516101005160601c610ba16200031c600039806103d75250806104da5250806107895250806107cb5250806107aa5250610ba16000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d7146101d3578063a9059cbb146101e6578063d505accf146101f9578063dd62ed3e1461020e576100f5565b806370a08231146101905780637ecebe00146101a35780638d928af8146101b657806395d89b41146101cb576100f5565b806323b872dd116100d357806323b872dd1461014d578063313ce567146101605780633644e51514610175578063395093511461017d576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610138575b600080fd5b610102610221565b60405161010f9190610b0a565b60405180910390f35b61012b610126366004610a20565b6102b7565b60405161010f9190610a64565b6101406102ce565b60405161010f9190610a6f565b61012b61015b366004610974565b6102d4565b610168610348565b60405161010f9190610b5d565b610140610351565b61012b61018b366004610a20565b610360565b61014061019e366004610928565b61039b565b6101406101b1366004610928565b6103ba565b6101be6103d5565b60405161010f9190610af6565b6101026103f9565b61012b6101e1366004610a20565b61045a565b61012b6101f4366004610a20565b610498565b61020c6102073660046109af565b6104a5565b005b61014061021c366004610942565b6105ee565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156102ad5780601f10610282576101008083540402835291602001916102ad565b820191906000526020600020905b81548152906001019060200180831161029057829003601f168201915b5050505050905090565b60006102c433848461062b565b5060015b92915050565b60025490565b6000806102e185336105ee565b9050610305336001600160a01b03871614806102fd5750838210155b61019e610693565b6103108585856106a5565b336001600160a01b0386161480159061032b57506000198114155b1561033d5761033d853385840361062b565b506001949350505050565b60055460ff1690565b600061035b610785565b905090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102c49185906103969086610822565b61062b565b6001600160a01b0381166000908152602081905260409020545b919050565b6001600160a01b031660009081526006602052604090205490565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156102ad5780601f10610282576101008083540402835291602001916102ad565b60008061046733856105ee565b90508083106104815761047c3385600061062b565b61048e565b61048e338585840361062b565b5060019392505050565b60006102c43384846106a5565b6104b38442111560d1610693565b6001600160a01b038716600090815260066020908152604080832054905190929161050a917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d9101610a78565b604051602081830303815290604052805190602001209050600061052d8261083b565b90506000600182888888604051600081526020016040526040516105549493929190610ad8565b6020604051602081039080840390855afa158015610576573d6000803e3d6000fd5b5050604051601f19015191506105b890506001600160a01b038216158015906105b057508b6001600160a01b0316826001600160a01b0316145b6101f8610693565b6001600160a01b038b1660009081526006602052604090206001850190556105e18b8b8b61062b565b5050505050505050505050565b60006105f86103d5565b6001600160a01b0316826001600160a01b0316141561061a57506000196102c8565b6106248383610874565b90506102c8565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610686908590610a6f565b60405180910390a3505050565b816106a1576106a18161089f565b5050565b6106bc6001600160a01b0384161515610198610693565b6106d36001600160a01b0383161515610199610693565b6106de8383836108f2565b6001600160a01b03831660009081526020819052604090205461070490826101a06108f7565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107339082610822565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610686908590610a6f565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006107f261090d565b30604051602001610807959493929190610aac565b60405160208183030381529060405280519060200120905090565b60008282016108348482101583610693565b9392505050565b6000610845610785565b82604051602001610857929190610a49565b604051602081830303815290604052805190602001209050919050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b505050565b60006109068484111583610693565b5050900390565b4690565b80356001600160a01b03811681146103b557600080fd5b600060208284031215610939578081fd5b61083482610911565b60008060408385031215610954578081fd5b61095d83610911565b915061096b60208401610911565b90509250929050565b600080600060608486031215610988578081fd5b61099184610911565b925061099f60208501610911565b9150604084013590509250925092565b600080600080600080600060e0888a0312156109c9578283fd5b6109d288610911565b96506109e060208901610911565b95506040880135945060608801359350608088013560ff81168114610a03578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610a32578182fd5b610a3b83610911565b946020939093013593505050565b61190160f01b81526002810192909252602282015260420190565b901515815260200190565b90815260200190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b81811015610b3657858101830151858201604001528201610b1a565b81811115610b475783604083870101525b50601f01601f1916929092016040019392505050565b60ff9190911681526020019056fea264697066735822122022171f48bf405d239a6bb9e1934f95a2d40a928ff43932689370f9f63d3c356364736f6c63430007060033","opcodes":"PUSH2 0x120 PUSH1 0x40 MSTORE PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 PUSH1 0xE0 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xEBD CODESIZE SUB DUP1 PUSH3 0xEBD DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x59 SWAP2 PUSH3 0x250 JUMP JUMPDEST DUP3 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP6 DUP6 DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x8F SWAP3 SWAP2 SWAP1 PUSH3 0x109 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0xA5 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x109 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x12 PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x80 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0xA0 MSTORE POP PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xC0 MSTORE PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH2 0x100 MSTORE POP PUSH3 0x2D9 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x141 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x18C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x15C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x18C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x18C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x18C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x16F JUMP JUMPDEST POP PUSH3 0x19A SWAP3 SWAP2 POP PUSH3 0x19E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x19A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x19F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1C6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1DB JUMPI INVALID JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND DUP3 ADD DUP2 ADD DUP4 DUP2 GT DUP4 DUP3 LT OR ISZERO PUSH3 0x1FB JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP3 MSTORE DUP6 DUP5 ADD DUP2 ADD DUP8 LT ISZERO PUSH3 0x212 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH3 0x235 JUMPI DUP6 DUP4 ADD DUP2 ADD MLOAD DUP3 DUP5 ADD DUP3 ADD MSTORE SWAP2 DUP3 ADD SWAP2 PUSH3 0x216 JUMP JUMPDEST DUP4 DUP4 GT ISZERO PUSH3 0x246 JUMPI DUP5 DUP2 DUP6 DUP5 ADD ADD MSTORE JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x265 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x27C JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH3 0x28A DUP8 DUP4 DUP9 ADD PUSH3 0x1B5 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x2A0 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH3 0x2AF DUP7 DUP3 DUP8 ADD PUSH3 0x1B5 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2CE JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x60 SHR PUSH2 0xBA1 PUSH3 0x31C PUSH1 0x0 CODECOPY DUP1 PUSH2 0x3D7 MSTORE POP DUP1 PUSH2 0x4DA MSTORE POP DUP1 PUSH2 0x789 MSTORE POP DUP1 PUSH2 0x7CB MSTORE POP DUP1 PUSH2 0x7AA MSTORE POP PUSH2 0xBA1 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x20E JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CB JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x17D JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x138 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x2B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xA64 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x12B PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x974 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH2 0x168 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xB5D JUMP JUMPDEST PUSH2 0x140 PUSH2 0x351 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0x928 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH2 0x140 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x928 JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xAF6 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x45A JUMP JUMPDEST PUSH2 0x12B PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x498 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x140 PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x282 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x290 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C4 CALLER DUP5 DUP5 PUSH2 0x62B JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2E1 DUP6 CALLER PUSH2 0x5EE JUMP JUMPDEST SWAP1 POP PUSH2 0x305 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ DUP1 PUSH2 0x2FD JUMPI POP DUP4 DUP3 LT ISZERO JUMPDEST PUSH2 0x19E PUSH2 0x693 JUMP JUMPDEST PUSH2 0x310 DUP6 DUP6 DUP6 PUSH2 0x6A5 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x32B JUMPI POP PUSH1 0x0 NOT DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x33D JUMPI PUSH2 0x33D DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x62B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35B PUSH2 0x785 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2C4 SWAP2 DUP6 SWAP1 PUSH2 0x396 SWAP1 DUP7 PUSH2 0x822 JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x282 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x467 CALLER DUP6 PUSH2 0x5EE JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT PUSH2 0x481 JUMPI PUSH2 0x47C CALLER DUP6 PUSH1 0x0 PUSH2 0x62B JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH2 0x48E CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x62B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C4 CALLER DUP5 DUP5 PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0x4B3 DUP5 TIMESTAMP GT ISZERO PUSH1 0xD1 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH2 0x50A SWAP2 PUSH32 0x0 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP9 SWAP2 DUP14 SWAP2 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x52D DUP3 PUSH2 0x83B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x554 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x576 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP PUSH2 0x5B8 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x5B0 JUMPI POP DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1F8 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP6 ADD SWAP1 SSTORE PUSH2 0x5E1 DUP12 DUP12 DUP12 PUSH2 0x62B JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F8 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x61A JUMPI POP PUSH1 0x0 NOT PUSH2 0x2C8 JUMP JUMPDEST PUSH2 0x624 DUP4 DUP4 PUSH2 0x874 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x686 SWAP1 DUP6 SWAP1 PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x6A1 JUMPI PUSH2 0x6A1 DUP2 PUSH2 0x89F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6BC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x693 JUMP JUMPDEST PUSH2 0x6D3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x693 JUMP JUMPDEST PUSH2 0x6DE DUP4 DUP4 DUP4 PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x704 SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x733 SWAP1 DUP3 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x686 SWAP1 DUP6 SWAP1 PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x7F2 PUSH2 0x90D JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x807 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x834 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x693 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x845 PUSH2 0x785 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x857 SWAP3 SWAP2 SWAP1 PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x906 DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x693 JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x939 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x834 DUP3 PUSH2 0x911 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x954 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x95D DUP4 PUSH2 0x911 JUMP JUMPDEST SWAP2 POP PUSH2 0x96B PUSH1 0x20 DUP5 ADD PUSH2 0x911 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x988 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x991 DUP5 PUSH2 0x911 JUMP JUMPDEST SWAP3 POP PUSH2 0x99F PUSH1 0x20 DUP6 ADD PUSH2 0x911 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x9C9 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x9D2 DUP9 PUSH2 0x911 JUMP JUMPDEST SWAP7 POP PUSH2 0x9E0 PUSH1 0x20 DUP10 ADD PUSH2 0x911 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xA03 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA32 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xA3B DUP4 PUSH2 0x911 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB36 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB1A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB47 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 OR 0x1F 0x48 0xBF BLOCKHASH 0x5D 0x23 SWAP11 PUSH12 0xB9E1934F95A2D40A928FF439 ORIGIN PUSH9 0x9370F9F63D3C356364 PUSH20 0x6F6C634300070600330000000000000000000000 ","sourceMap":"35260:2604:0:-:0;;;32912:95;32858:149;;35349:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;35503:9;33285:4;16624:284;;;;;;;;;;;;;-1:-1:-1;;;16624:284:0;;;35467:9;35478:11;23184:5;23176;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;23200:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;23228:9:0;:14;;23240:2;-1:-1:-1;;23228:14:0;;;;;;-1:-1:-1;16705:22:0;;;;;;;16690:37;;16756:25;;;;;16738:43;;-1:-1:-1;16805:95:0;16792:108;;35525:14:::2;::::0;-1:-1:-1;;;;;;35525:14:0;23228;35525;-1:-1:-1;35260:2604:0;;-1:-1:-1;35260:2604:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;35260:2604:0;;;-1:-1:-1;35260:2604:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:863:1;;123:3;116:4;108:6;104:17;100:27;90:2;;145:5;138;131:20;90:2;172:13;;-1:-1:-1;;;;;234:10:1;;;231:2;;;247:9;231:2;287;281:9;309:4;379:2;360:13;;-1:-1:-1;;356:27:1;344:40;;340:49;;404:18;;;424:22;;;401:46;398:2;;;450:9;398:2;477;470:22;501:18;;;538:15;;;534:24;;531:33;-1:-1:-1;528:2:1;;;581:5;574;567:20;528:2;607:5;598:14;;621:133;635:2;632:1;629:9;621:133;;;723:14;;;719:23;;713:30;692:14;;;688:23;;681:63;646:10;;;;621:133;;;772:2;769:1;766:9;763:2;;;831:5;826:2;821;813:6;809:15;805:24;798:39;763:2;-1:-1:-1;865:6:1;80:797;-1:-1:-1;;;;;80:797:1:o;882:788::-;;;;1074:2;1062:9;1053:7;1049:23;1045:32;1042:2;;;1095:6;1087;1080:22;1042:2;1127:16;;-1:-1:-1;;;;;1192:14:1;;;1189:2;;;1224:6;1216;1209:22;1189:2;1252:63;1307:7;1298:6;1287:9;1283:22;1252:63;:::i;:::-;1242:73;;1361:2;1350:9;1346:18;1340:25;1324:41;;1390:2;1380:8;1377:16;1374:2;;;1411:6;1403;1396:22;1374:2;;1439:65;1496:7;1485:8;1474:9;1470:24;1439:65;:::i;:::-;1547:2;1532:18;;1526:25;1429:75;;-1:-1:-1;1526:25:1;-1:-1:-1;;;;;;1580:31:1;;1570:42;;1560:2;;1631:6;1623;1616:22;1560:2;1659:5;1649:15;;;1032:638;;;;;:::o;:::-;35260:2604:0;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5479:1","statements":[{"nodeType":"YulBlock","src":"6:3:1","statements":[]},{"body":{"nodeType":"YulBlock","src":"65:124:1","statements":[{"nodeType":"YulAssignment","src":"75:29:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"97:6:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"84:12:1"},"nodeType":"YulFunctionCall","src":"84:20:1"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"75:5:1"}]},{"body":{"nodeType":"YulBlock","src":"167:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"176:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"179:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"169:6:1"},"nodeType":"YulFunctionCall","src":"169:12:1"},"nodeType":"YulExpressionStatement","src":"169:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"126:5:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"137:5:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"152:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"157:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"148:3:1"},"nodeType":"YulFunctionCall","src":"148:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"144:3:1"},"nodeType":"YulFunctionCall","src":"144:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"133:3:1"},"nodeType":"YulFunctionCall","src":"133:31:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"123:2:1"},"nodeType":"YulFunctionCall","src":"123:42:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"116:6:1"},"nodeType":"YulFunctionCall","src":"116:50:1"},"nodeType":"YulIf","src":"113:2:1"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44:6:1","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"55:5:1","type":""}],"src":"14:175:1"},{"body":{"nodeType":"YulBlock","src":"264:128:1","statements":[{"body":{"nodeType":"YulBlock","src":"310:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"319:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"327:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"312:6:1"},"nodeType":"YulFunctionCall","src":"312:22:1"},"nodeType":"YulExpressionStatement","src":"312:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"285:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"294:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"281:3:1"},"nodeType":"YulFunctionCall","src":"281:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"306:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"277:3:1"},"nodeType":"YulFunctionCall","src":"277:32:1"},"nodeType":"YulIf","src":"274:2:1"},{"nodeType":"YulAssignment","src":"345:41:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"376:9:1"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"355:20:1"},"nodeType":"YulFunctionCall","src":"355:31:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"345:6:1"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"230:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"241:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"253:6:1","type":""}],"src":"194:198:1"},{"body":{"nodeType":"YulBlock","src":"484:187:1","statements":[{"body":{"nodeType":"YulBlock","src":"530:26:1","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"539:6:1"},{"name":"value1","nodeType":"YulIdentifier","src":"547:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"532:6:1"},"nodeType":"YulFunctionCall","src":"532:22:1"},"nodeType":"YulExpressionStatement","src":"532:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"505:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"514:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"501:3:1"},"nodeType":"YulFunctionCall","src":"501:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"526:2:1","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"497:3:1"},"nodeType":"YulFunctionCall","src":"497:32:1"},"nodeType":"YulIf","src":"494:2:1"},{"nodeType":"YulAssignment","src":"565:41:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"596:9:1"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"575:20:1"},"nodeType":"YulFunctionCall","src":"575:31:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"565:6:1"}]},{"nodeType":"YulAssignment","src":"615:50:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"650:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"661:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"646:3:1"},"nodeType":"YulFunctionCall","src":"646:18:1"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"625:20:1"},"nodeType":"YulFunctionCall","src":"625:40:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"615:6:1"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"442:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"453:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"465:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"473:6:1","type":""}],"src":"397:274:1"},{"body":{"nodeType":"YulBlock","src":"780:238:1","statements":[{"body":{"nodeType":"YulBlock","src":"826:26:1","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"835:6:1"},{"name":"value2","nodeType":"YulIdentifier","src":"843:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"828:6:1"},"nodeType":"YulFunctionCall","src":"828:22:1"},"nodeType":"YulExpressionStatement","src":"828:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"801:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"810:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"797:3:1"},"nodeType":"YulFunctionCall","src":"797:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"822:2:1","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"793:3:1"},"nodeType":"YulFunctionCall","src":"793:32:1"},"nodeType":"YulIf","src":"790:2:1"},{"nodeType":"YulAssignment","src":"861:41:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"892:9:1"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"871:20:1"},"nodeType":"YulFunctionCall","src":"871:31:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"861:6:1"}]},{"nodeType":"YulAssignment","src":"911:50:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"946:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"957:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"942:3:1"},"nodeType":"YulFunctionCall","src":"942:18:1"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"921:20:1"},"nodeType":"YulFunctionCall","src":"921:40:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"911:6:1"}]},{"nodeType":"YulAssignment","src":"970:42:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"997:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1008:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"993:3:1"},"nodeType":"YulFunctionCall","src":"993:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"980:12:1"},"nodeType":"YulFunctionCall","src":"980:32:1"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"970:6:1"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"730:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"741:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"753:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"761:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"769:6:1","type":""}],"src":"676:342:1"},{"body":{"nodeType":"YulBlock","src":"1193:547:1","statements":[{"body":{"nodeType":"YulBlock","src":"1240:26:1","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1249:6:1"},{"name":"value4","nodeType":"YulIdentifier","src":"1257:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1242:6:1"},"nodeType":"YulFunctionCall","src":"1242:22:1"},"nodeType":"YulExpressionStatement","src":"1242:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1214:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"1223:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1210:3:1"},"nodeType":"YulFunctionCall","src":"1210:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"1235:3:1","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1206:3:1"},"nodeType":"YulFunctionCall","src":"1206:33:1"},"nodeType":"YulIf","src":"1203:2:1"},{"nodeType":"YulAssignment","src":"1275:41:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1306:9:1"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1285:20:1"},"nodeType":"YulFunctionCall","src":"1285:31:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1275:6:1"}]},{"nodeType":"YulAssignment","src":"1325:50:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1360:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1371:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1356:3:1"},"nodeType":"YulFunctionCall","src":"1356:18:1"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1335:20:1"},"nodeType":"YulFunctionCall","src":"1335:40:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1325:6:1"}]},{"nodeType":"YulAssignment","src":"1384:42:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1411:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1422:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1407:3:1"},"nodeType":"YulFunctionCall","src":"1407:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1394:12:1"},"nodeType":"YulFunctionCall","src":"1394:32:1"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1384:6:1"}]},{"nodeType":"YulAssignment","src":"1435:42:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1462:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1473:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1458:3:1"},"nodeType":"YulFunctionCall","src":"1458:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1445:12:1"},"nodeType":"YulFunctionCall","src":"1445:32:1"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1435:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"1486:46:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1516:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1527:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1512:3:1"},"nodeType":"YulFunctionCall","src":"1512:19:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1499:12:1"},"nodeType":"YulFunctionCall","src":"1499:33:1"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1490:5:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1580:26:1","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1589:6:1"},{"name":"value4","nodeType":"YulIdentifier","src":"1597:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1582:6:1"},"nodeType":"YulFunctionCall","src":"1582:22:1"},"nodeType":"YulExpressionStatement","src":"1582:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1554:5:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1565:5:1"},{"kind":"number","nodeType":"YulLiteral","src":"1572:4:1","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1561:3:1"},"nodeType":"YulFunctionCall","src":"1561:16:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1551:2:1"},"nodeType":"YulFunctionCall","src":"1551:27:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1544:6:1"},"nodeType":"YulFunctionCall","src":"1544:35:1"},"nodeType":"YulIf","src":"1541:2:1"},{"nodeType":"YulAssignment","src":"1615:15:1","value":{"name":"value","nodeType":"YulIdentifier","src":"1625:5:1"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1615:6:1"}]},{"nodeType":"YulAssignment","src":"1639:43:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1666:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1677:3:1","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1662:3:1"},"nodeType":"YulFunctionCall","src":"1662:19:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1649:12:1"},"nodeType":"YulFunctionCall","src":"1649:33:1"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1639:6:1"}]},{"nodeType":"YulAssignment","src":"1691:43:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1718:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1729:3:1","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1714:3:1"},"nodeType":"YulFunctionCall","src":"1714:19:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1701:12:1"},"nodeType":"YulFunctionCall","src":"1701:33:1"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"1691:6:1"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1111:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1122:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1134:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1142:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1150:6:1","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1158:6:1","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1166:6:1","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1174:6:1","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1182:6:1","type":""}],"src":"1023:717:1"},{"body":{"nodeType":"YulBlock","src":"1832:179:1","statements":[{"body":{"nodeType":"YulBlock","src":"1878:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1887:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"1895:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1880:6:1"},"nodeType":"YulFunctionCall","src":"1880:22:1"},"nodeType":"YulExpressionStatement","src":"1880:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1853:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"1862:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1849:3:1"},"nodeType":"YulFunctionCall","src":"1849:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"1874:2:1","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1845:3:1"},"nodeType":"YulFunctionCall","src":"1845:32:1"},"nodeType":"YulIf","src":"1842:2:1"},{"nodeType":"YulAssignment","src":"1913:41:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1944:9:1"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1923:20:1"},"nodeType":"YulFunctionCall","src":"1923:31:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1913:6:1"}]},{"nodeType":"YulAssignment","src":"1963:42:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1990:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2001:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1986:3:1"},"nodeType":"YulFunctionCall","src":"1986:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1973:12:1"},"nodeType":"YulFunctionCall","src":"1973:32:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1963:6:1"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1790:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1801:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1813:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1821:6:1","type":""}],"src":"1745:266:1"},{"body":{"nodeType":"YulBlock","src":"2264:144:1","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2281:3:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2290:3:1","type":"","value":"240"},{"kind":"number","nodeType":"YulLiteral","src":"2295:4:1","type":"","value":"6401"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2286:3:1"},"nodeType":"YulFunctionCall","src":"2286:14:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2274:6:1"},"nodeType":"YulFunctionCall","src":"2274:27:1"},"nodeType":"YulExpressionStatement","src":"2274:27:1"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2321:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"2326:1:1","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2317:3:1"},"nodeType":"YulFunctionCall","src":"2317:11:1"},{"name":"value0","nodeType":"YulIdentifier","src":"2330:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2310:6:1"},"nodeType":"YulFunctionCall","src":"2310:27:1"},"nodeType":"YulExpressionStatement","src":"2310:27:1"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2357:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"2362:2:1","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2353:3:1"},"nodeType":"YulFunctionCall","src":"2353:12:1"},{"name":"value1","nodeType":"YulIdentifier","src":"2367:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2346:6:1"},"nodeType":"YulFunctionCall","src":"2346:28:1"},"nodeType":"YulExpressionStatement","src":"2346:28:1"},{"nodeType":"YulAssignment","src":"2383:19:1","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2394:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"2399:2:1","type":"","value":"66"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2390:3:1"},"nodeType":"YulFunctionCall","src":"2390:12:1"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2383:3:1"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2232:3:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2237:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2245:6:1","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2256:3:1","type":""}],"src":"2016:392:1"},{"body":{"nodeType":"YulBlock","src":"2508:92:1","statements":[{"nodeType":"YulAssignment","src":"2518:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2530:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2541:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2526:3:1"},"nodeType":"YulFunctionCall","src":"2526:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2518:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2560:9:1"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2585:6:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2578:6:1"},"nodeType":"YulFunctionCall","src":"2578:14:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2571:6:1"},"nodeType":"YulFunctionCall","src":"2571:22:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2553:6:1"},"nodeType":"YulFunctionCall","src":"2553:41:1"},"nodeType":"YulExpressionStatement","src":"2553:41:1"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2477:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2488:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2499:4:1","type":""}],"src":"2413:187:1"},{"body":{"nodeType":"YulBlock","src":"2706:76:1","statements":[{"nodeType":"YulAssignment","src":"2716:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2728:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2739:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2724:3:1"},"nodeType":"YulFunctionCall","src":"2724:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2716:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2758:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"2769:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2751:6:1"},"nodeType":"YulFunctionCall","src":"2751:25:1"},"nodeType":"YulExpressionStatement","src":"2751:25:1"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2675:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2686:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2697:4:1","type":""}],"src":"2605:177:1"},{"body":{"nodeType":"YulBlock","src":"3028:350:1","statements":[{"nodeType":"YulAssignment","src":"3038:27:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3050:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3061:3:1","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3046:3:1"},"nodeType":"YulFunctionCall","src":"3046:19:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3038:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3081:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"3092:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3074:6:1"},"nodeType":"YulFunctionCall","src":"3074:25:1"},"nodeType":"YulExpressionStatement","src":"3074:25:1"},{"nodeType":"YulVariableDeclaration","src":"3108:29:1","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3126:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3131:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3122:3:1"},"nodeType":"YulFunctionCall","src":"3122:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"3135:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3118:3:1"},"nodeType":"YulFunctionCall","src":"3118:19:1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3112:2:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3157:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3168:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3153:3:1"},"nodeType":"YulFunctionCall","src":"3153:18:1"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3177:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"3185:2:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3173:3:1"},"nodeType":"YulFunctionCall","src":"3173:15:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3146:6:1"},"nodeType":"YulFunctionCall","src":"3146:43:1"},"nodeType":"YulExpressionStatement","src":"3146:43:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3209:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3220:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3205:3:1"},"nodeType":"YulFunctionCall","src":"3205:18:1"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"3229:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"3237:2:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3225:3:1"},"nodeType":"YulFunctionCall","src":"3225:15:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3198:6:1"},"nodeType":"YulFunctionCall","src":"3198:43:1"},"nodeType":"YulExpressionStatement","src":"3198:43:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3261:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3272:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3257:3:1"},"nodeType":"YulFunctionCall","src":"3257:18:1"},{"name":"value3","nodeType":"YulIdentifier","src":"3277:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3250:6:1"},"nodeType":"YulFunctionCall","src":"3250:34:1"},"nodeType":"YulExpressionStatement","src":"3250:34:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3304:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3315:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3300:3:1"},"nodeType":"YulFunctionCall","src":"3300:19:1"},{"name":"value4","nodeType":"YulIdentifier","src":"3321:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3293:6:1"},"nodeType":"YulFunctionCall","src":"3293:35:1"},"nodeType":"YulExpressionStatement","src":"3293:35:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3359:3:1","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:1"},"nodeType":"YulFunctionCall","src":"3344:19:1"},{"name":"value5","nodeType":"YulIdentifier","src":"3365:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3337:6:1"},"nodeType":"YulFunctionCall","src":"3337:35:1"},"nodeType":"YulExpressionStatement","src":"3337:35:1"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2957:9:1","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2968:6:1","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2976:6:1","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2984:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2992:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3000:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3008:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3019:4:1","type":""}],"src":"2787:591:1"},{"body":{"nodeType":"YulBlock","src":"3596:276:1","statements":[{"nodeType":"YulAssignment","src":"3606:27:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3618:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3629:3:1","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3614:3:1"},"nodeType":"YulFunctionCall","src":"3614:19:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3606:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3649:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"3660:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3642:6:1"},"nodeType":"YulFunctionCall","src":"3642:25:1"},"nodeType":"YulExpressionStatement","src":"3642:25:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3687:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3698:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3683:3:1"},"nodeType":"YulFunctionCall","src":"3683:18:1"},{"name":"value1","nodeType":"YulIdentifier","src":"3703:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3676:6:1"},"nodeType":"YulFunctionCall","src":"3676:34:1"},"nodeType":"YulExpressionStatement","src":"3676:34:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3730:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3741:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3726:3:1"},"nodeType":"YulFunctionCall","src":"3726:18:1"},{"name":"value2","nodeType":"YulIdentifier","src":"3746:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3719:6:1"},"nodeType":"YulFunctionCall","src":"3719:34:1"},"nodeType":"YulExpressionStatement","src":"3719:34:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3773:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3784:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3769:3:1"},"nodeType":"YulFunctionCall","src":"3769:18:1"},{"name":"value3","nodeType":"YulIdentifier","src":"3789:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3762:6:1"},"nodeType":"YulFunctionCall","src":"3762:34:1"},"nodeType":"YulExpressionStatement","src":"3762:34:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3816:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"3827:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3812:3:1"},"nodeType":"YulFunctionCall","src":"3812:19:1"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3837:6:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3853:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3858:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3849:3:1"},"nodeType":"YulFunctionCall","src":"3849:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"3862:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3845:3:1"},"nodeType":"YulFunctionCall","src":"3845:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3833:3:1"},"nodeType":"YulFunctionCall","src":"3833:32:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3805:6:1"},"nodeType":"YulFunctionCall","src":"3805:61:1"},"nodeType":"YulExpressionStatement","src":"3805:61:1"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3533:9:1","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3544:6:1","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3552:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3560:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3568:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3576:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3587:4:1","type":""}],"src":"3383:489:1"},{"body":{"nodeType":"YulBlock","src":"4058:217:1","statements":[{"nodeType":"YulAssignment","src":"4068:27:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4080:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4091:3:1","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4076:3:1"},"nodeType":"YulFunctionCall","src":"4076:19:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4068:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4111:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"4122:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4104:6:1"},"nodeType":"YulFunctionCall","src":"4104:25:1"},"nodeType":"YulExpressionStatement","src":"4104:25:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4149:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4160:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4145:3:1"},"nodeType":"YulFunctionCall","src":"4145:18:1"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4169:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"4177:4:1","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4165:3:1"},"nodeType":"YulFunctionCall","src":"4165:17:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4138:6:1"},"nodeType":"YulFunctionCall","src":"4138:45:1"},"nodeType":"YulExpressionStatement","src":"4138:45:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4203:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4214:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4199:3:1"},"nodeType":"YulFunctionCall","src":"4199:18:1"},{"name":"value2","nodeType":"YulIdentifier","src":"4219:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4192:6:1"},"nodeType":"YulFunctionCall","src":"4192:34:1"},"nodeType":"YulExpressionStatement","src":"4192:34:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4246:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4257:2:1","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4242:3:1"},"nodeType":"YulFunctionCall","src":"4242:18:1"},{"name":"value3","nodeType":"YulIdentifier","src":"4262:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4235:6:1"},"nodeType":"YulFunctionCall","src":"4235:34:1"},"nodeType":"YulExpressionStatement","src":"4235:34:1"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4003:9:1","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4014:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4022:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4030:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4038:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4049:4:1","type":""}],"src":"3877:398:1"},{"body":{"nodeType":"YulBlock","src":"4396:102:1","statements":[{"nodeType":"YulAssignment","src":"4406:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4418:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"4429:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4414:3:1"},"nodeType":"YulFunctionCall","src":"4414:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4406:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4448:9:1"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4463:6:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4479:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4484:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4475:3:1"},"nodeType":"YulFunctionCall","src":"4475:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"4488:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4471:3:1"},"nodeType":"YulFunctionCall","src":"4471:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4459:3:1"},"nodeType":"YulFunctionCall","src":"4459:32:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4441:6:1"},"nodeType":"YulFunctionCall","src":"4441:51:1"},"nodeType":"YulExpressionStatement","src":"4441:51:1"}]},"name":"abi_encode_tuple_t_contract$_IVault_$9483__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4365:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4376:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4387:4:1","type":""}],"src":"4280:218:1"},{"body":{"nodeType":"YulBlock","src":"4624:482:1","statements":[{"nodeType":"YulVariableDeclaration","src":"4634:12:1","value":{"kind":"number","nodeType":"YulLiteral","src":"4644:2:1","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4638:2:1","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4662:9:1"},{"name":"_1","nodeType":"YulIdentifier","src":"4673:2:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4655:6:1"},"nodeType":"YulFunctionCall","src":"4655:21:1"},"nodeType":"YulExpressionStatement","src":"4655:21:1"},{"nodeType":"YulVariableDeclaration","src":"4685:27:1","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4705:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4699:5:1"},"nodeType":"YulFunctionCall","src":"4699:13:1"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4689:6:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4732:9:1"},{"name":"_1","nodeType":"YulIdentifier","src":"4743:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4728:3:1"},"nodeType":"YulFunctionCall","src":"4728:18:1"},{"name":"length","nodeType":"YulIdentifier","src":"4748:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4721:6:1"},"nodeType":"YulFunctionCall","src":"4721:34:1"},"nodeType":"YulExpressionStatement","src":"4721:34:1"},{"nodeType":"YulVariableDeclaration","src":"4764:13:1","value":{"name":"tail","nodeType":"YulIdentifier","src":"4773:4:1"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4768:1:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"4836:90:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4865:9:1"},{"name":"i","nodeType":"YulIdentifier","src":"4876:1:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4861:3:1"},"nodeType":"YulFunctionCall","src":"4861:17:1"},{"kind":"number","nodeType":"YulLiteral","src":"4880:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4857:3:1"},"nodeType":"YulFunctionCall","src":"4857:26:1"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4899:6:1"},{"name":"i","nodeType":"YulIdentifier","src":"4907:1:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4895:3:1"},"nodeType":"YulFunctionCall","src":"4895:14:1"},{"name":"_1","nodeType":"YulIdentifier","src":"4911:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4891:3:1"},"nodeType":"YulFunctionCall","src":"4891:23:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4885:5:1"},"nodeType":"YulFunctionCall","src":"4885:30:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4850:6:1"},"nodeType":"YulFunctionCall","src":"4850:66:1"},"nodeType":"YulExpressionStatement","src":"4850:66:1"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4797:1:1"},{"name":"length","nodeType":"YulIdentifier","src":"4800:6:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4794:2:1"},"nodeType":"YulFunctionCall","src":"4794:13:1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4808:19:1","statements":[{"nodeType":"YulAssignment","src":"4810:15:1","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4819:1:1"},{"name":"_1","nodeType":"YulIdentifier","src":"4822:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4815:3:1"},"nodeType":"YulFunctionCall","src":"4815:10:1"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4810:1:1"}]}]},"pre":{"nodeType":"YulBlock","src":"4790:3:1","statements":[]},"src":"4786:140:1"},{"body":{"nodeType":"YulBlock","src":"4960:69:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4989:9:1"},{"name":"length","nodeType":"YulIdentifier","src":"5000:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4985:3:1"},"nodeType":"YulFunctionCall","src":"4985:22:1"},{"kind":"number","nodeType":"YulLiteral","src":"5009:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4981:3:1"},"nodeType":"YulFunctionCall","src":"4981:31:1"},{"name":"tail","nodeType":"YulIdentifier","src":"5014:4:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4974:6:1"},"nodeType":"YulFunctionCall","src":"4974:45:1"},"nodeType":"YulExpressionStatement","src":"4974:45:1"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4941:1:1"},{"name":"length","nodeType":"YulIdentifier","src":"4944:6:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4938:2:1"},"nodeType":"YulFunctionCall","src":"4938:13:1"},"nodeType":"YulIf","src":"4935:2:1"},{"nodeType":"YulAssignment","src":"5038:62:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5054:9:1"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5073:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"5081:2:1","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5069:3:1"},"nodeType":"YulFunctionCall","src":"5069:15:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5090:2:1","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5086:3:1"},"nodeType":"YulFunctionCall","src":"5086:7:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5065:3:1"},"nodeType":"YulFunctionCall","src":"5065:29:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5050:3:1"},"nodeType":"YulFunctionCall","src":"5050:45:1"},{"kind":"number","nodeType":"YulLiteral","src":"5097:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5046:3:1"},"nodeType":"YulFunctionCall","src":"5046:54:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5038:4:1"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4593:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4604:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4615:4:1","type":""}],"src":"4503:603:1"},{"body":{"nodeType":"YulBlock","src":"5212:76:1","statements":[{"nodeType":"YulAssignment","src":"5222:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5234:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5245:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5230:3:1"},"nodeType":"YulFunctionCall","src":"5230:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5222:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5264:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"5275:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5257:6:1"},"nodeType":"YulFunctionCall","src":"5257:25:1"},"nodeType":"YulExpressionStatement","src":"5257:25:1"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5181:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5192:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5203:4:1","type":""}],"src":"5111:177:1"},{"body":{"nodeType":"YulBlock","src":"5390:87:1","statements":[{"nodeType":"YulAssignment","src":"5400:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5412:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"5423:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5408:3:1"},"nodeType":"YulFunctionCall","src":"5408:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5400:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5442:9:1"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5457:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"5465:4:1","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5453:3:1"},"nodeType":"YulFunctionCall","src":"5453:17:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5435:6:1"},"nodeType":"YulFunctionCall","src":"5435:36:1"},"nodeType":"YulExpressionStatement","src":"5435:36:1"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5359:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5370:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5381:4:1","type":""}],"src":"5293:184:1"}]},"contents":"{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value := calldataload(add(headStart, 128))\n        if iszero(eq(value, and(value, 0xff))) { revert(value4, value4) }\n        value4 := value\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, shl(240, 6401))\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_contract$_IVault_$9483__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}","id":1,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"321":[{"length":32,"start":1962}],"323":[{"length":32,"start":1995}],"325":[{"length":32,"start":1929}],"977":[{"length":32,"start":1242}],"1115":[{"length":32,"start":983}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d7146101d3578063a9059cbb146101e6578063d505accf146101f9578063dd62ed3e1461020e576100f5565b806370a08231146101905780637ecebe00146101a35780638d928af8146101b657806395d89b41146101cb576100f5565b806323b872dd116100d357806323b872dd1461014d578063313ce567146101605780633644e51514610175578063395093511461017d576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610138575b600080fd5b610102610221565b60405161010f9190610b0a565b60405180910390f35b61012b610126366004610a20565b6102b7565b60405161010f9190610a64565b6101406102ce565b60405161010f9190610a6f565b61012b61015b366004610974565b6102d4565b610168610348565b60405161010f9190610b5d565b610140610351565b61012b61018b366004610a20565b610360565b61014061019e366004610928565b61039b565b6101406101b1366004610928565b6103ba565b6101be6103d5565b60405161010f9190610af6565b6101026103f9565b61012b6101e1366004610a20565b61045a565b61012b6101f4366004610a20565b610498565b61020c6102073660046109af565b6104a5565b005b61014061021c366004610942565b6105ee565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156102ad5780601f10610282576101008083540402835291602001916102ad565b820191906000526020600020905b81548152906001019060200180831161029057829003601f168201915b5050505050905090565b60006102c433848461062b565b5060015b92915050565b60025490565b6000806102e185336105ee565b9050610305336001600160a01b03871614806102fd5750838210155b61019e610693565b6103108585856106a5565b336001600160a01b0386161480159061032b57506000198114155b1561033d5761033d853385840361062b565b506001949350505050565b60055460ff1690565b600061035b610785565b905090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102c49185906103969086610822565b61062b565b6001600160a01b0381166000908152602081905260409020545b919050565b6001600160a01b031660009081526006602052604090205490565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156102ad5780601f10610282576101008083540402835291602001916102ad565b60008061046733856105ee565b90508083106104815761047c3385600061062b565b61048e565b61048e338585840361062b565b5060019392505050565b60006102c43384846106a5565b6104b38442111560d1610693565b6001600160a01b038716600090815260066020908152604080832054905190929161050a917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d9101610a78565b604051602081830303815290604052805190602001209050600061052d8261083b565b90506000600182888888604051600081526020016040526040516105549493929190610ad8565b6020604051602081039080840390855afa158015610576573d6000803e3d6000fd5b5050604051601f19015191506105b890506001600160a01b038216158015906105b057508b6001600160a01b0316826001600160a01b0316145b6101f8610693565b6001600160a01b038b1660009081526006602052604090206001850190556105e18b8b8b61062b565b5050505050505050505050565b60006105f86103d5565b6001600160a01b0316826001600160a01b0316141561061a57506000196102c8565b6106248383610874565b90506102c8565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610686908590610a6f565b60405180910390a3505050565b816106a1576106a18161089f565b5050565b6106bc6001600160a01b0384161515610198610693565b6106d36001600160a01b0383161515610199610693565b6106de8383836108f2565b6001600160a01b03831660009081526020819052604090205461070490826101a06108f7565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107339082610822565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610686908590610a6f565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006107f261090d565b30604051602001610807959493929190610aac565b60405160208183030381529060405280519060200120905090565b60008282016108348482101583610693565b9392505050565b6000610845610785565b82604051602001610857929190610a49565b604051602081830303815290604052805190602001209050919050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b505050565b60006109068484111583610693565b5050900390565b4690565b80356001600160a01b03811681146103b557600080fd5b600060208284031215610939578081fd5b61083482610911565b60008060408385031215610954578081fd5b61095d83610911565b915061096b60208401610911565b90509250929050565b600080600060608486031215610988578081fd5b61099184610911565b925061099f60208501610911565b9150604084013590509250925092565b600080600080600080600060e0888a0312156109c9578283fd5b6109d288610911565b96506109e060208901610911565b95506040880135945060608801359350608088013560ff81168114610a03578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610a32578182fd5b610a3b83610911565b946020939093013593505050565b61190160f01b81526002810192909252602282015260420190565b901515815260200190565b90815260200190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b81811015610b3657858101830151858201604001528201610b1a565b81811115610b475783604083870101525b50601f01601f1916929092016040019392505050565b60ff9190911681526020019056fea264697066735822122022171f48bf405d239a6bb9e1934f95a2d40a928ff43932689370f9f63d3c356364736f6c63430007060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x20E JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x8D928AF8 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CB JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x17D JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x138 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x2B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xA64 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x12B PUSH2 0x15B CALLDATASIZE PUSH1 0x4 PUSH2 0x974 JUMP JUMPDEST PUSH2 0x2D4 JUMP JUMPDEST PUSH2 0x168 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xB5D JUMP JUMPDEST PUSH2 0x140 PUSH2 0x351 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0x928 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH2 0x140 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x928 JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xAF6 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x45A JUMP JUMPDEST PUSH2 0x12B PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x498 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x140 PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x282 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x290 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C4 CALLER DUP5 DUP5 PUSH2 0x62B JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2E1 DUP6 CALLER PUSH2 0x5EE JUMP JUMPDEST SWAP1 POP PUSH2 0x305 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND EQ DUP1 PUSH2 0x2FD JUMPI POP DUP4 DUP3 LT ISZERO JUMPDEST PUSH2 0x19E PUSH2 0x693 JUMP JUMPDEST PUSH2 0x310 DUP6 DUP6 DUP6 PUSH2 0x6A5 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x32B JUMPI POP PUSH1 0x0 NOT DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x33D JUMPI PUSH2 0x33D DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x62B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35B PUSH2 0x785 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2C4 SWAP2 DUP6 SWAP1 PUSH2 0x396 SWAP1 DUP7 PUSH2 0x822 JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x282 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x467 CALLER DUP6 PUSH2 0x5EE JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT PUSH2 0x481 JUMPI PUSH2 0x47C CALLER DUP6 PUSH1 0x0 PUSH2 0x62B JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH2 0x48E CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x62B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C4 CALLER DUP5 DUP5 PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0x4B3 DUP5 TIMESTAMP GT ISZERO PUSH1 0xD1 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH2 0x50A SWAP2 PUSH32 0x0 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP9 SWAP2 DUP14 SWAP2 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x52D DUP3 PUSH2 0x83B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x554 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x576 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP PUSH2 0x5B8 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x5B0 JUMPI POP DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1F8 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP6 ADD SWAP1 SSTORE PUSH2 0x5E1 DUP12 DUP12 DUP12 PUSH2 0x62B JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F8 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x61A JUMPI POP PUSH1 0x0 NOT PUSH2 0x2C8 JUMP JUMPDEST PUSH2 0x624 DUP4 DUP4 PUSH2 0x874 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x686 SWAP1 DUP6 SWAP1 PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x6A1 JUMPI PUSH2 0x6A1 DUP2 PUSH2 0x89F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6BC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x693 JUMP JUMPDEST PUSH2 0x6D3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x693 JUMP JUMPDEST PUSH2 0x6DE DUP4 DUP4 DUP4 PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x704 SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x733 SWAP1 DUP3 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x686 SWAP1 DUP6 SWAP1 PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x7F2 PUSH2 0x90D JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x807 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x834 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x693 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x845 PUSH2 0x785 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x857 SWAP3 SWAP2 SWAP1 PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x906 DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x693 JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST CHAINID SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x939 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x834 DUP3 PUSH2 0x911 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x954 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x95D DUP4 PUSH2 0x911 JUMP JUMPDEST SWAP2 POP PUSH2 0x96B PUSH1 0x20 DUP5 ADD PUSH2 0x911 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x988 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x991 DUP5 PUSH2 0x911 JUMP JUMPDEST SWAP3 POP PUSH2 0x99F PUSH1 0x20 DUP6 ADD PUSH2 0x911 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x9C9 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x9D2 DUP9 PUSH2 0x911 JUMP JUMPDEST SWAP7 POP PUSH2 0x9E0 PUSH1 0x20 DUP10 ADD PUSH2 0x911 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xA03 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA32 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xA3B DUP4 PUSH2 0x911 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB36 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB1A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB47 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 OR 0x1F 0x48 0xBF BLOCKHASH 0x5D 0x23 SWAP11 PUSH12 0xB9E1934F95A2D40A928FF439 ORIGIN PUSH9 0x9370F9F63D3C356364 PUSH20 0x6F6C634300070600330000000000000000000000 ","sourceMap":"35260:2604:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23320:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25424:167;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;24395:100::-;;;:::i;:::-;;;;;;;:::i;36356:671::-;;;;;;:::i;:::-;;:::i;24247:83::-;;;:::i;:::-;;;;;;;:::i;34445:115::-;;;:::i;26880:214::-;;;;;;:::i;:::-;;:::i;24558:119::-;;;;;;:::i;:::-;;:::i;34205:110::-;;;;;;:::i;:::-;;:::i;35555:81::-;;;:::i;:::-;;;;;;;:::i;23522:87::-;;;:::i;37158:440::-;;;;;;:::i;:::-;;:::i;24890:173::-;;;;;;:::i;:::-;;:::i;33364:775::-;;;;;;:::i;:::-;;:::i;:::-;;35948:260;;;;;;:::i;:::-;;:::i;23320:83::-;23390:5;23383:12;;;;;;;;-1:-1:-1;;23383:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23357:13;;23383:12;;23390:5;;23383:12;;23390:5;23383:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23320:83;:::o;25424:167::-;25507:4;25524:37;25533:10;25545:7;25554:6;25524:8;:37::i;:::-;-1:-1:-1;25579:4:0;25424:167;;;;;:::o;24395:100::-;24475:12;;24395:100;:::o;36356:671::-;36488:4;36505:24;36532:29;36542:6;36550:10;36532:9;:29::i;:::-;36505:56;-1:-1:-1;36572:101:0;36581:10;-1:-1:-1;;;;;36581:20:0;;;;:50;;;36625:6;36605:16;:26;;36581:50;115042:3;36572:8;:101::i;:::-;36686:36;36696:6;36704:9;36715:6;36686:9;:36::i;:::-;36739:10;-1:-1:-1;;;;;36739:20:0;;;;;;:55;;;-1:-1:-1;;36763:16:0;:31;;36739:55;36735:261;;;36929:55;36938:6;36946:10;36977:6;36958:16;:25;36929:8;:55::i;:::-;-1:-1:-1;37015:4:0;;36356:671;-1:-1:-1;;;;36356:671:0:o;24247:83::-;24313:9;;;;24247:83;:::o;34445:115::-;34505:7;34532:20;:18;:20::i;:::-;34525:27;;34445:115;:::o;26880:214::-;26994:10;26968:4;27015:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;27015:32:0;;;;;;;;;;26968:4;;26985:79;;27006:7;;27015:48;;27052:10;27015:36;:48::i;:::-;26985:8;:79::i;24558:119::-;-1:-1:-1;;;;;24651:18:0;;24624:7;24651:18;;;;;;;;;;;24558:119;;;;:::o;34205:110::-;-1:-1:-1;;;;;34293:14:0;34266:7;34293:14;;;:7;:14;;;;;;;34205:110::o;35555:81::-;35622:6;35555:81;:::o;23522:87::-;23594:7;23587:14;;;;;;;;-1:-1:-1;;23587:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23561:13;;23587:14;;23594:7;;23587:14;;23594:7;23587:14;;;;;;;;;;;;;;;;;;;;;;;;37158:440;37243:4;37260:24;37287:30;37297:10;37309:7;37287:9;:30::i;:::-;37260:57;;37344:16;37334:6;:26;37330:237;;37377:32;37386:10;37398:7;37407:1;37377:8;:32::i;:::-;37330:237;;;37499:56;37508:10;37520:7;37548:6;37529:16;:25;37499:8;:56::i;:::-;-1:-1:-1;37586:4:0;;37158:440;-1:-1:-1;;;37158:440:0:o;24890:173::-;24976:4;24993:40;25003:10;25015:9;25026:6;24993:9;:40::i;33364:775::-;33636:60;33664:8;33645:15;:27;;111223:3;33636:8;:60::i;:::-;-1:-1:-1;;;;;33725:14:0;;33709:13;33725:14;;;:7;:14;;;;;;;;;33781:68;;33725:14;;33709:13;33781:68;;33792:16;;33733:5;;33817:7;;33826:5;;33725:14;;33840:8;;33781:68;;:::i;:::-;;;;;;;;;;;;;33771:79;;;;;;33750:100;;33863:12;33878:28;33895:10;33878:16;:28::i;:::-;33863:43;;33919:14;33936:24;33946:4;33952:1;33955;33958;33936:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;33936:24:0;;-1:-1:-1;;33936:24:0;;;-1:-1:-1;33971:79:0;;-1:-1:-1;;;;;;33981:20:0;;;;;;33980:43;;;34017:5;-1:-1:-1;;;;;34007:15:0;:6;-1:-1:-1;;;;;34007:15:0;;33980:43;116542:3;33971:8;:79::i;:::-;-1:-1:-1;;;;;34063:14:0;;;;;;:7;:14;;;;;34088:1;34080:9;;34063:26;;34100:31;34071:5;34116:7;34125:5;34100:8;:31::i;:::-;33364:775;;;;;;;;;;;:::o;35948:260::-;36029:7;36072:10;:8;:10::i;:::-;-1:-1:-1;;;;;36053:30:0;:7;-1:-1:-1;;;;;36053:30:0;;36049:152;;;-1:-1:-1;;;36100:18:0;;36049:152;36158:31;36174:5;36181:7;36158:15;:31::i;:::-;36151:38;;;;30749:220;-1:-1:-1;;;;;30877:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;30929:32;;;;;30907:6;;30929:32;:::i;:::-;;;;;;;;30749:220;;;:::o;106393:103::-;106463:9;106458:34;;106474:18;106482:9;106474:7;:18::i;:::-;106393:103;;:::o;28406:572::-;28538:71;-1:-1:-1;;;;;28547:20:0;;;;114632:3;28538:8;:71::i;:::-;28620:72;-1:-1:-1;;;;;28629:23:0;;;;114701:3;28620:8;:72::i;:::-;28705:47;28726:6;28734:9;28745:6;28705:20;:47::i;:::-;-1:-1:-1;;;;;28785:17:0;;:9;:17;;;;;;;;;;;:68;;28807:6;115186:3;28785:21;:68::i;:::-;-1:-1:-1;;;;;28765:17:0;;;:9;:17;;;;;;;;;;;:88;;;;28887:20;;;;;;;:32;;28912:6;28887:24;:32::i;:::-;-1:-1:-1;;;;;28864:20:0;;;:9;:20;;;;;;;;;;;;:55;;;;28935:35;;;;;;;;;;28963:6;;28935:35;:::i;16999:190::-;17060:7;17108:10;17120:12;17134:15;17151:13;:11;:13::i;:::-;17174:4;17097:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17087:94;;;;;;17080:101;;16999:190;:::o;222020:172::-;222078:7;222110:5;;;222126:37;222135:6;;;;222078:7;222126:8;:37::i;:::-;222183:1;222020:172;-1:-1:-1;;;222020:172:0:o;17831:185::-;17908:7;17974:20;:18;:20::i;:::-;17996:10;17945:62;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17935:73;;;;;;17928:80;;17831:185;;;:::o;25126:151::-;-1:-1:-1;;;;;25242:18:0;;;25215:7;25242:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;25126:151::o;106608:3223::-;-1:-1:-1;;;109161:3:0;109154:79;;;109374:66;109368:4;109361:80;109518:1;109512:4;109505:15;108564:73;107760:2;107795:18;;;107841;;;107765:4;107837:29;;;108605:1;108601:14;107745:18;;;;108590:26;;;;107891:18;;;;107939;;;107935:29;;;108622:2;108618:17;108586:50;;;;108564:73;108559:3;108555:83;109587:4;109580:26;109817:3;;109807:14;31994:125;;;;:::o;222901:181::-;222978:7;222998:27;223012:1;223007;:6;;223015:9;222998:8;:27::i;:::-;-1:-1:-1;;223048:5:0;;;222901:181::o;18024:437::-;18434:9;;18408:46::o;14:175:1:-;84:20;;-1:-1:-1;;;;;133:31:1;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:717::-;;;;;;;;1235:3;1223:9;1214:7;1210:23;1206:33;1203:2;;;1257:6;1249;1242:22;1203:2;1285:31;1306:9;1285:31;:::i;:::-;1275:41;;1335:40;1371:2;1360:9;1356:18;1335:40;:::i;:::-;1325:50;;1422:2;1411:9;1407:18;1394:32;1384:42;;1473:2;1462:9;1458:18;1445:32;1435:42;;1527:3;1516:9;1512:19;1499:33;1572:4;1565:5;1561:16;1554:5;1551:27;1541:2;;1597:6;1589;1582:22;1541:2;1193:547;;;;-1:-1:-1;1193:547:1;;;;1625:5;1677:3;1662:19;;1649:33;;-1:-1:-1;1729:3:1;1714:19;;;1701:33;;1193:547;-1:-1:-1;;1193:547:1:o;1745:266::-;;;1874:2;1862:9;1853:7;1849:23;1845:32;1842:2;;;1895:6;1887;1880:22;1842:2;1923:31;1944:9;1923:31;:::i;:::-;1913:41;2001:2;1986:18;;;;1973:32;;-1:-1:-1;;;1832:179:1:o;2016:392::-;-1:-1:-1;;;2274:27:1;;2326:1;2317:11;;2310:27;;;;2362:2;2353:12;;2346:28;2399:2;2390:12;;2264:144::o;2413:187::-;2578:14;;2571:22;2553:41;;2541:2;2526:18;;2508:92::o;2605:177::-;2751:25;;;2739:2;2724:18;;2706:76::o;2787:591::-;3074:25;;;-1:-1:-1;;;;;3173:15:1;;;3168:2;3153:18;;3146:43;3225:15;;;;3220:2;3205:18;;3198:43;3272:2;3257:18;;3250:34;3315:3;3300:19;;3293:35;;;;3126:3;3344:19;;3337:35;3061:3;3046:19;;3028:350::o;3383:489::-;3642:25;;;3698:2;3683:18;;3676:34;;;;3741:2;3726:18;;3719:34;;;;3784:2;3769:18;;3762:34;-1:-1:-1;;;;;3833:32:1;3827:3;3812:19;;3805:61;3629:3;3614:19;;3596:276::o;3877:398::-;4104:25;;;4177:4;4165:17;;;;4160:2;4145:18;;4138:45;4214:2;4199:18;;4192:34;4257:2;4242:18;;4235:34;4091:3;4076:19;;4058:217::o;4280:218::-;-1:-1:-1;;;;;4459:32:1;;;;4441:51;;4429:2;4414:18;;4396:102::o;4503:603::-;;4644:2;4673;4662:9;4655:21;4705:6;4699:13;4748:6;4743:2;4732:9;4728:18;4721:34;4773:4;4786:140;4800:6;4797:1;4794:13;4786:140;;;4895:14;;;4891:23;;4885:30;4861:17;;;4880:2;4857:26;4850:66;4815:10;;4786:140;;;4944:6;4941:1;4938:13;4935:2;;;5014:4;5009:2;5000:6;4989:9;4985:22;4981:31;4974:45;4935:2;-1:-1:-1;5090:2:1;5069:15;-1:-1:-1;;5065:29:1;5050:45;;;;5097:2;5046:54;;4624:482;-1:-1:-1;;;4624:482:1:o;5293:184::-;5465:4;5453:17;;;;5435:36;;5423:2;5408:18;;5390:87::o"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","getVault()":"8d928af8","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"contract IVault\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Balancer Labs\",\"details\":\"- Includes functions to increase and decrease allowance as a workaround   for the well-known issue with `approve`:   https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 - Allows for 'infinite allowance', where an allowance of 0xff..ff is not   decreased by calls to transferFrom - Lets a token holder use `transferFrom` to send their own tokens,   without first setting allowance - Emits 'Approval' events whenever allowance is changed by `transferFrom` - Assigns infinite allowance for all token holders to the Vault\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"Override to grant the Vault infinite allowance, causing for Pool Tokens to not require approval. This is sound as the Vault already provides authorization mechanisms when initiation token transfers, which this contract inherits.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Override to allow decreasing allowance by more than the current amount (setting it to zero)\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Override to allow for 'infinite allowance' and let the token owner use `transferFrom` with no self-allowance\"}},\"title\":\"Highly opinionated token implementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"BalancerPoolToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"BasePool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}],"name":"SwapFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPausedState","outputs":[{"internalType":"bool","name":"paused","type":"bool"},{"internalType":"uint256","name":"pauseWindowEndTime","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodEndTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getScalingFactors","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSwapFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"uint256","name":"protocolSwapFeePercentage","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"onExitPool","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"uint256","name":"protocolSwapFeePercentage","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"onJoinPool","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"uint256","name":"protocolSwapFeePercentage","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryExit","outputs":[{"internalType":"uint256","name":"bptIn","type":"uint256"},{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"uint256","name":"protocolSwapFeePercentage","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryJoin","outputs":[{"internalType":"uint256","name":"bptOut","type":"uint256"},{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"bytes","name":"poolConfig","type":"bytes"}],"name":"setAssetManagerPoolConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"paused","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}],"name":"setSwapFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","getActionId(bytes4)":"851c1bb3","getAuthorizer()":"aaabadc5","getOwner()":"893d20e8","getPausedState()":"1c0de051","getPoolId()":"38fff2d0","getScalingFactors()":"1dd746ea","getSwapFeePercentage()":"55c67628","getVault()":"8d928af8","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)":"74f3b009","onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)":"d5c096c4","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","queryExit(bytes32,address,address,uint256[],uint256,uint256,bytes)":"6028bfd4","queryJoin(bytes32,address,address,uint256[],uint256,uint256,bytes)":"87ec6817","setAssetManagerPoolConfig(address,bytes)":"50dd6ed9","setPaused(bool)":"16c38b3c","setSwapFeePercentage(uint256)":"38e9922e","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"SwapFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getScalingFactors\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onExitPool\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onJoinPool\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryExit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryJoin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"poolConfig\",\"type\":\"bytes\"}],\"name\":\"setAssetManagerPoolConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Reference implementation for the base layer of a Pool contract that manages a single Pool with optional Asset Managers, an admin-controlled swap fee percentage, and an emergency pause mechanism. Note that neither swap fees nor the pause mechanism are used by this contract. They are passed through so that derived contracts can use them via the `_addSwapFeeAmount` and `_subtractSwapFeeAmount` functions, and the `whenNotPaused` modifier. No admin permissions are checked here: instead, this contract delegates that to the Vault's own Authorizer. Because this contract doesn't implement the swap hooks, derived contracts should generally inherit from BaseGeneralPool or BaseMinimalSwapInfoPool. Otherwise, subclasses must inherit from the corresponding interfaces and implement the swap callbacks themselves.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"Override to grant the Vault infinite allowance, causing for Pool Tokens to not require approval. This is sound as the Vault already provides authorization mechanisms when initiation token transfers, which this contract inherits.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Override to allow decreasing allowance by more than the current amount (setting it to zero)\"},\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"getPausedState()\":{\"details\":\"Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)\":{\"details\":\"Called by the Vault when a user calls `IVault.exitPool` to remove liquidity from this Pool. Returns how many tokens the Vault should deduct from the Pool's balances, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from the Pool's balances and send them to `recipient`, as well as collect the reported amount in protocol fees, which the Pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are charged on exit events to guarantee that users exiting the Pool have paid their share. `sender` is the account performing the exit (typically the pool shareholder), and `recipient` is the account to which the Vault will send the proceeds. `balances` contains the total token balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of exit (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as burning pool shares.\"},\"onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)\":{\"details\":\"Called by the Vault when a user calls `IVault.joinPool` to add liquidity to this Pool. Returns how many of each registered token the user should provide, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from `sender` and add them to the Pool's balances, as well as collect the reported amount in protocol fees, which the pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are reported and charged on join events so that the Pool is free of debt whenever new users join. `sender` is the account performing the join (from which tokens will be withdrawn), and `recipient` is the account designated to receive any benefits (typically pool shares). `balances` contains the total balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of join (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as minting pool shares.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"queryExit(bytes32,address,address,uint256[],uint256,uint256,bytes)\":{\"details\":\"Returns the amount of BPT that would be burned from `sender` if the `onExitPool` hook were called by the Vault with the same arguments, along with the number of tokens `recipient` would receive. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction.\"},\"queryJoin(bytes32,address,address,uint256[],uint256,uint256,bytes)\":{\"details\":\"Returns the amount of BPT that would be granted to `recipient` if the `onJoinPool` hook were called by the Vault with the same arguments, along with the number of tokens `sender` would have to supply. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Override to allow for 'infinite allowance' and let the token owner use `transferFrom` with no self-allowance\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"BasePool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"BasePoolAuthorization":{"abi":[{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getActionId(bytes4)":"851c1bb3","getAuthorizer()":"aaabadc5","getOwner()":"893d20e8"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Base authorization layer implementation for Pools. The owner account can call some of the permissioned functions - access control of the rest is delegated to the Authorizer. Note that this owner is immutable: more sophisticated permission schemes, such as multiple ownership, granular roles, etc., could be built on top of this by making the owner a smart contract. Access control of all other permissioned functions is delegated to an Authorizer. It is also possible to delegate control of *all* permissioned functions to the Authorizer by setting the owner address to `_DELEGATE_OWNER`.\",\"kind\":\"dev\",\"methods\":{\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"BasePoolAuthorization\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"BasePoolSplitCodeFactory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"}],"name":"PoolCreated","type":"event"},{"inputs":[],"name":"getCreationCode","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCreationCodeContracts","outputs":[{"internalType":"address","name":"contractA","type":"address"},{"internalType":"address","name":"contractB","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDefaultPoolOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"isPoolFromFactory","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getCreationCode()":"00c194db","getCreationCodeContracts()":"174481fa","getDefaultPoolOwner()":"7ff52b01","getVault()":"8d928af8","isPoolFromFactory(address)":"6634b753"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getCreationCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCreationCodeContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractB\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultPoolOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPoolFromFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Same as `BasePoolFactory`, for Pools whose creation code is so large that the factory cannot hold it.\",\"kind\":\"dev\",\"methods\":{\"getCreationCode()\":{\"details\":\"Returns the creation code of the contract this factory creates.\"},\"getCreationCodeContracts()\":{\"details\":\"Returns the two addresses where the creation code of the contract crated by this factory is stored.\"},\"getDefaultPoolOwner()\":{\"details\":\"Returns the defaultPoolOwner's address.\"},\"getVault()\":{\"details\":\"Returns the Vault's address.\"},\"isPoolFromFactory(address)\":{\"details\":\"Returns true if `pool` was created by this factory.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"BasePoolSplitCodeFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"BaseSplitCodeFactory":{"abi":[{"inputs":[],"name":"getCreationCode","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCreationCodeContracts","outputs":[{"internalType":"address","name":"contractA","type":"address"},{"internalType":"address","name":"contractB","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getCreationCode()":"00c194db","getCreationCodeContracts()":"174481fa"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getCreationCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCreationCodeContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractB\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Base factory for contracts whose creation code is so large that the factory cannot hold it. This happens when the contract's creation code grows close to 24kB. Note that this factory cannot help with contracts that have a *runtime* (deployed) bytecode larger than 24kB.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The creation code of a contract Foo can be obtained inside Solidity with `type(Foo).creationCode`.\"},\"getCreationCode()\":{\"details\":\"Returns the creation code of the contract this factory creates.\"},\"getCreationCodeContracts()\":{\"details\":\"Returns the two addresses where the creation code of the contract crated by this factory is stored.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"BaseSplitCodeFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"CodeDeployer":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e502b6227b398bfde72fc14f6c46c43082450687d740d785ebccba4fe04dbccc64736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 MUL 0xB6 0x22 PUSH28 0x398BFDE72FC14F6C46C43082450687D740D785EBCCBA4FE04DBCCC64 PUSH20 0x6F6C634300070600330000000000000000000000 ","sourceMap":"239756:2822:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e502b6227b398bfde72fc14f6c46c43082450687d740d785ebccba4fe04dbccc64736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 MUL 0xB6 0x22 PUSH28 0x398BFDE72FC14F6C46C43082450687D740D785EBCCBA4FE04DBCCC64 PUSH20 0x6F6C634300070600330000000000000000000000 ","sourceMap":"239756:2822:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library used to deploy contracts with specific code. This can be used for long-term storage of immutable data as contract code, which can be retrieved via the `extcodecopy` opcode.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"CodeDeployer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"EIP712":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"EIP712\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1480:1","statements":[{"nodeType":"YulBlock","src":"6:3:1","statements":[]},{"body":{"nodeType":"YulBlock","src":"80:797:1","statements":[{"body":{"nodeType":"YulBlock","src":"129:24:1","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"138:5:1"},{"name":"array","nodeType":"YulIdentifier","src":"145:5:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:1"},"nodeType":"YulFunctionCall","src":"131:20:1"},"nodeType":"YulExpressionStatement","src":"131:20:1"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"108:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"116:4:1","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"104:3:1"},"nodeType":"YulFunctionCall","src":"104:17:1"},{"name":"end","nodeType":"YulIdentifier","src":"123:3:1"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"100:3:1"},"nodeType":"YulFunctionCall","src":"100:27:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"93:6:1"},"nodeType":"YulFunctionCall","src":"93:35:1"},"nodeType":"YulIf","src":"90:2:1"},{"nodeType":"YulVariableDeclaration","src":"162:23:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"178:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"172:5:1"},"nodeType":"YulFunctionCall","src":"172:13:1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"166:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"194:28:1","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"212:2:1","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"216:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"208:3:1"},"nodeType":"YulFunctionCall","src":"208:10:1"},{"kind":"number","nodeType":"YulLiteral","src":"220:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"204:3:1"},"nodeType":"YulFunctionCall","src":"204:18:1"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"198:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"245:13:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"247:7:1"},"nodeType":"YulFunctionCall","src":"247:9:1"},"nodeType":"YulExpressionStatement","src":"247:9:1"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"237:2:1"},{"name":"_2","nodeType":"YulIdentifier","src":"241:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"234:2:1"},"nodeType":"YulFunctionCall","src":"234:10:1"},"nodeType":"YulIf","src":"231:2:1"},{"nodeType":"YulVariableDeclaration","src":"267:23:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"287:2:1","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"281:5:1"},"nodeType":"YulFunctionCall","src":"281:9:1"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"271:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"299:14:1","value":{"kind":"number","nodeType":"YulLiteral","src":"309:4:1","type":"","value":"0x20"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"303:2:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"322:67:1","value":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"348:6:1"},{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"364:2:1"},{"kind":"number","nodeType":"YulLiteral","src":"368:4:1","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"360:3:1"},"nodeType":"YulFunctionCall","src":"360:13:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"379:2:1","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"375:3:1"},"nodeType":"YulFunctionCall","src":"375:7:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"356:3:1"},"nodeType":"YulFunctionCall","src":"356:27:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"344:3:1"},"nodeType":"YulFunctionCall","src":"344:40:1"},{"name":"_3","nodeType":"YulIdentifier","src":"386:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"340:3:1"},"nodeType":"YulFunctionCall","src":"340:49:1"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"326:10:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"448:13:1","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"450:7:1"},"nodeType":"YulFunctionCall","src":"450:9:1"},"nodeType":"YulExpressionStatement","src":"450:9:1"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"407:10:1"},{"name":"_2","nodeType":"YulIdentifier","src":"419:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"404:2:1"},"nodeType":"YulFunctionCall","src":"404:18:1"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"427:10:1"},{"name":"memPtr","nodeType":"YulIdentifier","src":"439:6:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"424:2:1"},"nodeType":"YulFunctionCall","src":"424:22:1"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"401:2:1"},"nodeType":"YulFunctionCall","src":"401:46:1"},"nodeType":"YulIf","src":"398:2:1"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"477:2:1","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"481:10:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"470:6:1"},"nodeType":"YulFunctionCall","src":"470:22:1"},"nodeType":"YulExpressionStatement","src":"470:22:1"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"508:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"516:2:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"501:6:1"},"nodeType":"YulFunctionCall","src":"501:18:1"},"nodeType":"YulExpressionStatement","src":"501:18:1"},{"body":{"nodeType":"YulBlock","src":"565:24:1","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"574:5:1"},{"name":"array","nodeType":"YulIdentifier","src":"581:5:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"567:6:1"},"nodeType":"YulFunctionCall","src":"567:20:1"},"nodeType":"YulExpressionStatement","src":"567:20:1"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"542:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"550:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"538:3:1"},"nodeType":"YulFunctionCall","src":"538:15:1"},{"name":"_3","nodeType":"YulIdentifier","src":"555:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"534:3:1"},"nodeType":"YulFunctionCall","src":"534:24:1"},{"name":"end","nodeType":"YulIdentifier","src":"560:3:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"531:2:1"},"nodeType":"YulFunctionCall","src":"531:33:1"},"nodeType":"YulIf","src":"528:2:1"},{"nodeType":"YulVariableDeclaration","src":"598:14:1","value":{"name":"array","nodeType":"YulIdentifier","src":"607:5:1"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"602:1:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"667:87:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"696:6:1"},{"name":"i","nodeType":"YulIdentifier","src":"704:1:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"692:3:1"},"nodeType":"YulFunctionCall","src":"692:14:1"},{"name":"_3","nodeType":"YulIdentifier","src":"708:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"688:3:1"},"nodeType":"YulFunctionCall","src":"688:23:1"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"727:6:1"},{"name":"i","nodeType":"YulIdentifier","src":"735:1:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"723:3:1"},"nodeType":"YulFunctionCall","src":"723:14:1"},{"name":"_3","nodeType":"YulIdentifier","src":"739:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"719:3:1"},"nodeType":"YulFunctionCall","src":"719:23:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"713:5:1"},"nodeType":"YulFunctionCall","src":"713:30:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"681:6:1"},"nodeType":"YulFunctionCall","src":"681:63:1"},"nodeType":"YulExpressionStatement","src":"681:63:1"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"632:1:1"},{"name":"_1","nodeType":"YulIdentifier","src":"635:2:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"629:2:1"},"nodeType":"YulFunctionCall","src":"629:9:1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"639:19:1","statements":[{"nodeType":"YulAssignment","src":"641:15:1","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"650:1:1"},{"name":"_3","nodeType":"YulIdentifier","src":"653:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"646:3:1"},"nodeType":"YulFunctionCall","src":"646:10:1"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"641:1:1"}]}]},"pre":{"nodeType":"YulBlock","src":"625:3:1","statements":[]},"src":"621:133:1"},{"body":{"nodeType":"YulBlock","src":"784:63:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"813:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"821:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"809:3:1"},"nodeType":"YulFunctionCall","src":"809:15:1"},{"name":"_3","nodeType":"YulIdentifier","src":"826:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"805:3:1"},"nodeType":"YulFunctionCall","src":"805:24:1"},{"name":"array","nodeType":"YulIdentifier","src":"831:5:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"798:6:1"},"nodeType":"YulFunctionCall","src":"798:39:1"},"nodeType":"YulExpressionStatement","src":"798:39:1"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"769:1:1"},{"name":"_1","nodeType":"YulIdentifier","src":"772:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"766:2:1"},"nodeType":"YulFunctionCall","src":"766:9:1"},"nodeType":"YulIf","src":"763:2:1"},{"nodeType":"YulAssignment","src":"856:15:1","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"865:6:1"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"856:5:1"}]}]},"name":"abi_decode_t_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"54:6:1","type":""},{"name":"end","nodeType":"YulTypedName","src":"62:3:1","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"70:5:1","type":""}],"src":"14:863:1"},{"body":{"nodeType":"YulBlock","src":"1000:478:1","statements":[{"body":{"nodeType":"YulBlock","src":"1046:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1055:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"1063:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1048:6:1"},"nodeType":"YulFunctionCall","src":"1048:22:1"},"nodeType":"YulExpressionStatement","src":"1048:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1021:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"1030:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1017:3:1"},"nodeType":"YulFunctionCall","src":"1017:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"1042:2:1","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1013:3:1"},"nodeType":"YulFunctionCall","src":"1013:32:1"},"nodeType":"YulIf","src":"1010:2:1"},{"nodeType":"YulVariableDeclaration","src":"1081:30:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1101:9:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1095:5:1"},"nodeType":"YulFunctionCall","src":"1095:16:1"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1085:6:1","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1120:28:1","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1138:2:1","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1142:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1134:3:1"},"nodeType":"YulFunctionCall","src":"1134:10:1"},{"kind":"number","nodeType":"YulLiteral","src":"1146:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1130:3:1"},"nodeType":"YulFunctionCall","src":"1130:18:1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1124:2:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1175:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1184:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"1192:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1177:6:1"},"nodeType":"YulFunctionCall","src":"1177:22:1"},"nodeType":"YulExpressionStatement","src":"1177:22:1"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1163:6:1"},{"name":"_1","nodeType":"YulIdentifier","src":"1171:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1160:2:1"},"nodeType":"YulFunctionCall","src":"1160:14:1"},"nodeType":"YulIf","src":"1157:2:1"},{"nodeType":"YulAssignment","src":"1210:73:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1255:9:1"},{"name":"offset","nodeType":"YulIdentifier","src":"1266:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1251:3:1"},"nodeType":"YulFunctionCall","src":"1251:22:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1275:7:1"}],"functionName":{"name":"abi_decode_t_string_fromMemory","nodeType":"YulIdentifier","src":"1220:30:1"},"nodeType":"YulFunctionCall","src":"1220:63:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1210:6:1"}]},{"nodeType":"YulVariableDeclaration","src":"1292:41:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1318:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1329:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1314:3:1"},"nodeType":"YulFunctionCall","src":"1314:18:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1308:5:1"},"nodeType":"YulFunctionCall","src":"1308:25:1"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1296:8:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1362:26:1","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1371:6:1"},{"name":"value1","nodeType":"YulIdentifier","src":"1379:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1364:6:1"},"nodeType":"YulFunctionCall","src":"1364:22:1"},"nodeType":"YulExpressionStatement","src":"1364:22:1"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1348:8:1"},{"name":"_1","nodeType":"YulIdentifier","src":"1358:2:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1345:2:1"},"nodeType":"YulFunctionCall","src":"1345:16:1"},"nodeType":"YulIf","src":"1342:2:1"},{"nodeType":"YulAssignment","src":"1397:75:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1442:9:1"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1453:8:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1438:3:1"},"nodeType":"YulFunctionCall","src":"1438:24:1"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1464:7:1"}],"functionName":{"name":"abi_decode_t_string_fromMemory","nodeType":"YulIdentifier","src":"1407:30:1"},"nodeType":"YulFunctionCall","src":"1407:65:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1397:6:1"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"958:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"969:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"981:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"989:6:1","type":""}],"src":"882:596:1"}]},"contents":"{\n    { }\n    function abi_decode_t_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { invalid() }\n        let memPtr := mload(64)\n        let _3 := 0x20\n        let newFreePtr := add(add(memPtr, and(add(_1, 0x1f), not(31))), _3)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), _3), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _3) }\n        {\n            mstore(add(add(memPtr, i), _3), mload(add(add(offset, i), _3)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _3), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_t_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n}","id":1,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5060405161092838038061092883398101604081905261002f916101a0565b815161004290600390602085019061006b565b50805161005690600490602084019061006b565b50506005805460ff1916601217905550610200565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826100a157600085556100e7565b82601f106100ba57805160ff19168380011785556100e7565b828001600101855582156100e7579182015b828111156100e75782518255916020019190600101906100cc565b506100f39291506100f7565b5090565b5b808211156100f357600081556001016100f8565b600082601f83011261011c578081fd5b81516001600160401b038082111561013057fe5b6040516020601f8401601f191682018101838111838210171561014f57fe5b6040528382528584018101871015610165578485fd5b8492505b838310156101865785830181015182840182015291820191610169565b8383111561019657848185840101525b5095945050505050565b600080604083850312156101b2578182fd5b82516001600160401b03808211156101c8578384fd5b6101d48683870161010c565b935060208501519150808211156101e9578283fd5b506101f68582860161010c565b9150509250929050565b6107198061020f6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012957806370a082311461013c57806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ec57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b6610190565b6040516100c39190610679565b60405180910390f35b6100df6100da366004610645565b610226565b6040516100c3919061066e565b6100f461023c565b6040516100c391906106cc565b6100df61010f36600461060a565b610242565b61011c610296565b6040516100c391906106d5565b6100df610137366004610645565b61029f565b6100f461014a3660046105be565b6102d5565b6100b66102f4565b6100df610165366004610645565b610355565b6100df610178366004610645565b61038e565b6100f461018b3660046105d8565b61039b565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561021c5780601f106101f15761010080835404028352916020019161021c565b820191906000526020600020905b8154815290600101906020018083116101ff57829003601f168201915b5050505050905090565b60006102333384846103c6565b50600192915050565b60025490565b600061024f84848461042e565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461028c918691610287908661019e61050e565b6103c6565b5060019392505050565b60055460ff1690565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102339185906102879086610524565b6001600160a01b0381166000908152602081905260409020545b919050565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561021c5780601f106101f15761010080835404028352916020019161021c565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610233918590610287908661019f61050e565b600061023333848461042e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104219085906106cc565b60405180910390a3505050565b6104456001600160a01b038416151561019861053d565b61045c6001600160a01b038316151561019961053d565b61046783838361054f565b6001600160a01b03831660009081526020819052604090205461048d90826101a061050e565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546104bc9082610524565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104219085906106cc565b600061051d848411158361053d565b5050900390565b6000828201610536848210158361053d565b9392505050565b8161054b5761054b81610554565b5050565b505050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b80356001600160a01b03811681146102ef57600080fd5b6000602082840312156105cf578081fd5b610536826105a7565b600080604083850312156105ea578081fd5b6105f3836105a7565b9150610601602084016105a7565b90509250929050565b60008060006060848603121561061e578081fd5b610627846105a7565b9250610635602085016105a7565b9150604084013590509250925092565b60008060408385031215610657578182fd5b610660836105a7565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156106a557858101830151858201604001528201610689565b818111156106b65783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b60ff9190911681526020019056fea2646970667358221220d4c6aa4f21fb8af9a95207ee7f0265adc2eafa4c64edb1a7c61a1e0bb719ea9964736f6c63430007060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x928 CODESIZE SUB DUP1 PUSH2 0x928 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x1A0 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x42 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x6B JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x56 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x6B JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH2 0x200 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xA1 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xE7 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xBA JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xE7 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xE7 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xE7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xCC JUMP JUMPDEST POP PUSH2 0xF3 SWAP3 SWAP2 POP PUSH2 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x130 JUMPI INVALID JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND DUP3 ADD DUP2 ADD DUP4 DUP2 GT DUP4 DUP3 LT OR ISZERO PUSH2 0x14F JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP3 MSTORE DUP6 DUP5 ADD DUP2 ADD DUP8 LT ISZERO PUSH2 0x165 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x186 JUMPI DUP6 DUP4 ADD DUP2 ADD MLOAD DUP3 DUP5 ADD DUP3 ADD MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0x169 JUMP JUMPDEST DUP4 DUP4 GT ISZERO PUSH2 0x196 JUMPI DUP5 DUP2 DUP6 DUP5 ADD ADD MSTORE JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1C8 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1D4 DUP7 DUP4 DUP8 ADD PUSH2 0x10C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E9 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x1F6 DUP6 DUP3 DUP7 ADD PUSH2 0x10C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x719 DUP1 PUSH2 0x20F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17D JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x645 JUMP JUMPDEST PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x66E JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6CC JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x296 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6D5 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x645 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x645 JUMP JUMPDEST PUSH2 0x355 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x645 JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x21C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x21C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233 CALLER DUP5 DUP5 PUSH2 0x3C6 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F DUP5 DUP5 DUP5 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x28C SWAP2 DUP7 SWAP2 PUSH2 0x287 SWAP1 DUP7 PUSH2 0x19E PUSH2 0x50E JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x233 SWAP2 DUP6 SWAP1 PUSH2 0x287 SWAP1 DUP7 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x21C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x21C JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x233 SWAP2 DUP6 SWAP1 PUSH2 0x287 SWAP1 DUP7 PUSH2 0x19F PUSH2 0x50E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233 CALLER DUP5 DUP5 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x421 SWAP1 DUP6 SWAP1 PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x445 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x45C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x467 DUP4 DUP4 DUP4 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x48D SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x4BC SWAP1 DUP3 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x421 SWAP1 DUP6 SWAP1 PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x53D JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x536 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x53D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x54B JUMPI PUSH2 0x54B DUP2 PUSH2 0x554 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5CF JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x536 DUP3 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5EA JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5F3 DUP4 PUSH2 0x5A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x601 PUSH1 0x20 DUP5 ADD PUSH2 0x5A7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x61E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x627 DUP5 PUSH2 0x5A7 JUMP JUMPDEST SWAP3 POP PUSH2 0x635 PUSH1 0x20 DUP6 ADD PUSH2 0x5A7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x657 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x660 DUP4 PUSH2 0x5A7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6A5 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x689 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6B6 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xC6 0xAA 0x4F 0x21 0xFB DUP11 0xF9 0xA9 MSTORE SMOD 0xEE PUSH32 0x265ADC2EAFA4C64EDB1A7C61A1E0BB719EA9964736F6C634300070600330000 ","sourceMap":"22462:9660:0:-:0;;;23109:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23176:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;23200:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;23228:9:0;:14;;-1:-1:-1;;23228:14:0;23240:2;23228:14;;;-1:-1:-1;22462:9660:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22462:9660:0;;;-1:-1:-1;22462:9660:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:863:1;;123:3;116:4;108:6;104:17;100:27;90:2;;145:5;138;131:20;90:2;172:13;;-1:-1:-1;;;;;234:10:1;;;231:2;;;247:9;231:2;287;281:9;309:4;379:2;360:13;;-1:-1:-1;;356:27:1;344:40;;340:49;;404:18;;;424:22;;;401:46;398:2;;;450:9;398:2;477;470:22;501:18;;;538:15;;;534:24;;531:33;-1:-1:-1;528:2:1;;;581:5;574;567:20;528:2;607:5;598:14;;621:133;635:2;632:1;629:9;621:133;;;723:14;;;719:23;;713:30;692:14;;;688:23;;681:63;646:10;;;;621:133;;;772:2;769:1;766:9;763:2;;;831:5;826:2;821;813:6;809:15;805:24;798:39;763:2;-1:-1:-1;865:6:1;80:797;-1:-1:-1;;;;;80:797:1:o;882:596::-;;;1042:2;1030:9;1021:7;1017:23;1013:32;1010:2;;;1063:6;1055;1048:22;1010:2;1095:16;;-1:-1:-1;;;;;1160:14:1;;;1157:2;;;1192:6;1184;1177:22;1157:2;1220:63;1275:7;1266:6;1255:9;1251:22;1220:63;:::i;:::-;1210:73;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:2;;;1379:6;1371;1364:22;1342:2;;1407:65;1464:7;1453:8;1442:9;1438:24;1407:65;:::i;:::-;1397:75;;;1000:478;;;;;:::o;:::-;22462:9660:0;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2462:1","statements":[{"nodeType":"YulBlock","src":"6:3:1","statements":[]},{"body":{"nodeType":"YulBlock","src":"65:124:1","statements":[{"nodeType":"YulAssignment","src":"75:29:1","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"97:6:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"84:12:1"},"nodeType":"YulFunctionCall","src":"84:20:1"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"75:5:1"}]},{"body":{"nodeType":"YulBlock","src":"167:16:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"176:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"179:1:1","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"169:6:1"},"nodeType":"YulFunctionCall","src":"169:12:1"},"nodeType":"YulExpressionStatement","src":"169:12:1"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"126:5:1"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"137:5:1"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"152:3:1","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"157:1:1","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"148:3:1"},"nodeType":"YulFunctionCall","src":"148:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"144:3:1"},"nodeType":"YulFunctionCall","src":"144:19:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"133:3:1"},"nodeType":"YulFunctionCall","src":"133:31:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"123:2:1"},"nodeType":"YulFunctionCall","src":"123:42:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"116:6:1"},"nodeType":"YulFunctionCall","src":"116:50:1"},"nodeType":"YulIf","src":"113:2:1"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44:6:1","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"55:5:1","type":""}],"src":"14:175:1"},{"body":{"nodeType":"YulBlock","src":"264:128:1","statements":[{"body":{"nodeType":"YulBlock","src":"310:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"319:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"327:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"312:6:1"},"nodeType":"YulFunctionCall","src":"312:22:1"},"nodeType":"YulExpressionStatement","src":"312:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"285:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"294:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"281:3:1"},"nodeType":"YulFunctionCall","src":"281:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"306:2:1","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"277:3:1"},"nodeType":"YulFunctionCall","src":"277:32:1"},"nodeType":"YulIf","src":"274:2:1"},{"nodeType":"YulAssignment","src":"345:41:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"376:9:1"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"355:20:1"},"nodeType":"YulFunctionCall","src":"355:31:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"345:6:1"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"230:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"241:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"253:6:1","type":""}],"src":"194:198:1"},{"body":{"nodeType":"YulBlock","src":"484:187:1","statements":[{"body":{"nodeType":"YulBlock","src":"530:26:1","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"539:6:1"},{"name":"value1","nodeType":"YulIdentifier","src":"547:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"532:6:1"},"nodeType":"YulFunctionCall","src":"532:22:1"},"nodeType":"YulExpressionStatement","src":"532:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"505:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"514:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"501:3:1"},"nodeType":"YulFunctionCall","src":"501:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"526:2:1","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"497:3:1"},"nodeType":"YulFunctionCall","src":"497:32:1"},"nodeType":"YulIf","src":"494:2:1"},{"nodeType":"YulAssignment","src":"565:41:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"596:9:1"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"575:20:1"},"nodeType":"YulFunctionCall","src":"575:31:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"565:6:1"}]},{"nodeType":"YulAssignment","src":"615:50:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"650:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"661:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"646:3:1"},"nodeType":"YulFunctionCall","src":"646:18:1"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"625:20:1"},"nodeType":"YulFunctionCall","src":"625:40:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"615:6:1"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"442:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"453:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"465:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"473:6:1","type":""}],"src":"397:274:1"},{"body":{"nodeType":"YulBlock","src":"780:238:1","statements":[{"body":{"nodeType":"YulBlock","src":"826:26:1","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"835:6:1"},{"name":"value2","nodeType":"YulIdentifier","src":"843:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"828:6:1"},"nodeType":"YulFunctionCall","src":"828:22:1"},"nodeType":"YulExpressionStatement","src":"828:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"801:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"810:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"797:3:1"},"nodeType":"YulFunctionCall","src":"797:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"822:2:1","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"793:3:1"},"nodeType":"YulFunctionCall","src":"793:32:1"},"nodeType":"YulIf","src":"790:2:1"},{"nodeType":"YulAssignment","src":"861:41:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"892:9:1"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"871:20:1"},"nodeType":"YulFunctionCall","src":"871:31:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"861:6:1"}]},{"nodeType":"YulAssignment","src":"911:50:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"946:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"957:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"942:3:1"},"nodeType":"YulFunctionCall","src":"942:18:1"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"921:20:1"},"nodeType":"YulFunctionCall","src":"921:40:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"911:6:1"}]},{"nodeType":"YulAssignment","src":"970:42:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"997:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1008:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"993:3:1"},"nodeType":"YulFunctionCall","src":"993:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"980:12:1"},"nodeType":"YulFunctionCall","src":"980:32:1"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"970:6:1"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"730:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"741:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"753:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"761:6:1","type":""},{"name":"value2","nodeType":"YulTypedName","src":"769:6:1","type":""}],"src":"676:342:1"},{"body":{"nodeType":"YulBlock","src":"1110:179:1","statements":[{"body":{"nodeType":"YulBlock","src":"1156:26:1","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1165:6:1"},{"name":"value0","nodeType":"YulIdentifier","src":"1173:6:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1158:6:1"},"nodeType":"YulFunctionCall","src":"1158:22:1"},"nodeType":"YulExpressionStatement","src":"1158:22:1"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1131:7:1"},{"name":"headStart","nodeType":"YulIdentifier","src":"1140:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1127:3:1"},"nodeType":"YulFunctionCall","src":"1127:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"1152:2:1","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1123:3:1"},"nodeType":"YulFunctionCall","src":"1123:32:1"},"nodeType":"YulIf","src":"1120:2:1"},{"nodeType":"YulAssignment","src":"1191:41:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1222:9:1"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1201:20:1"},"nodeType":"YulFunctionCall","src":"1201:31:1"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1191:6:1"}]},{"nodeType":"YulAssignment","src":"1241:42:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1268:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1279:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1264:3:1"},"nodeType":"YulFunctionCall","src":"1264:18:1"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1251:12:1"},"nodeType":"YulFunctionCall","src":"1251:32:1"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1241:6:1"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:1","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1079:7:1","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1091:6:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1099:6:1","type":""}],"src":"1023:266:1"},{"body":{"nodeType":"YulBlock","src":"1389:92:1","statements":[{"nodeType":"YulAssignment","src":"1399:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1411:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"1422:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1407:3:1"},"nodeType":"YulFunctionCall","src":"1407:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1399:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1441:9:1"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1466:6:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1459:6:1"},"nodeType":"YulFunctionCall","src":"1459:14:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1452:6:1"},"nodeType":"YulFunctionCall","src":"1452:22:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1434:6:1"},"nodeType":"YulFunctionCall","src":"1434:41:1"},"nodeType":"YulExpressionStatement","src":"1434:41:1"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1358:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1369:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1380:4:1","type":""}],"src":"1294:187:1"},{"body":{"nodeType":"YulBlock","src":"1607:482:1","statements":[{"nodeType":"YulVariableDeclaration","src":"1617:12:1","value":{"kind":"number","nodeType":"YulLiteral","src":"1627:2:1","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1621:2:1","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1645:9:1"},{"name":"_1","nodeType":"YulIdentifier","src":"1656:2:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1638:6:1"},"nodeType":"YulFunctionCall","src":"1638:21:1"},"nodeType":"YulExpressionStatement","src":"1638:21:1"},{"nodeType":"YulVariableDeclaration","src":"1668:27:1","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1688:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1682:5:1"},"nodeType":"YulFunctionCall","src":"1682:13:1"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1672:6:1","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1715:9:1"},{"name":"_1","nodeType":"YulIdentifier","src":"1726:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1711:3:1"},"nodeType":"YulFunctionCall","src":"1711:18:1"},{"name":"length","nodeType":"YulIdentifier","src":"1731:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1704:6:1"},"nodeType":"YulFunctionCall","src":"1704:34:1"},"nodeType":"YulExpressionStatement","src":"1704:34:1"},{"nodeType":"YulVariableDeclaration","src":"1747:13:1","value":{"name":"tail","nodeType":"YulIdentifier","src":"1756:4:1"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1751:1:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"1819:90:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1848:9:1"},{"name":"i","nodeType":"YulIdentifier","src":"1859:1:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1844:3:1"},"nodeType":"YulFunctionCall","src":"1844:17:1"},{"kind":"number","nodeType":"YulLiteral","src":"1863:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1840:3:1"},"nodeType":"YulFunctionCall","src":"1840:26:1"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1882:6:1"},{"name":"i","nodeType":"YulIdentifier","src":"1890:1:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1878:3:1"},"nodeType":"YulFunctionCall","src":"1878:14:1"},{"name":"_1","nodeType":"YulIdentifier","src":"1894:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1874:3:1"},"nodeType":"YulFunctionCall","src":"1874:23:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1868:5:1"},"nodeType":"YulFunctionCall","src":"1868:30:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1833:6:1"},"nodeType":"YulFunctionCall","src":"1833:66:1"},"nodeType":"YulExpressionStatement","src":"1833:66:1"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1780:1:1"},{"name":"length","nodeType":"YulIdentifier","src":"1783:6:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1777:2:1"},"nodeType":"YulFunctionCall","src":"1777:13:1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1791:19:1","statements":[{"nodeType":"YulAssignment","src":"1793:15:1","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1802:1:1"},{"name":"_1","nodeType":"YulIdentifier","src":"1805:2:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1798:3:1"},"nodeType":"YulFunctionCall","src":"1798:10:1"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1793:1:1"}]}]},"pre":{"nodeType":"YulBlock","src":"1773:3:1","statements":[]},"src":"1769:140:1"},{"body":{"nodeType":"YulBlock","src":"1943:69:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1972:9:1"},{"name":"length","nodeType":"YulIdentifier","src":"1983:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1968:3:1"},"nodeType":"YulFunctionCall","src":"1968:22:1"},{"kind":"number","nodeType":"YulLiteral","src":"1992:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1964:3:1"},"nodeType":"YulFunctionCall","src":"1964:31:1"},{"name":"tail","nodeType":"YulIdentifier","src":"1997:4:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1957:6:1"},"nodeType":"YulFunctionCall","src":"1957:45:1"},"nodeType":"YulExpressionStatement","src":"1957:45:1"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1924:1:1"},{"name":"length","nodeType":"YulIdentifier","src":"1927:6:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1921:2:1"},"nodeType":"YulFunctionCall","src":"1921:13:1"},"nodeType":"YulIf","src":"1918:2:1"},{"nodeType":"YulAssignment","src":"2021:62:1","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2037:9:1"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2056:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"2064:2:1","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2052:3:1"},"nodeType":"YulFunctionCall","src":"2052:15:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2073:2:1","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2069:3:1"},"nodeType":"YulFunctionCall","src":"2069:7:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2048:3:1"},"nodeType":"YulFunctionCall","src":"2048:29:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2033:3:1"},"nodeType":"YulFunctionCall","src":"2033:45:1"},{"kind":"number","nodeType":"YulLiteral","src":"2080:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2029:3:1"},"nodeType":"YulFunctionCall","src":"2029:54:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2021:4:1"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1576:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1587:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1598:4:1","type":""}],"src":"1486:603:1"},{"body":{"nodeType":"YulBlock","src":"2195:76:1","statements":[{"nodeType":"YulAssignment","src":"2205:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2217:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2228:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2213:3:1"},"nodeType":"YulFunctionCall","src":"2213:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2205:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2247:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"2258:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2240:6:1"},"nodeType":"YulFunctionCall","src":"2240:25:1"},"nodeType":"YulExpressionStatement","src":"2240:25:1"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2164:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2175:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2186:4:1","type":""}],"src":"2094:177:1"},{"body":{"nodeType":"YulBlock","src":"2373:87:1","statements":[{"nodeType":"YulAssignment","src":"2383:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2395:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"2406:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2391:3:1"},"nodeType":"YulFunctionCall","src":"2391:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2383:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2425:9:1"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2440:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"2448:4:1","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2436:3:1"},"nodeType":"YulFunctionCall","src":"2436:17:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2418:6:1"},"nodeType":"YulFunctionCall","src":"2418:36:1"},"nodeType":"YulExpressionStatement","src":"2418:36:1"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2342:9:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2353:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2364:4:1","type":""}],"src":"2276:184:1"}]},"contents":"{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}","id":1,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012957806370a082311461013c57806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ec57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b6610190565b6040516100c39190610679565b60405180910390f35b6100df6100da366004610645565b610226565b6040516100c3919061066e565b6100f461023c565b6040516100c391906106cc565b6100df61010f36600461060a565b610242565b61011c610296565b6040516100c391906106d5565b6100df610137366004610645565b61029f565b6100f461014a3660046105be565b6102d5565b6100b66102f4565b6100df610165366004610645565b610355565b6100df610178366004610645565b61038e565b6100f461018b3660046105d8565b61039b565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561021c5780601f106101f15761010080835404028352916020019161021c565b820191906000526020600020905b8154815290600101906020018083116101ff57829003601f168201915b5050505050905090565b60006102333384846103c6565b50600192915050565b60025490565b600061024f84848461042e565b6001600160a01b03841660009081526001602090815260408083203380855292529091205461028c918691610287908661019e61050e565b6103c6565b5060019392505050565b60055460ff1690565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102339185906102879086610524565b6001600160a01b0381166000908152602081905260409020545b919050565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561021c5780601f106101f15761010080835404028352916020019161021c565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610233918590610287908661019f61050e565b600061023333848461042e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104219085906106cc565b60405180910390a3505050565b6104456001600160a01b038416151561019861053d565b61045c6001600160a01b038316151561019961053d565b61046783838361054f565b6001600160a01b03831660009081526020819052604090205461048d90826101a061050e565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546104bc9082610524565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104219085906106cc565b600061051d848411158361053d565b5050900390565b6000828201610536848210158361053d565b9392505050565b8161054b5761054b81610554565b5050565b505050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b80356001600160a01b03811681146102ef57600080fd5b6000602082840312156105cf578081fd5b610536826105a7565b600080604083850312156105ea578081fd5b6105f3836105a7565b9150610601602084016105a7565b90509250929050565b60008060006060848603121561061e578081fd5b610627846105a7565b9250610635602085016105a7565b9150604084013590509250925092565b60008060408385031215610657578182fd5b610660836105a7565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156106a557858101830151858201604001528201610689565b818111156106b65783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b60ff9190911681526020019056fea2646970667358221220d4c6aa4f21fb8af9a95207ee7f0265adc2eafa4c64edb1a7c61a1e0bb719ea9964736f6c63430007060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17D JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x645 JUMP JUMPDEST PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x66E JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6CC JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x296 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6D5 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x645 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x645 JUMP JUMPDEST PUSH2 0x355 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x645 JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x21C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x21C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233 CALLER DUP5 DUP5 PUSH2 0x3C6 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F DUP5 DUP5 DUP5 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x28C SWAP2 DUP7 SWAP2 PUSH2 0x287 SWAP1 DUP7 PUSH2 0x19E PUSH2 0x50E JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x233 SWAP2 DUP6 SWAP1 PUSH2 0x287 SWAP1 DUP7 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x21C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x21C JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x233 SWAP2 DUP6 SWAP1 PUSH2 0x287 SWAP1 DUP7 PUSH2 0x19F PUSH2 0x50E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233 CALLER DUP5 DUP5 PUSH2 0x42E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x421 SWAP1 DUP6 SWAP1 PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x445 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x198 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x45C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH2 0x199 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x467 DUP4 DUP4 DUP4 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x48D SWAP1 DUP3 PUSH2 0x1A0 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x4BC SWAP1 DUP3 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x421 SWAP1 DUP6 SWAP1 PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51D DUP5 DUP5 GT ISZERO DUP4 PUSH2 0x53D JUMP JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH2 0x536 DUP5 DUP3 LT ISZERO DUP4 PUSH2 0x53D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x54B JUMPI PUSH2 0x54B DUP2 PUSH2 0x554 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 MSTORE PUSH1 0x7 PUSH1 0x24 MSTORE PUSH7 0x42414C23000030 PUSH1 0xA DUP1 DUP5 DIV DUP2 DUP2 MOD PUSH1 0x30 SWAP1 DUP2 ADD PUSH1 0x8 SHL SWAP6 DUP4 SWAP1 MOD SWAP6 SWAP1 SWAP6 ADD SWAP1 DUP3 SWAP1 DIV SWAP2 DUP3 MOD SWAP1 SWAP5 ADD PUSH1 0x10 SHL SWAP4 SWAP1 SWAP4 ADD ADD PUSH1 0xC8 SHL PUSH1 0x44 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5CF JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x536 DUP3 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5EA JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x5F3 DUP4 PUSH2 0x5A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x601 PUSH1 0x20 DUP5 ADD PUSH2 0x5A7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x61E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x627 DUP5 PUSH2 0x5A7 JUMP JUMPDEST SWAP3 POP PUSH2 0x635 PUSH1 0x20 DUP6 ADD PUSH2 0x5A7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x657 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x660 DUP4 PUSH2 0x5A7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6A5 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x689 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6B6 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xC6 0xAA 0x4F 0x21 0xFB DUP11 0xF9 0xA9 MSTORE SMOD 0xEE PUSH32 0x265ADC2EAFA4C64EDB1A7C61A1E0BB719EA9964736F6C634300070600330000 ","sourceMap":"22462:9660:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23320:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25424:167;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;24395:100::-;;;:::i;:::-;;;;;;;:::i;26073:398::-;;;;;;:::i;:::-;;:::i;24247:83::-;;;:::i;:::-;;;;;;;:::i;26880:214::-;;;;;;:::i;:::-;;:::i;24558:119::-;;;;;;:::i;:::-;;:::i;23522:87::-;;;:::i;27597:319::-;;;;;;:::i;:::-;;:::i;24890:173::-;;;;;;:::i;:::-;;:::i;25126:151::-;;;;;;:::i;:::-;;:::i;23320:83::-;23390:5;23383:12;;;;;;;;-1:-1:-1;;23383:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23357:13;;23383:12;;23390:5;;23383:12;;23390:5;23383:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23320:83;:::o;25424:167::-;25507:4;25524:37;25533:10;25545:7;25554:6;25524:8;:37::i;:::-;-1:-1:-1;25579:4:0;25424:167;;;;:::o;24395:100::-;24475:12;;24395:100;:::o;26073:398::-;26213:4;26230:36;26240:6;26248:9;26259:6;26230:9;:36::i;:::-;-1:-1:-1;;;;;26346:19:0;;;;;;:11;:19;;;;;;;;26321:10;26346:31;;;;;;;;;26277:164;;26300:6;;26346:84;;26382:6;115042:3;26346:35;:84::i;:::-;26277:8;:164::i;:::-;-1:-1:-1;26459:4:0;26073:398;;;;;:::o;24247:83::-;24313:9;;;;24247:83;:::o;26880:214::-;26994:10;26968:4;27015:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;27015:32:0;;;;;;;;;;26968:4;;26985:79;;27006:7;;27015:48;;27052:10;27015:36;:48::i;24558:119::-;-1:-1:-1;;;;;24651:18:0;;24624:7;24651:18;;;;;;;;;;;24558:119;;;;:::o;23522:87::-;23594:7;23587:14;;;;;;;;-1:-1:-1;;23587:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23561:13;;23587:14;;23594:7;;23587:14;;23594:7;23587:14;;;;;;;;;;;;;;;;;;;;;;;;27597:319;27730:10;27690:4;27777:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;27777:32:0;;;;;;;;;;27690:4;;27707:179;;27755:7;;27777:98;;27814:15;115117:3;27777:36;:98::i;24890:173::-;24976:4;24993:40;25003:10;25015:9;25026:6;24993:9;:40::i;25126:151::-;-1:-1:-1;;;;;25242:18:0;;;25215:7;25242:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;25126:151::o;30749:220::-;-1:-1:-1;;;;;30877:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;30929:32;;;;;30907:6;;30929:32;:::i;:::-;;;;;;;;30749:220;;;:::o;28406:572::-;28538:71;-1:-1:-1;;;;;28547:20:0;;;;114632:3;28538:8;:71::i;:::-;28620:72;-1:-1:-1;;;;;28629:23:0;;;;114701:3;28620:8;:72::i;:::-;28705:47;28726:6;28734:9;28745:6;28705:20;:47::i;:::-;-1:-1:-1;;;;;28785:17:0;;:9;:17;;;;;;;;;;;:68;;28807:6;115186:3;28785:21;:68::i;:::-;-1:-1:-1;;;;;28765:17:0;;;:9;:17;;;;;;;;;;;:88;;;;28887:20;;;;;;;:32;;28912:6;28887:24;:32::i;:::-;-1:-1:-1;;;;;28864:20:0;;;:9;:20;;;;;;;;;;;;:55;;;;28935:35;;;;;;;;;;28963:6;;28935:35;:::i;222901:181::-;222978:7;222998:27;223012:1;223007;:6;;223015:9;222998:8;:27::i;:::-;-1:-1:-1;;223048:5:0;;;222901:181::o;222020:172::-;222078:7;222110:5;;;222126:37;222135:6;;;;222078:7;222126:8;:37::i;:::-;222183:1;222020:172;-1:-1:-1;;;222020:172:0:o;106393:103::-;106463:9;106458:34;;106474:18;106482:9;106474:7;:18::i;:::-;106393:103;;:::o;31994:125::-;;;;:::o;106608:3223::-;-1:-1:-1;;;109161:3:0;109154:79;;;109374:66;109368:4;109361:80;109518:1;109512:4;109505:15;108564:73;107760:2;107795:18;;;107841;;;107765:4;107837:29;;;108605:1;108601:14;107745:18;;;;108590:26;;;;107891:18;;;;107939;;;107935:29;;;108622:2;108618:17;108586:50;;;;108564:73;108559:3;108555:83;109587:4;109580:26;109817:3;;109807:14;14:175:1;84:20;;-1:-1:-1;;;;;133:31:1;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:1:o;1294:187::-;1459:14;;1452:22;1434:41;;1422:2;1407:18;;1389:92::o;1486:603::-;;1627:2;1656;1645:9;1638:21;1688:6;1682:13;1731:6;1726:2;1715:9;1711:18;1704:34;1756:4;1769:140;1783:6;1780:1;1777:13;1769:140;;;1878:14;;;1874:23;;1868:30;1844:17;;;1863:2;1840:26;1833:66;1798:10;;1769:140;;;1927:6;1924:1;1921:13;1918:2;;;1997:4;1992:2;1983:6;1972:9;1968:22;1964:31;1957:45;1918:2;-1:-1:-1;2073:2:1;2052:15;-1:-1:-1;;2048:29:1;2033:45;;;;2080:2;2029:54;;1607:482;-1:-1:-1;;;1607:482:1:o;2094:177::-;2240:25;;;2228:2;2213:18;;2195:76::o;2276:184::-;2448:4;2436:17;;;;2418:36;;2406:2;2391:18;;2373:87::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"ERC20Permit":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"ERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"Errors":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a986d0c4976ab7d84b55bbaffaca72a01f53cec663da7f89445a94ddca65ff9164736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 DUP7 0xD0 0xC4 SWAP8 PUSH11 0xB7D84B55BBAFFACA72A01F MSTORE8 0xCE 0xC6 PUSH4 0xDA7F8944 GAS SWAP5 0xDD 0xCA PUSH6 0xFF9164736F6C PUSH4 0x43000706 STOP CALLER ","sourceMap":"109835:8368:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a986d0c4976ab7d84b55bbaffaca72a01f53cec663da7f89445a94ddca65ff9164736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 DUP7 0xD0 0xC4 SWAP8 PUSH11 0xB7D84B55BBAFFACA72A01F MSTORE8 0xCE 0xC6 PUSH4 0xDA7F8944 GAS SWAP5 0xDD 0xCA PUSH6 0xFF9164736F6C PUSH4 0x43000706 STOP CALLER ","sourceMap":"109835:8368:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"Errors\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"FactoryWidePauseWindow":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"getPauseConfiguration","outputs":[{"internalType":"uint256","name":"pauseWindowDuration","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodDuration","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60a060405234801561001057600080fd5b50426276a7000160805260805160f461003560003980604e52806076525060f46000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80632da47c4014602d575b600080fd5b60336048565b604051603f92919060b0565b60405180910390f35b600080427f000000000000000000000000000000000000000000000000000000000000000081101560a257807f000000000000000000000000000000000000000000000000000000000000000003925062278d00915060ab565b60009250600091505b509091565b91825260208201526040019056fea2646970667358221220bb19938335c15181db69ccc95bf291228df187299830486c8f0c3e541878d60664736f6c63430007060033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP TIMESTAMP PUSH3 0x76A700 ADD PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD PUSH1 0xF4 PUSH2 0x35 PUSH1 0x0 CODECOPY DUP1 PUSH1 0x4E MSTORE DUP1 PUSH1 0x76 MSTORE POP PUSH1 0xF4 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2DA47C40 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3F SWAP3 SWAP2 SWAP1 PUSH1 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP PUSH32 0x0 DUP2 LT ISZERO PUSH1 0xA2 JUMPI DUP1 PUSH32 0x0 SUB SWAP3 POP PUSH3 0x278D00 SWAP2 POP PUSH1 0xAB JUMP JUMPDEST PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST POP SWAP1 SWAP2 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB NOT SWAP4 DUP4 CALLDATALOAD 0xC1 MLOAD DUP2 0xDB PUSH10 0xCCC95BF291228DF18729 SWAP9 ADDRESS 0x48 PUSH13 0x8F0C3E541878D60664736F6C63 NUMBER STOP SMOD MOD STOP CALLER ","sourceMap":"236139:1908:0:-:0;;;236666:108;;;;;;;;;-1:-1:-1;236718:15:0;236395:7;236718:48;236691:75;;236139:1908;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:264:1","statements":[{"nodeType":"YulBlock","src":"6:3:1","statements":[]},{"body":{"nodeType":"YulBlock","src":"143:119:1","statements":[{"nodeType":"YulAssignment","src":"153:26:1","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"165:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"176:2:1","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"161:3:1"},"nodeType":"YulFunctionCall","src":"161:18:1"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"153:4:1"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"195:9:1"},{"name":"value0","nodeType":"YulIdentifier","src":"206:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"188:6:1"},"nodeType":"YulFunctionCall","src":"188:25:1"},"nodeType":"YulExpressionStatement","src":"188:25:1"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"233:9:1"},{"kind":"number","nodeType":"YulLiteral","src":"244:2:1","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"229:3:1"},"nodeType":"YulFunctionCall","src":"229:18:1"},{"name":"value1","nodeType":"YulIdentifier","src":"249:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"222:6:1"},"nodeType":"YulFunctionCall","src":"222:34:1"},"nodeType":"YulExpressionStatement","src":"222:34:1"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:1","type":""},{"name":"value1","nodeType":"YulTypedName","src":"115:6:1","type":""},{"name":"value0","nodeType":"YulTypedName","src":"123:6:1","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"134:4:1","type":""}],"src":"14:248:1"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}","id":1,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"10068":[{"length":32,"start":78},{"length":32,"start":118}]},"linkReferences":{},"object":"6080604052348015600f57600080fd5b506004361060285760003560e01c80632da47c4014602d575b600080fd5b60336048565b604051603f92919060b0565b60405180910390f35b600080427f000000000000000000000000000000000000000000000000000000000000000081101560a257807f000000000000000000000000000000000000000000000000000000000000000003925062278d00915060ab565b60009250600091505b509091565b91825260208201526040019056fea2646970667358221220bb19938335c15181db69ccc95bf291228df187299830486c8f0c3e541878d60664736f6c63430007060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2DA47C40 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3F SWAP3 SWAP2 SWAP1 PUSH1 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP PUSH32 0x0 DUP2 LT ISZERO PUSH1 0xA2 JUMPI DUP1 PUSH32 0x0 SUB SWAP3 POP PUSH3 0x278D00 SWAP2 POP PUSH1 0xAB JUMP JUMPDEST PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST POP SWAP1 SWAP2 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB NOT SWAP4 DUP4 CALLDATALOAD 0xC1 MLOAD DUP2 0xDB PUSH10 0xCCC95BF291228DF18729 SWAP9 ADDRESS 0x48 PUSH13 0x8F0C3E541878D60664736F6C63 NUMBER STOP SMOD MOD STOP CALLER ","sourceMap":"236139:1908:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;237142:902;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;237196:27;;237288:15;237332:24;237318:38;;237314:723;;;237659:11;237632:24;:38;237610:60;;236460:7;237720:46;;237314:723;;;237985:1;237963:23;;238024:1;238001:24;;237314:723;237142:902;;;:::o;14:248:1:-;188:25;;;244:2;229:18;;222:34;176:2;161:18;;143:119::o"},"methodIdentifiers":{"getPauseConfiguration()":"2da47c40"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getPauseConfiguration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pauseWindowDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodDuration\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Utility to create Pool factories for Pools that use the `TemporarilyPausable` contract. By calling `TemporarilyPausable`'s constructor with the result of `getPauseConfiguration`, all Pools created by this factory will share the same Pause Window end time, after which both old and new Pools will not be pausable.\",\"kind\":\"dev\",\"methods\":{\"getPauseConfiguration()\":{\"details\":\"Returns the current `TemporarilyPausable` configuration that will be applied to Pools created by this factory. `pauseWindowDuration` will decrease over time until it reaches zero, at which point both it and `bufferPeriodDuration` will be zero forever, meaning deployed Pools will not be pausable.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"FactoryWidePauseWindow\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"FixedPoint":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088cb15720af9beac0835309dba9c37a82fb9221336d509c05a3cf8d2311746ce64736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xCB ISZERO PUSH19 0xAF9BEAC0835309DBA9C37A82FB9221336D509 0xC0 GAS EXTCODECOPY 0xF8 0xD2 BALANCE OR CHAINID 0xCE PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"120307:4204:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088cb15720af9beac0835309dba9c37a82fb9221336d509c05a3cf8d2311746ce64736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xCB ISZERO PUSH19 0xAF9BEAC0835309DBA9C37A82FB9221336D509 0xC0 GAS EXTCODECOPY 0xF8 0xD2 BALANCE OR CHAINID 0xCE PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"120307:4204:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"FixedPoint\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"IAsset":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is an empty interface used to represent either ERC20-conforming token contracts or ETH (using the zero address sentinel value). We're just relying on the fact that `interface` can be used to declare new address-like types. This concept is unrelated to a Pool's Asset Managers.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"IAsset\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"IAssetManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"poolId","type":"bytes32"}],"name":"Rebalance","type":"event"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"capitalOut","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"name":"getAUM","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"name":"getPoolBalances","outputs":[{"internalType":"uint256","name":"poolCash","type":"uint256"},{"internalType":"uint256","name":"poolManaged","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"name":"maxInvestableBalance","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"bool","name":"force","type":"bool"}],"name":"rebalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"bytes","name":"config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"cash","type":"uint256"},{"internalType":"uint256","name":"managed","type":"uint256"}],"name":"shouldRebalance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"name":"updateBalanceOfPool","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"capitalOut(bytes32,uint256)":"2b13a509","getAUM(bytes32)":"dc99fc21","getPoolBalances(bytes32)":"76bad529","getToken()":"21df0da7","maxInvestableBalance(bytes32)":"ea748923","rebalance(bytes32,bool)":"4c936d8a","setConfig(bytes32,bytes)":"18e736d4","shouldRebalance(uint256,uint256)":"9c64ad30","updateBalanceOfPool(bytes32)":"0b5ff6b9"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"Rebalance\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"capitalOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getAUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPoolBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolCash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolManaged\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"maxInvestableBalance\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managed\",\"type\":\"uint256\"}],\"name\":\"shouldRebalance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"updateBalanceOfPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"capitalOut(bytes32,uint256)\":{\"params\":{\"amount\":\"- the amount of tokens to withdraw back to the pool\",\"poolId\":\"- the poolId of the pool to withdraw funds back to\"}},\"getAUM(bytes32)\":{\"returns\":{\"_0\":\"the current assets under management of this asset manager\"}},\"getPoolBalances(bytes32)\":{\"returns\":{\"poolCash\":\"- The up-to-date cash balance of the pool\",\"poolManaged\":\"- The up-to-date managed balance of the pool\"}},\"maxInvestableBalance(bytes32)\":{\"returns\":{\"_0\":\"The difference in tokens between the target investment and the currently invested amount (i.e. the amount that can be invested)\"}},\"rebalance(bytes32,bool)\":{\"params\":{\"force\":\"- a boolean representing whether a rebalance should be forced even when the pool is near balance\",\"poolId\":\"- the poolId of the pool to be rebalanced\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Rebalance(bytes32)\":{\"notice\":\"Emitted when asset manager is rebalanced\"}},\"kind\":\"user\",\"methods\":{\"capitalOut(bytes32,uint256)\":{\"notice\":\"allows an authorized rebalancer to remove capital to facilitate large withdrawals\"},\"getToken()\":{\"notice\":\"Returns the asset manager's token\"},\"rebalance(bytes32,bool)\":{\"notice\":\"Rebalances funds between the pool and the asset manager to maintain target investment percentage.\"},\"setConfig(bytes32,bytes)\":{\"notice\":\"Sets the config\"},\"shouldRebalance(uint256,uint256)\":{\"notice\":\"Determines whether the pool should rebalance given the provided balances\"},\"updateBalanceOfPool(bytes32)\":{\"notice\":\"Updates the Vault on the value of the pool's investment returns\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"IAssetManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"IAuthentication":{"abi":[{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getActionId(bytes4)":"851c1bb3"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"IAuthentication\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"IAuthorizer":{"abi":[{"inputs":[{"internalType":"bytes32","name":"actionId","type":"bytes32"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"where","type":"address"}],"name":"canPerform","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"canPerform(bytes32,address,address)":"9be2a884"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"canPerform\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canPerform(bytes32,address,address)\":{\"details\":\"Returns true if `account` can perform the action described by `actionId` in the contract `where`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"IAuthorizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"IBasePool":{"abi":[{"inputs":[],"name":"getPoolId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"uint256","name":"protocolSwapFeePercentage","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"onExitPool","outputs":[{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"},{"internalType":"uint256[]","name":"dueProtocolFeeAmounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"uint256","name":"protocolSwapFeePercentage","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"onJoinPool","outputs":[{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"},{"internalType":"uint256[]","name":"dueProtocolFeeAmounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getPoolId()":"38fff2d0","onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)":"74f3b009","onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)":"d5c096c4"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onExitPool\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"dueProtocolFeeAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onJoinPool\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"dueProtocolFeeAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for adding and removing liquidity that all Pool contracts should implement. Note that this is not the complete Pool contract interface, as it is missing the swap hooks. Pool contracts should also inherit from either IGeneralPool or IMinimalSwapInfoPool\",\"kind\":\"dev\",\"methods\":{\"onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)\":{\"details\":\"Called by the Vault when a user calls `IVault.exitPool` to remove liquidity from this Pool. Returns how many tokens the Vault should deduct from the Pool's balances, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from the Pool's balances and send them to `recipient`, as well as collect the reported amount in protocol fees, which the Pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are charged on exit events to guarantee that users exiting the Pool have paid their share. `sender` is the account performing the exit (typically the pool shareholder), and `recipient` is the account to which the Vault will send the proceeds. `balances` contains the total token balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of exit (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as burning pool shares.\"},\"onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)\":{\"details\":\"Called by the Vault when a user calls `IVault.joinPool` to add liquidity to this Pool. Returns how many of each registered token the user should provide, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from `sender` and add them to the Pool's balances, as well as collect the reported amount in protocol fees, which the pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are reported and charged on join events so that the Pool is free of debt whenever new users join. `sender` is the account performing the join (from which tokens will be withdrawn), and `recipient` is the account designated to receive any benefits (typically pool shares). `balances` contains the total balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of join (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as minting pool shares.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"IBasePool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"IFlashLoanRecipient":{"abi":[{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"receiveFlashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"receiveFlashLoan(address[],uint256[],uint256[],bytes)":"f04f2707"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"IFlashLoanRecipient\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"IGeneralPool":{"abi":[{"inputs":[],"name":"getPoolId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"uint256","name":"protocolSwapFeePercentage","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"onExitPool","outputs":[{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"},{"internalType":"uint256[]","name":"dueProtocolFeeAmounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"uint256","name":"protocolSwapFeePercentage","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"onJoinPool","outputs":[{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"},{"internalType":"uint256[]","name":"dueProtocolFeeAmounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IPoolSwapStructs.SwapRequest","name":"swapRequest","type":"tuple"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"indexIn","type":"uint256"},{"internalType":"uint256","name":"indexOut","type":"uint256"}],"name":"onSwap","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getPoolId()":"38fff2d0","onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)":"74f3b009","onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)":"d5c096c4","onSwap((uint8,address,address,uint256,bytes32,uint256,address,address,bytes),uint256[],uint256,uint256)":"01ec954a"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onExitPool\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"dueProtocolFeeAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onJoinPool\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"dueProtocolFeeAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPoolSwapStructs.SwapRequest\",\"name\":\"swapRequest\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"}],\"name\":\"onSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"IPools with the General specialization setting should implement this interface. This is called by the Vault when a user calls `IVault.swap` or `IVault.batchSwap` to swap with this Pool. Returns the number of tokens the Pool will grant to the user in a 'given in' swap, or that the user will grant to the pool in a 'given out' swap. This can often be implemented by a `view` function, since many pricing algorithms don't need to track state changes in swaps. However, contracts implementing this in non-view functions should check that the caller is indeed the Vault.\",\"kind\":\"dev\",\"methods\":{\"onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)\":{\"details\":\"Called by the Vault when a user calls `IVault.exitPool` to remove liquidity from this Pool. Returns how many tokens the Vault should deduct from the Pool's balances, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from the Pool's balances and send them to `recipient`, as well as collect the reported amount in protocol fees, which the Pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are charged on exit events to guarantee that users exiting the Pool have paid their share. `sender` is the account performing the exit (typically the pool shareholder), and `recipient` is the account to which the Vault will send the proceeds. `balances` contains the total token balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of exit (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as burning pool shares.\"},\"onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)\":{\"details\":\"Called by the Vault when a user calls `IVault.joinPool` to add liquidity to this Pool. Returns how many of each registered token the user should provide, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from `sender` and add them to the Pool's balances, as well as collect the reported amount in protocol fees, which the pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are reported and charged on join events so that the Pool is free of debt whenever new users join. `sender` is the account performing the join (from which tokens will be withdrawn), and `recipient` is the account designated to receive any benefits (typically pool shares). `balances` contains the total balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of join (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as minting pool shares.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"IGeneralPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"ILendingPool":{"abi":[{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getReserveNormalizedIncome","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getReserveNormalizedIncome(address)":"d15e0053"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getReserveNormalizedIncome(address)\":{\"details\":\"returns a 27 decimal fixed point 'ray' value so a rate of 1 is represented as 1e27\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"ILendingPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"IPoolSwapStructs":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"IPoolSwapStructs\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"IProtocolFeesCollector":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newFlashLoanFeePercentage","type":"uint256"}],"name":"FlashLoanFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newSwapFeePercentage","type":"uint256"}],"name":"SwapFeePercentageChanged","type":"event"},{"inputs":[],"name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"getCollectedFeeAmounts","outputs":[{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFlashLoanFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSwapFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"newFlashLoanFeePercentage","type":"uint256"}],"name":"setFlashLoanFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newSwapFeePercentage","type":"uint256"}],"name":"setSwapFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address","name":"recipient","type":"address"}],"name":"withdrawCollectedFees","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getAuthorizer()":"aaabadc5","getCollectedFeeAmounts(address[])":"e42abf35","getFlashLoanFeePercentage()":"d877845c","getSwapFeePercentage()":"55c67628","setFlashLoanFeePercentage(uint256)":"6b6b9f69","setSwapFeePercentage(uint256)":"38e9922e","vault()":"fbfa77cf","withdrawCollectedFees(address[],uint256[],address)":"6daefab6"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFlashLoanFeePercentage\",\"type\":\"uint256\"}],\"name\":\"FlashLoanFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"SwapFeePercentageChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getCollectedFeeAmounts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlashLoanFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFlashLoanFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setFlashLoanFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawCollectedFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"IProtocolFeesCollector\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"IRateProvider":{"abi":[{"inputs":[],"name":"getRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRate()":"679aefce"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRate()\":{\"details\":\"Returns an 18 decimal fixed point number that is the exchange rate of the token to some other underlying token. The meaning of this rate depends on the context.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"IRateProvider\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"ISignaturesValidator":{"abi":[{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getDomainSeparator()":"ed24911d","getNextNonce(address)":"90193b7c"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the SignatureValidator helper, used to support meta-transactions.\",\"kind\":\"dev\",\"methods\":{\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"ISignaturesValidator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"IStaticAToken":{"abi":[{"inputs":[],"name":"ASSET","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LENDING_POOL","outputs":[{"internalType":"contract ILendingPool","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"ASSET()":"4800d97f","LENDING_POOL()":"b4dcfc77","rate()":"2c4e722e"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ASSET\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LENDING_POOL\",\"outputs\":[{\"internalType\":\"contract ILendingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ASSET()\":{\"details\":\"returns the address of the staticAToken's underlying asset\"},\"LENDING_POOL()\":{\"details\":\"returns the address of the staticAToken's lending pool\"},\"rate()\":{\"details\":\"returns a 27 decimal fixed point 'ray' value so a rate of 1 is represented as 1e27\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"IStaticAToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"ITemporarilyPausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"inputs":[],"name":"getPausedState","outputs":[{"internalType":"bool","name":"paused","type":"bool"},{"internalType":"uint256","name":"pauseWindowEndTime","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodEndTime","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getPausedState()":"1c0de051"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the TemporarilyPausable helper.\",\"events\":{\"PausedStateChanged(bool)\":{\"details\":\"Emitted every time the pause state changes by `_setPaused`.\"}},\"kind\":\"dev\",\"methods\":{\"getPausedState()\":{\"details\":\"Returns the current paused state.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"ITemporarilyPausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"IVault":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IAuthorizer","name":"newAuthorizer","type":"address"}],"name":"AuthorizerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ExternalBalanceTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IFlashLoanRecipient","name":"recipient","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"feeAmount","type":"uint256"}],"name":"FlashLoan","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"int256","name":"delta","type":"int256"}],"name":"InternalBalanceChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"liquidityProvider","type":"address"},{"indexed":false,"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"indexed":false,"internalType":"int256[]","name":"deltas","type":"int256[]"},{"indexed":false,"internalType":"uint256[]","name":"protocolFeeAmounts","type":"uint256[]"}],"name":"PoolBalanceChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"assetManager","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"int256","name":"cashDelta","type":"int256"},{"indexed":false,"internalType":"int256","name":"managedDelta","type":"int256"}],"name":"PoolBalanceManaged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"poolAddress","type":"address"},{"indexed":false,"internalType":"enum IVault.PoolSpecialization","name":"specialization","type":"uint8"}],"name":"PoolRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayer","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"RelayerApprovalChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":true,"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"indexed":true,"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":false,"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"TokensDeregistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"poolId","type":"bytes32"},{"indexed":false,"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"indexed":false,"internalType":"address[]","name":"assetManagers","type":"address[]"}],"name":"TokensRegistered","type":"event"},{"inputs":[],"name":"WETH","outputs":[{"internalType":"contract IWETH","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"components":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"uint256","name":"assetInIndex","type":"uint256"},{"internalType":"uint256","name":"assetOutIndex","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IVault.BatchSwapStep[]","name":"swaps","type":"tuple[]"},{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.FundManagement","name":"funds","type":"tuple"},{"internalType":"int256[]","name":"limits","type":"int256[]"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"batchSwap","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"deregisterTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address payable","name":"recipient","type":"address"},{"components":[{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"minAmountsOut","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.ExitPoolRequest","name":"request","type":"tuple"}],"name":"exitPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IFlashLoanRecipient","name":"recipient","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"flashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDomainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"}],"name":"getInternalBalance","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPausedState","outputs":[{"internalType":"bool","name":"paused","type":"bool"},{"internalType":"uint256","name":"pauseWindowEndTime","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodEndTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"enum IVault.PoolSpecialization","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20","name":"token","type":"address"}],"name":"getPoolTokenInfo","outputs":[{"internalType":"uint256","name":"cash","type":"uint256"},{"internalType":"uint256","name":"managed","type":"uint256"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"address","name":"assetManager","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"name":"getPoolTokens","outputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getProtocolFeesCollector","outputs":[{"internalType":"contract IProtocolFeesCollector","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"relayer","type":"address"}],"name":"hasApprovedRelayer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"components":[{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"maxAmountsIn","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"}],"internalType":"struct IVault.JoinPoolRequest","name":"request","type":"tuple"}],"name":"joinPool","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"enum IVault.PoolBalanceOpKind","name":"kind","type":"uint8"},{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct IVault.PoolBalanceOp[]","name":"ops","type":"tuple[]"}],"name":"managePoolBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"enum IVault.UserBalanceOpKind","name":"kind","type":"uint8"},{"internalType":"contract IAsset","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address payable","name":"recipient","type":"address"}],"internalType":"struct IVault.UserBalanceOp[]","name":"ops","type":"tuple[]"}],"name":"manageUserBalance","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"components":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"uint256","name":"assetInIndex","type":"uint256"},{"internalType":"uint256","name":"assetOutIndex","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IVault.BatchSwapStep[]","name":"swaps","type":"tuple[]"},{"internalType":"contract IAsset[]","name":"assets","type":"address[]"},{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.FundManagement","name":"funds","type":"tuple"}],"name":"queryBatchSwap","outputs":[{"internalType":"int256[]","name":"assetDeltas","type":"int256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum IVault.PoolSpecialization","name":"specialization","type":"uint8"}],"name":"registerPool","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"address[]","name":"assetManagers","type":"address[]"}],"name":"registerTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IAuthorizer","name":"newAuthorizer","type":"address"}],"name":"setAuthorizer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"paused","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"relayer","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setRelayerApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"internalType":"contract IAsset","name":"assetIn","type":"address"},{"internalType":"contract IAsset","name":"assetOut","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IVault.SingleSwap","name":"singleSwap","type":"tuple"},{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bool","name":"fromInternalBalance","type":"bool"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bool","name":"toInternalBalance","type":"bool"}],"internalType":"struct IVault.FundManagement","name":"funds","type":"tuple"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"WETH()":"ad5c4648","batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)":"945bcec9","deregisterTokens(bytes32,address[])":"7d3aeb96","exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))":"8bdb3913","flashLoan(address,address[],uint256[],bytes)":"5c38449e","getAuthorizer()":"aaabadc5","getDomainSeparator()":"ed24911d","getInternalBalance(address,address[])":"0f5a6efa","getNextNonce(address)":"90193b7c","getPausedState()":"1c0de051","getPool(bytes32)":"f6c00927","getPoolTokenInfo(bytes32,address)":"b05f8e48","getPoolTokens(bytes32)":"f94d4668","getProtocolFeesCollector()":"d2946c2b","hasApprovedRelayer(address,address)":"fec90d72","joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))":"b95cac28","managePoolBalance((uint8,bytes32,address,uint256)[])":"e6c46092","manageUserBalance((uint8,address,uint256,address,address)[])":"0e8e3e84","queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))":"f84d066e","registerPool(uint8)":"09b2760f","registerTokens(bytes32,address[],address[])":"66a9c7d2","setAuthorizer(address)":"058a628f","setPaused(bool)":"16c38b3c","setRelayerApproval(address,address,bool)":"fa6e671d","swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)":"52bbbe29"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"AuthorizerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExternalBalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"InternalBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"deltas\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"protocolFeeAmounts\",\"type\":\"uint256[]\"}],\"name\":\"PoolBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cashDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"managedDelta\",\"type\":\"int256\"}],\"name\":\"PoolBalanceManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"RelayerApprovalChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"TokensDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"TokensRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"int256[]\",\"name\":\"limits\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"deregisterTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.ExitPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"exitPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getInternalBalance\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeesCollector\",\"outputs\":[{\"internalType\":\"contract IProtocolFeesCollector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"hasApprovedRelayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.JoinPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.PoolBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IVault.PoolBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"managePoolBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.UserBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct IVault.UserBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"manageUserBalance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"}],\"name\":\"queryBatchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"assetDeltas\",\"type\":\"int256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"registerTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"setAuthorizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setRelayerApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.SingleSwap\",\"name\":\"singleSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Full external interface for the Vault core contract - no external or public methods exist in the contract that don't override one of these declarations.\",\"events\":{\"AuthorizerChanged(address)\":{\"details\":\"Emitted when a new authorizer is set by `setAuthorizer`.\"},\"ExternalBalanceTransfer(address,address,address,uint256)\":{\"details\":\"Emitted when a user's Vault ERC20 allowance is used by the Vault to transfer tokens to an external account.\"},\"FlashLoan(address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual flash loan performed by `flashLoan`.\"},\"InternalBalanceChanged(address,address,int256)\":{\"details\":\"Emitted when a user's Internal Balance changes, either from calls to `manageUserBalance`, or through interacting with Pools using Internal Balance. Because Internal Balance works exclusively with ERC20 tokens, ETH deposits and withdrawals will use the WETH address.\"},\"PoolBalanceChanged(bytes32,address,address[],int256[],uint256[])\":{\"details\":\"Emitted when a user joins or exits a Pool by calling `joinPool` or `exitPool`, respectively.\"},\"PoolBalanceManaged(bytes32,address,address,int256,int256)\":{\"details\":\"Emitted when a Pool's token Asset Manager alters its balance via `managePoolBalance`.\"},\"PoolRegistered(bytes32,address,uint8)\":{\"details\":\"Emitted when a Pool is registered by calling `registerPool`.\"},\"RelayerApprovalChanged(address,address,bool)\":{\"details\":\"Emitted every time a relayer is approved or disapproved by `setRelayerApproval`.\"},\"Swap(bytes32,address,address,uint256,uint256)\":{\"details\":\"Emitted for each individual swap performed by `swap` or `batchSwap`.\"},\"TokensDeregistered(bytes32,address[])\":{\"details\":\"Emitted when a Pool deregisters tokens by calling `deregisterTokens`.\"},\"TokensRegistered(bytes32,address[],address[])\":{\"details\":\"Emitted when a Pool registers tokens by calling `registerTokens`.\"}},\"kind\":\"dev\",\"methods\":{\"WETH()\":{\"details\":\"Returns the Vault's WETH instance.\"},\"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)\":{\"details\":\"Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events.\"},\"deregisterTokens(bytes32,address[])\":{\"details\":\"Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event.\"},\"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event.\"},\"flashLoan(address,address[],uint256[],bytes)\":{\"details\":\"Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events.\"},\"getAuthorizer()\":{\"details\":\"Returns the Vault's Authorizer.\"},\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getInternalBalance(address,address[])\":{\"details\":\"Returns `user`'s Internal Balance for a set of tokens.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"},\"getPausedState()\":{\"details\":\"Returns the current paused state.\"},\"getPool(bytes32)\":{\"details\":\"Returns a Pool's contract address and specialization setting.\"},\"getPoolTokenInfo(bytes32,address)\":{\"details\":\"Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager.\"},\"getPoolTokens(bytes32)\":{\"details\":\"Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead.\"},\"getProtocolFeesCollector()\":{\"details\":\"Returns the current protocol fee module.\"},\"hasApprovedRelayer(address,address)\":{\"details\":\"Returns true if `user` has approved `relayer` to act as a relayer for them.\"},\"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event.\"},\"managePoolBalance((uint8,bytes32,address,uint256)[])\":{\"details\":\"Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\"},\"manageUserBalance((uint8,address,uint256,address,address)[])\":{\"details\":\"Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\"},\"queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))\":{\"details\":\"Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction.\"},\"registerPool(uint8)\":{\"details\":\"Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event.\"},\"registerTokens(bytes32,address[],address[])\":{\"details\":\"Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event.\"},\"setAuthorizer(address)\":{\"details\":\"Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event.\"},\"setPaused(bool)\":{\"details\":\"Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited.\"},\"setRelayerApproval(address,address,bool)\":{\"details\":\"Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event.\"},\"swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)\":{\"details\":\"Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"IVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"IWETH":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","deposit()":"d0e30db0","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for WETH9. See https://github.com/gnosis/canonical-weth/blob/0dd1ea3e295eef916d0c6223ec63141137d22d67/contracts/WETH9.sol\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"IWETH\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"InputHelpers":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc4367dc518a620d66d6bc5d7128acd4ae904c3892ac99a2361ddcf7e4e82a8364736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC NUMBER PUSH8 0xDC518A620D66D6BC 0x5D PUSH18 0x28ACD4AE904C3892AC99A2361DDCF7E4E82A DUP4 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"165955:1042:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc4367dc518a620d66d6bc5d7128acd4ae904c3892ac99a2361ddcf7e4e82a8364736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC NUMBER PUSH8 0xDC518A620D66D6BC 0x5D PUSH18 0x28ACD4AE904C3892AC99A2361DDCF7E4E82A DUP4 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"165955:1042:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"InputHelpers\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"LinearMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122010224f935d2ab8c6bcdffade9ed33a7f7622b2a37817ec251cab4997a9a8d14364736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0x22 0x4F SWAP4 0x5D 0x2A 0xB8 0xC6 0xBC 0xDF STATICCALL 0xDE SWAP15 0xD3 GASPRICE PUSH32 0x7622B2A37817EC251CAB4997A9A8D14364736F6C634300070600330000000000 ","sourceMap":"127520:14302:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122010224f935d2ab8c6bcdffade9ed33a7f7622b2a37817ec251cab4997a9a8d14364736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0x22 0x4F SWAP4 0x5D 0x2A 0xB8 0xC6 0xBC 0xDF STATICCALL 0xDE SWAP15 0xD3 GASPRICE PUSH32 0x7622B2A37817EC251CAB4997A9A8D14364736F6C634300070600330000000000 ","sourceMap":"127520:14302:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"LinearMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"LinearPool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}],"name":"SwapFeePercentageChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IERC20","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"lowerTarget","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"upperTarget","type":"uint256"}],"name":"TargetsSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"getActionId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAuthorizer","outputs":[{"internalType":"contract IAuthorizer","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBptIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMainIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMainToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPausedState","outputs":[{"internalType":"bool","name":"paused","type":"bool"},{"internalType":"uint256","name":"pauseWindowEndTime","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodEndTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getScalingFactors","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSwapFeePercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTargets","outputs":[{"internalType":"uint256","name":"lowerTarget","type":"uint256"},{"internalType":"uint256","name":"upperTarget","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVault","outputs":[{"internalType":"contract IVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVirtualSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWrappedIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWrappedToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWrappedTokenRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"uint256","name":"protocolSwapFeePercentage","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"onExitPool","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"uint256","name":"protocolSwapFeePercentage","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"onJoinPool","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"enum IVault.SwapKind","name":"kind","type":"uint8"},{"internalType":"contract IERC20","name":"tokenIn","type":"address"},{"internalType":"contract IERC20","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"userData","type":"bytes"}],"internalType":"struct IPoolSwapStructs.SwapRequest","name":"request","type":"tuple"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"indexIn","type":"uint256"},{"internalType":"uint256","name":"indexOut","type":"uint256"}],"name":"onSwap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"uint256","name":"protocolSwapFeePercentage","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryExit","outputs":[{"internalType":"uint256","name":"bptIn","type":"uint256"},{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"uint256","name":"lastChangeBlock","type":"uint256"},{"internalType":"uint256","name":"protocolSwapFeePercentage","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"}],"name":"queryJoin","outputs":[{"internalType":"uint256","name":"bptOut","type":"uint256"},{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"bytes","name":"poolConfig","type":"bytes"}],"name":"setAssetManagerPoolConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"paused","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"swapFeePercentage","type":"uint256"}],"name":"setSwapFeePercentage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newLowerTarget","type":"uint256"},{"internalType":"uint256","name":"newUpperTarget","type":"uint256"}],"name":"setTargets","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","getActionId(bytes4)":"851c1bb3","getAuthorizer()":"aaabadc5","getBptIndex()":"82687a56","getMainIndex()":"4d64cd74","getMainToken()":"4de046d5","getOwner()":"893d20e8","getPausedState()":"1c0de051","getPoolId()":"38fff2d0","getRate()":"679aefce","getScalingFactors()":"1dd746ea","getSwapFeePercentage()":"55c67628","getTargets()":"63fe3b56","getVault()":"8d928af8","getVirtualSupply()":"de82cd34","getWrappedIndex()":"16b8d6ff","getWrappedToken()":"f174e241","getWrappedTokenRate()":"f5431aa8","increaseAllowance(address,uint256)":"39509351","initialize()":"8129fc1c","name()":"06fdde03","nonces(address)":"7ecebe00","onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)":"74f3b009","onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)":"d5c096c4","onSwap((uint8,address,address,uint256,bytes32,uint256,address,address,bytes),uint256[],uint256,uint256)":"01ec954a","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","queryExit(bytes32,address,address,uint256[],uint256,uint256,bytes)":"6028bfd4","queryJoin(bytes32,address,address,uint256[],uint256,uint256,bytes)":"87ec6817","setAssetManagerPoolConfig(address,bytes)":"50dd6ed9","setPaused(bool)":"16c38b3c","setSwapFeePercentage(uint256)":"38e9922e","setTargets(uint256,uint256)":"9f11080e","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"SwapFeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lowerTarget\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"upperTarget\",\"type\":\"uint256\"}],\"name\":\"TargetsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBptIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMainIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMainToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getScalingFactors\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTargets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lowerTarget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperTarget\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVirtualSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWrappedIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWrappedToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWrappedTokenRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onExitPool\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"onJoinPool\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPoolSwapStructs.SwapRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"indexIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"indexOut\",\"type\":\"uint256\"}],\"name\":\"onSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryExit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"queryJoin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bptOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"poolConfig\",\"type\":\"bytes\"}],\"name\":\"setAssetManagerPoolConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setSwapFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newLowerTarget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newUpperTarget\",\"type\":\"uint256\"}],\"name\":\"setTargets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Linear Pools are designed to hold two assets: \\\"main\\\" and \\\"wrapped\\\" tokens that have an equal value underlying token (e.g., DAI and waDAI). There must be an external feed available to provide an exact, non-manipulable exchange rate between the tokens. In particular, any reversible manipulation (e.g. causing the rate to increase and then decrease) can lead to severe issues and loss of funds. The Pool will register three tokens in the Vault however: the two assets and the BPT itself, so that BPT can be exchanged (effectively joining and exiting) via swaps. Despite inheriting from BasePool, much of the basic behavior changes. This Pool does not support regular joins and exits, as the entire BPT supply is 'preminted' during initialization. Unlike most other Pools, this one does not attempt to create revenue by charging fees: value is derived by holding the wrapped, yield-bearing asset. However, the 'swap fee percentage' value is still used, albeit with a different meaning. This Pool attempts to hold a certain amount of \\\"main\\\" tokens, between a lower and upper target value. The pool charges fees on trades that move the balance outside that range, which are then paid back as incentives to traders whose swaps return the balance to the desired region. The net revenue via fees is expected to be zero: all collected fees are used to pay for this 'rebalancing'.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"Override to grant the Vault infinite allowance, causing for Pool Tokens to not require approval. This is sound as the Vault already provides authorization mechanisms when initiation token transfers, which this contract inherits.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Override to allow decreasing allowance by more than the current amount (setting it to zero)\"},\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"getPausedState()\":{\"details\":\"Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period.\"},\"getRate()\":{\"details\":\"For a Linear Pool, the rate represents the appreciation of BPT with respect to the underlying tokens. This rate increases slowly as the wrapped token appreciates in value.\"},\"getVirtualSupply()\":{\"details\":\"Returns the number of tokens in circulation. In other pools, this would be the same as `totalSupply`, but since this pool pre-mints all BPT, `totalSupply` remains constant, whereas `virtualSupply` increases as users join the pool and decreases as they exit it.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize()\":{\"details\":\"Finishes initialization of the Linear Pool: it is unusable before calling this function as no BPT will have been minted. Since Linear Pools have preminted BPT stored in the Vault, they require an initial join to deposit said BPT as their balance. Unfortunately, this cannot be performed during construction, as a join involves calling the `onJoinPool` function on the Pool, and the Pool will not have any code until construction finishes. Therefore, this must happen in a separate call. It is highly recommended to create Linear pools using the LinearPoolFactory, which calls `initialize` automatically.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"onExitPool(bytes32,address,address,uint256[],uint256,uint256,bytes)\":{\"details\":\"Called by the Vault when a user calls `IVault.exitPool` to remove liquidity from this Pool. Returns how many tokens the Vault should deduct from the Pool's balances, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from the Pool's balances and send them to `recipient`, as well as collect the reported amount in protocol fees, which the Pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are charged on exit events to guarantee that users exiting the Pool have paid their share. `sender` is the account performing the exit (typically the pool shareholder), and `recipient` is the account to which the Vault will send the proceeds. `balances` contains the total token balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of exit (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as burning pool shares.\"},\"onJoinPool(bytes32,address,address,uint256[],uint256,uint256,bytes)\":{\"details\":\"Called by the Vault when a user calls `IVault.joinPool` to add liquidity to this Pool. Returns how many of each registered token the user should provide, as well as the amount of protocol fees the Pool owes to the Vault. The Vault will then take tokens from `sender` and add them to the Pool's balances, as well as collect the reported amount in protocol fees, which the pool should calculate based on `protocolSwapFeePercentage`. Protocol fees are reported and charged on join events so that the Pool is free of debt whenever new users join. `sender` is the account performing the join (from which tokens will be withdrawn), and `recipient` is the account designated to receive any benefits (typically pool shares). `balances` contains the total balances for each token the Pool registered in the Vault, in the same order that `IVault.getPoolTokens` would return. `lastChangeBlock` is the last block in which *any* of the Pool's registered tokens last changed its total balance. `userData` contains any pool-specific instructions needed to perform the calculations, such as the type of join (e.g., proportional given an amount of pool shares, single-asset, multi-asset, etc.) Contracts implementing this function should check that the caller is indeed the Vault before performing any state-changing operations, such as minting pool shares.\"},\"onSwap((uint8,address,address,uint256,bytes32,uint256,address,address,bytes),uint256[],uint256,uint256)\":{\"details\":\"Implementation of onSwap, from IGeneralPool.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"queryExit(bytes32,address,address,uint256[],uint256,uint256,bytes)\":{\"details\":\"Returns the amount of BPT that would be burned from `sender` if the `onExitPool` hook were called by the Vault with the same arguments, along with the number of tokens `recipient` would receive. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction.\"},\"queryJoin(bytes32,address,address,uint256[],uint256,uint256,bytes)\":{\"details\":\"Returns the amount of BPT that would be granted to `recipient` if the `onJoinPool` hook were called by the Vault with the same arguments, along with the number of tokens `sender` would have to supply. This function is not meant to be called directly, but rather from a helper contract that fetches current Vault data, such as the protocol swap fee percentage and Pool balances. Like `IVault.queryBatchSwap`, this function is not view due to internal implementation details: the caller must explicitly use eth_call instead of eth_sendTransaction.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Override to allow for 'infinite allowance' and let the token owner use `transferFrom` with no self-allowance\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"LinearPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"LinearPoolUserData":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bcd35a2fd05cbab88b97d699d334ce5f2d4685aff871900098367d056bdac75064736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xD3 GAS 0x2F 0xD0 0x5C 0xBA 0xB8 DUP12 SWAP8 0xD6 SWAP10 0xD3 CALLVALUE 0xCE 0x5F 0x2D CHAINID DUP6 0xAF 0xF8 PUSH18 0x900098367D056BDAC75064736F6C63430007 MOD STOP CALLER ","sourceMap":"141859:401:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bcd35a2fd05cbab88b97d699d334ce5f2d4685aff871900098367d056bdac75064736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xD3 GAS 0x2F 0xD0 0x5C 0xBA 0xB8 DUP12 SWAP8 0xD6 SWAP10 0xD3 CALLVALUE 0xCE 0x5F 0x2D CHAINID DUP6 0xAF 0xF8 PUSH18 0x900098367D056BDAC75064736F6C63430007 MOD STOP CALLER ","sourceMap":"141859:401:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"LinearPoolUserData\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"LogExpMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122068d18c6113a56f44ed400010642df6310b5d7d915b2ad3565403a630c240b88a64736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xD18C6113A56F44ED40 STOP LT PUSH5 0x2DF6310B5D PUSH30 0x915B2AD3565403A630C240B88A64736F6C63430007060033000000000000 ","sourceMap":"143210:19945:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122068d18c6113a56f44ed400010642df6310b5d7d915b2ad3565403a630c240b88a64736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xD18C6113A56F44ED40 STOP LT PUSH5 0x2DF6310B5D PUSH30 0x915B2AD3565403A630C240B88A64736F6C63430007060033000000000000 ","sourceMap":"143210:19945:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Fernando Martinelli - @fernandomartinelliSergio Yuhjtman - @sergioyuhjtmanDaniel Fernandez - @dmf7z\",\"details\":\"Exponentiation and logarithm functions for 18 decimal fixed point numbers (both base and exponent/argument). Exponentiation and logarithm with arbitrary bases (x^y and log_x(y)) are implemented by conversion to natural exponentiation and logarithm (where the base is Euler's number).\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"LogExpMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"Math":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220866366a9a557d4a64bf450d7bbfa15958409160a7b92349d23a4a785cd997f1a64736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH4 0x66A9A557 0xD4 0xA6 0x4B DELEGATECALL POP 0xD7 0xBB STATICCALL ISZERO SWAP6 DUP5 MULMOD AND EXP PUSH28 0x92349D23A4A785CD997F1A64736F6C63430007060033000000000000 ","sourceMap":"163334:2586:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220866366a9a557d4a64bf450d7bbfa15958409160a7b92349d23a4a785cd997f1a64736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH4 0x66A9A557 0xD4 0xA6 0x4B DELEGATECALL POP 0xD7 0xBB STATICCALL ISZERO SWAP6 DUP5 MULMOD AND EXP PUSH28 0x92349D23A4A785CD997F1A64736F6C63430007060033000000000000 ","sourceMap":"163334:2586:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Adapted from OpenZeppelin's SafeMath library.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"PriceRateCache":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220523d353f4b6c8494fcbc3ea874fee8aee4107a0259dc906c2af3ebb19731c42d64736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE RETURNDATASIZE CALLDATALOAD EXTCODEHASH 0x4B PUSH13 0x8494FCBC3EA874FEE8AEE4107A MUL MSIZE 0xDC SWAP1 PUSH13 0x2AF3EBB19731C42D64736F6C63 NUMBER STOP SMOD MOD STOP CALLER ","sourceMap":"125196:2095:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220523d353f4b6c8494fcbc3ea874fee8aee4107a0259dc906c2af3ebb19731c42d64736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE RETURNDATASIZE CALLDATALOAD EXTCODEHASH 0x4B PUSH13 0x8494FCBC3EA874FEE8AEE4107A MUL MSIZE 0xDC SWAP1 PUSH13 0x2AF3EBB19731C42D64736F6C63 NUMBER STOP SMOD MOD STOP CALLER ","sourceMap":"125196:2095:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Price rate caches are used to avoid querying the price rate for a token every time we need to work with it. It is useful for slow changing rates, such as those that arise from interest-bearing tokens (e.g. waDAI into DAI). The cache data is packed into a single bytes32 value with the following structure: [   expires   | duration | price rate value ] [   uint64    |  uint64  |      uint128     ] [ MSB                                   LSB ] 'rate' is an 18 decimal fixed point number, supporting rates of up to ~3e20. 'expires' is a Unix timestamp, and 'duration' is expressed in seconds.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"PriceRateCache\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"SafeMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d0de3575954e8f2f464c94bd44a905f089d400603ec862286ccbd3dc76730e364736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xD 0xE3 JUMPI MSIZE SLOAD 0xE8 CALLCODE DELEGATECALL PUSH5 0xC94BD44A90 0x5F ADDMOD SWAP14 BLOCKHASH MOD SUB 0xEC DUP7 0x22 DUP7 0xCC 0xBD RETURNDATASIZE 0xC7 PUSH8 0x30E364736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"221757:1328:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d0de3575954e8f2f464c94bd44a905f089d400603ec862286ccbd3dc76730e364736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xD 0xE3 JUMPI MSIZE SLOAD 0xE8 CALLCODE DELEGATECALL PUSH5 0xC94BD44A90 0x5F ADDMOD SWAP14 BLOCKHASH MOD SUB 0xEC DUP7 0x22 DUP7 0xCC 0xBD RETURNDATASIZE 0xC7 PUSH8 0x30E364736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"221757:1328:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"TemporarilyPausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"PausedStateChanged","type":"event"},{"inputs":[],"name":"getPausedState","outputs":[{"internalType":"bool","name":"paused","type":"bool"},{"internalType":"uint256","name":"pauseWindowEndTime","type":"uint256"},{"internalType":"uint256","name":"bufferPeriodEndTime","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getPausedState()":"1c0de051"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Allows for a contract to be paused during an initial period after deployment, disabling functionality. Can be used as an emergency switch in case a security vulnerability or threat is identified. The contract can only be paused during the Pause Window, a period that starts at deployment. It can also be unpaused and repaused any number of times during this period. This is intended to serve as a safety measure: it lets system managers react quickly to potentially dangerous situations, knowing that this action is reversible if careful analysis later determines there was a false alarm. If the contract is paused when the Pause Window finishes, it will remain in the paused state through an additional Buffer Period, after which it will be automatically unpaused forever. This is to ensure there is always enough time to react to an emergency, even if the threat is discovered shortly before the Pause Window expires. Note that since the contract can only be paused within the Pause Window, unpausing during the Buffer Period is irreversible.\",\"kind\":\"dev\",\"methods\":{\"getPausedState()\":{\"details\":\"Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"TemporarilyPausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"},"WordCodec":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220343d3c272da1740825fc16248ab9b088ff3b852fd4573f766fb63defb7db7a0764736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE RETURNDATASIZE EXTCODECOPY 0x27 0x2D LOG1 PUSH21 0x825FC16248AB9B088FF3B852FD4573F766FB63DEF 0xB7 0xDB PUSH27 0x764736F6C63430007060033000000000000000000000000000000 ","sourceMap":"168231:11964:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220343d3c272da1740825fc16248ab9b088ff3b852fd4573f766fb63defb7db7a0764736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE RETURNDATASIZE EXTCODECOPY 0x27 0x2D LOG1 PUSH21 0x825FC16248AB9B088FF3B852FD4573F766FB63DEF 0xB7 0xDB PUSH27 0x764736F6C63430007060033000000000000000000000000000000 ","sourceMap":"168231:11964:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for encoding and decoding values stored inside a 256 bit word. Typically used to pack multiple values in a single storage slot, saving gas by performing less storage accesses. Each value is defined by its size and the least significant bit in the word, also known as offset. For example, two 128 bit values may be encoded in a word by assigning one an offset of 0, and the other an offset of 128. We could use Solidity structs to pack values together in a single storage slot instead of relying on a custom and error-prone library, but unfortunately Solidity only allows for structs to live in either storage, calldata or memory. Because a memory struct uses not just memory but also a slot in the stack (to store its memory location), using memory for word-sized values (i.e. of 256 bits or less) is strictly less gas performant, and doesn't even prevent stack-too-deep issues. This is compounded by the fact that Balancer contracts typically are memory-intensive, and the cost of accesing memory increases quadratically with the number of allocated words. Manual packing and unpacking is therefore the preferred approach.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AaveLinearPoolFactory.sol\":\"WordCodec\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AaveLinearPoolFactory.sol\":{\"keccak256\":\"0x2066c69a6015715e25afba4f675194a2eba6303d0358509a97569d6e2b7a5465\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d5adda2596c6157d90024ca69ce13f97151e7d32c7b39dd7c29a558c7bd3b26b\",\"dweb:/ipfs/QmRiBMEQUTkz5o26P3zdqfWCorrRPxEiWp8338uf5d3y4B\"]}},\"version\":1}"}}}}}