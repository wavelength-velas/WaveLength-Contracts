{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "getLargestSafeQueryWindow",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum IPriceOracle.Variable",
						"name": "variable",
						"type": "uint8"
					}
				],
				"name": "getLatest",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "enum IPriceOracle.Variable",
								"name": "variable",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "ago",
								"type": "uint256"
							}
						],
						"internalType": "struct IPriceOracle.OracleAccumulatorQuery[]",
						"name": "queries",
						"type": "tuple[]"
					}
				],
				"name": "getPastAccumulators",
				"outputs": [
					{
						"internalType": "int256[]",
						"name": "results",
						"type": "int256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "enum IPriceOracle.Variable",
								"name": "variable",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "secs",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "ago",
								"type": "uint256"
							}
						],
						"internalType": "struct IPriceOracle.OracleAverageQuery[]",
						"name": "queries",
						"type": "tuple[]"
					}
				],
				"name": "getTimeWeightedAverage",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "results",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Interface for querying historical data from a Pool that can be used as a Price Oracle. This lets third parties retrieve average prices of tokens held by a Pool over a given period of time, as well as the price of the Pool share token (BPT) and invariant. Since the invariant is a sensible measure of Pool liquidity, it can be used to compare two different price sources, and choose the most liquid one. Once the oracle is fully initialized, all queries are guaranteed to succeed as long as they require no data that is not older than the largest safe query window.",
			"kind": "dev",
			"methods": {
				"getLargestSafeQueryWindow()": {
					"details": "Returns largest time window that can be safely queried, where 'safely' means the Oracle is guaranteed to be able to produce a result and not revert. If a query has a non-zero `ago` value, then `secs + ago` (the oldest point in time) must be smaller than this value for 'safe' queries."
				},
				"getLatest(uint8)": {
					"details": "Returns latest sample of `variable`. Prices are represented as 18 decimal fixed point values."
				},
				"getPastAccumulators((uint8,uint256)[])": {
					"details": "Returns the accumulators corresponding to each of `queries`."
				},
				"getTimeWeightedAverage((uint8,uint256,uint256)[])": {
					"details": "Returns the time average weighted price corresponding to each of `queries`. Prices are represented as 18 decimal fixed point values."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/WeightedPool2TokensFactory.sol": "IPriceOracle"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/WeightedPool2TokensFactory.sol": {
			"keccak256": "0xe231741eeab56bb41a4e9b9fa79cecb39a55bb27cd6d519e345dfc162d972bfd",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://7c3c554377b0c371432a9ba54f0ebb832682e24c043d5a3723397708faff449d",
				"dweb:/ipfs/QmQNbWzfhFHf3tjTxNCkVAoFXu1aDQsHrVi1T5RG7tLX7m"
			]
		}
	},
	"version": 1
}