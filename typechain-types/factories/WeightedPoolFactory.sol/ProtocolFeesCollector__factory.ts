/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ProtocolFeesCollector,
  ProtocolFeesCollectorInterface,
} from "../../WeightedPoolFactory.sol/ProtocolFeesCollector";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFlashLoanFeePercentage",
        type: "uint256",
      },
    ],
    name: "FlashLoanFeePercentageChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newSwapFeePercentage",
        type: "uint256",
      },
    ],
    name: "SwapFeePercentageChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getActionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizer",
    outputs: [
      {
        internalType: "contract IAuthorizer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getCollectedFeeAmounts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "feeAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFlashLoanFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSwapFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFlashLoanFeePercentage",
        type: "uint256",
      },
    ],
    name: "setFlashLoanFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newSwapFeePercentage",
        type: "uint256",
      },
    ],
    name: "setSwapFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawCollectedFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610b21380380610b2183398101604081905261002f9161004d565b30608052600160005560601b6001600160601b03191660a05261007b565b60006020828403121561005e578081fd5b81516001600160a01b0381168114610074578182fd5b9392505050565b60805160a05160601c610a7b6100a66000398061040452806104f55250806102975250610a7b6000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063851c1bb311610066578063851c1bb3146100f1578063aaabadc514610104578063d877845c14610119578063e42abf3514610121578063fbfa77cf1461014157610093565b806338e9922e1461009857806355c67628146100ad5780636b6b9f69146100cb5780636daefab6146100de575b600080fd5b6100ab6100a6366004610916565b610149565b005b6100b56101a8565b6040516100c29190610a08565b60405180910390f35b6100ab6100d9366004610916565b6101ae565b6100ab6100ec366004610760565b610201565b6100b56100ff3660046108b6565b610293565b61010c6102e6565b6040516100c29190610997565b6100b56102f5565b61013461012f3660046107e1565b6102fb565b6040516100c291906109c4565b61010c610402565b610151610426565b6101686706f05b59d3b20000821115610258610457565b60018190556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc9061019d908390610a08565b60405180910390a150565b60015490565b6101b6610426565b6101cc662386f26fc10000821115610259610457565b60028190556040517f5a0b7386237e7f07fa741efc64e59c9387d2cccafec760efed4d53387f20e19a9061019d908390610a08565b610209610469565b610211610426565b61021b8483610482565b60005b8481101561028357600086868381811061023457fe5b905060200201602081019061024991906108fa565b9050600085858481811061025957fe5b6020029190910135915061027990506001600160a01b038316858361048f565b505060010161021e565b5061028c6104ea565b5050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000826040516020016102c8929190610946565b6040516020818303038152906040528051906020012090505b919050565b60006102f06104f1565b905090565b60025490565b6060815167ffffffffffffffff8111801561031557600080fd5b5060405190808252806020026020018201604052801561033f578160200160208202803683370190505b50905060005b82518110156103fc5782818151811061035a57fe5b60200260200101516001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161038d9190610997565b60206040518083038186803b1580156103a557600080fd5b505afa1580156103b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dd919061092e565b8282815181106103e957fe5b6020908102919091010152600101610345565b50919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061043d6000356001600160e01b031916610293565b905061045461044c8233610584565b610191610457565b50565b816104655761046581610614565b5050565b61047b60026000541415610190610457565b6002600055565b6104658183146067610457565b6104e58363a9059cbb60e01b84846040516024016104ae9291906109ab565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610667565b505050565b6001600055565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b15801561054c57600080fd5b505afa158015610560573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f091906108de565b600061058e6104f1565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b81526004016105bd93929190610a11565b60206040518083038186803b1580156105d557600080fd5b505afa1580156105e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060d9190610896565b9392505050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600080836001600160a01b031683604051610682919061095e565b6000604051808303816000865af19150503d80600081146106bf576040519150601f19603f3d011682016040523d82523d6000602084013e6106c4565b606091505b509150915060008214156106dc573d6000803e3d6000fd5b6107068151600014806106fe5750818060200190518101906106fe9190610896565b6101a2610457565b50505050565b60008083601f84011261071d578081fd5b50813567ffffffffffffffff811115610734578182fd5b602083019150836020808302850101111561074e57600080fd5b9250929050565b80356102e181610a30565b600080600080600060608688031215610777578081fd5b853567ffffffffffffffff8082111561078e578283fd5b61079a89838a0161070c565b909750955060208801359150808211156107b2578283fd5b506107bf8882890161070c565b90945092505060408601356107d381610a30565b809150509295509295909350565b600060208083850312156107f3578182fd5b823567ffffffffffffffff8082111561080a578384fd5b818501915085601f83011261081d578384fd5b81358181111561082957fe5b8381026040518582820101818110858211171561084257fe5b604052828152858101935084860182860187018a1015610860578788fd5b8795505b838610156108895761087581610755565b855260019590950194938601938601610864565b5098975050505050505050565b6000602082840312156108a7578081fd5b8151801515811461060d578182fd5b6000602082840312156108c7578081fd5b81356001600160e01b03198116811461060d578182fd5b6000602082840312156108ef578081fd5b815161060d81610a30565b60006020828403121561090b578081fd5b813561060d81610a30565b600060208284031215610927578081fd5b5035919050565b60006020828403121561093f578081fd5b5051919050565b9182526001600160e01b031916602082015260240190565b60008251815b8181101561097e5760208186018101518583015201610964565b8181111561098c5782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156109fc578351835292840192918401916001016109e0565b50909695505050505050565b90815260200190565b9283526001600160a01b03918216602084015216604082015260600190565b6001600160a01b038116811461045457600080fdfea264697066735822122059eece9650904fe83cdc9733b46a8ba7114b13cca8a406a1ac709719fb0f82db64736f6c63430007060033";

type ProtocolFeesCollectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProtocolFeesCollectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProtocolFeesCollector__factory extends ContractFactory {
  constructor(...args: ProtocolFeesCollectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProtocolFeesCollector> {
    return super.deploy(
      _vault,
      overrides || {}
    ) as Promise<ProtocolFeesCollector>;
  }
  override getDeployTransaction(
    _vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_vault, overrides || {});
  }
  override attach(address: string): ProtocolFeesCollector {
    return super.attach(address) as ProtocolFeesCollector;
  }
  override connect(signer: Signer): ProtocolFeesCollector__factory {
    return super.connect(signer) as ProtocolFeesCollector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProtocolFeesCollectorInterface {
    return new utils.Interface(_abi) as ProtocolFeesCollectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProtocolFeesCollector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProtocolFeesCollector;
  }
}
