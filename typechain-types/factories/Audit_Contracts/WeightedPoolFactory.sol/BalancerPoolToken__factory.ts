/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BalancerPoolToken,
  BalancerPoolTokenInterface,
} from "../../../Audit_Contracts/WeightedPoolFactory.sol/BalancerPoolToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960e0523480156200003657600080fd5b5060405162000da238038062000da2833981016040819052620000599162000220565b6040805180820190915260018152603160f81b602080830191825284519085019081206080529151902060a0527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60c0528251620000ba91600391620000d9565b508051620000d0906004906020840190620000d9565b50505062000287565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200011157600085556200015c565b82601f106200012c57805160ff19168380011785556200015c565b828001600101855582156200015c579182015b828111156200015c5782518255916020019190600101906200013f565b506200016a9291506200016e565b5090565b5b808211156200016a57600081556001016200016f565b600082601f83011262000196578081fd5b81516001600160401b0380821115620001ab57fe5b6040516020601f8401601f1916820181018381118382101715620001cb57fe5b6040528382528584018101871015620001e2578485fd5b8492505b83831015620002055785830181015182840182015291820191620001e6565b838311156200021657848185840101525b5095945050505050565b6000806040838503121562000233578182fd5b82516001600160401b03808211156200024a578384fd5b620002588683870162000185565b935060208501519150808211156200026e578283fd5b506200027d8582860162000185565b9150509250929050565b60805160a05160c05160e051610ae5620002bd6000398061044f5250806107115250806107535250806107325250610ae56000f3fe608060405234801561001057600080fd5b50600436106100ba5760003560e01c806306fdde03146100bf578063095ea7b3146100dd57806318160ddd146100fd57806323b872dd14610112578063313ce567146101255780633644e5151461013a578063661884631461014257806370a08231146101555780637ecebe001461016857806395d89b411461017b578063a9059cbb14610183578063d505accf14610196578063d73dd623146101ab578063dd62ed3e146101be575b600080fd5b6100c76101d1565b6040516100d49190610a4e565b60405180910390f35b6100f06100eb366004610978565b610267565b6040516100d491906109bc565b61010561027d565b6040516100d491906109c7565b6100f06101203660046108cc565b610283565b61012d610304565b6040516100d49190610aa1565b610105610309565b6100f0610150366004610978565b610318565b610105610163366004610880565b610372565b610105610176366004610880565b610391565b6100c76103ac565b6100f0610191366004610978565b61040d565b6101a96101a4366004610907565b61041a565b005b6100f06101b9366004610978565b610563565b6101056101cc36600461089a565b610599565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561025d5780601f106102325761010080835404028352916020019161025d565b820191906000526020600020905b81548152906001019060200180831161024057829003601f168201915b5050505050905090565b60006102743384846105c4565b50600192915050565b60025490565b6001600160a01b038316600081815260016020908152604080832033808552925282205491926102c19114806102b95750838210155b61019761062c565b6102cc85858561063e565b336001600160a01b038616148015906102e757506000198114155b156102f9576102f985338584036105c4565b506001949350505050565b601290565b600061031361070d565b905090565b3360009081526001602090815260408083206001600160a01b03861684529091528120548083106103545761034f338560006105c4565b610368565b610368338561036384876107aa565b6105c4565b5060019392505050565b6001600160a01b0381166000908152602081905260409020545b919050565b6001600160a01b031660009081526005602052604090205490565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561025d5780601f106102325761010080835404028352916020019161025d565b600061027433848461063e565b6104288442111560d161062c565b6001600160a01b038716600090815260056020908152604080832054905190929161047f917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d91016109d0565b60405160208183030381529060405280519060200120905060006104a2826107c0565b90506000600182888888604051600081526020016040526040516104c99493929190610a30565b6020604051602081039080840390855afa1580156104eb573d6000803e3d6000fd5b5050604051601f190151915061052d90506001600160a01b0382161580159061052557508b6001600160a01b0316826001600160a01b0316145b6101f861062c565b6001600160a01b038b1660009081526005602052604090206001850190556105568b8b8b6105c4565b5050505050505050505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161027491859061036390866107f9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061061f9085906109c7565b60405180910390a3505050565b8161063a5761063a81610812565b5050565b6001600160a01b0383166000908152602081905260409020546106668282101561019661062c565b61067d6001600160a01b038416151561019961062c565b6001600160a01b038085166000908152602081905260408082208585039055918516815220546106ad90836107f9565b6001600160a01b0380851660008181526020819052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106ff9086906109c7565b60405180910390a350505050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061077a610865565b3060405160200161078f959493929190610a04565b60405160208183030381529060405280519060200120905090565b60006107ba83831115600161062c565b50900390565b60006107ca61070d565b826040516020016107dc9291906109a1565b604051602081830303815290604052805190602001209050919050565b600082820161080b848210158361062c565b9392505050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b4690565b80356001600160a01b038116811461038c57600080fd5b600060208284031215610891578081fd5b61080b82610869565b600080604083850312156108ac578081fd5b6108b583610869565b91506108c360208401610869565b90509250929050565b6000806000606084860312156108e0578081fd5b6108e984610869565b92506108f760208501610869565b9150604084013590509250925092565b600080600080600080600060e0888a031215610921578283fd5b61092a88610869565b965061093860208901610869565b95506040880135945060608801359350608088013560ff8116811461095b578384fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561098a578182fd5b61099383610869565b946020939093013593505050565b61190160f01b81526002810192909252602282015260420190565b901515815260200190565b90815260200190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b6000602080835283518082850152825b81811015610a7a57858101830151858201604001528201610a5e565b81811115610a8b5783604083870101525b50601f01601f1916929092016040019392505050565b60ff9190911681526020019056fea2646970667358221220a7bd254731ca4e81b0f8dfb7983dae149cbdfdb394ca32b676cf07c421dec86e64736f6c63430007060033";

type BalancerPoolTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancerPoolTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalancerPoolToken__factory extends ContractFactory {
  constructor(...args: BalancerPoolTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    tokenName: PromiseOrValue<string>,
    tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BalancerPoolToken> {
    return super.deploy(
      tokenName,
      tokenSymbol,
      overrides || {}
    ) as Promise<BalancerPoolToken>;
  }
  override getDeployTransaction(
    tokenName: PromiseOrValue<string>,
    tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenName, tokenSymbol, overrides || {});
  }
  override attach(address: string): BalancerPoolToken {
    return super.attach(address) as BalancerPoolToken;
  }
  override connect(signer: Signer): BalancerPoolToken__factory {
    return super.connect(signer) as BalancerPoolToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerPoolTokenInterface {
    return new utils.Interface(_abi) as BalancerPoolTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalancerPoolToken {
    return new Contract(address, _abi, signerOrProvider) as BalancerPoolToken;
  }
}
