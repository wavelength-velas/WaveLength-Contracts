/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Storage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Storage__factory>;
    getContractFactory(
      name: "Owner",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Owner__factory>;
    getContractFactory(
      name: "Ballot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ballot__factory>;
    getContractFactory(
      name: "AaveLinearPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveLinearPool__factory>;
    getContractFactory(
      name: "AaveLinearPoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AaveLinearPoolFactory__factory>;
    getContractFactory(
      name: "Authentication",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Authentication__factory>;
    getContractFactory(
      name: "BalancerPoolToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BalancerPoolToken__factory>;
    getContractFactory(
      name: "BasePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePool__factory>;
    getContractFactory(
      name: "BasePoolAuthorization",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePoolAuthorization__factory>;
    getContractFactory(
      name: "BasePoolSplitCodeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePoolSplitCodeFactory__factory>;
    getContractFactory(
      name: "BaseSplitCodeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseSplitCodeFactory__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "FactoryWidePauseWindow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FactoryWidePauseWindow__factory>;
    getContractFactory(
      name: "IAssetManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssetManager__factory>;
    getContractFactory(
      name: "IAuthentication",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthentication__factory>;
    getContractFactory(
      name: "IAuthorizer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthorizer__factory>;
    getContractFactory(
      name: "IBasePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBasePool__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IFlashLoanRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlashLoanRecipient__factory>;
    getContractFactory(
      name: "IGeneralPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGeneralPool__factory>;
    getContractFactory(
      name: "ILendingPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILendingPool__factory>;
    getContractFactory(
      name: "IProtocolFeesCollector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProtocolFeesCollector__factory>;
    getContractFactory(
      name: "IRateProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRateProvider__factory>;
    getContractFactory(
      name: "ISignaturesValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISignaturesValidator__factory>;
    getContractFactory(
      name: "IStaticAToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStaticAToken__factory>;
    getContractFactory(
      name: "ITemporarilyPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITemporarilyPausable__factory>;
    getContractFactory(
      name: "IVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVault__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "LinearPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinearPool__factory>;
    getContractFactory(
      name: "TemporarilyPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TemporarilyPausable__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "Authorizer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Authorizer__factory>;
    getContractFactory(
      name: "IAuthorizer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthorizer__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "Authentication",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Authentication__factory>;
    getContractFactory(
      name: "BalancerPoolToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BalancerPoolToken__factory>;
    getContractFactory(
      name: "BasePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePool__factory>;
    getContractFactory(
      name: "BasePoolAuthorization",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePoolAuthorization__factory>;
    getContractFactory(
      name: "BasePoolSplitCodeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePoolSplitCodeFactory__factory>;
    getContractFactory(
      name: "BaseSplitCodeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseSplitCodeFactory__factory>;
    getContractFactory(
      name: "CompoundLinearPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompoundLinearPool__factory>;
    getContractFactory(
      name: "CompoundLinearPoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompoundLinearPoolFactory__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "FactoryWidePauseWindow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FactoryWidePauseWindow__factory>;
    getContractFactory(
      name: "IAssetManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssetManager__factory>;
    getContractFactory(
      name: "IAuthentication",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthentication__factory>;
    getContractFactory(
      name: "IAuthorizer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthorizer__factory>;
    getContractFactory(
      name: "IBasePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBasePool__factory>;
    getContractFactory(
      name: "ICToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICToken__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IFlashLoanRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlashLoanRecipient__factory>;
    getContractFactory(
      name: "IGeneralPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGeneralPool__factory>;
    getContractFactory(
      name: "IProtocolFeesCollector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProtocolFeesCollector__factory>;
    getContractFactory(
      name: "IRateProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRateProvider__factory>;
    getContractFactory(
      name: "ISignaturesValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISignaturesValidator__factory>;
    getContractFactory(
      name: "ITemporarilyPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITemporarilyPausable__factory>;
    getContractFactory(
      name: "IVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVault__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "LinearPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinearPool__factory>;
    getContractFactory(
      name: "LinearPoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinearPoolFactory__factory>;
    getContractFactory(
      name: "TemporarilyPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TemporarilyPausable__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IRewarder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRewarder__factory>;
    getContractFactory(
      name: "MasterChefOperator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MasterChefOperator__factory>;
    getContractFactory(
      name: "Timelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Timelock__factory>;
    getContractFactory(
      name: "Authentication",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Authentication__factory>;
    getContractFactory(
      name: "BalancerPoolToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BalancerPoolToken__factory>;
    getContractFactory(
      name: "BaseGeneralPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseGeneralPool__factory>;
    getContractFactory(
      name: "BaseMinimalSwapInfoPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseMinimalSwapInfoPool__factory>;
    getContractFactory(
      name: "BasePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePool__factory>;
    getContractFactory(
      name: "BasePoolAuthorization",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePoolAuthorization__factory>;
    getContractFactory(
      name: "BasePoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePoolFactory__factory>;
    getContractFactory(
      name: "BasePoolSplitCodeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePoolSplitCodeFactory__factory>;
    getContractFactory(
      name: "BaseSplitCodeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseSplitCodeFactory__factory>;
    getContractFactory(
      name: "BaseWeightedPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseWeightedPool__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "FactoryWidePauseWindow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FactoryWidePauseWindow__factory>;
    getContractFactory(
      name: "IAssetManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssetManager__factory>;
    getContractFactory(
      name: "IAuthentication",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthentication__factory>;
    getContractFactory(
      name: "IAuthorizer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthorizer__factory>;
    getContractFactory(
      name: "IBasePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBasePool__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IFlashLoanRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlashLoanRecipient__factory>;
    getContractFactory(
      name: "IGeneralPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGeneralPool__factory>;
    getContractFactory(
      name: "IMinimalSwapInfoPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMinimalSwapInfoPool__factory>;
    getContractFactory(
      name: "IPoolPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolPriceOracle__factory>;
    getContractFactory(
      name: "IPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceOracle__factory>;
    getContractFactory(
      name: "IProtocolFeesCollector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProtocolFeesCollector__factory>;
    getContractFactory(
      name: "ISignaturesValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISignaturesValidator__factory>;
    getContractFactory(
      name: "ITemporarilyPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITemporarilyPausable__factory>;
    getContractFactory(
      name: "IVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVault__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "LiquidityBootstrappingPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidityBootstrappingPool__factory>;
    getContractFactory(
      name: "LiquidityBootstrappingPoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidityBootstrappingPoolFactory__factory>;
    getContractFactory(
      name: "MockLogCompression",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockLogCompression__factory>;
    getContractFactory(
      name: "MockPoolPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockPoolPriceOracle__factory>;
    getContractFactory(
      name: "MockSamples",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockSamples__factory>;
    getContractFactory(
      name: "MockWeightedMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockWeightedMath__factory>;
    getContractFactory(
      name: "MockWeightedOracleMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockWeightedOracleMath__factory>;
    getContractFactory(
      name: "MockWeightedPool2Tokens",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockWeightedPool2Tokens__factory>;
    getContractFactory(
      name: "NoProtocolFeeLiquidityBootstrappingPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NoProtocolFeeLiquidityBootstrappingPool__factory>;
    getContractFactory(
      name: "NoProtocolFeeLiquidityBootstrappingPoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NoProtocolFeeLiquidityBootstrappingPoolFactory__factory>;
    getContractFactory(
      name: "PoolPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolPriceOracle__factory>;
    getContractFactory(
      name: "TemporarilyPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TemporarilyPausable__factory>;
    getContractFactory(
      name: "WeightedPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WeightedPool__factory>;
    getContractFactory(
      name: "WeightedPool2Tokens",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WeightedPool2Tokens__factory>;
    getContractFactory(
      name: "WeightedPoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WeightedPoolFactory__factory>;
    getContractFactory(
      name: "WeightedPoolNoAMFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WeightedPoolNoAMFactory__factory>;
    getContractFactory(
      name: "Authentication",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Authentication__factory>;
    getContractFactory(
      name: "BalancerPoolToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BalancerPoolToken__factory>;
    getContractFactory(
      name: "BaseGeneralPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseGeneralPool__factory>;
    getContractFactory(
      name: "BaseMinimalSwapInfoPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseMinimalSwapInfoPool__factory>;
    getContractFactory(
      name: "BasePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePool__factory>;
    getContractFactory(
      name: "BasePoolAuthorization",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePoolAuthorization__factory>;
    getContractFactory(
      name: "BasePoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePoolFactory__factory>;
    getContractFactory(
      name: "BasePoolSplitCodeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePoolSplitCodeFactory__factory>;
    getContractFactory(
      name: "BaseSplitCodeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseSplitCodeFactory__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "FactoryWidePauseWindow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FactoryWidePauseWindow__factory>;
    getContractFactory(
      name: "IAssetManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssetManager__factory>;
    getContractFactory(
      name: "IAuthentication",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthentication__factory>;
    getContractFactory(
      name: "IAuthorizer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthorizer__factory>;
    getContractFactory(
      name: "IBasePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBasePool__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IFlashLoanRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlashLoanRecipient__factory>;
    getContractFactory(
      name: "IGeneralPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGeneralPool__factory>;
    getContractFactory(
      name: "IMinimalSwapInfoPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMinimalSwapInfoPool__factory>;
    getContractFactory(
      name: "IProtocolFeesCollector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProtocolFeesCollector__factory>;
    getContractFactory(
      name: "IRateProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRateProvider__factory>;
    getContractFactory(
      name: "ISignaturesValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISignaturesValidator__factory>;
    getContractFactory(
      name: "ITemporarilyPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITemporarilyPausable__factory>;
    getContractFactory(
      name: "IVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVault__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "StablePhantomPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StablePhantomPool__factory>;
    getContractFactory(
      name: "StablePhantomPoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StablePhantomPoolFactory__factory>;
    getContractFactory(
      name: "StablePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StablePool__factory>;
    getContractFactory(
      name: "TemporarilyPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TemporarilyPausable__factory>;
    getContractFactory(
      name: "Authentication",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Authentication__factory>;
    getContractFactory(
      name: "BalancerPoolToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BalancerPoolToken__factory>;
    getContractFactory(
      name: "BaseGeneralPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseGeneralPool__factory>;
    getContractFactory(
      name: "BaseMinimalSwapInfoPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseMinimalSwapInfoPool__factory>;
    getContractFactory(
      name: "BasePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePool__factory>;
    getContractFactory(
      name: "BasePoolAuthorization",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePoolAuthorization__factory>;
    getContractFactory(
      name: "BasePoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePoolFactory__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "FactoryWidePauseWindow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FactoryWidePauseWindow__factory>;
    getContractFactory(
      name: "IAssetManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssetManager__factory>;
    getContractFactory(
      name: "IAuthentication",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthentication__factory>;
    getContractFactory(
      name: "IAuthorizer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthorizer__factory>;
    getContractFactory(
      name: "IBasePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBasePool__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IFlashLoanRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlashLoanRecipient__factory>;
    getContractFactory(
      name: "IGeneralPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGeneralPool__factory>;
    getContractFactory(
      name: "IMinimalSwapInfoPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMinimalSwapInfoPool__factory>;
    getContractFactory(
      name: "IProtocolFeesCollector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProtocolFeesCollector__factory>;
    getContractFactory(
      name: "ISignaturesValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISignaturesValidator__factory>;
    getContractFactory(
      name: "ITemporarilyPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITemporarilyPausable__factory>;
    getContractFactory(
      name: "IVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVault__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "MockStableMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockStableMath__factory>;
    getContractFactory(
      name: "StablePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StablePool__factory>;
    getContractFactory(
      name: "StablePoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StablePoolFactory__factory>;
    getContractFactory(
      name: "TemporarilyPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TemporarilyPausable__factory>;
    getContractFactory(
      name: "Timelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Timelock__factory>;
    getContractFactory(
      name: "AssetManagers",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssetManagers__factory>;
    getContractFactory(
      name: "AssetTransfersHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssetTransfersHandler__factory>;
    getContractFactory(
      name: "Authentication",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Authentication__factory>;
    getContractFactory(
      name: "Fees",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Fees__factory>;
    getContractFactory(
      name: "FlashLoans",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlashLoans__factory>;
    getContractFactory(
      name: "IAuthentication",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthentication__factory>;
    getContractFactory(
      name: "IAuthorizer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthorizer__factory>;
    getContractFactory(
      name: "IBasePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBasePool__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IFlashLoanRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlashLoanRecipient__factory>;
    getContractFactory(
      name: "IGeneralPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGeneralPool__factory>;
    getContractFactory(
      name: "IMinimalSwapInfoPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMinimalSwapInfoPool__factory>;
    getContractFactory(
      name: "ISignaturesValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISignaturesValidator__factory>;
    getContractFactory(
      name: "ITemporarilyPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITemporarilyPausable__factory>;
    getContractFactory(
      name: "IVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVault__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "MinimalSwapInfoPoolsBalance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinimalSwapInfoPoolsBalance__factory>;
    getContractFactory(
      name: "PoolBalances",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolBalances__factory>;
    getContractFactory(
      name: "PoolRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolRegistry__factory>;
    getContractFactory(
      name: "PoolTokens",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolTokens__factory>;
    getContractFactory(
      name: "ProtocolFeesCollector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProtocolFeesCollector__factory>;
    getContractFactory(
      name: "SignaturesValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SignaturesValidator__factory>;
    getContractFactory(
      name: "Swaps",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Swaps__factory>;
    getContractFactory(
      name: "TemporarilyPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TemporarilyPausable__factory>;
    getContractFactory(
      name: "TwoTokenPoolsBalance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TwoTokenPoolsBalance__factory>;
    getContractFactory(
      name: "UserBalance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UserBalance__factory>;
    getContractFactory(
      name: "Vault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Vault__factory>;
    getContractFactory(
      name: "VaultAuthorization",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultAuthorization__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "WAVEBar",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WAVEBar__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "WaveBar",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WaveBar__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IRewarder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRewarder__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "WAVEMasterChef",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WAVEMasterChef__factory>;
    getContractFactory(
      name: "WAVEToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WAVEToken__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "WAVEToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WAVEToken__factory>;
    getContractFactory(
      name: "Authentication",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Authentication__factory>;
    getContractFactory(
      name: "BalancerPoolToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BalancerPoolToken__factory>;
    getContractFactory(
      name: "BaseMinimalSwapInfoPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseMinimalSwapInfoPool__factory>;
    getContractFactory(
      name: "BasePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePool__factory>;
    getContractFactory(
      name: "BasePoolAuthorization",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePoolAuthorization__factory>;
    getContractFactory(
      name: "BasePoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePoolFactory__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "FactoryWidePauseWindow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FactoryWidePauseWindow__factory>;
    getContractFactory(
      name: "IAuthentication",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthentication__factory>;
    getContractFactory(
      name: "IAuthorizer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthorizer__factory>;
    getContractFactory(
      name: "IBasePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBasePool__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IFlashLoanRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlashLoanRecipient__factory>;
    getContractFactory(
      name: "IMinimalSwapInfoPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMinimalSwapInfoPool__factory>;
    getContractFactory(
      name: "IPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceOracle__factory>;
    getContractFactory(
      name: "ISignaturesValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISignaturesValidator__factory>;
    getContractFactory(
      name: "ITemporarilyPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITemporarilyPausable__factory>;
    getContractFactory(
      name: "IVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVault__factory>;
    getContractFactory(
      name: "IWeightedPoolPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWeightedPoolPriceOracle__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "PoolPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolPriceOracle__factory>;
    getContractFactory(
      name: "ProtocolFeesCollector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProtocolFeesCollector__factory>;
    getContractFactory(
      name: "TemporarilyPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TemporarilyPausable__factory>;
    getContractFactory(
      name: "WeightedPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WeightedPool__factory>;
    getContractFactory(
      name: "WeightedPool2Tokens",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WeightedPool2Tokens__factory>;
    getContractFactory(
      name: "WeightedPool2TokensFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WeightedPool2TokensFactory__factory>;
    getContractFactory(
      name: "Authentication",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Authentication__factory>;
    getContractFactory(
      name: "BalancerPoolToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BalancerPoolToken__factory>;
    getContractFactory(
      name: "BaseMinimalSwapInfoPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseMinimalSwapInfoPool__factory>;
    getContractFactory(
      name: "BasePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePool__factory>;
    getContractFactory(
      name: "BasePoolAuthorization",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePoolAuthorization__factory>;
    getContractFactory(
      name: "BasePoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePoolFactory__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "FactoryWidePauseWindow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FactoryWidePauseWindow__factory>;
    getContractFactory(
      name: "IAuthentication",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthentication__factory>;
    getContractFactory(
      name: "IAuthorizer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthorizer__factory>;
    getContractFactory(
      name: "IBasePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBasePool__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IFlashLoanRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlashLoanRecipient__factory>;
    getContractFactory(
      name: "IMinimalSwapInfoPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMinimalSwapInfoPool__factory>;
    getContractFactory(
      name: "ISignaturesValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISignaturesValidator__factory>;
    getContractFactory(
      name: "ITemporarilyPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITemporarilyPausable__factory>;
    getContractFactory(
      name: "IVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVault__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "ProtocolFeesCollector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProtocolFeesCollector__factory>;
    getContractFactory(
      name: "TemporarilyPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TemporarilyPausable__factory>;
    getContractFactory(
      name: "WeightedPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WeightedPool__factory>;
    getContractFactory(
      name: "WeightedPoolFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WeightedPoolFactory__factory>;

    getContractAt(
      name: "Storage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Storage>;
    getContractAt(
      name: "Owner",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Owner>;
    getContractAt(
      name: "Ballot",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ballot>;
    getContractAt(
      name: "AaveLinearPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveLinearPool>;
    getContractAt(
      name: "AaveLinearPoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AaveLinearPoolFactory>;
    getContractAt(
      name: "Authentication",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Authentication>;
    getContractAt(
      name: "BalancerPoolToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BalancerPoolToken>;
    getContractAt(
      name: "BasePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePool>;
    getContractAt(
      name: "BasePoolAuthorization",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePoolAuthorization>;
    getContractAt(
      name: "BasePoolSplitCodeFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePoolSplitCodeFactory>;
    getContractAt(
      name: "BaseSplitCodeFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseSplitCodeFactory>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "FactoryWidePauseWindow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FactoryWidePauseWindow>;
    getContractAt(
      name: "IAssetManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssetManager>;
    getContractAt(
      name: "IAuthentication",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthentication>;
    getContractAt(
      name: "IAuthorizer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthorizer>;
    getContractAt(
      name: "IBasePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBasePool>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IFlashLoanRecipient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlashLoanRecipient>;
    getContractAt(
      name: "IGeneralPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGeneralPool>;
    getContractAt(
      name: "ILendingPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILendingPool>;
    getContractAt(
      name: "IProtocolFeesCollector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProtocolFeesCollector>;
    getContractAt(
      name: "IRateProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRateProvider>;
    getContractAt(
      name: "ISignaturesValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISignaturesValidator>;
    getContractAt(
      name: "IStaticAToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStaticAToken>;
    getContractAt(
      name: "ITemporarilyPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITemporarilyPausable>;
    getContractAt(
      name: "IVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVault>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "LinearPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LinearPool>;
    getContractAt(
      name: "TemporarilyPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TemporarilyPausable>;
    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "Authorizer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Authorizer>;
    getContractAt(
      name: "IAuthorizer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthorizer>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "Authentication",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Authentication>;
    getContractAt(
      name: "BalancerPoolToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BalancerPoolToken>;
    getContractAt(
      name: "BasePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePool>;
    getContractAt(
      name: "BasePoolAuthorization",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePoolAuthorization>;
    getContractAt(
      name: "BasePoolSplitCodeFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePoolSplitCodeFactory>;
    getContractAt(
      name: "BaseSplitCodeFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseSplitCodeFactory>;
    getContractAt(
      name: "CompoundLinearPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CompoundLinearPool>;
    getContractAt(
      name: "CompoundLinearPoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CompoundLinearPoolFactory>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "FactoryWidePauseWindow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FactoryWidePauseWindow>;
    getContractAt(
      name: "IAssetManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssetManager>;
    getContractAt(
      name: "IAuthentication",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthentication>;
    getContractAt(
      name: "IAuthorizer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthorizer>;
    getContractAt(
      name: "IBasePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBasePool>;
    getContractAt(
      name: "ICToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICToken>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IFlashLoanRecipient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlashLoanRecipient>;
    getContractAt(
      name: "IGeneralPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGeneralPool>;
    getContractAt(
      name: "IProtocolFeesCollector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProtocolFeesCollector>;
    getContractAt(
      name: "IRateProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRateProvider>;
    getContractAt(
      name: "ISignaturesValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISignaturesValidator>;
    getContractAt(
      name: "ITemporarilyPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITemporarilyPausable>;
    getContractAt(
      name: "IVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVault>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "LinearPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LinearPool>;
    getContractAt(
      name: "LinearPoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LinearPoolFactory>;
    getContractAt(
      name: "TemporarilyPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TemporarilyPausable>;
    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IRewarder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRewarder>;
    getContractAt(
      name: "MasterChefOperator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MasterChefOperator>;
    getContractAt(
      name: "Timelock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Timelock>;
    getContractAt(
      name: "Authentication",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Authentication>;
    getContractAt(
      name: "BalancerPoolToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BalancerPoolToken>;
    getContractAt(
      name: "BaseGeneralPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseGeneralPool>;
    getContractAt(
      name: "BaseMinimalSwapInfoPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseMinimalSwapInfoPool>;
    getContractAt(
      name: "BasePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePool>;
    getContractAt(
      name: "BasePoolAuthorization",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePoolAuthorization>;
    getContractAt(
      name: "BasePoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePoolFactory>;
    getContractAt(
      name: "BasePoolSplitCodeFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePoolSplitCodeFactory>;
    getContractAt(
      name: "BaseSplitCodeFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseSplitCodeFactory>;
    getContractAt(
      name: "BaseWeightedPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseWeightedPool>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "FactoryWidePauseWindow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FactoryWidePauseWindow>;
    getContractAt(
      name: "IAssetManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssetManager>;
    getContractAt(
      name: "IAuthentication",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthentication>;
    getContractAt(
      name: "IAuthorizer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthorizer>;
    getContractAt(
      name: "IBasePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBasePool>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IFlashLoanRecipient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlashLoanRecipient>;
    getContractAt(
      name: "IGeneralPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGeneralPool>;
    getContractAt(
      name: "IMinimalSwapInfoPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMinimalSwapInfoPool>;
    getContractAt(
      name: "IPoolPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoolPriceOracle>;
    getContractAt(
      name: "IPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPriceOracle>;
    getContractAt(
      name: "IProtocolFeesCollector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProtocolFeesCollector>;
    getContractAt(
      name: "ISignaturesValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISignaturesValidator>;
    getContractAt(
      name: "ITemporarilyPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITemporarilyPausable>;
    getContractAt(
      name: "IVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVault>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "LiquidityBootstrappingPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LiquidityBootstrappingPool>;
    getContractAt(
      name: "LiquidityBootstrappingPoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LiquidityBootstrappingPoolFactory>;
    getContractAt(
      name: "MockLogCompression",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockLogCompression>;
    getContractAt(
      name: "MockPoolPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockPoolPriceOracle>;
    getContractAt(
      name: "MockSamples",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockSamples>;
    getContractAt(
      name: "MockWeightedMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockWeightedMath>;
    getContractAt(
      name: "MockWeightedOracleMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockWeightedOracleMath>;
    getContractAt(
      name: "MockWeightedPool2Tokens",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockWeightedPool2Tokens>;
    getContractAt(
      name: "NoProtocolFeeLiquidityBootstrappingPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NoProtocolFeeLiquidityBootstrappingPool>;
    getContractAt(
      name: "NoProtocolFeeLiquidityBootstrappingPoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NoProtocolFeeLiquidityBootstrappingPoolFactory>;
    getContractAt(
      name: "PoolPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolPriceOracle>;
    getContractAt(
      name: "TemporarilyPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TemporarilyPausable>;
    getContractAt(
      name: "WeightedPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WeightedPool>;
    getContractAt(
      name: "WeightedPool2Tokens",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WeightedPool2Tokens>;
    getContractAt(
      name: "WeightedPoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WeightedPoolFactory>;
    getContractAt(
      name: "WeightedPoolNoAMFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WeightedPoolNoAMFactory>;
    getContractAt(
      name: "Authentication",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Authentication>;
    getContractAt(
      name: "BalancerPoolToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BalancerPoolToken>;
    getContractAt(
      name: "BaseGeneralPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseGeneralPool>;
    getContractAt(
      name: "BaseMinimalSwapInfoPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseMinimalSwapInfoPool>;
    getContractAt(
      name: "BasePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePool>;
    getContractAt(
      name: "BasePoolAuthorization",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePoolAuthorization>;
    getContractAt(
      name: "BasePoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePoolFactory>;
    getContractAt(
      name: "BasePoolSplitCodeFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePoolSplitCodeFactory>;
    getContractAt(
      name: "BaseSplitCodeFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseSplitCodeFactory>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "FactoryWidePauseWindow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FactoryWidePauseWindow>;
    getContractAt(
      name: "IAssetManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssetManager>;
    getContractAt(
      name: "IAuthentication",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthentication>;
    getContractAt(
      name: "IAuthorizer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthorizer>;
    getContractAt(
      name: "IBasePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBasePool>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IFlashLoanRecipient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlashLoanRecipient>;
    getContractAt(
      name: "IGeneralPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGeneralPool>;
    getContractAt(
      name: "IMinimalSwapInfoPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMinimalSwapInfoPool>;
    getContractAt(
      name: "IProtocolFeesCollector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProtocolFeesCollector>;
    getContractAt(
      name: "IRateProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRateProvider>;
    getContractAt(
      name: "ISignaturesValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISignaturesValidator>;
    getContractAt(
      name: "ITemporarilyPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITemporarilyPausable>;
    getContractAt(
      name: "IVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVault>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "StablePhantomPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StablePhantomPool>;
    getContractAt(
      name: "StablePhantomPoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StablePhantomPoolFactory>;
    getContractAt(
      name: "StablePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StablePool>;
    getContractAt(
      name: "TemporarilyPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TemporarilyPausable>;
    getContractAt(
      name: "Authentication",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Authentication>;
    getContractAt(
      name: "BalancerPoolToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BalancerPoolToken>;
    getContractAt(
      name: "BaseGeneralPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseGeneralPool>;
    getContractAt(
      name: "BaseMinimalSwapInfoPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseMinimalSwapInfoPool>;
    getContractAt(
      name: "BasePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePool>;
    getContractAt(
      name: "BasePoolAuthorization",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePoolAuthorization>;
    getContractAt(
      name: "BasePoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePoolFactory>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "FactoryWidePauseWindow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FactoryWidePauseWindow>;
    getContractAt(
      name: "IAssetManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssetManager>;
    getContractAt(
      name: "IAuthentication",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthentication>;
    getContractAt(
      name: "IAuthorizer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthorizer>;
    getContractAt(
      name: "IBasePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBasePool>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IFlashLoanRecipient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlashLoanRecipient>;
    getContractAt(
      name: "IGeneralPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGeneralPool>;
    getContractAt(
      name: "IMinimalSwapInfoPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMinimalSwapInfoPool>;
    getContractAt(
      name: "IProtocolFeesCollector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IProtocolFeesCollector>;
    getContractAt(
      name: "ISignaturesValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISignaturesValidator>;
    getContractAt(
      name: "ITemporarilyPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITemporarilyPausable>;
    getContractAt(
      name: "IVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVault>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "MockStableMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockStableMath>;
    getContractAt(
      name: "StablePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StablePool>;
    getContractAt(
      name: "StablePoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StablePoolFactory>;
    getContractAt(
      name: "TemporarilyPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TemporarilyPausable>;
    getContractAt(
      name: "Timelock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Timelock>;
    getContractAt(
      name: "AssetManagers",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssetManagers>;
    getContractAt(
      name: "AssetTransfersHandler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssetTransfersHandler>;
    getContractAt(
      name: "Authentication",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Authentication>;
    getContractAt(
      name: "Fees",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Fees>;
    getContractAt(
      name: "FlashLoans",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlashLoans>;
    getContractAt(
      name: "IAuthentication",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthentication>;
    getContractAt(
      name: "IAuthorizer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthorizer>;
    getContractAt(
      name: "IBasePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBasePool>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IFlashLoanRecipient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlashLoanRecipient>;
    getContractAt(
      name: "IGeneralPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGeneralPool>;
    getContractAt(
      name: "IMinimalSwapInfoPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMinimalSwapInfoPool>;
    getContractAt(
      name: "ISignaturesValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISignaturesValidator>;
    getContractAt(
      name: "ITemporarilyPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITemporarilyPausable>;
    getContractAt(
      name: "IVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVault>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "MinimalSwapInfoPoolsBalance",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MinimalSwapInfoPoolsBalance>;
    getContractAt(
      name: "PoolBalances",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolBalances>;
    getContractAt(
      name: "PoolRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolRegistry>;
    getContractAt(
      name: "PoolTokens",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolTokens>;
    getContractAt(
      name: "ProtocolFeesCollector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProtocolFeesCollector>;
    getContractAt(
      name: "SignaturesValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SignaturesValidator>;
    getContractAt(
      name: "Swaps",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Swaps>;
    getContractAt(
      name: "TemporarilyPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TemporarilyPausable>;
    getContractAt(
      name: "TwoTokenPoolsBalance",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TwoTokenPoolsBalance>;
    getContractAt(
      name: "UserBalance",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UserBalance>;
    getContractAt(
      name: "Vault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Vault>;
    getContractAt(
      name: "VaultAuthorization",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultAuthorization>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "WAVEBar",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WAVEBar>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "WaveBar",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WaveBar>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IRewarder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRewarder>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "WAVEMasterChef",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WAVEMasterChef>;
    getContractAt(
      name: "WAVEToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WAVEToken>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "WAVEToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WAVEToken>;
    getContractAt(
      name: "Authentication",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Authentication>;
    getContractAt(
      name: "BalancerPoolToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BalancerPoolToken>;
    getContractAt(
      name: "BaseMinimalSwapInfoPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseMinimalSwapInfoPool>;
    getContractAt(
      name: "BasePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePool>;
    getContractAt(
      name: "BasePoolAuthorization",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePoolAuthorization>;
    getContractAt(
      name: "BasePoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePoolFactory>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "FactoryWidePauseWindow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FactoryWidePauseWindow>;
    getContractAt(
      name: "IAuthentication",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthentication>;
    getContractAt(
      name: "IAuthorizer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthorizer>;
    getContractAt(
      name: "IBasePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBasePool>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IFlashLoanRecipient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlashLoanRecipient>;
    getContractAt(
      name: "IMinimalSwapInfoPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMinimalSwapInfoPool>;
    getContractAt(
      name: "IPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPriceOracle>;
    getContractAt(
      name: "ISignaturesValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISignaturesValidator>;
    getContractAt(
      name: "ITemporarilyPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITemporarilyPausable>;
    getContractAt(
      name: "IVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVault>;
    getContractAt(
      name: "IWeightedPoolPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWeightedPoolPriceOracle>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "PoolPriceOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PoolPriceOracle>;
    getContractAt(
      name: "ProtocolFeesCollector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProtocolFeesCollector>;
    getContractAt(
      name: "TemporarilyPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TemporarilyPausable>;
    getContractAt(
      name: "WeightedPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WeightedPool>;
    getContractAt(
      name: "WeightedPool2Tokens",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WeightedPool2Tokens>;
    getContractAt(
      name: "WeightedPool2TokensFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WeightedPool2TokensFactory>;
    getContractAt(
      name: "Authentication",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Authentication>;
    getContractAt(
      name: "BalancerPoolToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BalancerPoolToken>;
    getContractAt(
      name: "BaseMinimalSwapInfoPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseMinimalSwapInfoPool>;
    getContractAt(
      name: "BasePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePool>;
    getContractAt(
      name: "BasePoolAuthorization",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePoolAuthorization>;
    getContractAt(
      name: "BasePoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePoolFactory>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "FactoryWidePauseWindow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FactoryWidePauseWindow>;
    getContractAt(
      name: "IAuthentication",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthentication>;
    getContractAt(
      name: "IAuthorizer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthorizer>;
    getContractAt(
      name: "IBasePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBasePool>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IFlashLoanRecipient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFlashLoanRecipient>;
    getContractAt(
      name: "IMinimalSwapInfoPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMinimalSwapInfoPool>;
    getContractAt(
      name: "ISignaturesValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISignaturesValidator>;
    getContractAt(
      name: "ITemporarilyPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITemporarilyPausable>;
    getContractAt(
      name: "IVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVault>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "ProtocolFeesCollector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProtocolFeesCollector>;
    getContractAt(
      name: "TemporarilyPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TemporarilyPausable>;
    getContractAt(
      name: "WeightedPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WeightedPool>;
    getContractAt(
      name: "WeightedPoolFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WeightedPoolFactory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
