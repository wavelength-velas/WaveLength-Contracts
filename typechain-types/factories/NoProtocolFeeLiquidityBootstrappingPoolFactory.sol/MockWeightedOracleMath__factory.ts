/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MockWeightedOracleMath,
  MockWeightedOracleMathInterface,
} from "../../NoProtocolFeeLiquidityBootstrappingPoolFactory.sol/MockWeightedOracleMath";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "normalizedWeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "bptTotalSupplyLn",
        type: "int256",
      },
    ],
    name: "calcLogBPTPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "normalizedWeightA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "normalizedWeightB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceB",
        type: "uint256",
      },
    ],
    name: "calcLogSpotPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "value",
        type: "int256",
      },
    ],
    name: "fromLowResLog",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "toLowResLog",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c13806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806357aad01314610051578063abb9d0d51461007a578063be7a6d1e1461008d578063c519a075146100a0575b600080fd5b61006461005f366004610b60565b6100b3565b6040516100719190610bd4565b60405180910390f35b610064610088366004610b60565b6100c6565b61006461009b366004610b78565b6100d1565b6100646100ae366004610ba3565b6100e6565b60006100be826100fd565b90505b919050565b60006100be8261013d565b60006100de848484610150565b949350505050565b60006100f485858585610177565b95945050505050565b600080610109836101ac565b9050600080821361012257652d79883d2000820361012c565b652d79883d200082015b655af3107a40009005949350505050565b60006100be655af3107a40008302610210565b60008061015d84866105e5565b9050600061016a826100fd565b9390930395945050505050565b60008061019761018784866105e5565b61019187896105e5565b906105e5565b90506101a2816100fd565b9695505050505050565b60006101bc60008313606461063e565b670c7d713b49da0000821380156101da5750670f43fc2c04ee000082125b1561020057670de0b6b3a76400006101f183610650565b816101f857fe5b0590506100c1565b6102098261076e565b90506100c1565b600061023f680238fd42c5cf03ffff198312158015610238575068070c1cc73b00c800008313155b600961063e565b600082121561026a5761025482600003610210565b6a0c097ce7bc90715b34b9f160241b816101f857fe5b60006806f05b59d3b200000083126102aa57506806f05b59d3b1ffffff1990910190770195e54c5dd42177f53a27172fa9ec6302628270000000006102e0565b6803782dace9d900000083126102dc57506803782dace9d8ffffff19909101906b1425982cf597cd205cef73806102e0565b5060015b6064929092029168056bc75e2d6310000068ad78ebc5ac6200000084126103305768ad78ebc5ac61ffffff199093019268056bc75e2d631000006e01855144814a7ff805980ff008400082020590505b6856bc75e2d631000000841261036c576856bc75e2d630ffffff199093019268056bc75e2d631000006b02df0ab5a80a22c61ab5a70082020590505b682b5e3af16b1880000084126103a657682b5e3af16b187fffff199093019268056bc75e2d63100000693f1fce3da636ea5cf85082020590505b6815af1d78b58c40000084126103e0576815af1d78b58c3fffff199093019268056bc75e2d63100000690127fa27722cc06cc5e282020590505b680ad78ebc5ac6200000841261041957680ad78ebc5ac61fffff199093019268056bc75e2d6310000068280e60114edb805d0382020590505b68056bc75e2d6310000084126104525768056bc75e2d630fffff199093019268056bc75e2d63100000680ebc5fb4174612111082020590505b6802b5e3af16b1880000841261048b576802b5e3af16b187ffff199093019268056bc75e2d631000006808f00f760a4b2db55d82020590505b68015af1d78b58c4000084126104c45768015af1d78b58c3ffff199093019268056bc75e2d631000006806f5f177578893793782020590505b68056bc75e2d631000008481019085906002908280020505918201919050600368056bc75e2d631000008783020505918201919050600468056bc75e2d631000008783020505918201919050600568056bc75e2d631000008783020505918201919050600668056bc75e2d631000008783020505918201919050600768056bc75e2d631000008783020505918201919050600868056bc75e2d631000008783020505918201919050600968056bc75e2d631000008783020505918201919050600a68056bc75e2d631000008783020505918201919050600b68056bc75e2d631000008783020505918201919050600c68056bc75e2d631000008783020505918201919050606468056bc75e2d63100000848402058502059695505050505050565b60006105f4821515600461063e565b8261060157506000610638565b670de0b6b3a7640000838102906106249085838161061b57fe5b0414600561063e565b82600182038161063057fe5b046001019150505b92915050565b8161064c5761064c81610b0d565b5050565b670de0b6b3a7640000026000806a0c097ce7bc90715b34b9f160241b808401906ec097ce7bc90715b34b9f0fffffffff198501028161068b57fe5b05905060006a0c097ce7bc90715b34b9f160241b82800205905081806a0c097ce7bc90715b34b9f160241b81840205915060038205016a0c097ce7bc90715b34b9f160241b82840205915060058205016a0c097ce7bc90715b34b9f160241b82840205915060078205016a0c097ce7bc90715b34b9f160241b82840205915060098205016a0c097ce7bc90715b34b9f160241b828402059150600b8205016a0c097ce7bc90715b34b9f160241b828402059150600d8205016a0c097ce7bc90715b34b9f160241b828402059150600f826002919005919091010295945050505050565b6000670de0b6b3a76400008212156107aa576107a0826a0c097ce7bc90715b34b9f160241b8161079a57fe5b0561076e565b60000390506100c1565b60007e1600ef3172e58d2e933ec884fde10064c63b5372d805e203c000000000000083126107fb57770195e54c5dd42177f53a27172fa9ec630262827000000000830592506806f05b59d3b2000000015b73011798004d755d3c8bc8e03204cf44619e0000008312610833576b1425982cf597cd205cef7380830592506803782dace9d9000000015b606492830292026e01855144814a7ff805980ff0084000831261087b576e01855144814a7ff805980ff008400068056bc75e2d63100000840205925068ad78ebc5ac62000000015b6b02df0ab5a80a22c61ab5a70083126108b6576b02df0ab5a80a22c61ab5a70068056bc75e2d6310000084020592506856bc75e2d631000000015b693f1fce3da636ea5cf85083126108ed57693f1fce3da636ea5cf85068056bc75e2d631000008402059250682b5e3af16b18800000015b690127fa27722cc06cc5e2831261092457690127fa27722cc06cc5e268056bc75e2d6310000084020592506815af1d78b58c400000015b68280e60114edb805d0383126109595768280e60114edb805d0368056bc75e2d631000008402059250680ad78ebc5ac6200000015b680ebc5fb41746121110831261098457680ebc5fb4174612111068056bc75e2d631000009384020592015b6808f00f760a4b2db55d83126109b9576808f00f760a4b2db55d68056bc75e2d6310000084020592506802b5e3af16b1880000015b6806f5f177578893793783126109ee576806f5f177578893793768056bc75e2d63100000840205925068015af1d78b58c40000015b6806248f33704b2866038312610a22576806248f33704b28660368056bc75e2d63100000840205925067ad78ebc5ac620000015b6805c548670b9510e7ac8312610a56576805c548670b9510e7ac68056bc75e2d6310000084020592506756bc75e2d6310000015b600068056bc75e2d63100000840168056bc75e2d631000008086030281610a7957fe5b059050600068056bc75e2d63100000828002059050818068056bc75e2d63100000818402059150600382050168056bc75e2d63100000828402059150600582050168056bc75e2d63100000828402059150600782050168056bc75e2d63100000828402059150600982050168056bc75e2d63100000828402059150600b820501600202606485820105979650505050505050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600060208284031215610b71578081fd5b5035919050565b600080600060608486031215610b8c578182fd5b505081359360208301359350604090920135919050565b60008060008060808587031215610bb8578081fd5b5050823594602084013594506040840135936060013592509050565b9081526020019056fea264697066735822122068f0b1f1f030c3c6570a6eaf38384ab832fd32c961a2e6f933067a4de336b7b664736f6c63430007060033";

type MockWeightedOracleMathConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockWeightedOracleMathConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockWeightedOracleMath__factory extends ContractFactory {
  constructor(...args: MockWeightedOracleMathConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockWeightedOracleMath> {
    return super.deploy(overrides || {}) as Promise<MockWeightedOracleMath>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockWeightedOracleMath {
    return super.attach(address) as MockWeightedOracleMath;
  }
  override connect(signer: Signer): MockWeightedOracleMath__factory {
    return super.connect(signer) as MockWeightedOracleMath__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockWeightedOracleMathInterface {
    return new utils.Interface(_abi) as MockWeightedOracleMathInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockWeightedOracleMath {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockWeightedOracleMath;
  }
}
