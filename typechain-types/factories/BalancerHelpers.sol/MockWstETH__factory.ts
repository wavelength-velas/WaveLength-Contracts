/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MockWstETH,
  MockWstETHInterface,
} from "../../BalancerHelpers.sol/MockWstETH";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_wstETHAmount",
        type: "uint256",
      },
    ],
    name: "getStETHByWstETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stETHAmount",
        type: "uint256",
      },
    ],
    name: "getWstETHByStETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stETH",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stEthPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensPerStEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_wstETHAmount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stETHAmount",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526714d1120d7b1600006006553480156200001d57600080fd5b5060405162000e1138038062000e1183398101604081905262000040916200019f565b604080518082018252601481527f57726170706564205374616b65642045746865720000000000000000000000006020808301918252835180850190945260068452650eee6e88aa8960d31b908401528151919291620000a391600391620000f3565b508051620000b9906004906020840190620000f3565b5050600580546001600160a01b0390931661010002610100600160a81b031960ff19909416601217939093169290921790915550620001cf565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200012b576000855562000176565b82601f106200014657805160ff191683800117855562000176565b8280016001018555821562000176579182015b828111156200017657825182559160200191906001019062000159565b506200018492915062000188565b5090565b5b8082111562000184576000815560010162000189565b600060208284031215620001b1578081fd5b81516001600160a01b0381168114620001c8578182fd5b9392505050565b610c3280620001df6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80639576a0c8116100ad578063bb2952fc11610071578063bb2952fc14610220578063c1fe3e4814610233578063dd62ed3e14610248578063de0e9a3e1461025b578063ea598cb01461026e57610121565b80639576a0c8146101d757806395d89b41146101df578063a457c2d7146101e7578063a9059cbb146101fa578063b0e389001461020d57610121565b806323b872dd116100f457806323b872dd146101815780632c4e722e14610194578063313ce5671461019c57806339509351146101b157806370a08231146101c457610121565b8063035faf821461012657806306fdde0314610144578063095ea7b31461015957806318160ddd14610179575b600080fd5b61012e610281565b60405161013b9190610be5565b60405180910390f35b61014c610299565b60405161013b9190610b92565b61016c610167366004610ad5565b61032f565b60405161013b9190610b73565b61012e610346565b61016c61018f366004610a9a565b61034c565b61012e6103a0565b6101a46103a6565b60405161013b9190610bee565b61016c6101bf366004610ad5565b6103af565b61012e6101d2366004610a4e565b6103e5565b61012e610404565b61014c610417565b61016c6101f5366004610ad5565b610478565b61016c610208366004610ad5565b6104b1565b61012e61021b366004610b1e565b6104be565b61012e61022e366004610b1e565b6104d5565b61023b6104ec565b60405161013b9190610b7e565b61012e610256366004610a68565b610500565b61012e610269366004610b1e565b61052b565b61012e61027c366004610b1e565b6105d3565b6000610294670de0b6b3a76400006104d5565b905090565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b600061033c338484610677565b5060015b92915050565b60025490565b60006103598484846106df565b6001600160a01b038416600090815260016020908152604080832033808552925290912054610396918691610391908661019e6107bf565b610677565b5060019392505050565b60065481565b60055460ff1690565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161033c91859061039190866107d5565b6001600160a01b0381166000908152602081905260409020545b919050565b6000610294670de0b6b3a76400006104be565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103255780601f106102fa57610100808354040283529160200191610325565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161033c918590610391908661019f6107bf565b600061033c3384846106df565b6000610340600654836107ee90919063ffffffff16565b60006103406006548361083f90919063ffffffff16565b60055461010090046001600160a01b031681565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60006105373383610875565b6000610542836104d5565b60055460405163a9059cbb60e01b815291925061010090046001600160a01b03169063a9059cbb9061057a9033908590600401610b5a565b602060405180830381600087803b15801561059457600080fd5b505af11580156105a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cc9190610afe565b5092915050565b6005546040516323b872dd60e01b815260009161010090046001600160a01b0316906323b872dd9061060d90339030908790600401610b36565b602060405180830381600087803b15801561062757600080fd5b505af115801561063b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065f9190610afe565b50600061066b836104be565b90506103403382610931565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106d2908590610be5565b60405180910390a3505050565b6106f66001600160a01b03841615156101986109bf565b61070d6001600160a01b03831615156101996109bf565b6107188383836109d1565b6001600160a01b03831660009081526020819052604090205461073e90826101a06107bf565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461076d90826107d5565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106d2908590610be5565b60006107ce84841115836109bf565b5050900390565b60008282016107e784821015836109bf565b9392505050565b60006107fd82151560046109bf565b8261080a57506000610340565b670de0b6b3a76400008381029061082d9085838161082457fe5b041460056109bf565b82818161083657fe5b04915050610340565b600082820261086384158061085c57508385838161085957fe5b04145b60036109bf565b670de0b6b3a764000090049392505050565b61088c6001600160a01b038316151561019b6109bf565b610898826000836109d1565b6001600160a01b0382166000908152602081905260409020546108be90826101a16107bf565b6001600160a01b0383166000908152602081905260409020556002546108e490826109d6565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610925908590610be5565b60405180910390a35050565b61093d600083836109d1565b60025461094a90826107d5565b6002556001600160a01b03821660009081526020819052604090205461097090826107d5565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610925908590610be5565b816109cd576109cd816109e4565b5050565b505050565b60006107e7838360016107bf565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b80356001600160a01b03811681146103ff57600080fd5b600060208284031215610a5f578081fd5b6107e782610a37565b60008060408385031215610a7a578081fd5b610a8383610a37565b9150610a9160208401610a37565b90509250929050565b600080600060608486031215610aae578081fd5b610ab784610a37565b9250610ac560208501610a37565b9150604084013590509250925092565b60008060408385031215610ae7578182fd5b610af083610a37565b946020939093013593505050565b600060208284031215610b0f578081fd5b815180151581146107e7578182fd5b600060208284031215610b2f578081fd5b5035919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b81811015610bbe57858101830151858201604001528201610ba2565b81811115610bcf5783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b60ff9190911681526020019056fea2646970667358221220170cd60f1545c9ab7f698a8d4c10d476d277d3343bd2825bb91be7be35c8259b64736f6c63430007060033";

type MockWstETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockWstETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockWstETH__factory extends ContractFactory {
  constructor(...args: MockWstETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockWstETH> {
    return super.deploy(token, overrides || {}) as Promise<MockWstETH>;
  }
  override getDeployTransaction(
    token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token, overrides || {});
  }
  override attach(address: string): MockWstETH {
    return super.attach(address) as MockWstETH;
  }
  override connect(signer: Signer): MockWstETH__factory {
    return super.connect(signer) as MockWstETH__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockWstETHInterface {
    return new utils.Interface(_abi) as MockWstETHInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockWstETH {
    return new Contract(address, _abi, signerOrProvider) as MockWstETH;
  }
}
