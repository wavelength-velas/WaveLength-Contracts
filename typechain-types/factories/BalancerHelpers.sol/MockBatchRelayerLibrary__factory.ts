/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MockBatchRelayerLibrary,
  MockBatchRelayerLibraryInterface,
} from "../../BalancerHelpers.sol/MockBatchRelayerLibrary";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ChainedReferenceValueRead",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum IVault.SwapKind",
        name: "kind",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "assetInIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "assetOutIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IVault.BatchSwapStep[]",
        name: "swaps",
        type: "tuple[]",
      },
      {
        internalType: "contract IAsset[]",
        name: "assets",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bool",
            name: "fromInternalBalance",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bool",
            name: "toInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.FundManagement",
        name: "funds",
        type: "tuple",
      },
      {
        internalType: "int256[]",
        name: "limits",
        type: "int256[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "key",
            type: "uint256",
          },
        ],
        internalType: "struct VaultActions.OutputReference[]",
        name: "outputReferences",
        type: "tuple[]",
      },
    ],
    name: "batchSwap",
    outputs: [
      {
        internalType: "int256[]",
        name: "",
        type: "int256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "enum VaultActions.PoolKind",
        name: "kind",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IAsset[]",
            name: "assets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "minAmountsOut",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "toInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.ExitPoolRequest",
        name: "request",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "key",
            type: "uint256",
          },
        ],
        internalType: "struct VaultActions.OutputReference[]",
        name: "outputReferences",
        type: "tuple[]",
      },
    ],
    name: "exitPool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ref",
        type: "uint256",
      },
    ],
    name: "getChainedReferenceValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntrypoint",
    outputs: [
      {
        internalType: "contract IBalancerRelayer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "enum VaultActions.PoolKind",
        name: "kind",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IAsset[]",
            name: "assets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "maxAmountsIn",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "fromInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.JoinPoolRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputReference",
        type: "uint256",
      },
    ],
    name: "joinPool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.UserBalanceOpKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IAsset",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct IVault.UserBalanceOp[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "manageUserBalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ref",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setChainedReferenceValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "authorisation",
        type: "bytes",
      },
    ],
    name: "setRelayerApproval",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IAsset",
            name: "assetIn",
            type: "address",
          },
          {
            internalType: "contract IAsset",
            name: "assetOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IVault.SingleSwap",
        name: "singleSwap",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bool",
            name: "fromInternalBalance",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bool",
            name: "toInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.FundManagement",
        name: "funds",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputReference",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Permit",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "vaultPermit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20PermitDAI",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "vaultPermitDAI",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040527fae1dc54057af8e8e5ce068cdd4383149c7efcb30e8fb95b592ee1594367fb50960e0523480156200003657600080fd5b5060405162002ef738038062002ef7833981016040819052620000599162000150565b8080806001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156200009557600080fd5b505afa158015620000aa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d0919062000150565b6001600160601b0319606091821b81166080529082901b1660a05260405181903090620000fd9062000142565b6200010a92919062000176565b604051809103906000f08015801562000127573d6000803e3d6000fd5b5060601b6001600160601b03191660c05250620001a9915050565b61065080620028a783390190565b60006020828403121562000162578081fd5b81516200016f8162000190565b9392505050565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0381168114620001a657600080fd5b50565b60805160601c60a05160601c60c05160601c60e0516126bf620001e8600039806110ce5250806105105250806105e3528061068d5250506126bf6000f3fe6080604052600436106100975760003560e01c8063183694461461009c5780632e6272ea146100c55780635967b696146100e55780637fd0e5d51461010757806380db15bd146101295780638d64cfbc1461013c5780638d928af81461014f5780638fe4624f14610164578063959fc17a14610177578063c518e5311461018a578063d80952d5146101aa578063ecc02637146101bd575b600080fd5b6100af6100aa366004611cc7565b6101d0565b6040516100bc9190612253565b60405180910390f35b6100d86100d3366004611dc1565b6103be565b6040516100bc91906125e1565b3480156100f157600080fd5b50610105610100366004611eb8565b6104cc565b005b34801561011357600080fd5b5061011c61050e565b6040516100bc9190612135565b61010561013736600461180b565b610532565b61010561014a366004611b84565b610611565b34801561015b57600080fd5b5061011c61068b565b610105610172366004611a79565b6106af565b610105610185366004611b06565b6108a1565b34801561019657600080fd5b506100d86101a5366004611ee8565b61091e565b6101056101b83660046119d3565b610930565b6101056101cb366004611924565b610ea8565b6060336101e060208a018a6117ef565b6001600160a01b03161461020f5760405162461bcd60e51b8152600401610206906124c2565b60405180910390fd5b60005b8b518110156102745760008c828151811061022957fe5b602002602001015160600151905061024081610f74565b1561026b5761024e81610f8c565b8d838151811061025a57fe5b602002602001015160600181815250505b50600101610212565b50600061027f61068b565b6001600160a01b031663945bcec9868f8f8f8f8f8f8f8f6040518a63ffffffff1660e01b81526004016102b99897969594939291906123d8565b6000604051808303818588803b1580156102d257600080fd5b505af11580156102e6573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261030f9190810190611895565b905060005b838110156103ad5761033a85858381811061032b57fe5b90506040020160200135610f74565b6103565760405162461bcd60e51b815260040161020690612523565b6103a585858381811061036557fe5b905060400201602001356103a08488888681811061037f57fe5b905060400201600001358151811061039357fe5b6020026020010151610fa6565b610fbc565b600101610314565b509c9b505050505050505050505050565b6000336103ce60208801886117ef565b6001600160a01b0316146103f45760405162461bcd60e51b8152600401610206906124c2565b6104018760800151610f74565b15610419576104138760800151610f8c565b60808801525b600061042361068b565b6001600160a01b03166352bbbe29858a8a8a8a6040518663ffffffff1660e01b81526004016104559493929190612556565b6020604051808303818588803b15801561046e57600080fd5b505af1158015610482573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906104a79190611ed0565b90506104b283610f74565b156104c1576104c18382610fbc565b979650505050505050565b7fc78533b5d3aff901cb655b9491c67366edabc3cd9cb680c3934f61d7eb0787526104f682610f8c565b60405161050391906125e1565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b038416301480610547575082155b6105635760405162461bcd60e51b8152600401610206906124ec565b600063fa6e671d60e01b33868660405160240161058293929190612149565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b031990951694909417909352516105c4928691869101612102565b60408051601f1981840301815291905290506106096001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001682610fcf565b505050505050565b866001600160a01b031663d505accf8761062961068b565b88888888886040518863ffffffff1660e01b81526004016106509796959493929190612212565b600060405180830381600087803b15801561066a57600080fd5b505af115801561067e573d6000803e3d6000fd5b5050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b03851633146106d75760405162461bcd60e51b8152600401610206906124c2565b60006106e288611046565b905060006106ef83610f74565b6106fa576000610776565b6040516370a0823160e01b81526001600160a01b038316906370a0823190610726908990600401612135565b60206040518083038186803b15801561073e57600080fd5b505afa158015610752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107769190611ed0565b905061078688866040015161104c565b604086015261079361068b565b6001600160a01b031663b95cac28858b8a8a8a6040518663ffffffff1660e01b81526004016107c59493929190612332565b6000604051808303818588803b1580156107de57600080fd5b505af11580156107f2573d6000803e3d6000fd5b505050505061080083610f74565b15610896576040516370a0823160e01b81526000906001600160a01b038416906370a0823190610834908a90600401612135565b60206040518083038186803b15801561084c57600080fd5b505afa158015610860573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108849190611ed0565b9050610894846103a0838561107a565b505b505050505050505050565b876001600160a01b0316638fcbaf0c886108b961068b565b8989898989896040518963ffffffff1660e01b81526004016108e29897969594939291906121c9565b600060405180830381600087803b1580156108fc57600080fd5b505af1158015610910573d6000803e3d6000fd5b505050505050505050505050565b600061092a8383610fbc565b92915050565b6001600160a01b03851633146109585760405162461bcd60e51b8152600401610206906124c2565b6000816001600160401b038111801561097057600080fd5b5060405190808252806020026020018201604052801561099a578160200160208202803683370190505b5090506000826001600160401b03811180156109b557600080fd5b506040519080825280602002602001820160405280156109df578160200160208202803683370190505b50905060005b83811015610b4f576109fc85858381811061032b57fe5b610a185760405162461bcd60e51b815260040161020690612523565b8551600090868684818110610a2957fe5b9050604002016000013581518110610a3d57fe5b60200260200101519050866060015115610a8b57610a5a81611090565b848381518110610a6657fe5b60200260200101906001600160a01b031690816001600160a01b031681525050610b46565b610a9481611093565b610b2157610aa181611090565b6001600160a01b03166370a08231896040518263ffffffff1660e01b8152600401610acc9190612135565b60206040518083038186803b158015610ae457600080fd5b505afa158015610af8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1c9190611ed0565b610b2d565b876001600160a01b0316315b838381518110610b3957fe5b6020026020010181815250505b506001016109e5565b50846060015115610be657610b6261068b565b6001600160a01b0316630f5a6efa87846040518363ffffffff1660e01b8152600401610b8f92919061216d565b60006040518083038186803b158015610ba757600080fd5b505afa158015610bbb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610be39190810190611999565b90505b610bf48886604001516110a0565b6040860152610c0161068b565b6001600160a01b0316638bdb39138a8989896040518563ffffffff1660e01b8152600401610c329493929190612332565b600060405180830381600087803b158015610c4c57600080fd5b505af1158015610c60573d6000803e3d6000fd5b5060009250859150506001600160401b0381118015610c7e57600080fd5b50604051908082528060200260200182016040528015610ca8578160200160208202803683370190505b509050856060015115610d4557610cbd61068b565b6001600160a01b0316630f5a6efa88856040518363ffffffff1660e01b8152600401610cea92919061216d565b60006040518083038186803b158015610d0257600080fd5b505afa158015610d16573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d3e9190810190611999565b9050610e43565b60005b84811015610e41578651600090878784818110610d6157fe5b9050604002016000013581518110610d7557fe5b60200260200101519050610d8881611093565b610e1557610d9581611090565b6001600160a01b03166370a082318a6040518263ffffffff1660e01b8152600401610dc09190612135565b60206040518083038186803b158015610dd857600080fd5b505afa158015610dec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e109190611ed0565b610e21565b886001600160a01b0316315b838381518110610e2d57fe5b602090810291909101015250600101610d48565b505b60005b8481101561067e57610ea0868683818110610e5d57fe5b905060400201602001356103a0858481518110610e7657fe5b6020026020010151858581518110610e8a57fe5b602002602001015161107a90919063ffffffff16565b600101610e46565b60005b82811015610f065733848483818110610ec057fe5b905060a002016060016020810190610ed891906117ef565b6001600160a01b031614610efe5760405162461bcd60e51b8152600401610206906124c2565b600101610eab565b50610f0f61068b565b6001600160a01b0316630e8e3e848285856040518463ffffffff1660e01b8152600401610f3d929190612297565b6000604051808303818588803b158015610f5657600080fd5b505af1158015610f6a573d6000803e3d6000fd5b5050505050505050565b610ba160f41b6001600160f01b03198216145b919050565b600080610f98836110c7565b805460009091559392505050565b6000808213610fb8578160000361092a565b5090565b6000610fc7836110c7565b919091555050565b6060600080846001600160a01b031684604051610fec91906120e6565b6000604051808303816000865af19150503d8060008114611029576040519150601f19603f3d011682016040523d82523d6000602084013e61102e565b606091505b509150915061103d828261111d565b95945050505050565b60601c90565b6060600083801561105957fe5b141561106f5761106882611147565b905061092a565b61092a610136611184565b600061108a8383111560016111d7565b50900390565b90565b6001600160a01b03161590565b606060008380156110ad57fe5b14156110bc57611068826111e9565b61092a610150611184565b60006001827f00000000000000000000000000000000000000000000000000000000000000006040516020016110fe929190612127565b60408051808303601f1901815291905280516020909101200392915050565b6060821561112c57508061092a565b81511561113c5781518083602001fd5b61092a6101ae611184565b6060600061115483611232565b9050600181600381111561116457fe5b141561117b5761117383611248565b915050610f87565b82915050610f87565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b816111e5576111e581611184565b5050565b606060006111f683611232565b9050600081600381111561120657fe5b141561121557611173836112f6565b600181600381111561122357fe5b141561117b5761117383611359565b60008180602001905181019061092a9190611bf1565b6060600080611256846113ac565b915091506000805b83518110156112bc57600084828151811061127557fe5b6020026020010151905061128881610f74565b156112b35761129681610f8c565b8583815181106112a257fe5b602002602001018181525050600192505b5060010161125e565b50806112c8578461103d565b600183836040516020016112de939291906123a6565b60405160208183030381529060405295945050505050565b6060600080611304846113cf565b9150915061131182610f74565b1561134f5761131f82610f8c565b91506000828260405160200161133793929190612385565b60405160208183030381529060405292505050610f87565b8392505050610f87565b60606000611366836113e6565b905061137181610f74565b1561117b5761137f81610f8c565b905060018160405160200161139592919061236e565b604051602081830303815290604052915050610f87565b60606000828060200190518101906113c49190611c70565b909590945092505050565b600080828060200190518101906113c49190611c3a565b6000818060200190518101906113fc9190611c0d565b9392505050565b8035610f8781612667565b60008083601f84011261141f578182fd5b5081356001600160401b03811115611435578182fd5b602083019150836020808302850101111561144f57600080fd5b9250929050565b600082601f830112611466578081fd5b8135602061147b6114768361260d565b6125ea565b8281528181019085830183850287018401881015611497578586fd5b855b858110156114be5781356114ac81612667565b84529284019290840190600101611499565b5090979650505050505050565b600082601f8301126114db578081fd5b813560206114eb6114768361260d565b82815281810190858301855b858110156114be578135880160a080601f19838d03011215611517578889fd5b604080518281016001600160401b03828210818311171561153457fe5b8184528a8601358352838601358b8401526060915081860135848401526080935083860135828401528486013594508085111561156f578c8dfd5b505061157f8d8a858701016116a0565b918101919091528652505092840192908401906001016114f7565b60008083601f8401126115ab578182fd5b5081356001600160401b038111156115c1578182fd5b60208301915083602060408302850101111561144f57600080fd5b600082601f8301126115ec578081fd5b813560206115fc6114768361260d565b8281528181019085830183850287018401881015611618578586fd5b855b858110156114be5781358452928401929084019060010161161a565b600082601f830112611646578081fd5b815160206116566114768361260d565b8281528181019085830183850287018401881015611672578586fd5b855b858110156114be57815184529284019290840190600101611674565b80358015158114610f8757600080fd5b600082601f8301126116b0578081fd5b81356001600160401b038111156116c357fe5b6116d6601f8201601f19166020016125ea565b8181528460208386010111156116ea578283fd5b816020850160208301379081016020019190915292915050565b803560018110610f8757600080fd5b803560028110610f8757600080fd5b600060808284031215611733578081fd5b61173d60806125ea565b905081356001600160401b038082111561175657600080fd5b61176285838601611456565b8352602084013591508082111561177857600080fd5b611784858386016115dc565b6020840152604084013591508082111561179d57600080fd5b506117aa848285016116a0565b6040830152506117bc60608301611690565b606082015292915050565b6000608082840312156117d8578081fd5b50919050565b803560ff81168114610f8757600080fd5b600060208284031215611800578081fd5b81356113fc81612667565b60008060008060608587031215611820578283fd5b843561182b81612667565b935061183960208601611690565b925060408501356001600160401b0380821115611854578384fd5b818701915087601f830112611867578384fd5b813581811115611875578485fd5b886020828501011115611886578485fd5b95989497505060200194505050565b600060208083850312156118a7578182fd5b82516001600160401b038111156118bc578283fd5b8301601f810185136118cc578283fd5b80516118da6114768261260d565b81815283810190838501858402850186018910156118f6578687fd5b8694505b838510156119185780518352600194909401939185019185016118fa565b50979650505050505050565b600080600060408486031215611938578081fd5b83356001600160401b038082111561194e578283fd5b818601915086601f830112611961578283fd5b81358181111561196f578384fd5b87602060a083028501011115611983578384fd5b6020928301989097509590910135949350505050565b6000602082840312156119aa578081fd5b81516001600160401b038111156119bf578182fd5b6119cb84828501611636565b949350505050565b600080600080600080600060c0888a0312156119ed578485fd5b873596506119fd60208901611704565b95506040880135611a0d81612667565b94506060880135611a1d81612667565b935060808801356001600160401b0380821115611a38578485fd5b611a448b838c01611722565b945060a08a0135915080821115611a59578384fd5b50611a668a828b0161159a565b989b979a50959850939692959293505050565b600080600080600080600060e0888a031215611a93578081fd5b87359650611aa360208901611704565b95506040880135611ab381612667565b94506060880135611ac381612667565b935060808801356001600160401b03811115611add578182fd5b611ae98a828b01611722565b93505060a0880135915060c0880135905092959891949750929550565b600080600080600080600080610100898b031215611b22578182fd5b8835611b2d81612667565b97506020890135611b3d81612667565b96506040890135955060608901359450611b5960808a01611690565b9350611b6760a08a016117de565b925060c0890135915060e089013590509295985092959890939650565b600080600080600080600060e0888a031215611b9e578081fd5b8735611ba981612667565b96506020880135611bb981612667565b95506040880135945060608801359350611bd5608089016117de565b925060a0880135915060c0880135905092959891949750929550565b600060208284031215611c02578081fd5b81516113fc8161267c565b60008060408385031215611c1f578182fd5b8251611c2a8161267c565b6020939093015192949293505050565b600080600060608486031215611c4e578081fd5b8351611c598161267c565b602085015160409095015190969495509392505050565b600080600060608486031215611c84578081fd5b8351611c8f8161267c565b60208501519093506001600160401b03811115611caa578182fd5b611cb686828701611636565b925050604084015190509250925092565b60008060008060008060008060008060006101608c8e031215611ce8578485fd5b611cf18c611713565b9a506001600160401b038060208e01351115611d0b578586fd5b611d1b8e60208f01358f016114cb565b9a508060408e01351115611d2d578586fd5b611d3d8e60408f01358f0161140e565b909a509850611d4f8e60608f016117c7565b97508060e08e01351115611d61578586fd5b611d718e60e08f01358f0161140e565b90975095506101008d013594506101208d013593506101408d0135811015611d97578283fd5b50611da98d6101408e01358e0161159a565b81935080925050509295989b509295989b9093969950565b6000806000806000806101208789031215611dda578384fd5b86356001600160401b0380821115611df0578586fd5b9088019060c0828b031215611e03578586fd5b60405160c081018181108382111715611e1857fe5b60405282358152611e2b60208401611713565b6020820152611e3c60408401611403565b6040820152611e4d60608401611403565b60608201526080830135608082015260a083013582811115611e6d578788fd5b611e798c8286016116a0565b60a083015250809850505050611e9288602089016117c7565b959895975050505060a08401359360c08101359360e08201359350610100909101359150565b600060208284031215611ec9578081fd5b5035919050565b600060208284031215611ee1578081fd5b5051919050565b60008060408385031215611efa578182fd5b50508035926020909101359150565b6001600160a01b03169052565b60008284526020808501945082825b85811015611f53578135611f3881612667565b6001600160a01b031687529582019590820190600101611f25565b509495945050505050565b60008284526020808501945082825b85811015611f5357813587529582019590820190600101611f6d565b6000815180845260208085019450808401835b83811015611f5357815187529582019590820190600101611f9c565b15159052565b60008151808452611fd681602086016020860161262a565b601f01601f19169290920160200192915050565b60028110611ff457fe5b9052565b8051608080845281519084018190526000916020919082019060a0860190845b8181101561203d5783516001600160a01b031683529284019291840191600101612018565b5050828501519150858103838701526120568183611f89565b92505050604083015184820360408601526120718282611fbe565b91505060608301516120866060860182611fb8565b509392505050565b803561209981612667565b6001600160a01b0381811684526120b260208401611690565b15156020850152604083013591506120c982612667565b1660408301526120db60608201611690565b151560608301525050565b600082516120f881846020870161262a565b9190910192915050565b6000845161211481846020890161262a565b8201838582379092019182525092915050565b918252602082015260400190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152901515604082015260600190565b6001600160a01b038381168252604060208084018290528451918401829052600092858201929091906060860190855b818110156121bb57855185168352948301949183019160010161219d565b509098975050505050505050565b6001600160a01b039889168152969097166020870152604086019490945260608501929092521515608084015260ff1660a083015260c082015260e08101919091526101000190565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6020808252825182820181905260009190848201906040850190845b8181101561228b5783518352928401929184019160010161226f565b50909695505050505050565b6020808252818101839052600090604080840186845b878110156114be5781356122c08161267c565b6122c98161265a565b8352818501356122d881612667565b6001600160a01b03908116848701528285013585850152606090818401356122ff81612667565b16908401526080612311838201611403565b61231d82860182611f09565b505060a09283019291909101906001016122ad565b8481526001600160a01b0384811660208301528316604082015260806060820181905260009061236490830184611ff8565b9695505050505050565b6040810161237b8461265a565b9281526020015290565b606081016123928561265a565b938152602081019290925260409091015290565b60006123b18561265a565b848252606060208301526123c86060830185611f89565b9050826040830152949350505050565b60006101208083016123ea848d611fea565b6020848101929092528a5190819052610140808501928281028601909101918c8201855b828110156124715787850361013f190186528151805186528481015185870152604080820151908701526060808201519087015260809081015160a09187018290529061245d81880183611fbe565b97860197965050509083019060010161240e565b505050508381036040850152612488818a8c611f16565b915050612498606084018861208e565b82810360e08401526124ab818688611f5e565b915050826101008301529998505050505050505050565b60208082526010908201526f24b731b7b93932b1ba1039b2b73232b960811b604082015260600190565b6020808252601f908201527f52656c617965722063616e206f6e6c7920617070726f766520697473656c6600604082015260600190565b602080825260199082015278696e76616c696420636861696e6564207265666572656e636560381b604082015260600190565b600060e08252855160e08301526020860151612576610100840182611fea565b5060408601516001600160a01b03908116610120840152606087015116610140830152608086015161016083015260a086015160c06101808401526125bf6101a0840182611fbe565b9150506125cf602083018661208e565b60a082019390935260c0015292915050565b90815260200190565b6040518181016001600160401b038111828210171561260557fe5b604052919050565b60006001600160401b0382111561262057fe5b5060209081020190565b60005b8381101561264557818101518382015260200161262d565b83811115612654576000848401525b50505050565b6004811061266457fe5b50565b6001600160a01b038116811461266457600080fd5b6004811061266457600080fdfea26469706673582212203984ba6fe50d4b5e7089eef2a9f2dfd8efb25231687c30eabddd6107fd60bde264736f6c6343000706003360c060405234801561001057600080fd5b5060405161065038038061065083398101604081905261002f91610052565b60016000556001600160601b0319606092831b8116608052911b1660a0526100a3565b60008060408385031215610064578182fd5b825161006f8161008b565b60208401519092506100808161008b565b809150509250929050565b6001600160a01b03811681146100a057600080fd5b50565b60805160601c60a05160601c6105816100cf6000398060cf52806101b1525080604052506105816000f3fe60806040526004361061002d5760003560e01c80637678922e14610070578063ac9650d81461009b5761006b565b3661006b57610069336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102066100bb565b005b600080fd5b34801561007c57600080fd5b506100856100cd565b6040516100929190610443565b60405180910390f35b6100ae6100a93660046103b5565b6100f1565b6040516100929190610457565b816100c9576100c981610210565b5050565b7f000000000000000000000000000000000000000000000000000000000000000090565b60606100fb610263565b8167ffffffffffffffff8111801561011257600080fd5b5060405190808252806020026020018201604052801561014657816020015b60608152602001906001900390816101315790505b50905060005b828110156101f9576101da84848381811061016357fe5b905060200281019061017591906104cf565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169291505061027c565b8282815181106101e657fe5b602090810291909101015260010161014c565b506102026102f1565b61020a610305565b92915050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b610275600260005414156101906100bb565b6002600055565b6060600080846001600160a01b0316846040516102999190610424565b600060405180830381855af49150503d80600081146102d4576040519150601f19603f3d011682016040523d82523d6000602084013e6102d9565b606091505b50915091506102e8828261030c565b95945050505050565b478015610302576103023382610336565b50565b6001600055565b6060821561031b57508061020a565b81511561032b5781518083602001fd5b61020a6101ae610210565b610345814710156101a36100bb565b6000826001600160a01b03168260405161035e90610440565b60006040518083038185875af1925050503d806000811461039b576040519150601f19603f3d011682016040523d82523d6000602084013e6103a0565b606091505b505090506103b0816101a46100bb565b505050565b600080602083850312156103c7578182fd5b823567ffffffffffffffff808211156103de578384fd5b818501915085601f8301126103f1578384fd5b8135818111156103ff578485fd5b8660208083028501011115610412578485fd5b60209290920196919550909350505050565b6000825161043681846020870161051b565b9190910192915050565b90565b6001600160a01b0391909116815260200190565b6000602080830181845280855180835260408601915060408482028701019250838701855b828110156104c257878503603f19018452815180518087526104a3818989018a850161051b565b601f01601f19169590950186019450928501929085019060010161047c565b5092979650505050505050565b6000808335601e198436030181126104e5578283fd5b83018035915067ffffffffffffffff8211156104ff578283fd5b60200191503681900382131561051457600080fd5b9250929050565b60005b8381101561053657818101518382015260200161051e565b83811115610545576000848401525b5050505056fea2646970667358221220b8fc3b4bcf18c321c679a4ee73f3030606030b75859b92427ce8cd69e516f8c964736f6c63430007060033";

type MockBatchRelayerLibraryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockBatchRelayerLibraryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockBatchRelayerLibrary__factory extends ContractFactory {
  constructor(...args: MockBatchRelayerLibraryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockBatchRelayerLibrary> {
    return super.deploy(
      vault,
      overrides || {}
    ) as Promise<MockBatchRelayerLibrary>;
  }
  override getDeployTransaction(
    vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(vault, overrides || {});
  }
  override attach(address: string): MockBatchRelayerLibrary {
    return super.attach(address) as MockBatchRelayerLibrary;
  }
  override connect(signer: Signer): MockBatchRelayerLibrary__factory {
    return super.connect(signer) as MockBatchRelayerLibrary__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBatchRelayerLibraryInterface {
    return new utils.Interface(_abi) as MockBatchRelayerLibraryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockBatchRelayerLibrary {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockBatchRelayerLibrary;
  }
}
