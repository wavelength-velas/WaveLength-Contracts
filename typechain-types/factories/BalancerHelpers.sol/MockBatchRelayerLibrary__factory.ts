/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MockBatchRelayerLibrary,
  MockBatchRelayerLibraryInterface,
} from "../../BalancerHelpers.sol/MockBatchRelayerLibrary";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ChainedReferenceValueRead",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum IVault.SwapKind",
        name: "kind",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "assetInIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "assetOutIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IVault.BatchSwapStep[]",
        name: "swaps",
        type: "tuple[]",
      },
      {
        internalType: "contract IAsset[]",
        name: "assets",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bool",
            name: "fromInternalBalance",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bool",
            name: "toInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.FundManagement",
        name: "funds",
        type: "tuple",
      },
      {
        internalType: "int256[]",
        name: "limits",
        type: "int256[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "key",
            type: "uint256",
          },
        ],
        internalType: "struct VaultActions.OutputReference[]",
        name: "outputReferences",
        type: "tuple[]",
      },
    ],
    name: "batchSwap",
    outputs: [
      {
        internalType: "int256[]",
        name: "",
        type: "int256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "enum VaultActions.PoolKind",
        name: "kind",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IAsset[]",
            name: "assets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "minAmountsOut",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "toInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.ExitPoolRequest",
        name: "request",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "key",
            type: "uint256",
          },
        ],
        internalType: "struct VaultActions.OutputReference[]",
        name: "outputReferences",
        type: "tuple[]",
      },
    ],
    name: "exitPool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ref",
        type: "uint256",
      },
    ],
    name: "getChainedReferenceValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntrypoint",
    outputs: [
      {
        internalType: "contract IBalancerRelayer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "enum VaultActions.PoolKind",
        name: "kind",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IAsset[]",
            name: "assets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "maxAmountsIn",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "fromInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.JoinPoolRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputReference",
        type: "uint256",
      },
    ],
    name: "joinPool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.UserBalanceOpKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IAsset",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct IVault.UserBalanceOp[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "manageUserBalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ref",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setChainedReferenceValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "authorisation",
        type: "bytes",
      },
    ],
    name: "setRelayerApproval",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IAsset",
            name: "assetIn",
            type: "address",
          },
          {
            internalType: "contract IAsset",
            name: "assetOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IVault.SingleSwap",
        name: "singleSwap",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bool",
            name: "fromInternalBalance",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bool",
            name: "toInternalBalance",
            type: "bool",
          },
        ],
        internalType: "struct IVault.FundManagement",
        name: "funds",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputReference",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Permit",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "vaultPermit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20PermitDAI",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "vaultPermitDAI",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040527fae1dc54057af8e8e5ce068cdd4383149c7efcb30e8fb95b592ee1594367fb50960e0523480156200003657600080fd5b5060405162002f0b38038062002f0b833981016040819052620000599162000150565b8080806001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156200009557600080fd5b505afa158015620000aa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d0919062000150565b6001600160601b0319606091821b81166080529082901b1660a05260405181903090620000fd9062000142565b6200010a92919062000176565b604051809103906000f08015801562000127573d6000803e3d6000fd5b5060601b6001600160601b03191660c05250620001a9915050565b61065080620028bb83390190565b60006020828403121562000162578081fd5b81516200016f8162000190565b9392505050565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0381168114620001a657600080fd5b50565b60805160601c60a05160601c60c05160601c60e0516126d3620001e8600039806110de5250806105205250806105f3528061069d5250506126d36000f3fe6080604052600436106100a75760003560e01c80638d928af8116100645780638d928af81461015f5780638fe4624f14610174578063959fc17a14610187578063c518e5311461019a578063d80952d5146101ba578063ecc02637146101cd576100a7565b806318369446146100ac5780632e6272ea146100d55780635967b696146100f55780637fd0e5d51461011757806380db15bd146101395780638d64cfbc1461014c575b600080fd5b6100bf6100ba366004611cd7565b6101e0565b6040516100cc9190612263565b60405180910390f35b6100e86100e3366004611dd1565b6103ce565b6040516100cc91906125f5565b34801561010157600080fd5b50610115610110366004611ec8565b6104dc565b005b34801561012357600080fd5b5061012c61051e565b6040516100cc9190612145565b61011561014736600461181b565b610542565b61011561015a366004611b94565b610621565b34801561016b57600080fd5b5061012c61069b565b610115610182366004611a89565b6106bf565b610115610195366004611b16565b6108b1565b3480156101a657600080fd5b506100e86101b5366004611ef8565b61092e565b6101156101c83660046119e3565b610940565b6101156101db366004611934565b610eb8565b6060336101f060208a018a6117ff565b6001600160a01b03161461021f5760405162461bcd60e51b8152600401610216906124d2565b60405180910390fd5b60005b8b518110156102845760008c828151811061023957fe5b602002602001015160600151905061025081610f84565b1561027b5761025e81610f9c565b8d838151811061026a57fe5b602002602001015160600181815250505b50600101610222565b50600061028f61069b565b6001600160a01b031663945bcec9868f8f8f8f8f8f8f8f6040518a63ffffffff1660e01b81526004016102c99897969594939291906123e8565b6000604051808303818588803b1580156102e257600080fd5b505af11580156102f6573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261031f91908101906118a5565b905060005b838110156103bd5761034a85858381811061033b57fe5b90506040020160200135610f84565b6103665760405162461bcd60e51b815260040161021690612533565b6103b585858381811061037557fe5b905060400201602001356103b08488888681811061038f57fe5b90506040020160000135815181106103a357fe5b6020026020010151610fb6565b610fcc565b600101610324565b509c9b505050505050505050505050565b6000336103de60208801886117ff565b6001600160a01b0316146104045760405162461bcd60e51b8152600401610216906124d2565b6104118760800151610f84565b15610429576104238760800151610f9c565b60808801525b600061043361069b565b6001600160a01b03166352bbbe29858a8a8a8a6040518663ffffffff1660e01b8152600401610465949392919061256a565b6020604051808303818588803b15801561047e57600080fd5b505af1158015610492573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906104b79190611ee0565b90506104c283610f84565b156104d1576104d18382610fcc565b979650505050505050565b7fc78533b5d3aff901cb655b9491c67366edabc3cd9cb680c3934f61d7eb07875261050682610f9c565b60405161051391906125f5565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b038416301480610557575082155b6105735760405162461bcd60e51b8152600401610216906124fc565b600063fa6e671d60e01b33868660405160240161059293929190612159565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b031990951694909417909352516105d4928691869101612112565b60408051601f1981840301815291905290506106196001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001682610fdf565b505050505050565b866001600160a01b031663d505accf8761063961069b565b88888888886040518863ffffffff1660e01b81526004016106609796959493929190612222565b600060405180830381600087803b15801561067a57600080fd5b505af115801561068e573d6000803e3d6000fd5b5050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b03851633146106e75760405162461bcd60e51b8152600401610216906124d2565b60006106f288611056565b905060006106ff83610f84565b61070a576000610786565b6040516370a0823160e01b81526001600160a01b038316906370a0823190610736908990600401612145565b60206040518083038186803b15801561074e57600080fd5b505afa158015610762573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107869190611ee0565b905061079688866040015161105c565b60408601526107a361069b565b6001600160a01b031663b95cac28858b8a8a8a6040518663ffffffff1660e01b81526004016107d59493929190612342565b6000604051808303818588803b1580156107ee57600080fd5b505af1158015610802573d6000803e3d6000fd5b505050505061081083610f84565b156108a6576040516370a0823160e01b81526000906001600160a01b038416906370a0823190610844908a90600401612145565b60206040518083038186803b15801561085c57600080fd5b505afa158015610870573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108949190611ee0565b90506108a4846103b0838561108a565b505b505050505050505050565b876001600160a01b0316638fcbaf0c886108c961069b565b8989898989896040518963ffffffff1660e01b81526004016108f29897969594939291906121d9565b600060405180830381600087803b15801561090c57600080fd5b505af1158015610920573d6000803e3d6000fd5b505050505050505050505050565b600061093a8383610fcc565b92915050565b6001600160a01b03851633146109685760405162461bcd60e51b8152600401610216906124d2565b6000816001600160401b038111801561098057600080fd5b506040519080825280602002602001820160405280156109aa578160200160208202803683370190505b5090506000826001600160401b03811180156109c557600080fd5b506040519080825280602002602001820160405280156109ef578160200160208202803683370190505b50905060005b83811015610b5f57610a0c85858381811061033b57fe5b610a285760405162461bcd60e51b815260040161021690612533565b8551600090868684818110610a3957fe5b9050604002016000013581518110610a4d57fe5b60200260200101519050866060015115610a9b57610a6a816110a0565b848381518110610a7657fe5b60200260200101906001600160a01b031690816001600160a01b031681525050610b56565b610aa4816110a3565b610b3157610ab1816110a0565b6001600160a01b03166370a08231896040518263ffffffff1660e01b8152600401610adc9190612145565b60206040518083038186803b158015610af457600080fd5b505afa158015610b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2c9190611ee0565b610b3d565b876001600160a01b0316315b838381518110610b4957fe5b6020026020010181815250505b506001016109f5565b50846060015115610bf657610b7261069b565b6001600160a01b0316630f5a6efa87846040518363ffffffff1660e01b8152600401610b9f92919061217d565b60006040518083038186803b158015610bb757600080fd5b505afa158015610bcb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bf391908101906119a9565b90505b610c048886604001516110b0565b6040860152610c1161069b565b6001600160a01b0316638bdb39138a8989896040518563ffffffff1660e01b8152600401610c429493929190612342565b600060405180830381600087803b158015610c5c57600080fd5b505af1158015610c70573d6000803e3d6000fd5b5060009250859150506001600160401b0381118015610c8e57600080fd5b50604051908082528060200260200182016040528015610cb8578160200160208202803683370190505b509050856060015115610d5557610ccd61069b565b6001600160a01b0316630f5a6efa88856040518363ffffffff1660e01b8152600401610cfa92919061217d565b60006040518083038186803b158015610d1257600080fd5b505afa158015610d26573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d4e91908101906119a9565b9050610e53565b60005b84811015610e51578651600090878784818110610d7157fe5b9050604002016000013581518110610d8557fe5b60200260200101519050610d98816110a3565b610e2557610da5816110a0565b6001600160a01b03166370a082318a6040518263ffffffff1660e01b8152600401610dd09190612145565b60206040518083038186803b158015610de857600080fd5b505afa158015610dfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e209190611ee0565b610e31565b886001600160a01b0316315b838381518110610e3d57fe5b602090810291909101015250600101610d58565b505b60005b8481101561068e57610eb0868683818110610e6d57fe5b905060400201602001356103b0858481518110610e8657fe5b6020026020010151858581518110610e9a57fe5b602002602001015161108a90919063ffffffff16565b600101610e56565b60005b82811015610f165733848483818110610ed057fe5b905060a002016060016020810190610ee891906117ff565b6001600160a01b031614610f0e5760405162461bcd60e51b8152600401610216906124d2565b600101610ebb565b50610f1f61069b565b6001600160a01b0316630e8e3e848285856040518463ffffffff1660e01b8152600401610f4d9291906122a7565b6000604051808303818588803b158015610f6657600080fd5b505af1158015610f7a573d6000803e3d6000fd5b5050505050505050565b610ba160f41b6001600160f01b03198216145b919050565b600080610fa8836110d7565b805460009091559392505050565b6000808213610fc8578160000361093a565b5090565b6000610fd7836110d7565b919091555050565b6060600080846001600160a01b031684604051610ffc91906120f6565b6000604051808303816000865af19150503d8060008114611039576040519150601f19603f3d011682016040523d82523d6000602084013e61103e565b606091505b509150915061104d828261112d565b95945050505050565b60601c90565b6060600083801561106957fe5b141561107f5761107882611157565b905061093a565b61093a610136611194565b600061109a8383111560016111e7565b50900390565b90565b6001600160a01b03161590565b606060008380156110bd57fe5b14156110cc57611078826111f9565b61093a610150611194565b60006001827f000000000000000000000000000000000000000000000000000000000000000060405160200161110e929190612137565b60408051808303601f1901815291905280516020909101200392915050565b6060821561113c57508061093a565b81511561114c5781518083602001fd5b61093a6101ae611194565b6060600061116483611242565b9050600181600381111561117457fe5b141561118b5761118383611258565b915050610f97565b82915050610f97565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b816111f5576111f581611194565b5050565b6060600061120683611242565b9050600081600381111561121657fe5b14156112255761118383611306565b600181600381111561123357fe5b141561118b5761118383611369565b60008180602001905181019061093a9190611c01565b6060600080611266846113bc565b915091506000805b83518110156112cc57600084828151811061128557fe5b6020026020010151905061129881610f84565b156112c3576112a681610f9c565b8583815181106112b257fe5b602002602001018181525050600192505b5060010161126e565b50806112d8578461104d565b600183836040516020016112ee939291906123b6565b60405160208183030381529060405295945050505050565b6060600080611314846113df565b9150915061132182610f84565b1561135f5761132f82610f9c565b91506000828260405160200161134793929190612395565b60405160208183030381529060405292505050610f97565b8392505050610f97565b60606000611376836113f6565b905061138181610f84565b1561118b5761138f81610f9c565b90506001816040516020016113a592919061237e565b604051602081830303815290604052915050610f97565b60606000828060200190518101906113d49190611c80565b909590945092505050565b600080828060200190518101906113d49190611c4a565b60008180602001905181019061140c9190611c1d565b9392505050565b8035610f978161267b565b60008083601f84011261142f578182fd5b5081356001600160401b03811115611445578182fd5b602083019150836020808302850101111561145f57600080fd5b9250929050565b600082601f830112611476578081fd5b8135602061148b61148683612621565b6125fe565b82815281810190858301838502870184018810156114a7578586fd5b855b858110156114ce5781356114bc8161267b565b845292840192908401906001016114a9565b5090979650505050505050565b600082601f8301126114eb578081fd5b813560206114fb61148683612621565b82815281810190858301855b858110156114ce578135880160a080601f19838d03011215611527578889fd5b604080518281016001600160401b03828210818311171561154457fe5b8184528a8601358352838601358b8401526060915081860135848401526080935083860135828401528486013594508085111561157f578c8dfd5b505061158f8d8a858701016116b0565b91810191909152865250509284019290840190600101611507565b60008083601f8401126115bb578182fd5b5081356001600160401b038111156115d1578182fd5b60208301915083602060408302850101111561145f57600080fd5b600082601f8301126115fc578081fd5b8135602061160c61148683612621565b8281528181019085830183850287018401881015611628578586fd5b855b858110156114ce5781358452928401929084019060010161162a565b600082601f830112611656578081fd5b8151602061166661148683612621565b8281528181019085830183850287018401881015611682578586fd5b855b858110156114ce57815184529284019290840190600101611684565b80358015158114610f9757600080fd5b600082601f8301126116c0578081fd5b81356001600160401b038111156116d357fe5b6116e6601f8201601f19166020016125fe565b8181528460208386010111156116fa578283fd5b816020850160208301379081016020019190915292915050565b803560018110610f9757600080fd5b803560028110610f9757600080fd5b600060808284031215611743578081fd5b61174d60806125fe565b905081356001600160401b038082111561176657600080fd5b61177285838601611466565b8352602084013591508082111561178857600080fd5b611794858386016115ec565b602084015260408401359150808211156117ad57600080fd5b506117ba848285016116b0565b6040830152506117cc606083016116a0565b606082015292915050565b6000608082840312156117e8578081fd5b50919050565b803560ff81168114610f9757600080fd5b600060208284031215611810578081fd5b813561140c8161267b565b60008060008060608587031215611830578283fd5b843561183b8161267b565b9350611849602086016116a0565b925060408501356001600160401b0380821115611864578384fd5b818701915087601f830112611877578384fd5b813581811115611885578485fd5b886020828501011115611896578485fd5b95989497505060200194505050565b600060208083850312156118b7578182fd5b82516001600160401b038111156118cc578283fd5b8301601f810185136118dc578283fd5b80516118ea61148682612621565b8181528381019083850185840285018601891015611906578687fd5b8694505b8385101561192857805183526001949094019391850191850161190a565b50979650505050505050565b600080600060408486031215611948578081fd5b83356001600160401b038082111561195e578283fd5b818601915086601f830112611971578283fd5b81358181111561197f578384fd5b87602060a083028501011115611993578384fd5b6020928301989097509590910135949350505050565b6000602082840312156119ba578081fd5b81516001600160401b038111156119cf578182fd5b6119db84828501611646565b949350505050565b600080600080600080600060c0888a0312156119fd578485fd5b87359650611a0d60208901611714565b95506040880135611a1d8161267b565b94506060880135611a2d8161267b565b935060808801356001600160401b0380821115611a48578485fd5b611a548b838c01611732565b945060a08a0135915080821115611a69578384fd5b50611a768a828b016115aa565b989b979a50959850939692959293505050565b600080600080600080600060e0888a031215611aa3578081fd5b87359650611ab360208901611714565b95506040880135611ac38161267b565b94506060880135611ad38161267b565b935060808801356001600160401b03811115611aed578182fd5b611af98a828b01611732565b93505060a0880135915060c0880135905092959891949750929550565b600080600080600080600080610100898b031215611b32578182fd5b8835611b3d8161267b565b97506020890135611b4d8161267b565b96506040890135955060608901359450611b6960808a016116a0565b9350611b7760a08a016117ee565b925060c0890135915060e089013590509295985092959890939650565b600080600080600080600060e0888a031215611bae578081fd5b8735611bb98161267b565b96506020880135611bc98161267b565b95506040880135945060608801359350611be5608089016117ee565b925060a0880135915060c0880135905092959891949750929550565b600060208284031215611c12578081fd5b815161140c81612690565b60008060408385031215611c2f578182fd5b8251611c3a81612690565b6020939093015192949293505050565b600080600060608486031215611c5e578081fd5b8351611c6981612690565b602085015160409095015190969495509392505050565b600080600060608486031215611c94578081fd5b8351611c9f81612690565b60208501519093506001600160401b03811115611cba578182fd5b611cc686828701611646565b925050604084015190509250925092565b60008060008060008060008060008060006101608c8e031215611cf8578485fd5b611d018c611723565b9a506001600160401b038060208e01351115611d1b578586fd5b611d2b8e60208f01358f016114db565b9a508060408e01351115611d3d578586fd5b611d4d8e60408f01358f0161141e565b909a509850611d5f8e60608f016117d7565b97508060e08e01351115611d71578586fd5b611d818e60e08f01358f0161141e565b90975095506101008d013594506101208d013593506101408d0135811015611da7578283fd5b50611db98d6101408e01358e016115aa565b81935080925050509295989b509295989b9093969950565b6000806000806000806101208789031215611dea578384fd5b86356001600160401b0380821115611e00578586fd5b9088019060c0828b031215611e13578586fd5b60405160c081018181108382111715611e2857fe5b60405282358152611e3b60208401611723565b6020820152611e4c60408401611413565b6040820152611e5d60608401611413565b60608201526080830135608082015260a083013582811115611e7d578788fd5b611e898c8286016116b0565b60a083015250809850505050611ea288602089016117d7565b959895975050505060a08401359360c08101359360e08201359350610100909101359150565b600060208284031215611ed9578081fd5b5035919050565b600060208284031215611ef1578081fd5b5051919050565b60008060408385031215611f0a578182fd5b50508035926020909101359150565b6001600160a01b03169052565b60008284526020808501945082825b85811015611f63578135611f488161267b565b6001600160a01b031687529582019590820190600101611f35565b509495945050505050565b60008284526020808501945082825b85811015611f6357813587529582019590820190600101611f7d565b6000815180845260208085019450808401835b83811015611f6357815187529582019590820190600101611fac565b15159052565b60008151808452611fe681602086016020860161263e565b601f01601f19169290920160200192915050565b6002811061200457fe5b9052565b8051608080845281519084018190526000916020919082019060a0860190845b8181101561204d5783516001600160a01b031683529284019291840191600101612028565b5050828501519150858103838701526120668183611f99565b92505050604083015184820360408601526120818282611fce565b91505060608301516120966060860182611fc8565b509392505050565b80356120a98161267b565b6001600160a01b0381811684526120c2602084016116a0565b15156020850152604083013591506120d98261267b565b1660408301526120eb606082016116a0565b151560608301525050565b6000825161210881846020870161263e565b9190910192915050565b6000845161212481846020890161263e565b8201838582379092019182525092915050565b918252602082015260400190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152901515604082015260600190565b6001600160a01b038381168252604060208084018290528451918401829052600092858201929091906060860190855b818110156121cb5785518516835294830194918301916001016121ad565b509098975050505050505050565b6001600160a01b039889168152969097166020870152604086019490945260608501929092521515608084015260ff1660a083015260c082015260e08101919091526101000190565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6020808252825182820181905260009190848201906040850190845b8181101561229b5783518352928401929184019160010161227f565b50909695505050505050565b6020808252818101839052600090604080840186845b878110156114ce5781356122d081612690565b6122d98161266e565b8352818501356122e88161267b565b6001600160a01b039081168487015282850135858501526060908184013561230f8161267b565b16908401526080612321838201611413565b61232d82860182611f19565b505060a09283019291909101906001016122bd565b8481526001600160a01b0384811660208301528316604082015260806060820181905260009061237490830184612008565b9695505050505050565b6040810161238b8461266e565b9281526020015290565b606081016123a28561266e565b938152602081019290925260409091015290565b60006123c18561266e565b848252606060208301526123d86060830185611f99565b9050826040830152949350505050565b60006101208083016123fa848d611ffa565b6020848101929092528a5190819052610140808501928281028601909101918c8201855b828110156124815787850361013f190186528151805186528481015185870152604080820151908701526060808201519087015260809081015160a09187018290529061246d81880183611fce565b97860197965050509083019060010161241e565b505050508381036040850152612498818a8c611f26565b9150506124a8606084018861209e565b82810360e08401526124bb818688611f6e565b915050826101008301529998505050505050505050565b60208082526010908201526f24b731b7b93932b1ba1039b2b73232b960811b604082015260600190565b6020808252601f908201527f52656c617965722063616e206f6e6c7920617070726f766520697473656c6600604082015260600190565b60208082526019908201527f696e76616c696420636861696e6564207265666572656e636500000000000000604082015260600190565b600060e08252855160e0830152602086015161258a610100840182611ffa565b5060408601516001600160a01b03908116610120840152606087015116610140830152608086015161016083015260a086015160c06101808401526125d36101a0840182611fce565b9150506125e3602083018661209e565b60a082019390935260c0015292915050565b90815260200190565b6040518181016001600160401b038111828210171561261957fe5b604052919050565b60006001600160401b0382111561263457fe5b5060209081020190565b60005b83811015612659578181015183820152602001612641565b83811115612668576000848401525b50505050565b6004811061267857fe5b50565b6001600160a01b038116811461267857600080fd5b6004811061267857600080fdfea2646970667358221220689f5d98f2a0a785c6b0409c050c23baa8a0fef381eecbeda59b2e62da08bfce64736f6c6343000706003360c060405234801561001057600080fd5b5060405161065038038061065083398101604081905261002f91610052565b60016000556001600160601b0319606092831b8116608052911b1660a0526100a3565b60008060408385031215610064578182fd5b825161006f8161008b565b60208401519092506100808161008b565b809150509250929050565b6001600160a01b03811681146100a057600080fd5b50565b60805160601c60a05160601c6105816100cf6000398060cf52806101b1525080604052506105816000f3fe60806040526004361061002d5760003560e01c80637678922e14610070578063ac9650d81461009b5761006b565b3661006b57610069336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102066100bb565b005b600080fd5b34801561007c57600080fd5b506100856100cd565b6040516100929190610443565b60405180910390f35b6100ae6100a93660046103b5565b6100f1565b6040516100929190610457565b816100c9576100c981610210565b5050565b7f000000000000000000000000000000000000000000000000000000000000000090565b60606100fb610263565b8167ffffffffffffffff8111801561011257600080fd5b5060405190808252806020026020018201604052801561014657816020015b60608152602001906001900390816101315790505b50905060005b828110156101f9576101da84848381811061016357fe5b905060200281019061017591906104cf565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169291505061027c565b8282815181106101e657fe5b602090810291909101015260010161014c565b506102026102f1565b61020a610305565b92915050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b610275600260005414156101906100bb565b6002600055565b6060600080846001600160a01b0316846040516102999190610424565b600060405180830381855af49150503d80600081146102d4576040519150601f19603f3d011682016040523d82523d6000602084013e6102d9565b606091505b50915091506102e8828261030c565b95945050505050565b478015610302576103023382610336565b50565b6001600055565b6060821561031b57508061020a565b81511561032b5781518083602001fd5b61020a6101ae610210565b610345814710156101a36100bb565b6000826001600160a01b03168260405161035e90610440565b60006040518083038185875af1925050503d806000811461039b576040519150601f19603f3d011682016040523d82523d6000602084013e6103a0565b606091505b505090506103b0816101a46100bb565b505050565b600080602083850312156103c7578182fd5b823567ffffffffffffffff808211156103de578384fd5b818501915085601f8301126103f1578384fd5b8135818111156103ff578485fd5b8660208083028501011115610412578485fd5b60209290920196919550909350505050565b6000825161043681846020870161051b565b9190910192915050565b90565b6001600160a01b0391909116815260200190565b6000602080830181845280855180835260408601915060408482028701019250838701855b828110156104c257878503603f19018452815180518087526104a3818989018a850161051b565b601f01601f19169590950186019450928501929085019060010161047c565b5092979650505050505050565b6000808335601e198436030181126104e5578283fd5b83018035915067ffffffffffffffff8211156104ff578283fd5b60200191503681900382131561051457600080fd5b9250929050565b60005b8381101561053657818101518382015260200161051e565b83811115610545576000848401525b5050505056fea26469706673582212205aa049a5499b2171d0cc62b35f8719518fee4634799422501cb98a88964bca0264736f6c63430007060033";

type MockBatchRelayerLibraryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockBatchRelayerLibraryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockBatchRelayerLibrary__factory extends ContractFactory {
  constructor(...args: MockBatchRelayerLibraryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockBatchRelayerLibrary> {
    return super.deploy(
      vault,
      overrides || {}
    ) as Promise<MockBatchRelayerLibrary>;
  }
  override getDeployTransaction(
    vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(vault, overrides || {});
  }
  override attach(address: string): MockBatchRelayerLibrary {
    return super.attach(address) as MockBatchRelayerLibrary;
  }
  override connect(signer: Signer): MockBatchRelayerLibrary__factory {
    return super.connect(signer) as MockBatchRelayerLibrary__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBatchRelayerLibraryInterface {
    return new utils.Interface(_abi) as MockBatchRelayerLibraryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockBatchRelayerLibrary {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockBatchRelayerLibrary;
  }
}
