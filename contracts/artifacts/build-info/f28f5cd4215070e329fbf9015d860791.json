{
	"id": "f28f5cd4215070e329fbf9015d860791",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/veWVLT.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``sender``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n        unchecked {\r\n            _approve(sender, _msgSender(), currentAllowance - amount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        uint256 senderBalance = _balances[sender];\r\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[sender] = senderBalance - amount;\r\n        }\r\n        _balances[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n\r\n        _afterTokenTransfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(account)\r\n        }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IERC20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\npragma solidity 0.8.7;\r\n\r\ncontract WVLTBar is ERC20(\"VotingEscrowedWaveLength\", \"veWVLT\") {\r\n    using SafeERC20 for IERC20;\r\n\r\n    IERC20 public vestingToken;\r\n\r\n    event Enter(\r\n        address indexed user,\r\n        uint256 vestingInAmount,\r\n        uint256 mintedAmount\r\n    );\r\n    event Leave(\r\n        address indexed user,\r\n        uint256 vestingOutAmount,\r\n        uint256 burnedAmount\r\n    );\r\n    event ShareRevenue(uint256 amount);\r\n\r\n    constructor(IERC20 _vestingToken) {\r\n        vestingToken = _vestingToken;\r\n    }\r\n\r\n    function enter(uint256 _amount) external {\r\n        if (_amount > 0) {\r\n            uint256 totalLockedTokenSupply = vestingToken.balanceOf(\r\n                address(this)\r\n            );\r\n\r\n            uint256 totalveWVLT = totalSupply();\r\n\r\n            vestingToken.transferFrom(msg.sender, address(this), _amount);\r\n            uint256 mintAmount;\r\n            // If no veWVLT exists, mint it 1:1 to the amount put in\r\n            if (totalveWVLT == 0 || totalLockedTokenSupply == 0) {\r\n                mintAmount = _amount;\r\n            }\r\n            // Calculate and mint the amount of veWVLT the blp is worth. The ratio will change overtime\r\n            else {\r\n                uint256 shareOfveWVLT = (_amount * totalveWVLT) /\r\n                    totalLockedTokenSupply;\r\n\r\n                mintAmount = shareOfveWVLT;\r\n            }\r\n            _mint(msg.sender, mintAmount);\r\n            emit Enter(msg.sender, _amount, mintAmount);\r\n        }\r\n    }\r\n\r\n    function leave(uint256 _shareOfveWVLT) external {\r\n        if (_shareOfveWVLT > 0) {\r\n            uint256 totalVestedTokenSupply = vestingToken.balanceOf(\r\n                address(this)\r\n            );\r\n            uint256 totalveWVLT = totalSupply();\r\n            // Calculates the amount of vestingToken the veWVLT are worth\r\n            uint256 amount = (_shareOfveWVLT * totalVestedTokenSupply) /\r\n                totalveWVLT;\r\n            _burn(msg.sender, _shareOfveWVLT);\r\n            vestingToken.transfer(msg.sender, amount);\r\n\r\n            emit Leave(msg.sender, amount, _shareOfveWVLT);\r\n        }\r\n    }\r\n\r\n    function shareRevenue(uint256 _amount) external {\r\n        vestingToken.transferFrom(msg.sender, address(this), _amount);\r\n        emit ShareRevenue(_amount);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/veWVLT.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/veWVLT.sol\":16192:24129  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/veWVLT.sol\":16192:24129  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203e799b68ea8a7dd91f7708e0d272b801600dcaaaa28dd429cd480ddc0d174b9564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203e799b68ea8a7dd91f7708e0d272b801600dcaaaa28dd429cd480ddc0d174b9564736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY PUSH26 0x9B68EA8A7DD91F7708E0D272B801600DCAAAA28DD429CD480DDC 0xD OR 0x4B SWAP6 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "16192:7937:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;16192:7937:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203e799b68ea8a7dd91f7708e0d272b801600dcaaaa28dd429cd480ddc0d174b9564736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY PUSH26 0x9B68EA8A7DD91F7708E0D272B801600DCAAAA28DD429CD480DDC 0xD OR 0x4B SWAP6 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "16192:7937:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16192,
									"end": 24129,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16192,
									"end": 24129,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e799b68ea8a7dd91f7708e0d272b801600dcaaaa28dd429cd480ddc0d174b9564736f6c63430008070033",
									".code": [
										{
											"begin": 16192,
											"end": 24129,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 16192,
											"end": 24129,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16192,
											"end": 24129,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16192,
											"end": 24129,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16192,
											"end": 24129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16192,
											"end": 24129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16192,
											"end": 24129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16192,
											"end": 24129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16192,
											"end": 24129,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/veWVLT.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/veWVLT.sol\":{\"keccak256\":\"0xf88a435e66a1589d336d5565876925e0a50fafcbee09151fd221f096eea53f7b\",\"urls\":[\"bzz-raw://9ef26e0c1f74853b7cf6dc10a9b3b54b21d6d7fb0f77cc3f2d99436bbbed6f63\",\"dweb:/ipfs/QmVP9q2YRHdU1uL9KFMJMv8B36vJW2ydUT8rQB4R3UWeMJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/veWVLT.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/veWVLT.sol\":{\"keccak256\":\"0xf88a435e66a1589d336d5565876925e0a50fafcbee09151fd221f096eea53f7b\",\"urls\":[\"bzz-raw://9ef26e0c1f74853b7cf6dc10a9b3b54b21d6d7fb0f77cc3f2d99436bbbed6f63\",\"dweb:/ipfs/QmVP9q2YRHdU1uL9KFMJMv8B36vJW2ydUT8rQB4R3UWeMJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/veWVLT.sol\":5353:16090  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/veWVLT.sol\":5947:6063  constructor(string memory name_, string memory symbol_) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/veWVLT.sol\":6014:6027  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"contracts/veWVLT.sol\":6014:6019  _name */\n  0x03\n  swap1\n    /* \"contracts/veWVLT.sol\":6014:6027  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/veWVLT.sol\":6038:6055  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"contracts/veWVLT.sol\":6038:6045  _symbol */\n  0x04\n  swap1\n    /* \"contracts/veWVLT.sol\":6038:6055  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/veWVLT.sol\":5947:6063  constructor(string memory name_, string memory symbol_) {\r... */\n  pop\n  pop\n    /* \"contracts/veWVLT.sol\":5353:16090  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_24:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_36:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_11:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_27:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_21:\n    /* \"contracts/veWVLT.sol\":5353:16090  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/veWVLT.sol\":5353:16090  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/veWVLT.sol\":6133:6233  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/veWVLT.sol\":8300:8469  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1405:1419   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1398:1420   */\n      iszero\n        /* \"#utility.yul\":1380:1421   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1368:1370   */\n      0x20\n        /* \"#utility.yul\":1353:1371   */\n      add\n        /* \"contracts/veWVLT.sol\":8300:8469  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      tag_17\n        /* \"#utility.yul\":1240:1427   */\n      jump\n        /* \"contracts/veWVLT.sol\":7253:7361  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_5:\n        /* \"contracts/veWVLT.sol\":7341:7353  _totalSupply */\n      sload(0x02)\n        /* \"contracts/veWVLT.sol\":7253:7361  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":5020:5045   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5008:5010   */\n      0x20\n        /* \"#utility.yul\":4993:5011   */\n      add\n        /* \"contracts/veWVLT.sol\":7253:7361  function totalSupply() public view virtual override returns (uint256) {\r... */\n      tag_17\n        /* \"#utility.yul\":4874:5051   */\n      jump\n        /* \"contracts/veWVLT.sol\":8951:9443  function transferFrom(\r... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"contracts/veWVLT.sol\":7095:7188  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_7:\n      mload(0x40)\n        /* \"contracts/veWVLT.sol\":7178:7180  18 */\n      0x12\n        /* \"#utility.yul\":5198:5234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5186:5188   */\n      0x20\n        /* \"#utility.yul\":5171:5189   */\n      add\n        /* \"contracts/veWVLT.sol\":7095:7188  function decimals() public view virtual override returns (uint8) {\r... */\n      tag_17\n        /* \"#utility.yul\":5056:5240   */\n      jump\n        /* \"contracts/veWVLT.sol\":9852:10067  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"contracts/veWVLT.sol\":7424:7551  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":7525:7543  _balances[account] */\n      and\n        /* \"contracts/veWVLT.sol\":7498:7505  uint256 */\n      0x00\n        /* \"contracts/veWVLT.sol\":7525:7543  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/veWVLT.sol\":7424:7551  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"contracts/veWVLT.sol\":6352:6456  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"contracts/veWVLT.sol\":10570:10983  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"contracts/veWVLT.sol\":7764:7939  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"contracts/veWVLT.sol\":8002:8153  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":8118:8136  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/veWVLT.sol\":8091:8098  uint256 */\n      0x00\n        /* \"contracts/veWVLT.sol\":8118:8136  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/veWVLT.sol\":8118:8129  _allowances */\n      0x01\n        /* \"contracts/veWVLT.sol\":8118:8136  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/veWVLT.sol\":8118:8145  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/veWVLT.sol\":8002:8153  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"contracts/veWVLT.sol\":6133:6233  function name() public view virtual override returns (string memory) {\r... */\n    tag_16:\n        /* \"contracts/veWVLT.sol\":6187:6200  string memory */\n      0x60\n        /* \"contracts/veWVLT.sol\":6220:6225  _name */\n      0x03\n        /* \"contracts/veWVLT.sol\":6213:6225  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/veWVLT.sol\":6133:6233  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/veWVLT.sol\":8300:8469  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_22:\n        /* \"contracts/veWVLT.sol\":8383:8387  bool */\n      0x00\n        /* \"contracts/veWVLT.sol\":8400:8439  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"contracts/veWVLT.sol\":3994:4004  msg.sender */\n      caller\n        /* \"contracts/veWVLT.sol\":8423:8430  spender */\n      dup5\n        /* \"contracts/veWVLT.sol\":8432:8438  amount */\n      dup5\n        /* \"contracts/veWVLT.sol\":8400:8408  _approve */\n      tag_74\n        /* \"contracts/veWVLT.sol\":8400:8439  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"contracts/veWVLT.sol\":8457:8461  true */\n      0x01\n        /* \"contracts/veWVLT.sol\":8300:8469  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/veWVLT.sol\":8951:9443  function transferFrom(\r... */\n    tag_32:\n        /* \"contracts/veWVLT.sol\":9091:9095  bool */\n      0x00\n        /* \"contracts/veWVLT.sol\":9108:9144  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \"contracts/veWVLT.sol\":9118:9124  sender */\n      dup5\n        /* \"contracts/veWVLT.sol\":9126:9135  recipient */\n      dup5\n        /* \"contracts/veWVLT.sol\":9137:9143  amount */\n      dup5\n        /* \"contracts/veWVLT.sol\":9108:9117  _transfer */\n      tag_78\n        /* \"contracts/veWVLT.sol\":9108:9144  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":9184:9203  _allowances[sender] */\n      dup5\n      and\n        /* \"contracts/veWVLT.sol\":9157:9181  uint256 currentAllowance */\n      0x00\n        /* \"contracts/veWVLT.sol\":9184:9203  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/veWVLT.sol\":9184:9195  _allowances */\n      0x01\n        /* \"contracts/veWVLT.sol\":9184:9203  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/veWVLT.sol\":3994:4004  msg.sender */\n      caller\n        /* \"contracts/veWVLT.sol\":9184:9217  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/veWVLT.sol\":9236:9262  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/veWVLT.sol\":9228:9307  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3450:3452   */\n      0x20\n        /* \"contracts/veWVLT.sol\":9228:9307  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3432:3453   */\n      mstore\n        /* \"#utility.yul\":3489:3491   */\n      0x28\n        /* \"#utility.yul\":3469:3487   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3462:3492   */\n      mstore\n        /* \"#utility.yul\":3528:3562   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3508:3526   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3501:3563   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":3579:3597   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3572:3610   */\n      mstore\n        /* \"#utility.yul\":3627:3646   */\n      0x84\n      add\n        /* \"contracts/veWVLT.sol\":9228:9307  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"contracts/veWVLT.sol\":9343:9400  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_83\n        /* \"contracts/veWVLT.sol\":9352:9358  sender */\n      dup6\n        /* \"contracts/veWVLT.sol\":3994:4004  msg.sender */\n      caller\n        /* \"contracts/veWVLT.sol\":9393:9399  amount */\n      dup6\n        /* \"contracts/veWVLT.sol\":9374:9390  currentAllowance */\n      dup5\n        /* \"contracts/veWVLT.sol\":9374:9399  currentAllowance - amount */\n      sub\n        /* \"contracts/veWVLT.sol\":9343:9351  _approve */\n      tag_74\n        /* \"contracts/veWVLT.sol\":9343:9400  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \"contracts/veWVLT.sol\":9431:9435  true */\n      0x01\n      swap5\n        /* \"contracts/veWVLT.sol\":8951:9443  function transferFrom(\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/veWVLT.sol\":9852:10067  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_40:\n        /* \"contracts/veWVLT.sol\":3994:4004  msg.sender */\n      caller\n        /* \"contracts/veWVLT.sol\":9940:9944  bool */\n      0x00\n        /* \"contracts/veWVLT.sol\":9989:10014  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/veWVLT.sol\":9989:10000  _allowances */\n      0x01\n        /* \"contracts/veWVLT.sol\":9989:10014  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":9989:10023  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/veWVLT.sol\":9940:9944  bool */\n      swap1\n      swap2\n        /* \"contracts/veWVLT.sol\":9957:10037  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_71\n      swap2\n        /* \"contracts/veWVLT.sol\":9980:9987  spender */\n      dup6\n      swap1\n        /* \"contracts/veWVLT.sol\":9989:10036  _allowances[_msgSender()][spender] + addedValue */\n      tag_90\n      swap1\n        /* \"contracts/veWVLT.sol\":10026:10036  addedValue */\n      dup7\n      swap1\n        /* \"contracts/veWVLT.sol\":9989:10036  _allowances[_msgSender()][spender] + addedValue */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"contracts/veWVLT.sol\":9957:9965  _approve */\n      tag_74\n        /* \"contracts/veWVLT.sol\":9957:10037  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n        /* \"contracts/veWVLT.sol\":6352:6456  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_48:\n        /* \"contracts/veWVLT.sol\":6408:6421  string memory */\n      0x60\n        /* \"contracts/veWVLT.sol\":6441:6448  _symbol */\n      0x04\n        /* \"contracts/veWVLT.sol\":6434:6448  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"contracts/veWVLT.sol\":10570:10983  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_52:\n        /* \"contracts/veWVLT.sol\":3994:4004  msg.sender */\n      caller\n        /* \"contracts/veWVLT.sol\":10663:10667  bool */\n      0x00\n        /* \"contracts/veWVLT.sol\":10707:10732  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/veWVLT.sol\":10707:10718  _allowances */\n      0x01\n        /* \"contracts/veWVLT.sol\":10707:10732  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":10707:10741  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/veWVLT.sol\":10760:10795  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/veWVLT.sol\":10752:10837  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4670:4672   */\n      0x20\n        /* \"contracts/veWVLT.sol\":10752:10837  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4652:4673   */\n      mstore\n        /* \"#utility.yul\":4709:4711   */\n      0x25\n        /* \"#utility.yul\":4689:4707   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4682:4712   */\n      mstore\n        /* \"#utility.yul\":4748:4782   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4728:4746   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4721:4783   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4799:4817   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4792:4827   */\n      mstore\n        /* \"#utility.yul\":4844:4863   */\n      0x84\n      add\n        /* \"contracts/veWVLT.sol\":10752:10837  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_81\n        /* \"#utility.yul\":4468:4869   */\n      jump\n        /* \"contracts/veWVLT.sol\":10752:10837  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_101:\n        /* \"contracts/veWVLT.sol\":10873:10940  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_104\n        /* \"contracts/veWVLT.sol\":3994:4004  msg.sender */\n      caller\n        /* \"contracts/veWVLT.sol\":10896:10903  spender */\n      dup6\n        /* \"contracts/veWVLT.sol\":10924:10939  subtractedValue */\n      dup6\n        /* \"contracts/veWVLT.sol\":10905:10921  currentAllowance */\n      dup5\n        /* \"contracts/veWVLT.sol\":10905:10939  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/veWVLT.sol\":10873:10881  _approve */\n      tag_74\n        /* \"contracts/veWVLT.sol\":10873:10940  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"contracts/veWVLT.sol\":10971:10975  true */\n      0x01\n      swap4\n        /* \"contracts/veWVLT.sol\":10570:10983  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/veWVLT.sol\":7764:7939  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_56:\n        /* \"contracts/veWVLT.sol\":7850:7854  bool */\n      0x00\n        /* \"contracts/veWVLT.sol\":7867:7909  _transfer(_msgSender(), recipient, amount) */\n      tag_71\n        /* \"contracts/veWVLT.sol\":3994:4004  msg.sender */\n      caller\n        /* \"contracts/veWVLT.sol\":7891:7900  recipient */\n      dup5\n        /* \"contracts/veWVLT.sol\":7902:7908  amount */\n      dup5\n        /* \"contracts/veWVLT.sol\":7867:7876  _transfer */\n      tag_78\n        /* \"contracts/veWVLT.sol\":7867:7909  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/veWVLT.sol\":14254:14634  function _approve(\r... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":14390:14409  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/veWVLT.sol\":14382:14450  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4265:4267   */\n      0x20\n        /* \"contracts/veWVLT.sol\":14382:14450  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4247:4268   */\n      mstore\n        /* \"#utility.yul\":4304:4306   */\n      0x24\n        /* \"#utility.yul\":4284:4302   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4277:4307   */\n      mstore\n        /* \"#utility.yul\":4343:4377   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4323:4341   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4316:4378   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4394:4412   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4387:4421   */\n      mstore\n        /* \"#utility.yul\":4438:4457   */\n      0x84\n      add\n        /* \"contracts/veWVLT.sol\":14382:14450  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4063:4463   */\n      jump\n        /* \"contracts/veWVLT.sol\":14382:14450  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":14469:14490  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/veWVLT.sol\":14461:14529  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2640:2642   */\n      0x20\n        /* \"contracts/veWVLT.sol\":14461:14529  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2622:2643   */\n      mstore\n        /* \"#utility.yul\":2679:2681   */\n      0x22\n        /* \"#utility.yul\":2659:2677   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2652:2682   */\n      mstore\n        /* \"#utility.yul\":2718:2752   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2698:2716   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2691:2753   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2769:2787   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2762:2794   */\n      mstore\n        /* \"#utility.yul\":2811:2830   */\n      0x84\n      add\n        /* \"contracts/veWVLT.sol\":14461:14529  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":2438:2836   */\n      jump\n        /* \"contracts/veWVLT.sol\":14461:14529  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":14542:14560  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/veWVLT.sol\":14542:14553  _allowances */\n      0x01\n        /* \"contracts/veWVLT.sol\":14542:14560  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/veWVLT.sol\":14542:14569  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/veWVLT.sol\":14542:14578  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/veWVLT.sol\":14594:14626  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":5020:5045   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/veWVLT.sol\":14594:14626  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4993:5011   */\n      add\n        /* \"contracts/veWVLT.sol\":14594:14626  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/veWVLT.sol\":14254:14634  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/veWVLT.sol\":11473:12206  function _transfer(\r... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":11613:11633  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/veWVLT.sol\":11605:11675  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3859:3861   */\n      0x20\n        /* \"contracts/veWVLT.sol\":11605:11675  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3841:3862   */\n      mstore\n        /* \"#utility.yul\":3898:3900   */\n      0x25\n        /* \"#utility.yul\":3878:3896   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3871:3901   */\n      mstore\n        /* \"#utility.yul\":3937:3971   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3917:3935   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3910:3972   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3988:4006   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3981:4016   */\n      mstore\n        /* \"#utility.yul\":4033:4052   */\n      0x84\n      add\n        /* \"contracts/veWVLT.sol\":11605:11675  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":3657:4058   */\n      jump\n        /* \"contracts/veWVLT.sol\":11605:11675  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":11694:11717  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/veWVLT.sol\":11686:11757  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2236:2238   */\n      0x20\n        /* \"contracts/veWVLT.sol\":11686:11757  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2218:2239   */\n      mstore\n        /* \"#utility.yul\":2275:2277   */\n      0x23\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2248:2278   */\n      mstore\n        /* \"#utility.yul\":2314:2348   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2294:2312   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2287:2349   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2365:2383   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2358:2391   */\n      mstore\n        /* \"#utility.yul\":2408:2427   */\n      0x84\n      add\n        /* \"contracts/veWVLT.sol\":11686:11757  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":2034:2433   */\n      jump\n        /* \"contracts/veWVLT.sol\":11686:11757  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":11854:11871  _balances[sender] */\n      dup4\n      and\n        /* \"contracts/veWVLT.sol\":11830:11851  uint256 senderBalance */\n      0x00\n        /* \"contracts/veWVLT.sol\":11854:11871  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/veWVLT.sol\":11890:11913  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/veWVLT.sol\":11882:11956  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3043:3045   */\n      0x20\n        /* \"contracts/veWVLT.sol\":11882:11956  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3025:3046   */\n      mstore\n        /* \"#utility.yul\":3082:3084   */\n      0x26\n        /* \"#utility.yul\":3062:3080   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3055:3085   */\n      mstore\n        /* \"#utility.yul\":3121:3155   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3101:3119   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3094:3156   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3172:3190   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3165:3201   */\n      mstore\n        /* \"#utility.yul\":3218:3237   */\n      0x84\n      add\n        /* \"contracts/veWVLT.sol\":11882:11956  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_81\n        /* \"#utility.yul\":2841:3243   */\n      jump\n        /* \"contracts/veWVLT.sol\":11882:11956  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":11992:12009  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"contracts/veWVLT.sol\":11992:12001  _balances */\n      0x00\n        /* \"contracts/veWVLT.sol\":11992:12009  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/veWVLT.sol\":12012:12034  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"contracts/veWVLT.sol\":11992:12034  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/veWVLT.sol\":12056:12076  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/veWVLT.sol\":12056:12086  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"contracts/veWVLT.sol\":12028:12034  amount */\n      dup5\n      swap3\n        /* \"contracts/veWVLT.sol\":11992:12001  _balances */\n      swap1\n        /* \"contracts/veWVLT.sol\":12056:12086  _balances[recipient] += amount */\n      tag_131\n      swap1\n        /* \"contracts/veWVLT.sol\":12028:12034  amount */\n      dup5\n      swap1\n        /* \"contracts/veWVLT.sol\":12056:12086  _balances[recipient] += amount */\n      tag_91\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/veWVLT.sol\":12121:12130  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":12104:12139  Transfer(sender, recipient, amount) */\n      and\n        /* \"contracts/veWVLT.sol\":12113:12119  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":12104:12139  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/veWVLT.sol\":12132:12138  amount */\n      dup5\n        /* \"contracts/veWVLT.sol\":12104:12139  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_132\n      swap2\n        /* \"#utility.yul\":5020:5045   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5008:5010   */\n      0x20\n        /* \"#utility.yul\":4993:5011   */\n      add\n      swap1\n        /* \"#utility.yul\":4874:5051   */\n      jump\n        /* \"contracts/veWVLT.sol\":12104:12139  Transfer(sender, recipient, amount) */\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/veWVLT.sol\":11594:12206  {\r... */\n      pop\n        /* \"contracts/veWVLT.sol\":11473:12206  function _transfer(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_138:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_140\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_140:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_44:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_142:\n        /* \"#utility.yul\":343:372   */\n      tag_143\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_138\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_60:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_145:\n        /* \"#utility.yul\":551:580   */\n      tag_146\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_138\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_147\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_138\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_31:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_149:\n        /* \"#utility.yul\":833:862   */\n      tag_150\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_138\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_151\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_138\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_21:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_153:\n        /* \"#utility.yul\":1149:1178   */\n      tag_154\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_138\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1432:2029   */\n    tag_18:\n        /* \"#utility.yul\":1544:1548   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x20\n        /* \"#utility.yul\":1602:1604   */\n      dup1\n        /* \"#utility.yul\":1591:1600   */\n      dup4\n        /* \"#utility.yul\":1584:1605   */\n      mstore\n        /* \"#utility.yul\":1634:1640   */\n      dup4\n        /* \"#utility.yul\":1628:1641   */\n      mload\n        /* \"#utility.yul\":1677:1683   */\n      dup1\n        /* \"#utility.yul\":1672:1674   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup6\n        /* \"#utility.yul\":1657:1675   */\n      add\n        /* \"#utility.yul\":1650:1684   */\n      mstore\n        /* \"#utility.yul\":1702:1703   */\n      0x00\n        /* \"#utility.yul\":1712:1852   */\n    tag_157:\n        /* \"#utility.yul\":1726:1732   */\n      dup2\n        /* \"#utility.yul\":1723:1724   */\n      dup2\n        /* \"#utility.yul\":1720:1733   */\n      lt\n        /* \"#utility.yul\":1712:1852   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1821:1835   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1817:1840   */\n      dup4\n      add\n        /* \"#utility.yul\":1811:1841   */\n      mload\n        /* \"#utility.yul\":1787:1804   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1806:1808   */\n      0x40\n        /* \"#utility.yul\":1783:1809   */\n      add\n        /* \"#utility.yul\":1776:1842   */\n      mstore\n        /* \"#utility.yul\":1741:1751   */\n      dup3\n      add\n        /* \"#utility.yul\":1712:1852   */\n      jump(tag_157)\n    tag_159:\n        /* \"#utility.yul\":1870:1876   */\n      dup2\n        /* \"#utility.yul\":1867:1868   */\n      dup2\n        /* \"#utility.yul\":1864:1877   */\n      gt\n        /* \"#utility.yul\":1861:1952   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1935:1937   */\n      0x40\n        /* \"#utility.yul\":1926:1932   */\n      dup4\n        /* \"#utility.yul\":1915:1924   */\n      dup8\n        /* \"#utility.yul\":1911:1933   */\n      add\n        /* \"#utility.yul\":1907:1938   */\n      add\n        /* \"#utility.yul\":1900:1942   */\n      mstore\n        /* \"#utility.yul\":1861:1952   */\n    tag_160:\n      pop\n        /* \"#utility.yul\":2013:2015   */\n      0x1f\n        /* \"#utility.yul\":1992:2007   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1988:2017   */\n      and\n        /* \"#utility.yul\":1973:2018   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2020:2022   */\n      0x40\n        /* \"#utility.yul\":1969:2023   */\n      add\n      swap4\n        /* \"#utility.yul\":1432:2029   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5245:5470   */\n    tag_91:\n        /* \"#utility.yul\":5285:5288   */\n      0x00\n        /* \"#utility.yul\":5316:5317   */\n      dup3\n        /* \"#utility.yul\":5312:5318   */\n      not\n        /* \"#utility.yul\":5309:5310   */\n      dup3\n        /* \"#utility.yul\":5306:5319   */\n      gt\n        /* \"#utility.yul\":5303:5439   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":5361:5371   */\n      0x4e487b71\n        /* \"#utility.yul\":5356:5359   */\n      0xe0\n        /* \"#utility.yul\":5352:5372   */\n      shl\n        /* \"#utility.yul\":5349:5350   */\n      0x00\n        /* \"#utility.yul\":5342:5373   */\n      mstore\n        /* \"#utility.yul\":5396:5400   */\n      0x11\n        /* \"#utility.yul\":5393:5394   */\n      0x04\n        /* \"#utility.yul\":5386:5401   */\n      mstore\n        /* \"#utility.yul\":5424:5428   */\n      0x24\n        /* \"#utility.yul\":5421:5422   */\n      0x00\n        /* \"#utility.yul\":5414:5429   */\n      revert\n        /* \"#utility.yul\":5303:5439   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":5455:5464   */\n      add\n      swap1\n        /* \"#utility.yul\":5245:5470   */\n      jump\t// out\n        /* \"#utility.yul\":5475:5855   */\n    tag_65:\n        /* \"#utility.yul\":5554:5555   */\n      0x01\n        /* \"#utility.yul\":5550:5562   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5597:5609   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5618:5679   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":5672:5676   */\n      0x7f\n        /* \"#utility.yul\":5664:5670   */\n      dup3\n        /* \"#utility.yul\":5660:5677   */\n      and\n        /* \"#utility.yul\":5650:5677   */\n      swap2\n      pop\n        /* \"#utility.yul\":5618:5679   */\n    tag_173:\n        /* \"#utility.yul\":5725:5727   */\n      0x20\n        /* \"#utility.yul\":5717:5723   */\n      dup3\n        /* \"#utility.yul\":5714:5728   */\n      lt\n        /* \"#utility.yul\":5694:5712   */\n      dup2\n        /* \"#utility.yul\":5691:5729   */\n      eq\n        /* \"#utility.yul\":5688:5849   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":5771:5781   */\n      0x4e487b71\n        /* \"#utility.yul\":5766:5769   */\n      0xe0\n        /* \"#utility.yul\":5762:5782   */\n      shl\n        /* \"#utility.yul\":5759:5760   */\n      0x00\n        /* \"#utility.yul\":5752:5783   */\n      mstore\n        /* \"#utility.yul\":5806:5810   */\n      0x22\n        /* \"#utility.yul\":5803:5804   */\n      0x04\n        /* \"#utility.yul\":5796:5811   */\n      mstore\n        /* \"#utility.yul\":5834:5838   */\n      0x24\n        /* \"#utility.yul\":5831:5832   */\n      0x00\n        /* \"#utility.yul\":5824:5839   */\n      revert\n        /* \"#utility.yul\":5688:5849   */\n    tag_174:\n      pop\n        /* \"#utility.yul\":5475:5855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122014675eed0a0df48e9dc4e8056fb532745e87fbcc3f9ac5eaf1e3abb2ce5fcf5d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:1"
															},
															"nodeType": "YulIf",
															"src": "88:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:1"
															},
															"nodeType": "YulIf",
															"src": "221:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:1"
															},
															"nodeType": "YulIf",
															"src": "404:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:1"
															},
															"nodeType": "YulIf",
															"src": "566:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:1",
																"statements": []
															},
															"src": "647:133:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:1"
															},
															"nodeType": "YulIf",
															"src": "789:80:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:1",
														"type": ""
													}
												],
												"src": "14:885:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:1"
															},
															"nodeType": "YulIf",
															"src": "1032:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:1"
															},
															"nodeType": "YulIf",
															"src": "1169:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:1"
															},
															"nodeType": "YulIf",
															"src": "1342:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:1",
														"type": ""
													}
												],
												"src": "904:562:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:1"
															},
															"nodeType": "YulIf",
															"src": "1614:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:1"
															},
															"nodeType": "YulIf",
															"src": "1684:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:1",
														"type": ""
													}
												],
												"src": "1471:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b5638038062000b568339810160408190526200003491620001c5565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6108c480620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107d8565b60405180910390f35b6100df6100da3660046107ae565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610772565b61026e565b604051601281526020016100c3565b6100df6101313660046107ae565b61031d565b6100f361014436600461071d565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df6101753660046107ae565b610368565b6100df6101883660046107ae565b610401565b6100f361019b36600461073f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610853565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610853565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026591859061035490869061082d565b61040e565b6060600480546101d590610853565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a790849061082d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461071857600080fd5b919050565b60006020828403121561072f57600080fd5b61073882610701565b9392505050565b6000806040838503121561075257600080fd5b61075b83610701565b915061076960208401610701565b90509250929050565b60008060006060848603121561078757600080fd5b61079084610701565b925061079e60208501610701565b9150604084013590509250925092565b600080604083850312156107c157600080fd5b6107ca83610701565b946020939093013593505050565b600060208083528351808285015260005b81811015610805578581018301518582016040015282016107e9565b81811115610817576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561084e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061086757607f821691505b6020821081141561088857634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122014675eed0a0df48e9dc4e8056fb532745e87fbcc3f9ac5eaf1e3abb2ce5fcf5d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB56 CODESIZE SUB DUP1 PUSH3 0xB56 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8C4 DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x738 DUP3 PUSH2 0x701 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75B DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH2 0x769 PUSH1 0x20 DUP5 ADD PUSH2 0x701 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x790 DUP5 PUSH2 0x701 JUMP JUMPDEST SWAP3 POP PUSH2 0x79E PUSH1 0x20 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CA DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7E9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x867 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ PUSH8 0x5EED0A0DF48E9DC4 0xE8 SDIV PUSH16 0xB532745E87FBCC3F9AC5EAF1E3ABB2CE 0x5F 0xCF 0x5D PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "5353:10737:0:-:0;;;5947:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6014:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;6038:17:0;;;;:7;;:17;;;;;:::i;:::-;;5947:116;;5353:10737;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5353:10737:0;;;-1:-1:-1;5353:10737:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:1;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:1;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:1;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:1:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:1;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;5353:10737:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_662": {
									"entryPoint": null,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_640": {
									"entryPoint": 1038,
									"id": 640,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_651": {
									"entryPoint": null,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_467": {
									"entryPoint": 1330,
									"id": 467,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_255": {
									"entryPoint": null,
									"id": 255,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_276": {
									"entryPoint": 600,
									"id": 276,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_216": {
									"entryPoint": null,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_192": {
									"entryPoint": null,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_390": {
									"entryPoint": 872,
									"id": 390,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_351": {
									"entryPoint": 797,
									"id": 351,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_172": {
									"entryPoint": 454,
									"id": 172,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_182": {
									"entryPoint": 857,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_324": {
									"entryPoint": 622,
									"id": 324,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_237": {
									"entryPoint": 1025,
									"id": 237,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5857:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:1"
															},
															"nodeType": "YulIf",
															"src": "480:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:1",
														"type": ""
													}
												],
												"src": "383:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:1"
															},
															"nodeType": "YulIf",
															"src": "762:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:1",
														"type": ""
													}
												],
												"src": "648:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:1"
															},
															"nodeType": "YulIf",
															"src": "1078:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:1",
														"type": ""
													}
												],
												"src": "981:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1345:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1357:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1345:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1387:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1412:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1405:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1405:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1398:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1398:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1304:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:1",
														"type": ""
													}
												],
												"src": "1240:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1553:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1563:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1573:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1567:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1591:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1584:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1614:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1634:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1628:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1618:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1661:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1672:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1657:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1677:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1650:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1693:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1702:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1697:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1762:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1791:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1802:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1787:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1787:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1806:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1783:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1783:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1825:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1833:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1821:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1821:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1837:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1817:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1817:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1811:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1811:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1776:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1776:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1723:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1726:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1720:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1734:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1736:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1745:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1748:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1741:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1736:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1716:3:1",
																"statements": []
															},
															"src": "1712:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1886:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1915:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1926:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1911:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1911:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1935:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1907:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1907:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1900:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1900:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1867:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1870:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1864:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:13:1"
															},
															"nodeType": "YulIf",
															"src": "1861:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1996:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2004:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1992:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1992:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2013:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2009:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2009:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1988:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1988:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1973:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1969:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1961:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1522:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1533:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1544:4:1",
														"type": ""
													}
												],
												"src": "1432:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2225:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2259:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2270:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2275:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2248:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2309:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2314:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2287:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2287:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2369:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2380:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2365:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2385:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2358:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2400:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2412:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2423:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2400:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2199:4:1",
														"type": ""
													}
												],
												"src": "2034:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2622:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2663:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2674:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2659:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2659:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2652:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2713:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2698:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2718:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2691:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2691:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2773:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2784:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2769:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2789:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2762:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2803:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2815:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2826:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2803:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2589:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2603:4:1",
														"type": ""
													}
												],
												"src": "2438:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3015:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3032:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3082:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3121:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3094:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3176:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3187:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3172:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3172:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3192:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3165:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3165:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3210:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3222:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3233:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3218:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3218:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3210:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2992:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3006:4:1",
														"type": ""
													}
												],
												"src": "2841:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3422:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3439:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3432:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3432:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3473:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3484:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3469:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3469:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3489:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3462:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3462:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3462:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3512:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3523:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3508:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3508:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3528:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3501:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3501:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3501:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3583:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3594:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3579:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3579:18:1"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3599:10:1",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3572:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3619:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3631:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3642:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3627:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3619:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3399:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3413:4:1",
														"type": ""
													}
												],
												"src": "3248:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3831:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3848:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3859:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3882:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3893:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3878:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3878:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3871:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3871:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3921:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3932:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3917:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3937:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3910:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3910:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3910:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3992:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4003:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3988:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3988:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4008:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3981:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3981:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4025:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4037:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4048:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4033:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4033:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4025:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3808:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3822:4:1",
														"type": ""
													}
												],
												"src": "3657:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4237:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4254:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4265:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4247:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4247:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4288:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4299:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4284:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4284:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4304:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4277:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4277:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4277:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4327:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4338:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4323:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4323:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4343:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4316:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4398:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4409:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4394:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4394:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4414:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4387:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4387:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4430:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4442:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4453:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4438:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4438:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4430:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4214:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4228:4:1",
														"type": ""
													}
												],
												"src": "4063:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4642:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4659:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4670:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4652:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4652:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4693:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4704:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4689:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4689:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4709:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4682:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4682:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4682:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4732:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4743:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4728:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4728:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4748:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4721:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4721:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4721:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4803:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4814:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4799:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4799:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4819:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4792:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4792:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4792:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4836:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4848:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4859:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4844:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4844:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4836:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4619:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4633:4:1",
														"type": ""
													}
												],
												"src": "4468:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4975:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4985:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4997:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5008:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4993:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4993:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4985:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5027:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5038:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5020:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5020:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4944:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4955:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4966:4:1",
														"type": ""
													}
												],
												"src": "4874:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5153:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5163:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5175:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5186:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5171:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5171:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5163:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5205:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5220:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5228:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5216:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5216:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5198:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5198:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5198:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5122:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5133:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5144:4:1",
														"type": ""
													}
												],
												"src": "5056:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5293:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5328:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5349:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5356:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5361:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5352:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5352:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5342:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5342:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5342:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5393:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5396:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5386:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5386:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5386:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5421:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5424:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5414:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5414:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5414:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5309:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5316:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5312:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5312:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5306:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5306:13:1"
															},
															"nodeType": "YulIf",
															"src": "5303:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5448:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5459:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5462:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5455:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5455:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5448:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5276:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5279:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5285:3:1",
														"type": ""
													}
												],
												"src": "5245:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5530:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5540:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5554:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5557:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5550:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5540:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5571:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5601:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5607:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5597:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5597:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5575:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5648:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5650:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5664:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5672:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5660:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5660:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5650:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5628:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5621:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5621:26:1"
															},
															"nodeType": "YulIf",
															"src": "5618:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5738:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5759:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5766:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5771:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5762:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5762:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5752:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5752:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5752:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5803:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5806:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5796:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5796:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5796:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5831:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5834:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5824:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5824:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5824:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5694:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5717:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5725:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5714:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5714:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5691:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5691:38:1"
															},
															"nodeType": "YulIf",
															"src": "5688:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5510:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5519:6:1",
														"type": ""
													}
												],
												"src": "5475:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c391906107d8565b60405180910390f35b6100df6100da3660046107ae565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610772565b61026e565b604051601281526020016100c3565b6100df6101313660046107ae565b61031d565b6100f361014436600461071d565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df6101753660046107ae565b610368565b6100df6101883660046107ae565b610401565b6100f361019b36600461073f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610853565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610853565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161026591859061035490869061082d565b61040e565b6060600480546101d590610853565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a790849061082d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b80356001600160a01b038116811461071857600080fd5b919050565b60006020828403121561072f57600080fd5b61073882610701565b9392505050565b6000806040838503121561075257600080fd5b61075b83610701565b915061076960208401610701565b90509250929050565b60008060006060848603121561078757600080fd5b61079084610701565b925061079e60208501610701565b9150604084013590509250925092565b600080604083850312156107c157600080fd5b6107ca83610701565b946020939093013593505050565b600060208083528351808285015260005b81811015610805578581018301518582016040015282016107e9565b81811115610817576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561084e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061086757607f821691505b6020821081141561088857634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122014675eed0a0df48e9dc4e8056fb532745e87fbcc3f9ac5eaf1e3abb2ce5fcf5d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x853 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x82D JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x853 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x738 DUP3 PUSH2 0x701 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75B DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH2 0x769 PUSH1 0x20 DUP5 ADD PUSH2 0x701 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x790 DUP5 PUSH2 0x701 JUMP JUMPDEST SWAP3 POP PUSH2 0x79E PUSH1 0x20 DUP6 ADD PUSH2 0x701 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7CA DUP4 PUSH2 0x701 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7E9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x867 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ PUSH8 0x5EED0A0DF48E9DC4 0xE8 SDIV PUSH16 0xB532745E87FBCC3F9AC5EAF1E3ABB2CE 0x5F 0xCF 0x5D PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "5353:10737:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6133:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8300:169;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:1;;1398:22;1380:41;;1368:2;1353:18;8300:169:0;1240:187:1;7253:108:0;7341:12;;7253:108;;;5020:25:1;;;5008:2;4993:18;7253:108:0;4874:177:1;8951:492:0;;;;;;:::i;:::-;;:::i;7095:93::-;;;7178:2;5198:36:1;;5186:2;5171:18;7095:93:0;5056:184:1;9852:215:0;;;;;;:::i;:::-;;:::i;7424:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7525:18:0;7498:7;7525:18;;;;;;;;;;;;7424:127;6352:104;;;:::i;10570:413::-;;;;;;:::i;:::-;;:::i;7764:175::-;;;;;;:::i;:::-;;:::i;8002:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8118:18:0;;;8091:7;8118:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8002:151;6133:100;6187:13;6220:5;6213:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6133:100;:::o;8300:169::-;8383:4;8400:39;3994:10;8423:7;8432:6;8400:8;:39::i;:::-;-1:-1:-1;8457:4:0;8300:169;;;;:::o;8951:492::-;9091:4;9108:36;9118:6;9126:9;9137:6;9108:9;:36::i;:::-;-1:-1:-1;;;;;9184:19:0;;9157:24;9184:19;;;:11;:19;;;;;;;;3994:10;9184:33;;;;;;;;9236:26;;;;9228:79;;;;-1:-1:-1;;;9228:79:0;;3450:2:1;9228:79:0;;;3432:21:1;3489:2;3469:18;;;3462:30;3528:34;3508:18;;;3501:62;-1:-1:-1;;;3579:18:1;;;3572:38;3627:19;;9228:79:0;;;;;;;;;9343:57;9352:6;3994:10;9393:6;9374:16;:25;9343:8;:57::i;:::-;-1:-1:-1;9431:4:0;;8951:492;-1:-1:-1;;;;8951:492:0:o;9852:215::-;3994:10;9940:4;9989:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;9989:34:0;;;;;;;;;;9940:4;;9957:80;;9980:7;;9989:47;;10026:10;;9989:47;:::i;:::-;9957:8;:80::i;6352:104::-;6408:13;6441:7;6434:14;;;;;:::i;10570:413::-;3994:10;10663:4;10707:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10707:34:0;;;;;;;;;;10760:35;;;;10752:85;;;;-1:-1:-1;;;10752:85:0;;4670:2:1;10752:85:0;;;4652:21:1;4709:2;4689:18;;;4682:30;4748:34;4728:18;;;4721:62;-1:-1:-1;;;4799:18:1;;;4792:35;4844:19;;10752:85:0;4468:401:1;10752:85:0;10873:67;3994:10;10896:7;10924:15;10905:16;:34;10873:8;:67::i;:::-;-1:-1:-1;10971:4:0;;10570:413;-1:-1:-1;;;10570:413:0:o;7764:175::-;7850:4;7867:42;3994:10;7891:9;7902:6;7867:9;:42::i;14254:380::-;-1:-1:-1;;;;;14390:19:0;;14382:68;;;;-1:-1:-1;;;14382:68:0;;4265:2:1;14382:68:0;;;4247:21:1;4304:2;4284:18;;;4277:30;4343:34;4323:18;;;4316:62;-1:-1:-1;;;4394:18:1;;;4387:34;4438:19;;14382:68:0;4063:400:1;14382:68:0;-1:-1:-1;;;;;14469:21:0;;14461:68;;;;-1:-1:-1;;;14461:68:0;;2640:2:1;14461:68:0;;;2622:21:1;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:1;;;2762:32;2811:19;;14461:68:0;2438:398:1;14461:68:0;-1:-1:-1;;;;;14542:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;14594:32;;5020:25:1;;;14594:32:0;;4993:18:1;14594:32:0;;;;;;;14254:380;;;:::o;11473:733::-;-1:-1:-1;;;;;11613:20:0;;11605:70;;;;-1:-1:-1;;;11605:70:0;;3859:2:1;11605:70:0;;;3841:21:1;3898:2;3878:18;;;3871:30;3937:34;3917:18;;;3910:62;-1:-1:-1;;;3988:18:1;;;3981:35;4033:19;;11605:70:0;3657:401:1;11605:70:0;-1:-1:-1;;;;;11694:23:0;;11686:71;;;;-1:-1:-1;;;11686:71:0;;2236:2:1;11686:71:0;;;2218:21:1;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:1;;;2358:33;2408:19;;11686:71:0;2034:399:1;11686:71:0;-1:-1:-1;;;;;11854:17:0;;11830:21;11854:17;;;;;;;;;;;11890:23;;;;11882:74;;;;-1:-1:-1;;;11882:74:0;;3043:2:1;11882:74:0;;;3025:21:1;3082:2;3062:18;;;3055:30;3121:34;3101:18;;;3094:62;-1:-1:-1;;;3172:18:1;;;3165:36;3218:19;;11882:74:0;2841:402:1;11882:74:0;-1:-1:-1;;;;;11992:17:0;;;:9;:17;;;;;;;;;;;12012:22;;;11992:42;;12056:20;;;;;;;;:30;;12028:6;;11992:9;12056:30;;12028:6;;12056:30;:::i;:::-;;;;;;;;12121:9;-1:-1:-1;;;;;12104:35:0;12113:6;-1:-1:-1;;;;;12104:35:0;;12132:6;12104:35;;;;5020:25:1;;5008:2;4993:18;;4874:177;12104:35:0;;;;;;;;11594:612;11473:733;;;:::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:1:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:1:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:91;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:91;-1:-1:-1;2013:2:1;1992:15;-1:-1:-1;;1988:29:1;1973:45;;;;2020:2;1969:54;;1432:597;-1:-1:-1;;;1432:597:1:o;5245:225::-;5285:3;5316:1;5312:6;5309:1;5306:13;5303:136;;;5361:10;5356:3;5352:20;5349:1;5342:31;5396:4;5393:1;5386:15;5424:4;5421:1;5414:15;5303:136;-1:-1:-1;5455:9:1;;5245:225::o;5475:380::-;5554:1;5550:12;;;;5597;;;5618:61;;5672:4;5664:6;5660:17;5650:27;;5618:61;5725:2;5717:6;5714:14;5694:18;5691:38;5688:161;;;5771:10;5766:3;5762:20;5759:1;5752:31;5806:4;5803:1;5796:15;5834:4;5831:1;5824:15;5688:161;;5475:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "448800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24619",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "26954",
								"increaseAllowance(address,uint256)": "26934",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51253",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6014,
									"end": 6027,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6014,
									"end": 6027,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6014,
									"end": 6027,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6014,
									"end": 6027,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6014,
									"end": 6019,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6014,
									"end": 6019,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6014,
									"end": 6027,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6014,
									"end": 6027,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6014,
									"end": 6027,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6014,
									"end": 6027,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6014,
									"end": 6027,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6014,
									"end": 6027,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6014,
									"end": 6027,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6014,
									"end": 6027,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6038,
									"end": 6045,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6038,
									"end": 6045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5353,
									"end": 16090,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122014675eed0a0df48e9dc4e8056fb532745e87fbcc3f9ac5eaf1e3abb2ce5fcf5d64736f6c63430008070033",
									".code": [
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 16090,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1240,
											"end": 1427,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7361,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7253,
											"end": 7361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7253,
											"end": 7361,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7253,
											"end": 7361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7253,
											"end": 7361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7253,
											"end": 7361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4874,
											"end": 5051,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7095,
											"end": 7188,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7095,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7095,
											"end": 7188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7095,
											"end": 7188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7180,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5198,
											"end": 5234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5198,
											"end": 5234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5188,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5171,
											"end": 5189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7095,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5056,
											"end": 5240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7498,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6456,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6352,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6352,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6352,
											"end": 6456,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8091,
											"end": 8098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8129,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6187,
											"end": 6200,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6220,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8400,
											"end": 8439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3994,
											"end": 4004,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8423,
											"end": 8430,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8432,
											"end": 8438,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8400,
											"end": 8439,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8400,
											"end": 8439,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8400,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8457,
											"end": 8461,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9091,
											"end": 9095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9108,
											"end": 9144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9118,
											"end": 9124,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9126,
											"end": 9135,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9108,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9108,
											"end": 9144,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9108,
											"end": 9144,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9108,
											"end": 9144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9157,
											"end": 9181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9195,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4004,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9217,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9217,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9236,
											"end": 9262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9236,
											"end": 9262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9236,
											"end": 9262,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9236,
											"end": 9262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3452,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3491,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3563,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3627,
											"end": 3646,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3627,
											"end": 3646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9352,
											"end": 9358,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4004,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9399,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9399,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 9343,
											"end": 9400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9343,
											"end": 9400,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9343,
											"end": 9400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9431,
											"end": 9435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9431,
											"end": 9435,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4004,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 9944,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10000,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9989,
											"end": 10023,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10023,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10023,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 9944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 9944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9957,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9957,
											"end": 10037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9980,
											"end": 9987,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9980,
											"end": 9987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9989,
											"end": 10036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10026,
											"end": 10036,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10026,
											"end": 10036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9989,
											"end": 10036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9989,
											"end": 10036,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9989,
											"end": 10036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9957,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 9957,
											"end": 10037,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6352,
											"end": 6456,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6352,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6421,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6441,
											"end": 6448,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6434,
											"end": 6448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6448,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6434,
											"end": 6448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6434,
											"end": 6448,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4004,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10741,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10741,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10741,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10741,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10760,
											"end": 10795,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10760,
											"end": 10795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10760,
											"end": 10795,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10760,
											"end": 10795,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4672,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4711,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4689,
											"end": 4707,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4682,
											"end": 4712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 4782,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4721,
											"end": 4783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4792,
											"end": 4827,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4863,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4844,
											"end": 4863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4468,
											"end": 4869,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3994,
											"end": 4004,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10896,
											"end": 10903,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10905,
											"end": 10921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10905,
											"end": 10939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10873,
											"end": 10940,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10873,
											"end": 10940,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10873,
											"end": 10940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10971,
											"end": 10975,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10971,
											"end": 10975,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7867,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3994,
											"end": 4004,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7900,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7902,
											"end": 7908,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 7867,
											"end": 7909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14254,
											"end": 14634,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 14254,
											"end": 14634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14390,
											"end": 14409,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14390,
											"end": 14409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4265,
											"end": 4267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 4268,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4304,
											"end": 4306,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4343,
											"end": 4377,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4387,
											"end": 4421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4438,
											"end": 4457,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4438,
											"end": 4457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4063,
											"end": 4463,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14469,
											"end": 14490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2642,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2682,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2752,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2753,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2794,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2438,
											"end": 2836,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14553,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14578,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14578,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14254,
											"end": 14634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14254,
											"end": 14634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14254,
											"end": 14634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14254,
											"end": 14634,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11473,
											"end": 12206,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 11473,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11613,
											"end": 11633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11613,
											"end": 11633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 3861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3841,
											"end": 3862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 3971,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3981,
											"end": 4016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4033,
											"end": 4052,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4033,
											"end": 4052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3657,
											"end": 4058,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11694,
											"end": 11717,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11694,
											"end": 11717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2239,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2277,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2348,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2349,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2034,
											"end": 2433,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11830,
											"end": 11851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11913,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11913,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3155,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3201,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3218,
											"end": 3237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2841,
											"end": 3243,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12034,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12034,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12034,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12034,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12076,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12076,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12028,
											"end": 12034,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12028,
											"end": 12034,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12028,
											"end": 12034,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12028,
											"end": 12034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12113,
											"end": 12119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12132,
											"end": 12138,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5008,
											"end": 5010,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 5051,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 12206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11473,
											"end": 12206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11473,
											"end": 12206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11473,
											"end": 12206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11473,
											"end": 12206,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1841,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1937,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1861,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1992,
											"end": 2007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5316,
											"end": 5317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5318,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5309,
											"end": 5310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5306,
											"end": 5319,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5371,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5356,
											"end": 5359,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5352,
											"end": 5372,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5349,
											"end": 5350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5396,
											"end": 5400,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5393,
											"end": 5394,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5386,
											"end": 5401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5428,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5421,
											"end": 5422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5303,
											"end": 5439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5455,
											"end": 5464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5455,
											"end": 5464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5470,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5554,
											"end": 5555,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5597,
											"end": 5609,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5676,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 5664,
											"end": 5670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5677,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5618,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5725,
											"end": 5727,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5717,
											"end": 5723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5714,
											"end": 5728,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5691,
											"end": 5729,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5771,
											"end": 5781,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5766,
											"end": 5769,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5762,
											"end": 5782,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5759,
											"end": 5760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5806,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5803,
											"end": 5804,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5796,
											"end": 5811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5838,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5831,
											"end": 5832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5824,
											"end": 5839,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5855,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/veWVLT.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/veWVLT.sol\":{\"keccak256\":\"0xf88a435e66a1589d336d5565876925e0a50fafcbee09151fd221f096eea53f7b\",\"urls\":[\"bzz-raw://9ef26e0c1f74853b7cf6dc10a9b3b54b21d6d7fb0f77cc3f2d99436bbbed6f63\",\"dweb:/ipfs/QmVP9q2YRHdU1uL9KFMJMv8B36vJW2ydUT8rQB4R3UWeMJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 133,
								"contract": "contracts/veWVLT.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "contracts/veWVLT.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "contracts/veWVLT.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "contracts/veWVLT.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "contracts/veWVLT.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/veWVLT.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/veWVLT.sol\":{\"keccak256\":\"0xf88a435e66a1589d336d5565876925e0a50fafcbee09151fd221f096eea53f7b\",\"urls\":[\"bzz-raw://9ef26e0c1f74853b7cf6dc10a9b3b54b21d6d7fb0f77cc3f2d99436bbbed6f63\",\"dweb:/ipfs/QmVP9q2YRHdU1uL9KFMJMv8B36vJW2ydUT8rQB4R3UWeMJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/veWVLT.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/veWVLT.sol\":{\"keccak256\":\"0xf88a435e66a1589d336d5565876925e0a50fafcbee09151fd221f096eea53f7b\",\"urls\":[\"bzz-raw://9ef26e0c1f74853b7cf6dc10a9b3b54b21d6d7fb0f77cc3f2d99436bbbed6f63\",\"dweb:/ipfs/QmVP9q2YRHdU1uL9KFMJMv8B36vJW2ydUT8rQB4R3UWeMJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/veWVLT.sol\":24627:27978  library SafeERC20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/veWVLT.sol\":24627:27978  library SafeERC20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205f39b0b6bb0d553f533efc08ecd33614d2c0f69df2a046140b1fba216180252564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f39b0b6bb0d553f533efc08ecd33614d2c0f69df2a046140b1fba216180252564736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F CODECOPY 0xB0 0xB6 0xBB 0xD SSTORE EXTCODEHASH MSTORE8 RETURNDATACOPY 0xFC ADDMOD 0xEC 0xD3 CALLDATASIZE EQ 0xD2 0xC0 0xF6 SWAP14 CALLCODE LOG0 CHAINID EQ SIGNEXTEND 0x1F 0xBA 0x21 PUSH2 0x8025 0x25 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "24627:3351:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;24627:3351:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f39b0b6bb0d553f533efc08ecd33614d2c0f69df2a046140b1fba216180252564736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F CODECOPY 0xB0 0xB6 0xBB 0xD SSTORE EXTCODEHASH MSTORE8 RETURNDATACOPY 0xFC ADDMOD 0xEC 0xD3 CALLDATASIZE EQ 0xD2 0xC0 0xF6 SWAP14 CALLCODE LOG0 CHAINID EQ SIGNEXTEND 0x1F 0xBA 0x21 PUSH2 0x8025 0x25 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "24627:3351:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24627,
									"end": 27978,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24627,
									"end": 27978,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205f39b0b6bb0d553f533efc08ecd33614d2c0f69df2a046140b1fba216180252564736f6c63430008070033",
									".code": [
										{
											"begin": 24627,
											"end": 27978,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 24627,
											"end": 27978,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 24627,
											"end": 27978,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24627,
											"end": 27978,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24627,
											"end": 27978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24627,
											"end": 27978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24627,
											"end": 27978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24627,
											"end": 27978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24627,
											"end": 27978,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/veWVLT.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/veWVLT.sol\":{\"keccak256\":\"0xf88a435e66a1589d336d5565876925e0a50fafcbee09151fd221f096eea53f7b\",\"urls\":[\"bzz-raw://9ef26e0c1f74853b7cf6dc10a9b3b54b21d6d7fb0f77cc3f2d99436bbbed6f63\",\"dweb:/ipfs/QmVP9q2YRHdU1uL9KFMJMv8B36vJW2ydUT8rQB4R3UWeMJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"WVLTBar": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_vestingToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "vestingInAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "mintedAmount",
									"type": "uint256"
								}
							],
							"name": "Enter",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "vestingOutAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "burnedAmount",
									"type": "uint256"
								}
							],
							"name": "Leave",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ShareRevenue",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "enter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_shareOfveWVLT",
									"type": "uint256"
								}
							],
							"name": "leave",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "shareRevenue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vestingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/veWVLT.sol\":28008:30284  contract WVLTBar is ERC20(\"VotingEscrowedWaveLength\", \"veWVLT\") {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/veWVLT.sol\":28435:28516  constructor(IERC20 _vestingToken) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/veWVLT.sol\":5947:6063  constructor(string memory name_, string memory symbol_) {\r... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x18\n  dup2\n  mstore\n  0x566f74696e67457363726f776564576176654c656e6774680000000000000000\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  dup3\n  mstore\n  dup4\n  mload\n  dup1\n  dup6\n  add\n  swap1\n  swap5\n  mstore\n  0x06\n  dup5\n  mstore\n  shl(0xd2, 0x1d9955d59315)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"contracts/veWVLT.sol\":6014:6027  _name = name_ */\n  dup2\n  mload\n    /* \"contracts/veWVLT.sol\":5947:6063  constructor(string memory name_, string memory symbol_) {\r... */\n  swap2\n  swap3\n  swap2\n    /* \"contracts/veWVLT.sol\":6014:6027  _name = name_ */\n  tag_7\n  swap2\n    /* \"contracts/veWVLT.sol\":6014:6019  _name */\n  0x03\n  swap2\n    /* \"contracts/veWVLT.sol\":6014:6027  _name = name_ */\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/veWVLT.sol\":6038:6055  _symbol = symbol_ */\n  dup1\n  mload\n  tag_9\n  swap1\n    /* \"contracts/veWVLT.sol\":6038:6045  _symbol */\n  0x04\n  swap1\n    /* \"contracts/veWVLT.sol\":6038:6055  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n  pop\n    /* \"contracts/veWVLT.sol\":28480:28492  vestingToken */\n  0x05\n    /* \"contracts/veWVLT.sol\":28480:28508  vestingToken = _vestingToken */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  swap1\n  swap4\n  and\n  swap3\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"contracts/veWVLT.sol\":28008:30284  contract WVLTBar is ERC20(\"VotingEscrowedWaveLength\", \"veWVLT\") {\r... */\n  jump(tag_23)\ntag_8:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_18)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_21)\n    /* \"#utility.yul\":14:317   */\ntag_3:\n    /* \"#utility.yul\":97:103   */\n  0x00\n    /* \"#utility.yul\":150:152   */\n  0x20\n    /* \"#utility.yul\":138:147   */\n  dup3\n    /* \"#utility.yul\":129:136   */\n  dup5\n    /* \"#utility.yul\":125:148   */\n  sub\n    /* \"#utility.yul\":121:153   */\n  slt\n    /* \"#utility.yul\":118:170   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":166:167   */\n  0x00\n    /* \"#utility.yul\":163:164   */\n  dup1\n    /* \"#utility.yul\":156:168   */\n  revert\n    /* \"#utility.yul\":118:170   */\ntag_25:\n    /* \"#utility.yul\":192:208   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":237:268   */\n  dup2\n  and\n    /* \"#utility.yul\":227:269   */\n  dup2\n  eq\n    /* \"#utility.yul\":217:287   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":283:284   */\n  0x00\n    /* \"#utility.yul\":280:281   */\n  dup1\n    /* \"#utility.yul\":273:285   */\n  revert\n    /* \"#utility.yul\":217:287   */\ntag_26:\n    /* \"#utility.yul\":306:311   */\n  swap4\n    /* \"#utility.yul\":14:317   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":322:702   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x01\n    /* \"#utility.yul\":397:409   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":444:456   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":465:526   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":519:523   */\n  0x7f\n    /* \"#utility.yul\":511:517   */\n  dup3\n    /* \"#utility.yul\":507:524   */\n  and\n    /* \"#utility.yul\":497:524   */\n  swap2\n  pop\n    /* \"#utility.yul\":465:526   */\ntag_28:\n    /* \"#utility.yul\":572:574   */\n  0x20\n    /* \"#utility.yul\":564:570   */\n  dup3\n    /* \"#utility.yul\":561:575   */\n  lt\n    /* \"#utility.yul\":541:559   */\n  dup2\n    /* \"#utility.yul\":538:576   */\n  eq\n    /* \"#utility.yul\":535:696   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":618:628   */\n  0x4e487b71\n    /* \"#utility.yul\":613:616   */\n  0xe0\n    /* \"#utility.yul\":609:629   */\n  shl\n    /* \"#utility.yul\":606:607   */\n  0x00\n    /* \"#utility.yul\":599:630   */\n  mstore\n    /* \"#utility.yul\":653:657   */\n  0x22\n    /* \"#utility.yul\":650:651   */\n  0x04\n    /* \"#utility.yul\":643:658   */\n  mstore\n    /* \"#utility.yul\":681:685   */\n  0x24\n    /* \"#utility.yul\":678:679   */\n  0x00\n    /* \"#utility.yul\":671:686   */\n  revert\n    /* \"#utility.yul\":535:696   */\ntag_29:\n  pop\n    /* \"#utility.yul\":322:702   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"contracts/veWVLT.sol\":28008:30284  contract WVLTBar is ERC20(\"VotingEscrowedWaveLength\", \"veWVLT\") {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/veWVLT.sol\":28008:30284  contract WVLTBar is ERC20(\"VotingEscrowedWaveLength\", \"veWVLT\") {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa59f3e0c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x39509351\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x67dfd4c9\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x18160ddd\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x19d152fa\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x139e41e4\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/veWVLT.sol\":6133:6233  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/veWVLT.sol\":8300:8469  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":2928:2942   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2921:2943   */\n      iszero\n        /* \"#utility.yul\":2903:2944   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2891:2893   */\n      0x20\n        /* \"#utility.yul\":2876:2894   */\n      add\n        /* \"contracts/veWVLT.sol\":8300:8469  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      tag_23\n        /* \"#utility.yul\":2763:2950   */\n      jump\n        /* \"contracts/veWVLT.sol\":30116:30281  function shareRevenue(uint256 _amount) external {\r... */\n    tag_5:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/veWVLT.sol\":7253:7361  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_6:\n        /* \"contracts/veWVLT.sol\":7341:7353  _totalSupply */\n      sload(0x02)\n        /* \"contracts/veWVLT.sol\":7253:7361  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":7929:7954   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":7917:7919   */\n      0x20\n        /* \"#utility.yul\":7902:7920   */\n      add\n        /* \"contracts/veWVLT.sol\":7253:7361  function totalSupply() public view virtual override returns (uint256) {\r... */\n      tag_23\n        /* \"#utility.yul\":7783:7960   */\n      jump\n        /* \"contracts/veWVLT.sol\":28114:28140  IERC20 public vestingToken */\n    tag_7:\n      sload(0x05)\n      tag_39\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_39:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2060:2092   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2042:2093   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2030:2032   */\n      0x20\n        /* \"#utility.yul\":2015:2033   */\n      add\n        /* \"contracts/veWVLT.sol\":28114:28140  IERC20 public vestingToken */\n      tag_23\n        /* \"#utility.yul\":1896:2099   */\n      jump\n        /* \"contracts/veWVLT.sol\":8951:9443  function transferFrom(\r... */\n    tag_8:\n      tag_25\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n        /* \"contracts/veWVLT.sol\":7095:7188  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_9:\n      mload(0x40)\n        /* \"contracts/veWVLT.sol\":7178:7180  18 */\n      0x12\n        /* \"#utility.yul\":8360:8396   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8348:8350   */\n      0x20\n        /* \"#utility.yul\":8333:8351   */\n      add\n        /* \"contracts/veWVLT.sol\":7095:7188  function decimals() public view virtual override returns (uint8) {\r... */\n      tag_23\n        /* \"#utility.yul\":8218:8402   */\n      jump\n        /* \"contracts/veWVLT.sol\":9852:10067  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_10:\n      tag_25\n      tag_53\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"contracts/veWVLT.sol\":29493:30108  function leave(uint256 _shareOfveWVLT) external {\r... */\n    tag_11:\n      tag_31\n      tag_57\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"contracts/veWVLT.sol\":7424:7551  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_12:\n      tag_35\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":7525:7543  _balances[account] */\n      and\n        /* \"contracts/veWVLT.sol\":7498:7505  uint256 */\n      0x00\n        /* \"contracts/veWVLT.sol\":7525:7543  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/veWVLT.sol\":7424:7551  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"contracts/veWVLT.sol\":6352:6456  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_13:\n      tag_21\n      tag_65\n      jump\t// in\n        /* \"contracts/veWVLT.sol\":10570:10983  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_14:\n      tag_25\n      tag_68\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"contracts/veWVLT.sol\":28524:29485  function enter(uint256 _amount) external {\r... */\n    tag_15:\n      tag_31\n      tag_72\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"contracts/veWVLT.sol\":7764:7939  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_16:\n      tag_25\n      tag_75\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"contracts/veWVLT.sol\":8002:8153  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_17:\n      tag_35\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":8118:8136  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/veWVLT.sol\":8091:8098  uint256 */\n      0x00\n        /* \"contracts/veWVLT.sol\":8118:8136  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/veWVLT.sol\":8118:8129  _allowances */\n      0x01\n        /* \"contracts/veWVLT.sol\":8118:8136  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/veWVLT.sol\":8118:8145  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/veWVLT.sol\":8002:8153  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"contracts/veWVLT.sol\":6133:6233  function name() public view virtual override returns (string memory) {\r... */\n    tag_22:\n        /* \"contracts/veWVLT.sol\":6187:6200  string memory */\n      0x60\n        /* \"contracts/veWVLT.sol\":6220:6225  _name */\n      0x03\n        /* \"contracts/veWVLT.sol\":6213:6225  return _name */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_85\n      jump\t// in\n    tag_86:\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_88\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_87)\n    tag_88:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_89:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_89\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/veWVLT.sol\":6133:6233  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/veWVLT.sol\":8300:8469  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_28:\n        /* \"contracts/veWVLT.sol\":8383:8387  bool */\n      0x00\n        /* \"contracts/veWVLT.sol\":8400:8439  _approve(_msgSender(), spender, amount) */\n      tag_91\n        /* \"contracts/veWVLT.sol\":3994:4004  msg.sender */\n      caller\n        /* \"contracts/veWVLT.sol\":8423:8430  spender */\n      dup5\n        /* \"contracts/veWVLT.sol\":8432:8438  amount */\n      dup5\n        /* \"contracts/veWVLT.sol\":8400:8408  _approve */\n      tag_94\n        /* \"contracts/veWVLT.sol\":8400:8439  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_91:\n      pop\n        /* \"contracts/veWVLT.sol\":8457:8461  true */\n      0x01\n        /* \"contracts/veWVLT.sol\":8300:8469  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/veWVLT.sol\":30116:30281  function shareRevenue(uint256 _amount) external {\r... */\n    tag_34:\n        /* \"contracts/veWVLT.sol\":30175:30187  vestingToken */\n      sload(0x05)\n        /* \"contracts/veWVLT.sol\":30175:30236  vestingToken.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/veWVLT.sol\":30201:30211  msg.sender */\n      caller\n        /* \"contracts/veWVLT.sol\":30175:30236  vestingToken.transferFrom(msg.sender, address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2344:2378   */\n      mstore\n        /* \"contracts/veWVLT.sol\":30221:30225  this */\n      address\n        /* \"#utility.yul\":2394:2412   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2387:2430   */\n      mstore\n        /* \"#utility.yul\":2446:2464   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":2439:2473   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":30175:30187  vestingToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/veWVLT.sol\":30175:30200  vestingToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":2279:2297   */\n      0x64\n      add\n        /* \"contracts/veWVLT.sol\":30175:30236  vestingToken.transferFrom(msg.sender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      pop\n        /* \"contracts/veWVLT.sol\":30252:30273  ShareRevenue(_amount) */\n      mload(0x40)\n        /* \"#utility.yul\":7929:7954   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/veWVLT.sol\":30252:30273  ShareRevenue(_amount) */\n      0x8345132cbbbde83001e783cdfdd5190dedc863ae82cae7abe302b22322a60274\n      swap1\n        /* \"#utility.yul\":7917:7919   */\n      0x20\n        /* \"#utility.yul\":7902:7920   */\n      add\n        /* \"contracts/veWVLT.sol\":30252:30273  ShareRevenue(_amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/veWVLT.sol\":30116:30281  function shareRevenue(uint256 _amount) external {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/veWVLT.sol\":8951:9443  function transferFrom(\r... */\n    tag_46:\n        /* \"contracts/veWVLT.sol\":9091:9095  bool */\n      0x00\n        /* \"contracts/veWVLT.sol\":9108:9144  _transfer(sender, recipient, amount) */\n      tag_106\n        /* \"contracts/veWVLT.sol\":9118:9124  sender */\n      dup5\n        /* \"contracts/veWVLT.sol\":9126:9135  recipient */\n      dup5\n        /* \"contracts/veWVLT.sol\":9137:9143  amount */\n      dup5\n        /* \"contracts/veWVLT.sol\":9108:9117  _transfer */\n      tag_107\n        /* \"contracts/veWVLT.sol\":9108:9144  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":9184:9203  _allowances[sender] */\n      dup5\n      and\n        /* \"contracts/veWVLT.sol\":9157:9181  uint256 currentAllowance */\n      0x00\n        /* \"contracts/veWVLT.sol\":9184:9203  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/veWVLT.sol\":9184:9195  _allowances */\n      0x01\n        /* \"contracts/veWVLT.sol\":9184:9203  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/veWVLT.sol\":3994:4004  msg.sender */\n      caller\n        /* \"contracts/veWVLT.sol\":9184:9217  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/veWVLT.sol\":9236:9262  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/veWVLT.sol\":9228:9307  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5597:5599   */\n      0x20\n        /* \"contracts/veWVLT.sol\":9228:9307  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5579:5600   */\n      mstore\n        /* \"#utility.yul\":5636:5638   */\n      0x28\n        /* \"#utility.yul\":5616:5634   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5609:5639   */\n      mstore\n        /* \"#utility.yul\":5675:5709   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":5655:5673   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5648:5710   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":5726:5744   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5719:5757   */\n      mstore\n        /* \"#utility.yul\":5774:5793   */\n      0x84\n      add\n        /* \"contracts/veWVLT.sol\":9228:9307  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"contracts/veWVLT.sol\":9343:9400  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_112\n        /* \"contracts/veWVLT.sol\":9352:9358  sender */\n      dup6\n        /* \"contracts/veWVLT.sol\":3994:4004  msg.sender */\n      caller\n        /* \"contracts/veWVLT.sol\":9393:9399  amount */\n      dup6\n        /* \"contracts/veWVLT.sol\":9374:9390  currentAllowance */\n      dup5\n        /* \"contracts/veWVLT.sol\":9374:9399  currentAllowance - amount */\n      sub\n        /* \"contracts/veWVLT.sol\":9343:9351  _approve */\n      tag_94\n        /* \"contracts/veWVLT.sol\":9343:9400  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_112:\n      pop\n        /* \"contracts/veWVLT.sol\":9431:9435  true */\n      0x01\n      swap5\n        /* \"contracts/veWVLT.sol\":8951:9443  function transferFrom(\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/veWVLT.sol\":9852:10067  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_54:\n        /* \"contracts/veWVLT.sol\":3994:4004  msg.sender */\n      caller\n        /* \"contracts/veWVLT.sol\":9940:9944  bool */\n      0x00\n        /* \"contracts/veWVLT.sol\":9989:10014  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/veWVLT.sol\":9989:10000  _allowances */\n      0x01\n        /* \"contracts/veWVLT.sol\":9989:10014  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":9989:10023  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/veWVLT.sol\":9940:9944  bool */\n      swap1\n      swap2\n        /* \"contracts/veWVLT.sol\":9957:10037  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_91\n      swap2\n        /* \"contracts/veWVLT.sol\":9980:9987  spender */\n      dup6\n      swap1\n        /* \"contracts/veWVLT.sol\":9989:10036  _allowances[_msgSender()][spender] + addedValue */\n      tag_119\n      swap1\n        /* \"contracts/veWVLT.sol\":10026:10036  addedValue */\n      dup7\n      swap1\n        /* \"contracts/veWVLT.sol\":9989:10036  _allowances[_msgSender()][spender] + addedValue */\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"contracts/veWVLT.sol\":9957:9965  _approve */\n      tag_94\n        /* \"contracts/veWVLT.sol\":9957:10037  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n        /* \"contracts/veWVLT.sol\":29493:30108  function leave(uint256 _shareOfveWVLT) external {\r... */\n    tag_58:\n        /* \"contracts/veWVLT.sol\":29556:29574  _shareOfveWVLT > 0 */\n      dup1\n      iszero\n        /* \"contracts/veWVLT.sol\":29552:30101  if (_shareOfveWVLT > 0) {\r... */\n      tag_122\n      jumpi\n        /* \"contracts/veWVLT.sol\":29624:29636  vestingToken */\n      sload(0x05)\n        /* \"contracts/veWVLT.sol\":29624:29693  vestingToken.balanceOf(\r... */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/veWVLT.sol\":29673:29677  this */\n      address\n        /* \"contracts/veWVLT.sol\":29624:29693  vestingToken.balanceOf(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2042:2093   */\n      mstore\n        /* \"contracts/veWVLT.sol\":29591:29621  uint256 totalVestedTokenSupply */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":29624:29636  vestingToken */\n      and\n      swap1\n        /* \"contracts/veWVLT.sol\":29624:29646  vestingToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2015:2033   */\n      0x24\n      add\n        /* \"contracts/veWVLT.sol\":29624:29693  vestingToken.balanceOf(\r... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"contracts/veWVLT.sol\":29591:29693  uint256 totalVestedTokenSupply = vestingToken.balanceOf(\r... */\n      swap1\n      pop\n        /* \"contracts/veWVLT.sol\":29708:29727  uint256 totalveWVLT */\n      0x00\n        /* \"contracts/veWVLT.sol\":29730:29743  totalSupply() */\n      tag_130\n        /* \"contracts/veWVLT.sol\":7341:7353  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"contracts/veWVLT.sol\":7253:7361  function totalSupply() public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"contracts/veWVLT.sol\":29730:29743  totalSupply() */\n    tag_130:\n        /* \"contracts/veWVLT.sol\":29708:29743  uint256 totalveWVLT = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/veWVLT.sol\":29833:29847  uint256 amount */\n      0x00\n        /* \"contracts/veWVLT.sol\":29708:29743  uint256 totalveWVLT = totalSupply() */\n      dup2\n        /* \"contracts/veWVLT.sol\":29851:29890  _shareOfveWVLT * totalVestedTokenSupply */\n      tag_131\n        /* \"contracts/veWVLT.sol\":29868:29890  totalVestedTokenSupply */\n      dup5\n        /* \"contracts/veWVLT.sol\":29851:29865  _shareOfveWVLT */\n      dup7\n        /* \"contracts/veWVLT.sol\":29851:29890  _shareOfveWVLT * totalVestedTokenSupply */\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"contracts/veWVLT.sol\":29850:29922  (_shareOfveWVLT * totalVestedTokenSupply) /\r... */\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"contracts/veWVLT.sol\":29833:29922  uint256 amount = (_shareOfveWVLT * totalVestedTokenSupply) /\r... */\n      swap1\n      pop\n        /* \"contracts/veWVLT.sol\":29937:29970  _burn(msg.sender, _shareOfveWVLT) */\n      tag_135\n        /* \"contracts/veWVLT.sol\":29943:29953  msg.sender */\n      caller\n        /* \"contracts/veWVLT.sol\":29955:29969  _shareOfveWVLT */\n      dup6\n        /* \"contracts/veWVLT.sol\":29937:29942  _burn */\n      tag_136\n        /* \"contracts/veWVLT.sol\":29937:29970  _burn(msg.sender, _shareOfveWVLT) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/veWVLT.sol\":29985:29997  vestingToken */\n      sload(0x05)\n        /* \"contracts/veWVLT.sol\":29985:30026  vestingToken.transfer(msg.sender, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/veWVLT.sol\":30007:30017  msg.sender */\n      caller\n        /* \"contracts/veWVLT.sol\":29985:30026  vestingToken.transfer(msg.sender, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2658:2709   */\n      mstore\n        /* \"#utility.yul\":2725:2743   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2718:2752   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":29985:29997  vestingToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/veWVLT.sol\":29985:30006  vestingToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2631:2649   */\n      0x44\n      add\n        /* \"contracts/veWVLT.sol\":29985:30026  vestingToken.transfer(msg.sender, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_142:\n      pop\n        /* \"contracts/veWVLT.sol\":30048:30089  Leave(msg.sender, amount, _shareOfveWVLT) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8139:8164   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":8195:8197   */\n      0x20\n        /* \"#utility.yul\":8180:8198   */\n      dup2\n      add\n        /* \"#utility.yul\":8173:8207   */\n      dup7\n      swap1\n      mstore\n        /* \"contracts/veWVLT.sol\":30054:30064  msg.sender */\n      caller\n      swap2\n        /* \"contracts/veWVLT.sol\":30048:30089  Leave(msg.sender, amount, _shareOfveWVLT) */\n      0x0f0f7f8153c6d63a5696720d4cc434e56bb5ac1cf8c791ed9c180defb6e92153\n      swap2\n        /* \"#utility.yul\":8112:8130   */\n      add\n        /* \"contracts/veWVLT.sol\":30048:30089  Leave(msg.sender, amount, _shareOfveWVLT) */\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/veWVLT.sol\":29576:30101  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/veWVLT.sol\":29552:30101  if (_shareOfveWVLT > 0) {\r... */\n    tag_122:\n        /* \"contracts/veWVLT.sol\":29493:30108  function leave(uint256 _shareOfveWVLT) external {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/veWVLT.sol\":6352:6456  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_65:\n        /* \"contracts/veWVLT.sol\":6408:6421  string memory */\n      0x60\n        /* \"contracts/veWVLT.sol\":6441:6448  _symbol */\n      0x04\n        /* \"contracts/veWVLT.sol\":6434:6448  return _symbol */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n        /* \"contracts/veWVLT.sol\":10570:10983  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_69:\n        /* \"contracts/veWVLT.sol\":3994:4004  msg.sender */\n      caller\n        /* \"contracts/veWVLT.sol\":10663:10667  bool */\n      0x00\n        /* \"contracts/veWVLT.sol\":10707:10732  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/veWVLT.sol\":10707:10718  _allowances */\n      0x01\n        /* \"contracts/veWVLT.sol\":10707:10732  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":10707:10741  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/veWVLT.sol\":10760:10795  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/veWVLT.sol\":10752:10837  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7219:7221   */\n      0x20\n        /* \"contracts/veWVLT.sol\":10752:10837  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7201:7222   */\n      mstore\n        /* \"#utility.yul\":7258:7260   */\n      0x25\n        /* \"#utility.yul\":7238:7256   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7231:7261   */\n      mstore\n        /* \"#utility.yul\":7297:7331   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":7277:7295   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7270:7332   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":7348:7366   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7341:7376   */\n      mstore\n        /* \"#utility.yul\":7393:7412   */\n      0x84\n      add\n        /* \"contracts/veWVLT.sol\":10752:10837  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_110\n        /* \"#utility.yul\":7017:7418   */\n      jump\n        /* \"contracts/veWVLT.sol\":10752:10837  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_154:\n        /* \"contracts/veWVLT.sol\":10873:10940  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_157\n        /* \"contracts/veWVLT.sol\":3994:4004  msg.sender */\n      caller\n        /* \"contracts/veWVLT.sol\":10896:10903  spender */\n      dup6\n        /* \"contracts/veWVLT.sol\":10924:10939  subtractedValue */\n      dup6\n        /* \"contracts/veWVLT.sol\":10905:10921  currentAllowance */\n      dup5\n        /* \"contracts/veWVLT.sol\":10905:10939  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/veWVLT.sol\":10873:10881  _approve */\n      tag_94\n        /* \"contracts/veWVLT.sol\":10873:10940  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_157:\n      pop\n        /* \"contracts/veWVLT.sol\":10971:10975  true */\n      0x01\n      swap4\n        /* \"contracts/veWVLT.sol\":10570:10983  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/veWVLT.sol\":28524:29485  function enter(uint256 _amount) external {\r... */\n    tag_73:\n        /* \"contracts/veWVLT.sol\":28580:28591  _amount > 0 */\n      dup1\n      iszero\n        /* \"contracts/veWVLT.sol\":28576:29478  if (_amount > 0) {\r... */\n      tag_122\n      jumpi\n        /* \"contracts/veWVLT.sol\":28641:28653  vestingToken */\n      sload(0x05)\n        /* \"contracts/veWVLT.sol\":28641:28710  vestingToken.balanceOf(\r... */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/veWVLT.sol\":28690:28694  this */\n      address\n        /* \"contracts/veWVLT.sol\":28641:28710  vestingToken.balanceOf(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2042:2093   */\n      mstore\n        /* \"contracts/veWVLT.sol\":28608:28638  uint256 totalLockedTokenSupply */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":28641:28653  vestingToken */\n      and\n      swap1\n        /* \"contracts/veWVLT.sol\":28641:28663  vestingToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2015:2033   */\n      0x24\n      add\n        /* \"contracts/veWVLT.sol\":28641:28710  vestingToken.balanceOf(\r... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_164:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_165\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_165:\n        /* \"contracts/veWVLT.sol\":28608:28710  uint256 totalLockedTokenSupply = vestingToken.balanceOf(\r... */\n      swap1\n      pop\n        /* \"contracts/veWVLT.sol\":28727:28746  uint256 totalveWVLT */\n      0x00\n        /* \"contracts/veWVLT.sol\":28749:28762  totalSupply() */\n      tag_166\n        /* \"contracts/veWVLT.sol\":7341:7353  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"contracts/veWVLT.sol\":7253:7361  function totalSupply() public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"contracts/veWVLT.sol\":28749:28762  totalSupply() */\n    tag_166:\n        /* \"contracts/veWVLT.sol\":28779:28791  vestingToken */\n      sload(0x05)\n        /* \"contracts/veWVLT.sol\":28779:28840  vestingToken.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/veWVLT.sol\":28805:28815  msg.sender */\n      caller\n        /* \"contracts/veWVLT.sol\":28779:28840  vestingToken.transferFrom(msg.sender, address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2344:2378   */\n      mstore\n        /* \"contracts/veWVLT.sol\":28825:28829  this */\n      address\n        /* \"#utility.yul\":2394:2412   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2387:2430   */\n      mstore\n        /* \"#utility.yul\":2446:2464   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":2439:2473   */\n      dup7\n      swap1\n      mstore\n        /* \"contracts/veWVLT.sol\":28727:28762  uint256 totalveWVLT = totalSupply() */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":28779:28791  vestingToken */\n      and\n      swap1\n        /* \"contracts/veWVLT.sol\":28779:28804  vestingToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":2279:2297   */\n      0x64\n      add\n        /* \"contracts/veWVLT.sol\":28779:28840  vestingToken.transferFrom(msg.sender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_168:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_171:\n      pop\n        /* \"contracts/veWVLT.sol\":28855:28873  uint256 mintAmount */\n      0x00\n        /* \"contracts/veWVLT.sol\":28962:28978  totalveWVLT == 0 */\n      dup2\n      iszero\n      dup1\n        /* \"contracts/veWVLT.sol\":28962:29009  totalveWVLT == 0 || totalLockedTokenSupply == 0 */\n      tag_172\n      jumpi\n      pop\n        /* \"contracts/veWVLT.sol\":28982:29009  totalLockedTokenSupply == 0 */\n      dup3\n      iszero\n        /* \"contracts/veWVLT.sol\":28962:29009  totalveWVLT == 0 || totalLockedTokenSupply == 0 */\n    tag_172:\n        /* \"contracts/veWVLT.sol\":28958:29365  if (totalveWVLT == 0 || totalLockedTokenSupply == 0) {\r... */\n      iszero\n      tag_173\n      jumpi\n      pop\n        /* \"contracts/veWVLT.sol\":29043:29050  _amount */\n      dup3\n        /* \"contracts/veWVLT.sol\":28958:29365  if (totalveWVLT == 0 || totalLockedTokenSupply == 0) {\r... */\n      jump(tag_174)\n    tag_173:\n        /* \"contracts/veWVLT.sol\":29209:29230  uint256 shareOfveWVLT */\n      0x00\n        /* \"contracts/veWVLT.sol\":29280:29302  totalLockedTokenSupply */\n      dup4\n        /* \"contracts/veWVLT.sol\":29234:29255  _amount * totalveWVLT */\n      tag_175\n        /* \"contracts/veWVLT.sol\":29244:29255  totalveWVLT */\n      dup5\n        /* \"contracts/veWVLT.sol\":29234:29241  _amount */\n      dup8\n        /* \"contracts/veWVLT.sol\":29234:29255  _amount * totalveWVLT */\n      tag_132\n      jump\t// in\n    tag_175:\n        /* \"contracts/veWVLT.sol\":29233:29302  (_amount * totalveWVLT) /\r... */\n      tag_176\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_176:\n        /* \"contracts/veWVLT.sol\":29209:29302  uint256 shareOfveWVLT = (_amount * totalveWVLT) /\r... */\n      swap2\n      pop\n      pop\n        /* \"contracts/veWVLT.sol\":28958:29365  if (totalveWVLT == 0 || totalLockedTokenSupply == 0) {\r... */\n    tag_174:\n        /* \"contracts/veWVLT.sol\":29379:29408  _mint(msg.sender, mintAmount) */\n      tag_177\n        /* \"contracts/veWVLT.sol\":29385:29395  msg.sender */\n      caller\n        /* \"contracts/veWVLT.sol\":29397:29407  mintAmount */\n      dup3\n        /* \"contracts/veWVLT.sol\":29379:29384  _mint */\n      tag_178\n        /* \"contracts/veWVLT.sol\":29379:29408  _mint(msg.sender, mintAmount) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/veWVLT.sol\":29428:29466  Enter(msg.sender, _amount, mintAmount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8139:8164   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":8195:8197   */\n      0x20\n        /* \"#utility.yul\":8180:8198   */\n      dup2\n      add\n        /* \"#utility.yul\":8173:8207   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/veWVLT.sol\":29434:29444  msg.sender */\n      caller\n      swap2\n        /* \"contracts/veWVLT.sol\":29428:29466  Enter(msg.sender, _amount, mintAmount) */\n      0x5087fbec8bdd9b358f62d89babb5f4dd44f8576230a9520c90e3407d6f4dd1fb\n      swap2\n        /* \"#utility.yul\":8112:8130   */\n      add\n        /* \"contracts/veWVLT.sol\":29428:29466  Enter(msg.sender, _amount, mintAmount) */\n      tag_143\n        /* \"#utility.yul\":7965:8213   */\n      jump\n        /* \"contracts/veWVLT.sol\":7764:7939  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_76:\n        /* \"contracts/veWVLT.sol\":7850:7854  bool */\n      0x00\n        /* \"contracts/veWVLT.sol\":7867:7909  _transfer(_msgSender(), recipient, amount) */\n      tag_91\n        /* \"contracts/veWVLT.sol\":3994:4004  msg.sender */\n      caller\n        /* \"contracts/veWVLT.sol\":7891:7900  recipient */\n      dup5\n        /* \"contracts/veWVLT.sol\":7902:7908  amount */\n      dup5\n        /* \"contracts/veWVLT.sol\":7867:7876  _transfer */\n      tag_107\n        /* \"contracts/veWVLT.sol\":7867:7909  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/veWVLT.sol\":14254:14634  function _approve(\r... */\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":14390:14409  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/veWVLT.sol\":14382:14450  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6814:6816   */\n      0x20\n        /* \"contracts/veWVLT.sol\":14382:14450  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6796:6817   */\n      mstore\n        /* \"#utility.yul\":6853:6855   */\n      0x24\n        /* \"#utility.yul\":6833:6851   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6826:6856   */\n      mstore\n        /* \"#utility.yul\":6892:6926   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":6872:6890   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6865:6927   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":6943:6961   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6936:6970   */\n      mstore\n        /* \"#utility.yul\":6987:7006   */\n      0x84\n      add\n        /* \"contracts/veWVLT.sol\":14382:14450  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_110\n        /* \"#utility.yul\":6612:7012   */\n      jump\n        /* \"contracts/veWVLT.sol\":14382:14450  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":14469:14490  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/veWVLT.sol\":14461:14529  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4787:4789   */\n      0x20\n        /* \"contracts/veWVLT.sol\":14461:14529  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4769:4790   */\n      mstore\n        /* \"#utility.yul\":4826:4828   */\n      0x22\n        /* \"#utility.yul\":4806:4824   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4799:4829   */\n      mstore\n        /* \"#utility.yul\":4865:4899   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4845:4863   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4838:4900   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4916:4934   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4909:4941   */\n      mstore\n        /* \"#utility.yul\":4958:4977   */\n      0x84\n      add\n        /* \"contracts/veWVLT.sol\":14461:14529  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_110\n        /* \"#utility.yul\":4585:4983   */\n      jump\n        /* \"contracts/veWVLT.sol\":14461:14529  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":14542:14560  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/veWVLT.sol\":14542:14553  _allowances */\n      0x01\n        /* \"contracts/veWVLT.sol\":14542:14560  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/veWVLT.sol\":14542:14569  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/veWVLT.sol\":14542:14578  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/veWVLT.sol\":14594:14626  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":7929:7954   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/veWVLT.sol\":14594:14626  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":7902:7920   */\n      add\n        /* \"contracts/veWVLT.sol\":14594:14626  Approval(owner, spender, amount) */\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/veWVLT.sol\":14254:14634  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/veWVLT.sol\":11473:12206  function _transfer(\r... */\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":11613:11633  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/veWVLT.sol\":11605:11675  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6408:6410   */\n      0x20\n        /* \"contracts/veWVLT.sol\":11605:11675  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6390:6411   */\n      mstore\n        /* \"#utility.yul\":6447:6449   */\n      0x25\n        /* \"#utility.yul\":6427:6445   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6420:6450   */\n      mstore\n        /* \"#utility.yul\":6486:6520   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":6466:6484   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6459:6521   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":6537:6555   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6530:6565   */\n      mstore\n        /* \"#utility.yul\":6582:6601   */\n      0x84\n      add\n        /* \"contracts/veWVLT.sol\":11605:11675  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_110\n        /* \"#utility.yul\":6206:6607   */\n      jump\n        /* \"contracts/veWVLT.sol\":11605:11675  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":11694:11717  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/veWVLT.sol\":11686:11757  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3980:3982   */\n      0x20\n        /* \"contracts/veWVLT.sol\":11686:11757  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3962:3983   */\n      mstore\n        /* \"#utility.yul\":4019:4021   */\n      0x23\n        /* \"#utility.yul\":3999:4017   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3992:4022   */\n      mstore\n        /* \"#utility.yul\":4058:4092   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":4038:4056   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4031:4093   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":4109:4127   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4102:4135   */\n      mstore\n        /* \"#utility.yul\":4152:4171   */\n      0x84\n      add\n        /* \"contracts/veWVLT.sol\":11686:11757  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_110\n        /* \"#utility.yul\":3778:4177   */\n      jump\n        /* \"contracts/veWVLT.sol\":11686:11757  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_197:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":11854:11871  _balances[sender] */\n      dup4\n      and\n        /* \"contracts/veWVLT.sol\":11830:11851  uint256 senderBalance */\n      0x00\n        /* \"contracts/veWVLT.sol\":11854:11871  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/veWVLT.sol\":11890:11913  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/veWVLT.sol\":11882:11956  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5190:5192   */\n      0x20\n        /* \"contracts/veWVLT.sol\":11882:11956  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5172:5193   */\n      mstore\n        /* \"#utility.yul\":5229:5231   */\n      0x26\n        /* \"#utility.yul\":5209:5227   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5202:5232   */\n      mstore\n        /* \"#utility.yul\":5268:5302   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5248:5266   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5241:5303   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5319:5337   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5312:5348   */\n      mstore\n        /* \"#utility.yul\":5365:5384   */\n      0x84\n      add\n        /* \"contracts/veWVLT.sol\":11882:11956  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_110\n        /* \"#utility.yul\":4988:5390   */\n      jump\n        /* \"contracts/veWVLT.sol\":11882:11956  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":11992:12009  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"contracts/veWVLT.sol\":11992:12001  _balances */\n      0x00\n        /* \"contracts/veWVLT.sol\":11992:12009  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/veWVLT.sol\":12012:12034  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"contracts/veWVLT.sol\":11992:12034  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/veWVLT.sol\":12056:12076  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/veWVLT.sol\":12056:12086  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"contracts/veWVLT.sol\":12028:12034  amount */\n      dup5\n      swap3\n        /* \"contracts/veWVLT.sol\":11992:12001  _balances */\n      swap1\n        /* \"contracts/veWVLT.sol\":12056:12086  _balances[recipient] += amount */\n      tag_205\n      swap1\n        /* \"contracts/veWVLT.sol\":12028:12034  amount */\n      dup5\n      swap1\n        /* \"contracts/veWVLT.sol\":12056:12086  _balances[recipient] += amount */\n      tag_120\n      jump\t// in\n    tag_205:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/veWVLT.sol\":12121:12130  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":12104:12139  Transfer(sender, recipient, amount) */\n      and\n        /* \"contracts/veWVLT.sol\":12113:12119  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":12104:12139  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/veWVLT.sol\":12132:12138  amount */\n      dup5\n        /* \"contracts/veWVLT.sol\":12104:12139  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_206\n      swap2\n        /* \"#utility.yul\":7929:7954   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7917:7919   */\n      0x20\n        /* \"#utility.yul\":7902:7920   */\n      add\n      swap1\n        /* \"#utility.yul\":7783:7960   */\n      jump\n        /* \"contracts/veWVLT.sol\":12104:12139  Transfer(sender, recipient, amount) */\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/veWVLT.sol\":11594:12206  {\r... */\n      pop\n        /* \"contracts/veWVLT.sol\":11473:12206  function _transfer(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/veWVLT.sol\":13225:13816  function _burn(address account, uint256 amount) internal virtual {\r... */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":13309:13330  account != address(0) */\n      dup3\n      and\n        /* \"contracts/veWVLT.sol\":13301:13368  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6006:6008   */\n      0x20\n        /* \"contracts/veWVLT.sol\":13301:13368  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5988:6009   */\n      mstore\n        /* \"#utility.yul\":6045:6047   */\n      0x21\n        /* \"#utility.yul\":6025:6043   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6018:6048   */\n      mstore\n        /* \"#utility.yul\":6084:6118   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":6064:6082   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6057:6119   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":6135:6153   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6128:6159   */\n      mstore\n        /* \"#utility.yul\":6176:6195   */\n      0x84\n      add\n        /* \"contracts/veWVLT.sol\":13301:13368  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_110\n        /* \"#utility.yul\":5804:6201   */\n      jump\n        /* \"contracts/veWVLT.sol\":13301:13368  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":13468:13486  _balances[account] */\n      dup3\n      and\n        /* \"contracts/veWVLT.sol\":13443:13465  uint256 accountBalance */\n      0x00\n        /* \"contracts/veWVLT.sol\":13468:13486  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/veWVLT.sol\":13505:13529  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/veWVLT.sol\":13497:13568  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"contracts/veWVLT.sol\":13497:13568  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4366:4387   */\n      mstore\n        /* \"#utility.yul\":4423:4425   */\n      0x22\n        /* \"#utility.yul\":4403:4421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4396:4426   */\n      mstore\n        /* \"#utility.yul\":4462:4496   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":4442:4460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4435:4497   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":4513:4531   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4506:4538   */\n      mstore\n        /* \"#utility.yul\":4555:4574   */\n      0x84\n      add\n        /* \"contracts/veWVLT.sol\":13497:13568  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_110\n        /* \"#utility.yul\":4182:4580   */\n      jump\n        /* \"contracts/veWVLT.sol\":13497:13568  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_214:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":13604:13622  _balances[account] */\n      dup4\n      and\n        /* \"contracts/veWVLT.sol\":13604:13613  _balances */\n      0x00\n        /* \"contracts/veWVLT.sol\":13604:13622  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/veWVLT.sol\":13625:13648  accountBalance - amount */\n      dup4\n      dup4\n      sub\n        /* \"contracts/veWVLT.sol\":13604:13648  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/veWVLT.sol\":13670:13682  _totalSupply */\n      0x02\n        /* \"contracts/veWVLT.sol\":13670:13692  _totalSupply -= amount */\n      dup1\n      sload\n        /* \"contracts/veWVLT.sol\":13642:13648  amount */\n      dup5\n      swap3\n        /* \"contracts/veWVLT.sol\":13604:13613  _balances */\n      swap1\n        /* \"contracts/veWVLT.sol\":13670:13692  _totalSupply -= amount */\n      tag_217\n      swap1\n        /* \"contracts/veWVLT.sol\":13642:13648  amount */\n      dup5\n      swap1\n        /* \"contracts/veWVLT.sol\":13670:13692  _totalSupply -= amount */\n      tag_218\n      jump\t// in\n    tag_217:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/veWVLT.sol\":13710:13747  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":7929:7954   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/veWVLT.sol\":13736:13737  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":13710:13747  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":7917:7919   */\n      0x20\n        /* \"#utility.yul\":7902:7920   */\n      add\n        /* \"contracts/veWVLT.sol\":13710:13747  Transfer(account, address(0), amount) */\n      tag_192\n        /* \"#utility.yul\":7783:7960   */\n      jump\n        /* \"contracts/veWVLT.sol\":12493:12892  function _mint(address account, uint256 amount) internal virtual {\r... */\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":12577:12598  account != address(0) */\n      dup3\n      and\n        /* \"contracts/veWVLT.sol\":12569:12634  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7625:7627   */\n      0x20\n        /* \"contracts/veWVLT.sol\":12569:12634  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7607:7628   */\n      mstore\n        /* \"#utility.yul\":7664:7666   */\n      0x1f\n        /* \"#utility.yul\":7644:7662   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7637:7667   */\n      mstore\n        /* \"#utility.yul\":7703:7736   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":7683:7701   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7676:7737   */\n      mstore\n        /* \"#utility.yul\":7754:7772   */\n      0x64\n      add\n        /* \"contracts/veWVLT.sol\":12569:12634  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_110\n        /* \"#utility.yul\":7423:7778   */\n      jump\n        /* \"contracts/veWVLT.sol\":12569:12634  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_222:\n        /* \"contracts/veWVLT.sol\":12725:12731  amount */\n      dup1\n        /* \"contracts/veWVLT.sol\":12709:12721  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/veWVLT.sol\":12709:12731  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_226\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_226:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":12742:12760  _balances[account] */\n      dup3\n      and\n        /* \"contracts/veWVLT.sol\":12742:12751  _balances */\n      0x00\n        /* \"contracts/veWVLT.sol\":12742:12760  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/veWVLT.sol\":12742:12770  _balances[account] += amount */\n      dup1\n      sload\n        /* \"contracts/veWVLT.sol\":12764:12770  amount */\n      dup4\n      swap3\n        /* \"contracts/veWVLT.sol\":12742:12751  _balances */\n      swap1\n        /* \"contracts/veWVLT.sol\":12742:12770  _balances[account] += amount */\n      tag_227\n      swap1\n        /* \"contracts/veWVLT.sol\":12764:12770  amount */\n      dup5\n      swap1\n        /* \"contracts/veWVLT.sol\":12742:12770  _balances[account] += amount */\n      tag_120\n      jump\t// in\n    tag_227:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/veWVLT.sol\":12786:12823  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":7929:7954   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/veWVLT.sol\":12786:12823  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"contracts/veWVLT.sol\":12803:12804  0 */\n      0x00\n      swap1\n        /* \"contracts/veWVLT.sol\":12786:12823  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":7917:7919   */\n      0x20\n        /* \"#utility.yul\":7902:7920   */\n      add\n        /* \"contracts/veWVLT.sol\":12786:12823  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/veWVLT.sol\":12493:12892  function _mint(address account, uint256 amount) internal virtual {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_233:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_235:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_61:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_237:\n        /* \"#utility.yul\":343:372   */\n      tag_238\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_233\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_80:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_240:\n        /* \"#utility.yul\":551:580   */\n      tag_241\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_233\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_242\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_233\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_45:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_244:\n        /* \"#utility.yul\":833:862   */\n      tag_245\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_233\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_246\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_233\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_27:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_248:\n        /* \"#utility.yul\":1149:1178   */\n      tag_249\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_233\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1240:1517   */\n    tag_102:\n        /* \"#utility.yul\":1307:1313   */\n      0x00\n        /* \"#utility.yul\":1360:1362   */\n      0x20\n        /* \"#utility.yul\":1348:1357   */\n      dup3\n        /* \"#utility.yul\":1339:1346   */\n      dup5\n        /* \"#utility.yul\":1335:1358   */\n      sub\n        /* \"#utility.yul\":1331:1363   */\n      slt\n        /* \"#utility.yul\":1328:1380   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":1376:1377   */\n      0x00\n        /* \"#utility.yul\":1373:1374   */\n      dup1\n        /* \"#utility.yul\":1366:1378   */\n      revert\n        /* \"#utility.yul\":1328:1380   */\n    tag_251:\n        /* \"#utility.yul\":1408:1417   */\n      dup2\n        /* \"#utility.yul\":1402:1418   */\n      mload\n        /* \"#utility.yul\":1461:1466   */\n      dup1\n        /* \"#utility.yul\":1454:1467   */\n      iszero\n        /* \"#utility.yul\":1447:1468   */\n      iszero\n        /* \"#utility.yul\":1440:1445   */\n      dup2\n        /* \"#utility.yul\":1437:1469   */\n      eq\n        /* \"#utility.yul\":1427:1487   */\n      tag_238\n      jumpi\n        /* \"#utility.yul\":1483:1484   */\n      0x00\n        /* \"#utility.yul\":1480:1481   */\n      dup1\n        /* \"#utility.yul\":1473:1485   */\n      revert\n        /* \"#utility.yul\":1522:1702   */\n    tag_33:\n        /* \"#utility.yul\":1581:1587   */\n      0x00\n        /* \"#utility.yul\":1634:1636   */\n      0x20\n        /* \"#utility.yul\":1622:1631   */\n      dup3\n        /* \"#utility.yul\":1613:1620   */\n      dup5\n        /* \"#utility.yul\":1609:1632   */\n      sub\n        /* \"#utility.yul\":1605:1637   */\n      slt\n        /* \"#utility.yul\":1602:1654   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":1650:1651   */\n      0x00\n        /* \"#utility.yul\":1647:1648   */\n      dup1\n        /* \"#utility.yul\":1640:1652   */\n      revert\n        /* \"#utility.yul\":1602:1654   */\n    tag_254:\n      pop\n        /* \"#utility.yul\":1673:1696   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1522:1702   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1707:1891   */\n    tag_129:\n        /* \"#utility.yul\":1777:1783   */\n      0x00\n        /* \"#utility.yul\":1830:1832   */\n      0x20\n        /* \"#utility.yul\":1818:1827   */\n      dup3\n        /* \"#utility.yul\":1809:1816   */\n      dup5\n        /* \"#utility.yul\":1805:1828   */\n      sub\n        /* \"#utility.yul\":1801:1833   */\n      slt\n        /* \"#utility.yul\":1798:1850   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":1846:1847   */\n      0x00\n        /* \"#utility.yul\":1843:1844   */\n      dup1\n        /* \"#utility.yul\":1836:1848   */\n      revert\n        /* \"#utility.yul\":1798:1850   */\n    tag_256:\n      pop\n        /* \"#utility.yul\":1869:1885   */\n      mload\n      swap2\n        /* \"#utility.yul\":1707:1891   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3176:3773   */\n    tag_24:\n        /* \"#utility.yul\":3288:3292   */\n      0x00\n        /* \"#utility.yul\":3317:3319   */\n      0x20\n        /* \"#utility.yul\":3346:3348   */\n      dup1\n        /* \"#utility.yul\":3335:3344   */\n      dup4\n        /* \"#utility.yul\":3328:3349   */\n      mstore\n        /* \"#utility.yul\":3378:3384   */\n      dup4\n        /* \"#utility.yul\":3372:3385   */\n      mload\n        /* \"#utility.yul\":3421:3427   */\n      dup1\n        /* \"#utility.yul\":3416:3418   */\n      dup3\n        /* \"#utility.yul\":3405:3414   */\n      dup6\n        /* \"#utility.yul\":3401:3419   */\n      add\n        /* \"#utility.yul\":3394:3428   */\n      mstore\n        /* \"#utility.yul\":3446:3447   */\n      0x00\n        /* \"#utility.yul\":3456:3596   */\n    tag_263:\n        /* \"#utility.yul\":3470:3476   */\n      dup2\n        /* \"#utility.yul\":3467:3468   */\n      dup2\n        /* \"#utility.yul\":3464:3477   */\n      lt\n        /* \"#utility.yul\":3456:3596   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":3565:3579   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":3561:3584   */\n      dup4\n      add\n        /* \"#utility.yul\":3555:3585   */\n      mload\n        /* \"#utility.yul\":3531:3548   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":3550:3552   */\n      0x40\n        /* \"#utility.yul\":3527:3553   */\n      add\n        /* \"#utility.yul\":3520:3586   */\n      mstore\n        /* \"#utility.yul\":3485:3495   */\n      dup3\n      add\n        /* \"#utility.yul\":3456:3596   */\n      jump(tag_263)\n    tag_265:\n        /* \"#utility.yul\":3614:3620   */\n      dup2\n        /* \"#utility.yul\":3611:3612   */\n      dup2\n        /* \"#utility.yul\":3608:3621   */\n      gt\n        /* \"#utility.yul\":3605:3696   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":3684:3685   */\n      0x00\n        /* \"#utility.yul\":3679:3681   */\n      0x40\n        /* \"#utility.yul\":3670:3676   */\n      dup4\n        /* \"#utility.yul\":3659:3668   */\n      dup8\n        /* \"#utility.yul\":3655:3677   */\n      add\n        /* \"#utility.yul\":3651:3682   */\n      add\n        /* \"#utility.yul\":3644:3686   */\n      mstore\n        /* \"#utility.yul\":3605:3696   */\n    tag_266:\n      pop\n        /* \"#utility.yul\":3757:3759   */\n      0x1f\n        /* \"#utility.yul\":3736:3751   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3732:3761   */\n      and\n        /* \"#utility.yul\":3717:3762   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3764:3766   */\n      0x40\n        /* \"#utility.yul\":3713:3767   */\n      add\n      swap4\n        /* \"#utility.yul\":3176:3773   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8407:8535   */\n    tag_120:\n        /* \"#utility.yul\":8447:8450   */\n      0x00\n        /* \"#utility.yul\":8478:8479   */\n      dup3\n        /* \"#utility.yul\":8474:8480   */\n      not\n        /* \"#utility.yul\":8471:8472   */\n      dup3\n        /* \"#utility.yul\":8468:8481   */\n      gt\n        /* \"#utility.yul\":8465:8504   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":8484:8502   */\n      tag_282\n      tag_283\n      jump\t// in\n    tag_282:\n      pop\n        /* \"#utility.yul\":8520:8529   */\n      add\n      swap1\n        /* \"#utility.yul\":8407:8535   */\n      jump\t// out\n        /* \"#utility.yul\":8540:8757   */\n    tag_134:\n        /* \"#utility.yul\":8580:8581   */\n      0x00\n        /* \"#utility.yul\":8606:8607   */\n      dup3\n        /* \"#utility.yul\":8596:8728   */\n      tag_285\n      jumpi\n        /* \"#utility.yul\":8650:8660   */\n      0x4e487b71\n        /* \"#utility.yul\":8645:8648   */\n      0xe0\n        /* \"#utility.yul\":8641:8661   */\n      shl\n        /* \"#utility.yul\":8638:8639   */\n      0x00\n        /* \"#utility.yul\":8631:8662   */\n      mstore\n        /* \"#utility.yul\":8685:8689   */\n      0x12\n        /* \"#utility.yul\":8682:8683   */\n      0x04\n        /* \"#utility.yul\":8675:8690   */\n      mstore\n        /* \"#utility.yul\":8713:8717   */\n      0x24\n        /* \"#utility.yul\":8710:8711   */\n      0x00\n        /* \"#utility.yul\":8703:8718   */\n      revert\n        /* \"#utility.yul\":8596:8728   */\n    tag_285:\n      pop\n        /* \"#utility.yul\":8742:8751   */\n      div\n      swap1\n        /* \"#utility.yul\":8540:8757   */\n      jump\t// out\n        /* \"#utility.yul\":8762:8930   */\n    tag_132:\n        /* \"#utility.yul\":8802:8809   */\n      0x00\n        /* \"#utility.yul\":8868:8869   */\n      dup2\n        /* \"#utility.yul\":8864:8865   */\n      0x00\n        /* \"#utility.yul\":8860:8866   */\n      not\n        /* \"#utility.yul\":8856:8870   */\n      div\n        /* \"#utility.yul\":8853:8854   */\n      dup4\n        /* \"#utility.yul\":8850:8871   */\n      gt\n        /* \"#utility.yul\":8845:8846   */\n      dup3\n        /* \"#utility.yul\":8838:8847   */\n      iszero\n        /* \"#utility.yul\":8831:8848   */\n      iszero\n        /* \"#utility.yul\":8827:8872   */\n      and\n        /* \"#utility.yul\":8824:8895   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":8875:8893   */\n      tag_288\n      tag_283\n      jump\t// in\n    tag_288:\n      pop\n        /* \"#utility.yul\":8915:8924   */\n      mul\n      swap1\n        /* \"#utility.yul\":8762:8930   */\n      jump\t// out\n        /* \"#utility.yul\":8935:9060   */\n    tag_218:\n        /* \"#utility.yul\":8975:8979   */\n      0x00\n        /* \"#utility.yul\":9003:9004   */\n      dup3\n        /* \"#utility.yul\":9000:9001   */\n      dup3\n        /* \"#utility.yul\":8997:9005   */\n      lt\n        /* \"#utility.yul\":8994:9028   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":9008:9026   */\n      tag_291\n      tag_283\n      jump\t// in\n    tag_291:\n      pop\n        /* \"#utility.yul\":9045:9054   */\n      sub\n      swap1\n        /* \"#utility.yul\":8935:9060   */\n      jump\t// out\n        /* \"#utility.yul\":9065:9445   */\n    tag_85:\n        /* \"#utility.yul\":9144:9145   */\n      0x01\n        /* \"#utility.yul\":9140:9152   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":9187:9199   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":9208:9269   */\n      tag_293\n      jumpi\n        /* \"#utility.yul\":9262:9266   */\n      0x7f\n        /* \"#utility.yul\":9254:9260   */\n      dup3\n        /* \"#utility.yul\":9250:9267   */\n      and\n        /* \"#utility.yul\":9240:9267   */\n      swap2\n      pop\n        /* \"#utility.yul\":9208:9269   */\n    tag_293:\n        /* \"#utility.yul\":9315:9317   */\n      0x20\n        /* \"#utility.yul\":9307:9313   */\n      dup3\n        /* \"#utility.yul\":9304:9318   */\n      lt\n        /* \"#utility.yul\":9284:9302   */\n      dup2\n        /* \"#utility.yul\":9281:9319   */\n      eq\n        /* \"#utility.yul\":9278:9439   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":9361:9371   */\n      0x4e487b71\n        /* \"#utility.yul\":9356:9359   */\n      0xe0\n        /* \"#utility.yul\":9352:9372   */\n      shl\n        /* \"#utility.yul\":9349:9350   */\n      0x00\n        /* \"#utility.yul\":9342:9373   */\n      mstore\n        /* \"#utility.yul\":9396:9400   */\n      0x22\n        /* \"#utility.yul\":9393:9394   */\n      0x04\n        /* \"#utility.yul\":9386:9401   */\n      mstore\n        /* \"#utility.yul\":9424:9428   */\n      0x24\n        /* \"#utility.yul\":9421:9422   */\n      0x00\n        /* \"#utility.yul\":9414:9429   */\n      revert\n        /* \"#utility.yul\":9278:9439   */\n    tag_294:\n      pop\n        /* \"#utility.yul\":9065:9445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9450:9577   */\n    tag_283:\n        /* \"#utility.yul\":9511:9521   */\n      0x4e487b71\n        /* \"#utility.yul\":9506:9509   */\n      0xe0\n        /* \"#utility.yul\":9502:9522   */\n      shl\n        /* \"#utility.yul\":9499:9500   */\n      0x00\n        /* \"#utility.yul\":9492:9523   */\n      mstore\n        /* \"#utility.yul\":9542:9546   */\n      0x11\n        /* \"#utility.yul\":9539:9540   */\n      0x04\n        /* \"#utility.yul\":9532:9547   */\n      mstore\n        /* \"#utility.yul\":9566:9570   */\n      0x24\n        /* \"#utility.yul\":9563:9564   */\n      0x00\n        /* \"#utility.yul\":9556:9571   */\n      revert\n\n    auxdata: 0xa26469706673582212200d336c994b1aa7951747d58adb7b21eb5e9534086f482f83c1cb85c1b8f7408364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1223": {
									"entryPoint": null,
									"id": 1223,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_contract$_IERC20_$77_fromMemory": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:704:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "108:209:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "154:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "163:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "166:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "156:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "156:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "156:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "129:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "138:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "125:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "150:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "121:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:32:1"
															},
															"nodeType": "YulIf",
															"src": "118:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "179:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "198:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "192:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "192:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "183:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "271:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "280:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "283:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "273:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "273:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "273:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "230:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "241:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "256:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "261:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "252:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "252:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "265:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "248:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "248:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "237:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "237:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "227:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "227:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "220:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "220:50:1"
															},
															"nodeType": "YulIf",
															"src": "217:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "296:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "306:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "296:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$77_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "74:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "85:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "97:6:1",
														"type": ""
													}
												],
												"src": "14:303:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "377:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "387:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "404:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "397:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "397:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "387:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "418:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "448:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "454:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "444:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "444:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "422:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "495:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "497:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "511:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "519:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "507:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "507:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "497:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "475:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "468:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "468:26:1"
															},
															"nodeType": "YulIf",
															"src": "465:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "585:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "606:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "613:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "618:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "609:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "609:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "599:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "599:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "599:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "650:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "653:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "643:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "643:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "643:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "678:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "681:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "671:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "671:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "671:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "541:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "564:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "572:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "561:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "561:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "538:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "538:38:1"
															},
															"nodeType": "YulIf",
															"src": "535:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "357:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "366:6:1",
														"type": ""
													}
												],
												"src": "322:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_IERC20_$77_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200121a3803806200121a83398101604081905262000034916200017d565b604080518082018252601881527f566f74696e67457363726f776564576176654c656e67746800000000000000006020808301918252835180850190945260068452651d9955d5931560d21b9084015281519192916200009791600391620000d7565b508051620000ad906004906020840190620000d7565b5050600580546001600160a01b0319166001600160a01b03939093169290921790915550620001ec565b828054620000e590620001af565b90600052602060002090601f01602090048101928262000109576000855562000154565b82601f106200012457805160ff191683800117855562000154565b8280016001018555821562000154579182015b828111156200015457825182559160200191906001019062000137565b506200016292915062000166565b5090565b5b8082111562000162576000815560010162000167565b6000602082840312156200019057600080fd5b81516001600160a01b0381168114620001a857600080fd5b9392505050565b600181811c90821680620001c457607f821691505b60208210811415620001e657634e487b7160e01b600052602260045260246000fd5b50919050565b61101e80620001fc6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80633950935111610097578063a457c2d711610066578063a457c2d714610206578063a59f3e0c14610219578063a9059cbb1461022c578063dd62ed3e1461023f57600080fd5b806339509351146101af57806367dfd4c9146101c257806370a08231146101d557806395d89b41146101fe57600080fd5b806318160ddd116100d357806318160ddd1461015057806319d152fa1461016257806323b872dd1461018d578063313ce567146101a057600080fd5b806306fdde03146100fa578063095ea7b314610118578063139e41e41461013b575b600080fd5b610102610278565b60405161010f9190610ed2565b60405180910390f35b61012b610126366004610e54565b61030a565b604051901515815260200161010f565b61014e610149366004610ea0565b610320565b005b6002545b60405190815260200161010f565b600554610175906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b61012b61019b366004610e18565b6103e1565b6040516012815260200161010f565b61012b6101bd366004610e54565b610490565b61014e6101d0366004610ea0565b6104cc565b6101546101e3366004610dc3565b6001600160a01b031660009081526020819052604090205490565b610102610648565b61012b610214366004610e54565b610657565b61014e610227366004610ea0565b6106f0565b61012b61023a366004610e54565b610881565b61015461024d366004610de5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461028790610f97565b80601f01602080910402602001604051908101604052809291908181526020018280546102b390610f97565b80156103005780601f106102d557610100808354040283529160200191610300565b820191906000526020600020905b8154815290600101906020018083116102e357829003601f168201915b5050505050905090565b600061031733848461088e565b50600192915050565b6005546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561037257600080fd5b505af1158015610386573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103aa9190610e7e565b506040518181527f8345132cbbbde83001e783cdfdd5190dedc863ae82cae7abe302b22322a602749060200160405180910390a150565b60006103ee8484846109b3565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104785760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610485853385840361088e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103179185906104c7908690610f27565b61088e565b8015610645576005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561051657600080fd5b505afa15801561052a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054e9190610eb9565b9050600061055b60025490565b905060008161056a8486610f61565b6105749190610f3f565b90506105803385610b82565b60055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156105cc57600080fd5b505af11580156105e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106049190610e7e565b50604080518281526020810186905233917f0f0f7f8153c6d63a5696720d4cc434e56bb5ac1cf8c791ed9c180defb6e9215391015b60405180910390a25050505b50565b60606004805461028790610f97565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156106d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161046f565b6106e6338585840361088e565b5060019392505050565b8015610645576005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561073a57600080fd5b505afa15801561074e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107729190610eb9565b9050600061077f60025490565b6005546040516323b872dd60e01b8152336004820152306024820152604481018690529192506001600160a01b0316906323b872dd90606401602060405180830381600087803b1580156107d257600080fd5b505af11580156107e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080a9190610e7e565b506000811580610818575082155b1561082457508261083f565b6000836108318487610f61565b61083b9190610f3f565b9150505b6108493382610cc8565b604080518581526020810183905233917f5087fbec8bdd9b358f62d89babb5f4dd44f8576230a9520c90e3407d6f4dd1fb9101610639565b60006103173384846109b3565b6001600160a01b0383166108f05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161046f565b6001600160a01b0382166109515760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161046f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610a175760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161046f565b6001600160a01b038216610a795760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161046f565b6001600160a01b03831660009081526020819052604090205481811015610af15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161046f565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610b28908490610f27565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b7491815260200190565b60405180910390a350505050565b6001600160a01b038216610be25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161046f565b6001600160a01b03821660009081526020819052604090205481811015610c565760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161046f565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610c85908490610f80565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016109a6565b6001600160a01b038216610d1e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161046f565b8060026000828254610d309190610f27565b90915550506001600160a01b03821660009081526020819052604081208054839290610d5d908490610f27565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b0381168114610dbe57600080fd5b919050565b600060208284031215610dd557600080fd5b610dde82610da7565b9392505050565b60008060408385031215610df857600080fd5b610e0183610da7565b9150610e0f60208401610da7565b90509250929050565b600080600060608486031215610e2d57600080fd5b610e3684610da7565b9250610e4460208501610da7565b9150604084013590509250925092565b60008060408385031215610e6757600080fd5b610e7083610da7565b946020939093013593505050565b600060208284031215610e9057600080fd5b81518015158114610dde57600080fd5b600060208284031215610eb257600080fd5b5035919050565b600060208284031215610ecb57600080fd5b5051919050565b600060208083528351808285015260005b81811015610eff57858101830151858201604001528201610ee3565b81811115610f11576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610f3a57610f3a610fd2565b500190565b600082610f5c57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610f7b57610f7b610fd2565b500290565b600082821015610f9257610f92610fd2565b500390565b600181811c90821680610fab57607f821691505b60208210811415610fcc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212200d336c994b1aa7951747d58adb7b21eb5e9534086f482f83c1cb85c1b8f7408364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x121A CODESIZE SUB DUP1 PUSH3 0x121A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x17D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH32 0x566F74696E67457363726F776564576176654C656E6774680000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x6 DUP5 MSTORE PUSH6 0x1D9955D59315 PUSH1 0xD2 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x97 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0xD7 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0xAD SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xD7 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE POP PUSH3 0x1EC JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xE5 SWAP1 PUSH3 0x1AF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x109 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x154 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x124 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x154 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x154 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x154 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x137 JUMP JUMPDEST POP PUSH3 0x162 SWAP3 SWAP2 POP PUSH3 0x166 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x162 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x167 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1C4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1E6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x101E DUP1 PUSH3 0x1FC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xA59F3E0C EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x67DFD4C9 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x19D152FA EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x139E41E4 EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x14E PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0x320 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x175 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x12B PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xE18 JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x12B PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x490 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x154 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x287 SWAP1 PUSH2 0xF97 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B3 SWAP1 PUSH2 0xF97 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x300 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x300 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 CALLER DUP5 DUP5 PUSH2 0x88E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x386 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0xE7E JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x8345132CBBBDE83001E783CDFDD5190DEDC863AE82CAE7ABE302B22322A60274 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EE DUP5 DUP5 DUP5 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x485 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x88E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x317 SWAP2 DUP6 SWAP1 PUSH2 0x4C7 SWAP1 DUP7 SWAP1 PUSH2 0xF27 JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x645 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x52A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x54E SWAP2 SWAP1 PUSH2 0xEB9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x55B PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x56A DUP5 DUP7 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x574 SWAP2 SWAP1 PUSH2 0xF3F JUMP JUMPDEST SWAP1 POP PUSH2 0x580 CALLER DUP6 PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x604 SWAP2 SWAP1 PUSH2 0xE7E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xF0F7F8153C6D63A5696720D4CC434E56BB5AC1CF8C791ED9C180DEFB6E92153 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x287 SWAP1 PUSH2 0xF97 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH2 0x6E6 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x88E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x645 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x772 SWAP2 SWAP1 PUSH2 0xEB9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x77F PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x80A SWAP2 SWAP1 PUSH2 0xE7E JUMP JUMPDEST POP PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x818 JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x824 JUMPI POP DUP3 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x831 DUP5 DUP8 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x83B SWAP2 SWAP1 PUSH2 0xF3F JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH2 0x849 CALLER DUP3 PUSH2 0xCC8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x5087FBEC8BDD9B358F62D89BABB5F4DD44F8576230A9520C90E3407D6F4DD1FB SWAP2 ADD PUSH2 0x639 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 CALLER DUP5 DUP5 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x951 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xAF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xB28 SWAP1 DUP5 SWAP1 PUSH2 0xF27 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xB74 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xC56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xC85 SWAP1 DUP5 SWAP1 PUSH2 0xF80 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD30 SWAP2 SWAP1 PUSH2 0xF27 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xD5D SWAP1 DUP5 SWAP1 PUSH2 0xF27 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDDE DUP3 PUSH2 0xDA7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE01 DUP4 PUSH2 0xDA7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE0F PUSH1 0x20 DUP5 ADD PUSH2 0xDA7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE36 DUP5 PUSH2 0xDA7 JUMP JUMPDEST SWAP3 POP PUSH2 0xE44 PUSH1 0x20 DUP6 ADD PUSH2 0xDA7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE70 DUP4 PUSH2 0xDA7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEFF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xEE3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xF11 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF3A JUMPI PUSH2 0xF3A PUSH2 0xFD2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF5C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF7B JUMPI PUSH2 0xF7B PUSH2 0xFD2 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF92 JUMPI PUSH2 0xF92 PUSH2 0xFD2 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFAB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xFCC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD CALLER PUSH13 0x994B1AA7951747D58ADB7B21EB 0x5E SWAP6 CALLVALUE ADDMOD PUSH16 0x482F83C1CB85C1B8F7408364736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "28008:2276:0:-:0;;;28435:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5947:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5947:116:0;;;;6014:13;;5947:116;;;6014:13;;:5;;:13;:::i;:::-;-1:-1:-1;6038:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;28480:12:0;:28;;-1:-1:-1;;;;;;28480:28:0;-1:-1:-1;;;;;28480:28:0;;;;;;;;;;;-1:-1:-1;28008:2276:0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28008:2276:0;;;-1:-1:-1;28008:2276:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:303:1;97:6;150:2;138:9;129:7;125:23;121:32;118:52;;;166:1;163;156:12;118:52;192:16;;-1:-1:-1;;;;;237:31:1;;227:42;;217:70;;283:1;280;273:12;217:70;306:5;14:303;-1:-1:-1;;;14:303:1:o;322:380::-;401:1;397:12;;;;444;;;465:61;;519:4;511:6;507:17;497:27;;465:61;572:2;564:6;561:14;541:18;538:38;535:161;;;618:10;613:3;609:20;606:1;599:31;653:4;650:1;643:15;681:4;678:1;671:15;535:161;;322:380;;;:::o;:::-;28008:2276:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_662": {
									"entryPoint": null,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_640": {
									"entryPoint": 2190,
									"id": 640,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_651": {
									"entryPoint": null,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_595": {
									"entryPoint": 2946,
									"id": 595,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_523": {
									"entryPoint": 3272,
									"id": 523,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": null,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_467": {
									"entryPoint": 2483,
									"id": 467,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_255": {
									"entryPoint": null,
									"id": 255,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_276": {
									"entryPoint": 778,
									"id": 276,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_216": {
									"entryPoint": null,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_192": {
									"entryPoint": null,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_390": {
									"entryPoint": 1623,
									"id": 390,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@enter_1304": {
									"entryPoint": 1776,
									"id": 1304,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@increaseAllowance_351": {
									"entryPoint": 1168,
									"id": 351,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@leave_1360": {
									"entryPoint": 1228,
									"id": 1360,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_172": {
									"entryPoint": 632,
									"id": 172,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@shareRevenue_1382": {
									"entryPoint": 800,
									"id": 1382,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_182": {
									"entryPoint": 1608,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_324": {
									"entryPoint": 993,
									"id": 324,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_237": {
									"entryPoint": 2177,
									"id": 237,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@vestingToken_1192": {
									"entryPoint": null,
									"id": 1192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4050,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9579:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:1"
															},
															"nodeType": "YulIf",
															"src": "480:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:1",
														"type": ""
													}
												],
												"src": "383:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:1"
															},
															"nodeType": "YulIf",
															"src": "762:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:1",
														"type": ""
													}
												],
												"src": "648:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:1"
															},
															"nodeType": "YulIf",
															"src": "1078:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:1",
														"type": ""
													}
												],
												"src": "981:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1318:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1364:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1373:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1376:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1366:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1366:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1366:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1339:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1348:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1335:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1335:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1360:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1331:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:32:1"
															},
															"nodeType": "YulIf",
															"src": "1328:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1389:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1408:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1402:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1402:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1393:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1471:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1480:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1483:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1473:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1473:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1473:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1440:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1461:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1454:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1454:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1447:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1447:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1437:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1437:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1430:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1430:40:1"
															},
															"nodeType": "YulIf",
															"src": "1427:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1496:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1506:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1496:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1284:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1295:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1307:6:1",
														"type": ""
													}
												],
												"src": "1240:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1592:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1638:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1647:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1650:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1640:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1640:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1640:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1613:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1622:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1609:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1609:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1634:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1605:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1605:32:1"
															},
															"nodeType": "YulIf",
															"src": "1602:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1663:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1673:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1663:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1558:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1569:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1581:6:1",
														"type": ""
													}
												],
												"src": "1522:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1788:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1834:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1843:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1846:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1836:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1836:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1836:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1809:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1818:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1805:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1805:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1830:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1801:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1801:32:1"
															},
															"nodeType": "YulIf",
															"src": "1798:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1859:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1875:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1869:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1869:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1754:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1765:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1777:6:1",
														"type": ""
													}
												],
												"src": "1707:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1997:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2007:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2019:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2030:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2015:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2015:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2007:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2049:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2064:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2080:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2085:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2076:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2076:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2089:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2072:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2072:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2060:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2060:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2042:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1966:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1977:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1988:4:1",
														"type": ""
													}
												],
												"src": "1896:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2261:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2271:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2283:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2294:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2279:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2279:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2271:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2306:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2324:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2329:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2320:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2320:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2333:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2316:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2316:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2310:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2351:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2366:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2374:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2362:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2362:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2344:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2344:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2344:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2398:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2409:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2394:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2394:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2418:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2426:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2414:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2414:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2387:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2387:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2387:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2450:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2461:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2446:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2446:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2466:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2439:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2439:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2439:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2214:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2225:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2233:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2241:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2252:4:1",
														"type": ""
													}
												],
												"src": "2104:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2613:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2623:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2635:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2646:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2631:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2631:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2623:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2665:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2680:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2696:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2701:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2692:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2692:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2705:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2688:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2688:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2676:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2676:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2658:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2658:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2658:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2729:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2740:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2745:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2718:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2718:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2718:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2574:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2585:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2593:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2604:4:1",
														"type": ""
													}
												],
												"src": "2484:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2858:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2868:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2880:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2891:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2876:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2868:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2910:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2935:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2928:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2928:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2921:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2921:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2903:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2903:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2903:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2827:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2838:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2849:4:1",
														"type": ""
													}
												],
												"src": "2763:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3069:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3079:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3091:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3102:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3087:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3087:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3079:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3121:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3136:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3152:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3157:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3148:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3148:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3161:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3144:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3144:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3132:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3132:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3114:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3114:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3038:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3049:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3060:4:1",
														"type": ""
													}
												],
												"src": "2955:216:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3297:476:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3307:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3317:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3311:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3335:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3346:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3328:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3328:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3328:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3358:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3378:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3372:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3372:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3362:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3405:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3416:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3401:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3401:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3421:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3394:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3394:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3394:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3437:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3446:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3441:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3506:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "3535:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3546:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3531:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3531:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3550:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3527:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3527:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "3569:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "3577:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "3565:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3565:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "3581:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3561:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3561:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3555:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3555:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3520:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3520:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3520:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3467:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3470:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3464:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3464:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3478:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3480:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3489:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3492:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3485:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3485:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3480:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3460:3:1",
																"statements": []
															},
															"src": "3456:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3630:66:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "3659:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "3670:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3655:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3655:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3679:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3651:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3651:31:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3684:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3644:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3644:42:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3644:42:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3611:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3614:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3608:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3608:13:1"
															},
															"nodeType": "YulIf",
															"src": "3605:91:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3705:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3721:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3740:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3748:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3736:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3736:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3757:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3753:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3753:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3732:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3732:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3717:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3717:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3764:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3713:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3713:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3705:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3288:4:1",
														"type": ""
													}
												],
												"src": "3176:597:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3952:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3969:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3980:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3962:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3962:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3962:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4014:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3999:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4019:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3992:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3992:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3992:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4042:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4053:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4038:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4038:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4058:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4031:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4031:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4031:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4113:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4124:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4109:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4109:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4129:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4102:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4102:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4102:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4144:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4156:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4167:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3929:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3943:4:1",
														"type": ""
													}
												],
												"src": "3778:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4356:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4373:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4366:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4366:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4396:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:1"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4462:34:1",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4517:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4528:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4513:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4513:18:1"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4533:4:1",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4506:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4506:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4547:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4559:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4570:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4555:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4555:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4547:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4333:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4347:4:1",
														"type": ""
													}
												],
												"src": "4182:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4759:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4776:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4787:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4769:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4769:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4769:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4810:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4821:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4806:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4806:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4826:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4799:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4799:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4799:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4849:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4860:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4845:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4845:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4865:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4838:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4838:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4838:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4920:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4931:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4916:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4916:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4936:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4909:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4909:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4909:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4950:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4962:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4973:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4958:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4958:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4950:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4736:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4750:4:1",
														"type": ""
													}
												],
												"src": "4585:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5162:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5179:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5190:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5172:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5172:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5172:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5213:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5224:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5209:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5209:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5229:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5202:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5202:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5202:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5252:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5263:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5248:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5248:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5268:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5241:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5241:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5241:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5323:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5334:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5319:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5319:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5339:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5312:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5312:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5312:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5357:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5369:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5380:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5365:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5365:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5357:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5139:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5153:4:1",
														"type": ""
													}
												],
												"src": "4988:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5569:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5586:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5597:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5579:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5579:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5579:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5620:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5631:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5616:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5616:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5636:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5609:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5609:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5609:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5659:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5670:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5655:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5655:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5675:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5648:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5648:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5648:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5730:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5741:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5726:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5726:18:1"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5746:10:1",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5719:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5719:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5719:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5766:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5778:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5789:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5774:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5774:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5766:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5546:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5560:4:1",
														"type": ""
													}
												],
												"src": "5395:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5978:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5995:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6006:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5988:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5988:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5988:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6029:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6040:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6025:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6025:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6045:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6018:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6018:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6018:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6068:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6079:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6064:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6064:18:1"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6084:34:1",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6057:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6057:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6057:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6139:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6150:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6135:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6135:18:1"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6155:3:1",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6128:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6128:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6128:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6168:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6180:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6191:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6176:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6176:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6168:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5955:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5969:4:1",
														"type": ""
													}
												],
												"src": "5804:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6380:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6397:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6408:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6390:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6390:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6390:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6431:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6442:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6427:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6427:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6447:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6420:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6420:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6420:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6470:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6481:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6466:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6466:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6486:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6459:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6459:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6459:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6541:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6552:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6537:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6537:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6557:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6530:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6530:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6530:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6574:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6586:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6597:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6582:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6582:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6574:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6357:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6371:4:1",
														"type": ""
													}
												],
												"src": "6206:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6786:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6803:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6814:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6796:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6796:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6796:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6837:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6848:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6833:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6833:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6853:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6826:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6826:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6826:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6876:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6887:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6872:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6872:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6892:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6865:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6865:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6865:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6947:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6958:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6943:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6943:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6963:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6936:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6936:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6936:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6979:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6991:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7002:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6987:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6987:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6979:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6763:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6777:4:1",
														"type": ""
													}
												],
												"src": "6612:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7191:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7208:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7219:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7201:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7201:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7201:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7242:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7253:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7238:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7238:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7258:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7231:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7231:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7231:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7281:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7292:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7277:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7277:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7297:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7270:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7270:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7270:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7352:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7363:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7348:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7368:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7341:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7341:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7341:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7385:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7397:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7408:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7393:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7393:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7385:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7168:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7182:4:1",
														"type": ""
													}
												],
												"src": "7017:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7597:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7614:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7625:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7607:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7607:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7607:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7648:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7659:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7644:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7644:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7664:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7637:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7637:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7637:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7687:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7698:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7683:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7683:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7703:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7676:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7676:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7676:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7746:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7758:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7769:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7754:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7754:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7746:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7574:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7588:4:1",
														"type": ""
													}
												],
												"src": "7423:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7884:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7894:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7906:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7917:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7902:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7902:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7894:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7936:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7947:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7929:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7929:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7929:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7853:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7864:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7875:4:1",
														"type": ""
													}
												],
												"src": "7783:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8094:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8104:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8116:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8127:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8112:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8112:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8104:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8146:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8157:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8139:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8139:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8139:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8184:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8195:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8180:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8180:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8200:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8173:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8173:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8173:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8055:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8066:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8074:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8085:4:1",
														"type": ""
													}
												],
												"src": "7965:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8315:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8325:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8337:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8348:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8333:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8333:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8325:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8367:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8382:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8390:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8378:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8378:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8360:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8360:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8360:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8295:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8306:4:1",
														"type": ""
													}
												],
												"src": "8218:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8455:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8482:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8484:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8484:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8484:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8471:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8478:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8474:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8474:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8468:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8468:13:1"
															},
															"nodeType": "YulIf",
															"src": "8465:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8513:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8524:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8527:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8520:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8520:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8513:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8438:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8441:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8447:3:1",
														"type": ""
													}
												],
												"src": "8407:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8586:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8617:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8638:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8645:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8650:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8641:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8641:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8631:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8631:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8631:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8682:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8685:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8675:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8675:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8675:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8710:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8713:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8703:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8703:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8703:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8606:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8599:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8599:9:1"
															},
															"nodeType": "YulIf",
															"src": "8596:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8737:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8746:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8749:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8742:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8742:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8737:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8571:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8574:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8580:1:1",
														"type": ""
													}
												],
												"src": "8540:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8814:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8873:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8875:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8875:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8875:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8845:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8838:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8838:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8831:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8831:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8853:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8864:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "8860:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8860:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8868:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "8856:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8856:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8850:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8850:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8827:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8827:45:1"
															},
															"nodeType": "YulIf",
															"src": "8824:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8904:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8919:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8922:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8915:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8915:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8904:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8793:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8796:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8802:7:1",
														"type": ""
													}
												],
												"src": "8762:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8984:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9006:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9008:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9008:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9008:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9000:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9003:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8997:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8997:8:1"
															},
															"nodeType": "YulIf",
															"src": "8994:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9037:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9049:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9052:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9045:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9045:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9037:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8966:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8969:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8975:4:1",
														"type": ""
													}
												],
												"src": "8935:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9120:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9130:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9144:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9147:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "9140:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9140:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9130:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9161:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9191:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9197:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9187:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9187:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "9165:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9238:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9240:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "9254:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9262:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "9250:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9250:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9240:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9218:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9211:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9211:26:1"
															},
															"nodeType": "YulIf",
															"src": "9208:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9328:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9349:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9356:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9361:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9352:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9352:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9342:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9342:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9342:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9393:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9396:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9386:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9386:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9386:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9421:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9424:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9414:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9414:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9414:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9284:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9307:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9315:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9304:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9304:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9281:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9281:38:1"
															},
															"nodeType": "YulIf",
															"src": "9278:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9100:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9109:6:1",
														"type": ""
													}
												],
												"src": "9065:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9482:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9499:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9506:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9511:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9502:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9502:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9492:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9492:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9492:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9539:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9542:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9532:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9532:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9532:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9563:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9566:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9556:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9556:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9556:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9450:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xA59F3E0C EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x67DFD4C9 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x19D152FA EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x139E41E4 EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xED2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x14E PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0x320 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x175 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x12B PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xE18 JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0x12B PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x490 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x154 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0xDE5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x287 SWAP1 PUSH2 0xF97 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B3 SWAP1 PUSH2 0xF97 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x300 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x300 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 CALLER DUP5 DUP5 PUSH2 0x88E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x386 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0xE7E JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x8345132CBBBDE83001E783CDFDD5190DEDC863AE82CAE7ABE302B22322A60274 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EE DUP5 DUP5 DUP5 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x485 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x88E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x317 SWAP2 DUP6 SWAP1 PUSH2 0x4C7 SWAP1 DUP7 SWAP1 PUSH2 0xF27 JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x645 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x52A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x54E SWAP2 SWAP1 PUSH2 0xEB9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x55B PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x56A DUP5 DUP7 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x574 SWAP2 SWAP1 PUSH2 0xF3F JUMP JUMPDEST SWAP1 POP PUSH2 0x580 CALLER DUP6 PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x604 SWAP2 SWAP1 PUSH2 0xE7E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xF0F7F8153C6D63A5696720D4CC434E56BB5AC1CF8C791ED9C180DEFB6E92153 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x287 SWAP1 PUSH2 0xF97 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH2 0x6E6 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x88E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x645 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x772 SWAP2 SWAP1 PUSH2 0xEB9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x77F PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x80A SWAP2 SWAP1 PUSH2 0xE7E JUMP JUMPDEST POP PUSH1 0x0 DUP2 ISZERO DUP1 PUSH2 0x818 JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x824 JUMPI POP DUP3 PUSH2 0x83F JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x831 DUP5 DUP8 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x83B SWAP2 SWAP1 PUSH2 0xF3F JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH2 0x849 CALLER DUP3 PUSH2 0xCC8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x5087FBEC8BDD9B358F62D89BABB5F4DD44F8576230A9520C90E3407D6F4DD1FB SWAP2 ADD PUSH2 0x639 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 CALLER DUP5 DUP5 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x951 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xAF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xB28 SWAP1 DUP5 SWAP1 PUSH2 0xF27 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xB74 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xC56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xC85 SWAP1 DUP5 SWAP1 PUSH2 0xF80 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD30 SWAP2 SWAP1 PUSH2 0xF27 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xD5D SWAP1 DUP5 SWAP1 PUSH2 0xF27 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDDE DUP3 PUSH2 0xDA7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE01 DUP4 PUSH2 0xDA7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE0F PUSH1 0x20 DUP5 ADD PUSH2 0xDA7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE36 DUP5 PUSH2 0xDA7 JUMP JUMPDEST SWAP3 POP PUSH2 0xE44 PUSH1 0x20 DUP6 ADD PUSH2 0xDA7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE70 DUP4 PUSH2 0xDA7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xECB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEFF JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xEE3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xF11 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF3A JUMPI PUSH2 0xF3A PUSH2 0xFD2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF5C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF7B JUMPI PUSH2 0xF7B PUSH2 0xFD2 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF92 JUMPI PUSH2 0xF92 PUSH2 0xFD2 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFAB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xFCC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD CALLER PUSH13 0x994B1AA7951747D58ADB7B21EB 0x5E SWAP6 CALLVALUE ADDMOD PUSH16 0x482F83C1CB85C1B8F7408364736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "28008:2276:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6133:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8300:169;;;;;;:::i;:::-;;:::i;:::-;;;2928:14:1;;2921:22;2903:41;;2891:2;2876:18;8300:169:0;2763:187:1;30116:165:0;;;;;;:::i;:::-;;:::i;:::-;;7253:108;7341:12;;7253:108;;;7929:25:1;;;7917:2;7902:18;7253:108:0;7783:177:1;28114:26:0;;;;;-1:-1:-1;;;;;28114:26:0;;;;;;-1:-1:-1;;;;;2060:32:1;;;2042:51;;2030:2;2015:18;28114:26:0;1896:203:1;8951:492:0;;;;;;:::i;:::-;;:::i;7095:93::-;;;7178:2;8360:36:1;;8348:2;8333:18;7095:93:0;8218:184:1;9852:215:0;;;;;;:::i;:::-;;:::i;29493:615::-;;;;;;:::i;:::-;;:::i;7424:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7525:18:0;7498:7;7525:18;;;;;;;;;;;;7424:127;6352:104;;;:::i;10570:413::-;;;;;;:::i;:::-;;:::i;28524:961::-;;;;;;:::i;:::-;;:::i;7764:175::-;;;;;;:::i;:::-;;:::i;8002:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8118:18:0;;;8091:7;8118:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8002:151;6133:100;6187:13;6220:5;6213:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6133:100;:::o;8300:169::-;8383:4;8400:39;3994:10;8423:7;8432:6;8400:8;:39::i;:::-;-1:-1:-1;8457:4:0;8300:169;;;;:::o;30116:165::-;30175:12;;:61;;-1:-1:-1;;;30175:61:0;;30201:10;30175:61;;;2344:34:1;30221:4:0;2394:18:1;;;2387:43;2446:18;;;2439:34;;;-1:-1:-1;;;;;30175:12:0;;;;:25;;2279:18:1;;30175:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;30252:21:0;;7929:25:1;;;30252:21:0;;7917:2:1;7902:18;30252:21:0;;;;;;;30116:165;:::o;8951:492::-;9091:4;9108:36;9118:6;9126:9;9137:6;9108:9;:36::i;:::-;-1:-1:-1;;;;;9184:19:0;;9157:24;9184:19;;;:11;:19;;;;;;;;3994:10;9184:33;;;;;;;;9236:26;;;;9228:79;;;;-1:-1:-1;;;9228:79:0;;5597:2:1;9228:79:0;;;5579:21:1;5636:2;5616:18;;;5609:30;5675:34;5655:18;;;5648:62;-1:-1:-1;;;5726:18:1;;;5719:38;5774:19;;9228:79:0;;;;;;;;;9343:57;9352:6;3994:10;9393:6;9374:16;:25;9343:8;:57::i;:::-;-1:-1:-1;9431:4:0;;8951:492;-1:-1:-1;;;;8951:492:0:o;9852:215::-;3994:10;9940:4;9989:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;9989:34:0;;;;;;;;;;9940:4;;9957:80;;9980:7;;9989:47;;10026:10;;9989:47;:::i;:::-;9957:8;:80::i;29493:615::-;29556:18;;29552:549;;29624:12;;:69;;-1:-1:-1;;;29624:69:0;;29673:4;29624:69;;;2042:51:1;29591:30:0;;-1:-1:-1;;;;;29624:12:0;;:22;;2015:18:1;;29624:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29591:102;;29708:19;29730:13;7341:12;;;7253:108;29730:13;29708:35;-1:-1:-1;29833:14:0;29708:35;29851:39;29868:22;29851:14;:39;:::i;:::-;29850:72;;;;:::i;:::-;29833:89;;29937:33;29943:10;29955:14;29937:5;:33::i;:::-;29985:12;;:41;;-1:-1:-1;;;29985:41:0;;30007:10;29985:41;;;2658:51:1;2725:18;;;2718:34;;;-1:-1:-1;;;;;29985:12:0;;;;:21;;2631:18:1;;29985:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;30048:41:0;;;8139:25:1;;;8195:2;8180:18;;8173:34;;;30054:10:0;;30048:41;;8112:18:1;30048:41:0;;;;;;;;29576:525;;;29552:549;29493:615;:::o;6352:104::-;6408:13;6441:7;6434:14;;;;;:::i;10570:413::-;3994:10;10663:4;10707:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;10707:34:0;;;;;;;;;;10760:35;;;;10752:85;;;;-1:-1:-1;;;10752:85:0;;7219:2:1;10752:85:0;;;7201:21:1;7258:2;7238:18;;;7231:30;7297:34;7277:18;;;7270:62;-1:-1:-1;;;7348:18:1;;;7341:35;7393:19;;10752:85:0;7017:401:1;10752:85:0;10873:67;3994:10;10896:7;10924:15;10905:16;:34;10873:8;:67::i;:::-;-1:-1:-1;10971:4:0;;10570:413;-1:-1:-1;;;10570:413:0:o;28524:961::-;28580:11;;28576:902;;28641:12;;:69;;-1:-1:-1;;;28641:69:0;;28690:4;28641:69;;;2042:51:1;28608:30:0;;-1:-1:-1;;;;;28641:12:0;;:22;;2015:18:1;;28641:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28608:102;;28727:19;28749:13;7341:12;;;7253:108;28749:13;28779:12;;:61;;-1:-1:-1;;;28779:61:0;;28805:10;28779:61;;;2344:34:1;28825:4:0;2394:18:1;;;2387:43;2446:18;;;2439:34;;;28727:35:0;;-1:-1:-1;;;;;;28779:12:0;;:25;;2279:18:1;;28779:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;28855:18:0;28962:16;;;:47;;-1:-1:-1;28982:27:0;;28962:47;28958:407;;;-1:-1:-1;29043:7:0;28958:407;;;29209:21;29280:22;29234:21;29244:11;29234:7;:21;:::i;:::-;29233:69;;;;:::i;:::-;29209:93;-1:-1:-1;;28958:407:0;29379:29;29385:10;29397;29379:5;:29::i;:::-;29428:38;;;8139:25:1;;;8195:2;8180:18;;8173:34;;;29434:10:0;;29428:38;;8112:18:1;29428:38:0;7965:248:1;7764:175:0;7850:4;7867:42;3994:10;7891:9;7902:6;7867:9;:42::i;14254:380::-;-1:-1:-1;;;;;14390:19:0;;14382:68;;;;-1:-1:-1;;;14382:68:0;;6814:2:1;14382:68:0;;;6796:21:1;6853:2;6833:18;;;6826:30;6892:34;6872:18;;;6865:62;-1:-1:-1;;;6943:18:1;;;6936:34;6987:19;;14382:68:0;6612:400:1;14382:68:0;-1:-1:-1;;;;;14469:21:0;;14461:68;;;;-1:-1:-1;;;14461:68:0;;4787:2:1;14461:68:0;;;4769:21:1;4826:2;4806:18;;;4799:30;4865:34;4845:18;;;4838:62;-1:-1:-1;;;4916:18:1;;;4909:32;4958:19;;14461:68:0;4585:398:1;14461:68:0;-1:-1:-1;;;;;14542:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;14594:32;;7929:25:1;;;14594:32:0;;7902:18:1;14594:32:0;;;;;;;;14254:380;;;:::o;11473:733::-;-1:-1:-1;;;;;11613:20:0;;11605:70;;;;-1:-1:-1;;;11605:70:0;;6408:2:1;11605:70:0;;;6390:21:1;6447:2;6427:18;;;6420:30;6486:34;6466:18;;;6459:62;-1:-1:-1;;;6537:18:1;;;6530:35;6582:19;;11605:70:0;6206:401:1;11605:70:0;-1:-1:-1;;;;;11694:23:0;;11686:71;;;;-1:-1:-1;;;11686:71:0;;3980:2:1;11686:71:0;;;3962:21:1;4019:2;3999:18;;;3992:30;4058:34;4038:18;;;4031:62;-1:-1:-1;;;4109:18:1;;;4102:33;4152:19;;11686:71:0;3778:399:1;11686:71:0;-1:-1:-1;;;;;11854:17:0;;11830:21;11854:17;;;;;;;;;;;11890:23;;;;11882:74;;;;-1:-1:-1;;;11882:74:0;;5190:2:1;11882:74:0;;;5172:21:1;5229:2;5209:18;;;5202:30;5268:34;5248:18;;;5241:62;-1:-1:-1;;;5319:18:1;;;5312:36;5365:19;;11882:74:0;4988:402:1;11882:74:0;-1:-1:-1;;;;;11992:17:0;;;:9;:17;;;;;;;;;;;12012:22;;;11992:42;;12056:20;;;;;;;;:30;;12028:6;;11992:9;12056:30;;12028:6;;12056:30;:::i;:::-;;;;;;;;12121:9;-1:-1:-1;;;;;12104:35:0;12113:6;-1:-1:-1;;;;;12104:35:0;;12132:6;12104:35;;;;7929:25:1;;7917:2;7902:18;;7783:177;12104:35:0;;;;;;;;11594:612;11473:733;;;:::o;13225:591::-;-1:-1:-1;;;;;13309:21:0;;13301:67;;;;-1:-1:-1;;;13301:67:0;;6006:2:1;13301:67:0;;;5988:21:1;6045:2;6025:18;;;6018:30;6084:34;6064:18;;;6057:62;-1:-1:-1;;;6135:18:1;;;6128:31;6176:19;;13301:67:0;5804:397:1;13301:67:0;-1:-1:-1;;;;;13468:18:0;;13443:22;13468:18;;;;;;;;;;;13505:24;;;;13497:71;;;;-1:-1:-1;;;13497:71:0;;4384:2:1;13497:71:0;;;4366:21:1;4423:2;4403:18;;;4396:30;4462:34;4442:18;;;4435:62;-1:-1:-1;;;4513:18:1;;;4506:32;4555:19;;13497:71:0;4182:398:1;13497:71:0;-1:-1:-1;;;;;13604:18:0;;:9;:18;;;;;;;;;;13625:23;;;13604:44;;13670:12;:22;;13642:6;;13604:9;13670:22;;13642:6;;13670:22;:::i;:::-;;;;-1:-1:-1;;13710:37:0;;7929:25:1;;;13736:1:0;;-1:-1:-1;;;;;13710:37:0;;;;;7917:2:1;7902:18;13710:37:0;7783:177:1;12493:399:0;-1:-1:-1;;;;;12577:21:0;;12569:65;;;;-1:-1:-1;;;12569:65:0;;7625:2:1;12569:65:0;;;7607:21:1;7664:2;7644:18;;;7637:30;7703:33;7683:18;;;7676:61;7754:18;;12569:65:0;7423:355:1;12569:65:0;12725:6;12709:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;12742:18:0;;:9;:18;;;;;;;;;;:28;;12764:6;;12742:9;:28;;12764:6;;12742:28;:::i;:::-;;;;-1:-1:-1;;12786:37:0;;7929:25:1;;;-1:-1:-1;;;;;12786:37:0;;;12803:1;;12786:37;;7917:2:1;7902:18;12786:37:0;;;;;;;12493:399;;:::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:1:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:1:o;1240:277::-;1307:6;1360:2;1348:9;1339:7;1335:23;1331:32;1328:52;;;1376:1;1373;1366:12;1328:52;1408:9;1402:16;1461:5;1454:13;1447:21;1440:5;1437:32;1427:60;;1483:1;1480;1473:12;1522:180;1581:6;1634:2;1622:9;1613:7;1609:23;1605:32;1602:52;;;1650:1;1647;1640:12;1602:52;-1:-1:-1;1673:23:1;;1522:180;-1:-1:-1;1522:180:1:o;1707:184::-;1777:6;1830:2;1818:9;1809:7;1805:23;1801:32;1798:52;;;1846:1;1843;1836:12;1798:52;-1:-1:-1;1869:16:1;;1707:184;-1:-1:-1;1707:184:1:o;3176:597::-;3288:4;3317:2;3346;3335:9;3328:21;3378:6;3372:13;3421:6;3416:2;3405:9;3401:18;3394:34;3446:1;3456:140;3470:6;3467:1;3464:13;3456:140;;;3565:14;;;3561:23;;3555:30;3531:17;;;3550:2;3527:26;3520:66;3485:10;;3456:140;;;3614:6;3611:1;3608:13;3605:91;;;3684:1;3679:2;3670:6;3659:9;3655:22;3651:31;3644:42;3605:91;-1:-1:-1;3757:2:1;3736:15;-1:-1:-1;;3732:29:1;3717:45;;;;3764:2;3713:54;;3176:597;-1:-1:-1;;;3176:597:1:o;8407:128::-;8447:3;8478:1;8474:6;8471:1;8468:13;8465:39;;;8484:18;;:::i;:::-;-1:-1:-1;8520:9:1;;8407:128::o;8540:217::-;8580:1;8606;8596:132;;8650:10;8645:3;8641:20;8638:1;8631:31;8685:4;8682:1;8675:15;8713:4;8710:1;8703:15;8596:132;-1:-1:-1;8742:9:1;;8540:217::o;8762:168::-;8802:7;8868:1;8864;8860:6;8856:14;8853:1;8850:21;8845:1;8838:9;8831:17;8827:45;8824:71;;;8875:18;;:::i;:::-;-1:-1:-1;8915:9:1;;8762:168::o;8935:125::-;8975:4;9003:1;9000;8997:8;8994:34;;;9008:18;;:::i;:::-;-1:-1:-1;9045:9:1;;8935:125::o;9065:380::-;9144:1;9140:12;;;;9187;;;9208:61;;9262:4;9254:6;9250:17;9240:27;;9208:61;9315:2;9307:6;9304:14;9284:18;9281:38;9278:161;;;9361:10;9356:3;9352:20;9349:1;9342:31;9396:4;9393:1;9386:15;9424:4;9421:1;9414:15;9278:161;;9065:380;;;:::o;9450:127::-;9511:10;9506:3;9502:20;9499:1;9492:31;9542:4;9539:1;9532:15;9566:4;9563:1;9556:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "825200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24643",
								"balanceOf(address)": "2607",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "26911",
								"enter(uint256)": "infinite",
								"increaseAllowance(address,uint256)": "26958",
								"leave(uint256)": "infinite",
								"name()": "infinite",
								"shareRevenue(uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2304",
								"transfer(address,uint256)": "51231",
								"transferFrom(address,address,uint256)": "infinite",
								"vestingToken()": "2382"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 28435,
									"end": 28516,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "PUSH",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "PUSH",
									"source": 0,
									"value": "566F74696E67457363726F776564576176654C656E6774680000000000000000"
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1D9955D59315"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6014,
									"end": 6027,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6014,
									"end": 6027,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5947,
									"end": 6063,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6014,
									"end": 6027,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6014,
									"end": 6027,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6014,
									"end": 6019,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6014,
									"end": 6019,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6014,
									"end": 6027,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6014,
									"end": 6027,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6014,
									"end": 6027,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6014,
									"end": 6027,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6038,
									"end": 6045,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6038,
									"end": 6045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6038,
									"end": 6055,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 28480,
									"end": 28492,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 28480,
									"end": 28508,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28480,
									"end": 28508,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 28480,
									"end": 28508,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 28480,
									"end": 28508,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 28480,
									"end": 28508,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28480,
									"end": 28508,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 28480,
									"end": 28508,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28480,
									"end": 28508,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 28480,
									"end": 28508,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28480,
									"end": 28508,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 28480,
									"end": 28508,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 28480,
									"end": 28508,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28480,
									"end": 28508,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28480,
									"end": 28508,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 317,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 317,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 97,
									"end": 103,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 152,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 138,
									"end": 147,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 129,
									"end": 136,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 125,
									"end": 148,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 121,
									"end": 153,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 118,
									"end": 170,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 118,
									"end": 170,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 118,
									"end": 170,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 166,
									"end": 167,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 163,
									"end": 164,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 156,
									"end": 168,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 118,
									"end": 170,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 118,
									"end": 170,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 192,
									"end": 208,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 192,
									"end": 208,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 237,
									"end": 268,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 237,
									"end": 268,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 227,
									"end": 269,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 227,
									"end": 269,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 217,
									"end": 287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 217,
									"end": 287,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 283,
									"end": 284,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 281,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 273,
									"end": 285,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 217,
									"end": 287,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 217,
									"end": 287,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 306,
									"end": 311,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 14,
									"end": 317,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 317,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 322,
									"end": 702,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 322,
									"end": 702,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 397,
									"end": 409,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 397,
									"end": 409,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 397,
									"end": 409,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 397,
									"end": 409,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 444,
									"end": 456,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 444,
									"end": 456,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 444,
									"end": 456,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 465,
									"end": 526,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 465,
									"end": 526,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 519,
									"end": 523,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 511,
									"end": 517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 507,
									"end": 524,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 497,
									"end": 524,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 497,
									"end": 524,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 465,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 465,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 572,
									"end": 574,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 564,
									"end": 570,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 561,
									"end": 575,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 541,
									"end": 559,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 538,
									"end": 576,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 535,
									"end": 696,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 535,
									"end": 696,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 535,
									"end": 696,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 618,
									"end": 628,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 613,
									"end": 616,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 609,
									"end": 629,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 606,
									"end": 607,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 599,
									"end": 630,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 653,
									"end": 657,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 650,
									"end": 651,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 643,
									"end": 658,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 681,
									"end": 685,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 678,
									"end": 679,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 671,
									"end": 686,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 535,
									"end": 696,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 535,
									"end": 696,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 535,
									"end": 696,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 322,
									"end": 702,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 322,
									"end": 702,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 322,
									"end": 702,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 322,
									"end": 702,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 322,
									"end": 702,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 322,
									"end": 702,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28008,
									"end": 30284,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200d336c994b1aa7951747d58adb7b21eb5e9534086f482f83c1cb85c1b8f7408364736f6c63430008070033",
									".code": [
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "A59F3E0C"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "67DFD4C9"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "19D152FA"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "139E41E4"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28008,
											"end": 30284,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2928,
											"end": 2942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 2943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2893,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2876,
											"end": 2894,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2763,
											"end": 2950,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30116,
											"end": 30281,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30116,
											"end": 30281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30116,
											"end": 30281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 30116,
											"end": 30281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 30116,
											"end": 30281,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30116,
											"end": 30281,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30116,
											"end": 30281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 30116,
											"end": 30281,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30116,
											"end": 30281,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 30116,
											"end": 30281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30116,
											"end": 30281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 30116,
											"end": 30281,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30116,
											"end": 30281,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 30116,
											"end": 30281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30116,
											"end": 30281,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7253,
											"end": 7361,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7253,
											"end": 7361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7253,
											"end": 7361,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7253,
											"end": 7361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7253,
											"end": 7361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7253,
											"end": 7361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7783,
											"end": 7960,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28114,
											"end": 28140,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28114,
											"end": 28140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28114,
											"end": 28140,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28114,
											"end": 28140,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28114,
											"end": 28140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 28114,
											"end": 28140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28114,
											"end": 28140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28114,
											"end": 28140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28114,
											"end": 28140,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28114,
											"end": 28140,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 28114,
											"end": 28140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28114,
											"end": 28140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28114,
											"end": 28140,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2060,
											"end": 2092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2032,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28114,
											"end": 28140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1896,
											"end": 2099,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7095,
											"end": 7188,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7095,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7095,
											"end": 7188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7095,
											"end": 7188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7180,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8360,
											"end": 8396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8360,
											"end": 8396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8348,
											"end": 8350,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8333,
											"end": 8351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7095,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8218,
											"end": 8402,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29493,
											"end": 30108,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 29493,
											"end": 30108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29493,
											"end": 30108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 29493,
											"end": 30108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 29493,
											"end": 30108,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29493,
											"end": 30108,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29493,
											"end": 30108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 29493,
											"end": 30108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29493,
											"end": 30108,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 29493,
											"end": 30108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29493,
											"end": 30108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 29493,
											"end": 30108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7498,
											"end": 7505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7525,
											"end": 7543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7551,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6456,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6352,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6352,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6352,
											"end": 6456,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28524,
											"end": 29485,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28524,
											"end": 29485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 29485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28524,
											"end": 29485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 28524,
											"end": 29485,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 29485,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28524,
											"end": 29485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 28524,
											"end": 29485,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28524,
											"end": 29485,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 28524,
											"end": 29485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28524,
											"end": 29485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 28524,
											"end": 29485,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8091,
											"end": 8098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8129,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8153,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6187,
											"end": 6200,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6220,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 6225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6233,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8400,
											"end": 8439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3994,
											"end": 4004,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8423,
											"end": 8430,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8432,
											"end": 8438,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 8400,
											"end": 8439,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8400,
											"end": 8439,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 8400,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8457,
											"end": 8461,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8469,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30116,
											"end": 30281,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 30116,
											"end": 30281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30187,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30175,
											"end": 30187,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30201,
											"end": 30211,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30221,
											"end": 30225,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2430,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2446,
											"end": 2464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2473,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30175,
											"end": 30187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30200,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 30175,
											"end": 30200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2297,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2279,
											"end": 2297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 30175,
											"end": 30236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30252,
											"end": 30273,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30252,
											"end": 30273,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30252,
											"end": 30273,
											"name": "PUSH",
											"source": 0,
											"value": "8345132CBBBDE83001E783CDFDD5190DEDC863AE82CAE7ABE302B22322A60274"
										},
										{
											"begin": 30252,
											"end": 30273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7917,
											"end": 7919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30252,
											"end": 30273,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30252,
											"end": 30273,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30252,
											"end": 30273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30252,
											"end": 30273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30252,
											"end": 30273,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30252,
											"end": 30273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30252,
											"end": 30273,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 30116,
											"end": 30281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30116,
											"end": 30281,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9091,
											"end": 9095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9108,
											"end": 9144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 9118,
											"end": 9124,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9126,
											"end": 9135,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9108,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 9108,
											"end": 9144,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9108,
											"end": 9144,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 9108,
											"end": 9144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9157,
											"end": 9181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9195,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4004,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9217,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9217,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9236,
											"end": 9262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9236,
											"end": 9262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9236,
											"end": 9262,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9236,
											"end": 9262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5597,
											"end": 5599,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5636,
											"end": 5638,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5616,
											"end": 5634,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5616,
											"end": 5634,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5609,
											"end": 5639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5675,
											"end": 5709,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 5655,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5655,
											"end": 5673,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5726,
											"end": 5744,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5726,
											"end": 5744,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5719,
											"end": 5757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5774,
											"end": 5793,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5774,
											"end": 5793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 9352,
											"end": 9358,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4004,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9399,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9399,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9343,
											"end": 9351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9343,
											"end": 9400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9343,
											"end": 9400,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 9343,
											"end": 9400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9431,
											"end": 9435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9431,
											"end": 9435,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8951,
											"end": 9443,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 9852,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4004,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 9944,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10000,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10014,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9989,
											"end": 10023,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10023,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10023,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 9944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 9944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9957,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9957,
											"end": 10037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9980,
											"end": 9987,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9980,
											"end": 9987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 9989,
											"end": 10036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10026,
											"end": 10036,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10026,
											"end": 10036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 9989,
											"end": 10036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9989,
											"end": 10036,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 9989,
											"end": 10036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9957,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9957,
											"end": 10037,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29493,
											"end": 30108,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 29493,
											"end": 30108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29556,
											"end": 29574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29556,
											"end": 29574,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 30101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 29552,
											"end": 30101,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29636,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29624,
											"end": 29636,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29673,
											"end": 29677,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29591,
											"end": 29621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29591,
											"end": 29621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29624,
											"end": 29636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29646,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 29624,
											"end": 29646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29624,
											"end": 29693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29591,
											"end": 29693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29591,
											"end": 29693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29708,
											"end": 29727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29730,
											"end": 29743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7253,
											"end": 7361,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29730,
											"end": 29743,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 29730,
											"end": 29743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29708,
											"end": 29743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29833,
											"end": 29847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29708,
											"end": 29743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 29868,
											"end": 29890,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29865,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 29851,
											"end": 29890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29851,
											"end": 29890,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 29851,
											"end": 29890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29850,
											"end": 29922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 29850,
											"end": 29922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29850,
											"end": 29922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29850,
											"end": 29922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 29850,
											"end": 29922,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29850,
											"end": 29922,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 29850,
											"end": 29922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29833,
											"end": 29922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29833,
											"end": 29922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29937,
											"end": 29970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 29943,
											"end": 29953,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29955,
											"end": 29969,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29937,
											"end": 29942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 29937,
											"end": 29970,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29937,
											"end": 29970,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 29937,
											"end": 29970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 29997,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29985,
											"end": 29997,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30007,
											"end": 30017,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2752,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29985,
											"end": 29997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 29997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 29997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 29997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30006,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 29985,
											"end": 30006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2649,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2631,
											"end": 2649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 29985,
											"end": 30026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30048,
											"end": 30089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30048,
											"end": 30089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30048,
											"end": 30089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8139,
											"end": 8164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8139,
											"end": 8164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8197,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8180,
											"end": 8198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8180,
											"end": 8198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8207,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8207,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30054,
											"end": 30064,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30054,
											"end": 30064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30048,
											"end": 30089,
											"name": "PUSH",
											"source": 0,
											"value": "F0F7F8153C6D63A5696720D4CC434E56BB5AC1CF8C791ED9C180DEFB6E92153"
										},
										{
											"begin": 30048,
											"end": 30089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30048,
											"end": 30089,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 30048,
											"end": 30089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30048,
											"end": 30089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30048,
											"end": 30089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30048,
											"end": 30089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30048,
											"end": 30089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30048,
											"end": 30089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30048,
											"end": 30089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30048,
											"end": 30089,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 29576,
											"end": 30101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29576,
											"end": 30101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29576,
											"end": 30101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 30101,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 29552,
											"end": 30101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29493,
											"end": 30108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29493,
											"end": 30108,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6352,
											"end": 6456,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6352,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6421,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6441,
											"end": 6448,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6434,
											"end": 6448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6448,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6434,
											"end": 6448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6434,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6434,
											"end": 6448,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4004,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10663,
											"end": 10667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10732,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10741,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10741,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10741,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10741,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10760,
											"end": 10795,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10760,
											"end": 10795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10760,
											"end": 10795,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10760,
											"end": 10795,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7222,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7260,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7238,
											"end": 7256,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7238,
											"end": 7256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7238,
											"end": 7256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7297,
											"end": 7331,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 7277,
											"end": 7295,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7277,
											"end": 7295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7270,
											"end": 7332,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7341,
											"end": 7376,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7393,
											"end": 7412,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7393,
											"end": 7412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 7017,
											"end": 7418,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 10752,
											"end": 10837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3994,
											"end": 4004,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10896,
											"end": 10903,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10905,
											"end": 10921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10905,
											"end": 10939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10873,
											"end": 10881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 10873,
											"end": 10940,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10873,
											"end": 10940,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 10873,
											"end": 10940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10971,
											"end": 10975,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10971,
											"end": 10975,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10570,
											"end": 10983,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28524,
											"end": 29485,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 28524,
											"end": 29485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28580,
											"end": 28591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28580,
											"end": 28591,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28576,
											"end": 29478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 28576,
											"end": 29478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28653,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28641,
											"end": 28653,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28690,
											"end": 28694,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28608,
											"end": 28638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28608,
											"end": 28638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28641,
											"end": 28653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28663,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 28641,
											"end": 28663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2015,
											"end": 2033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 28641,
											"end": 28710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28608,
											"end": 28710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28749,
											"end": 28762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7253,
											"end": 7361,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28762,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 28749,
											"end": 28762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28791,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28779,
											"end": 28791,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28805,
											"end": 28815,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28825,
											"end": 28829,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2430,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2446,
											"end": 2464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2446,
											"end": 2464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2473,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28727,
											"end": 28762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28762,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28779,
											"end": 28791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28804,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 28779,
											"end": 28804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2297,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2279,
											"end": 2297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 28779,
											"end": 28840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28855,
											"end": 28873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28962,
											"end": 28978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28962,
											"end": 28978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28962,
											"end": 28978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28962,
											"end": 29009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 28962,
											"end": 29009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28982,
											"end": 29009,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28982,
											"end": 29009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28962,
											"end": 29009,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 28962,
											"end": 29009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 29365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 29365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 28958,
											"end": 29365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29043,
											"end": 29050,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 29365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 28958,
											"end": 29365,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 29365,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 28958,
											"end": 29365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29209,
											"end": 29230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29280,
											"end": 29302,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29234,
											"end": 29255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 29244,
											"end": 29255,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29234,
											"end": 29241,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29234,
											"end": 29255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 29234,
											"end": 29255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29234,
											"end": 29255,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 29234,
											"end": 29255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29233,
											"end": 29302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 29233,
											"end": 29302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29233,
											"end": 29302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29233,
											"end": 29302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 29233,
											"end": 29302,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29233,
											"end": 29302,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 29233,
											"end": 29302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29209,
											"end": 29302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28958,
											"end": 29365,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 28958,
											"end": 29365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29379,
											"end": 29408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 29385,
											"end": 29395,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29397,
											"end": 29407,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29379,
											"end": 29384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 29379,
											"end": 29408,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29379,
											"end": 29408,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 29379,
											"end": 29408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29428,
											"end": 29466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29428,
											"end": 29466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29428,
											"end": 29466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8164,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8139,
											"end": 8164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8139,
											"end": 8164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8197,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8180,
											"end": 8198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8180,
											"end": 8198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8207,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29434,
											"end": 29444,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29434,
											"end": 29444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29428,
											"end": 29466,
											"name": "PUSH",
											"source": 0,
											"value": "5087FBEC8BDD9B358F62D89BABB5F4DD44F8576230A9520C90E3407D6F4DD1FB"
										},
										{
											"begin": 29428,
											"end": 29466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29428,
											"end": 29466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7965,
											"end": 8213,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7764,
											"end": 7939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7867,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3994,
											"end": 4004,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7891,
											"end": 7900,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7902,
											"end": 7908,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7867,
											"end": 7909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14254,
											"end": 14634,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14254,
											"end": 14634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14390,
											"end": 14409,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14390,
											"end": 14409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6814,
											"end": 6816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6796,
											"end": 6817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6855,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6833,
											"end": 6851,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6833,
											"end": 6851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6833,
											"end": 6851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6892,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 6872,
											"end": 6890,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6872,
											"end": 6890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6865,
											"end": 6927,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6943,
											"end": 6961,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6943,
											"end": 6961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6936,
											"end": 6970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7006,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6987,
											"end": 7006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 6612,
											"end": 7012,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 14382,
											"end": 14450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14469,
											"end": 14490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4787,
											"end": 4789,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4769,
											"end": 4790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4828,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4806,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4806,
											"end": 4824,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4899,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4838,
											"end": 4900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4916,
											"end": 4934,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4916,
											"end": 4934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4958,
											"end": 4977,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4958,
											"end": 4977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4585,
											"end": 4983,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 14461,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14553,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14560,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14569,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14578,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14542,
											"end": 14578,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7954,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7902,
											"end": 7920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14594,
											"end": 14626,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14254,
											"end": 14634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14254,
											"end": 14634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14254,
											"end": 14634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14254,
											"end": 14634,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11473,
											"end": 12206,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 11473,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11613,
											"end": 11633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11613,
											"end": 11633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6411,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6447,
											"end": 6449,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6427,
											"end": 6445,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6427,
											"end": 6445,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6427,
											"end": 6445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6486,
											"end": 6520,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 6466,
											"end": 6484,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6466,
											"end": 6484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6484,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6459,
											"end": 6521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6537,
											"end": 6555,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6537,
											"end": 6555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6537,
											"end": 6555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6530,
											"end": 6565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6582,
											"end": 6601,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6582,
											"end": 6601,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 6206,
											"end": 6607,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 11605,
											"end": 11675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11694,
											"end": 11717,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11694,
											"end": 11717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3982,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3962,
											"end": 3983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4019,
											"end": 4021,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4092,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 4038,
											"end": 4056,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4038,
											"end": 4056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4056,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3778,
											"end": 4177,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11830,
											"end": 11851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11854,
											"end": 11871,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11913,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11913,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5192,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5172,
											"end": 5193,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5231,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5209,
											"end": 5227,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5209,
											"end": 5227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5209,
											"end": 5227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5268,
											"end": 5302,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5241,
											"end": 5303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5319,
											"end": 5337,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5319,
											"end": 5337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5337,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5365,
											"end": 5384,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5365,
											"end": 5384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4988,
											"end": 5390,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 11882,
											"end": 11956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12009,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12034,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12034,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12012,
											"end": 12034,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12034,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12076,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12076,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12028,
											"end": 12034,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12028,
											"end": 12034,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11992,
											"end": 12001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12028,
											"end": 12034,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12028,
											"end": 12034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12056,
											"end": 12086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12121,
											"end": 12130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12113,
											"end": 12119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12132,
											"end": 12138,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7902,
											"end": 7920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7783,
											"end": 7960,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12104,
											"end": 12139,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11594,
											"end": 12206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11473,
											"end": 12206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11473,
											"end": 12206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11473,
											"end": 12206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11473,
											"end": 12206,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13225,
											"end": 13816,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 13225,
											"end": 13816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13309,
											"end": 13330,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13309,
											"end": 13330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13301,
											"end": 13368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 13301,
											"end": 13368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13301,
											"end": 13368,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13301,
											"end": 13368,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13301,
											"end": 13368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13301,
											"end": 13368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6006,
											"end": 6008,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13301,
											"end": 13368,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13301,
											"end": 13368,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13301,
											"end": 13368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5988,
											"end": 6009,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6045,
											"end": 6047,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6025,
											"end": 6043,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6025,
											"end": 6043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6025,
											"end": 6043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6118,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6057,
											"end": 6119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6135,
											"end": 6153,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6135,
											"end": 6153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6128,
											"end": 6159,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6176,
											"end": 6195,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6176,
											"end": 6195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13301,
											"end": 13368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5804,
											"end": 6201,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13301,
											"end": 13368,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 13301,
											"end": 13368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13468,
											"end": 13486,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13468,
											"end": 13486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13443,
											"end": 13465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13468,
											"end": 13486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13468,
											"end": 13486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13468,
											"end": 13486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13468,
											"end": 13486,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13468,
											"end": 13486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13468,
											"end": 13486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13468,
											"end": 13486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13468,
											"end": 13486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13468,
											"end": 13486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13468,
											"end": 13486,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13468,
											"end": 13486,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13505,
											"end": 13529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13505,
											"end": 13529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13505,
											"end": 13529,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13505,
											"end": 13529,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13497,
											"end": 13568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 13497,
											"end": 13568,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13497,
											"end": 13568,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13497,
											"end": 13568,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13497,
											"end": 13568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13497,
											"end": 13568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13497,
											"end": 13568,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13497,
											"end": 13568,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13497,
											"end": 13568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4462,
											"end": 4496,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4513,
											"end": 4531,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4513,
											"end": 4531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4513,
											"end": 4531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 4574,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4555,
											"end": 4574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 13568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4182,
											"end": 4580,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 13568,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 13497,
											"end": 13568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13604,
											"end": 13622,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13604,
											"end": 13622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13622,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13604,
											"end": 13622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13604,
											"end": 13622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13622,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13625,
											"end": 13648,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13625,
											"end": 13648,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13625,
											"end": 13648,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13648,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13670,
											"end": 13682,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13670,
											"end": 13692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13670,
											"end": 13692,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13642,
											"end": 13648,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13642,
											"end": 13648,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13670,
											"end": 13692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 13670,
											"end": 13692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13642,
											"end": 13648,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13642,
											"end": 13648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13670,
											"end": 13692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 13670,
											"end": 13692,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13670,
											"end": 13692,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 13670,
											"end": 13692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13670,
											"end": 13692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13670,
											"end": 13692,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13670,
											"end": 13692,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13710,
											"end": 13747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13710,
											"end": 13747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13736,
											"end": 13737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13736,
											"end": 13737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13710,
											"end": 13747,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13710,
											"end": 13747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13710,
											"end": 13747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13710,
											"end": 13747,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13710,
											"end": 13747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7917,
											"end": 7919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13710,
											"end": 13747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 7783,
											"end": 7960,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12493,
											"end": 12892,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 12493,
											"end": 12892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12577,
											"end": 12598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12577,
											"end": 12598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12569,
											"end": 12634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 12569,
											"end": 12634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12569,
											"end": 12634,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12569,
											"end": 12634,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12569,
											"end": 12634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12569,
											"end": 12634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7625,
											"end": 7627,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12569,
											"end": 12634,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12569,
											"end": 12634,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12569,
											"end": 12634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7607,
											"end": 7628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7666,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7644,
											"end": 7662,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7644,
											"end": 7662,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7644,
											"end": 7662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7667,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7736,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7683,
											"end": 7701,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7683,
											"end": 7701,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7683,
											"end": 7701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7676,
											"end": 7737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7754,
											"end": 7772,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7754,
											"end": 7772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12569,
											"end": 12634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 7423,
											"end": 7778,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12569,
											"end": 12634,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 12569,
											"end": 12634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12725,
											"end": 12731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12721,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12709,
											"end": 12721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12709,
											"end": 12731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 12709,
											"end": 12731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 12709,
											"end": 12731,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12709,
											"end": 12731,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 12709,
											"end": 12731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12709,
											"end": 12731,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12742,
											"end": 12760,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12742,
											"end": 12760,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12742,
											"end": 12751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12742,
											"end": 12760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12742,
											"end": 12760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12742,
											"end": 12760,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12742,
											"end": 12760,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12742,
											"end": 12760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12742,
											"end": 12760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12742,
											"end": 12760,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12742,
											"end": 12760,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12742,
											"end": 12760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12742,
											"end": 12760,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12742,
											"end": 12770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12742,
											"end": 12770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12764,
											"end": 12770,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12764,
											"end": 12770,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12742,
											"end": 12751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12742,
											"end": 12770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 12742,
											"end": 12770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12764,
											"end": 12770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12764,
											"end": 12770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12742,
											"end": 12770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 12742,
											"end": 12770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12742,
											"end": 12770,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 12742,
											"end": 12770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12742,
											"end": 12770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12742,
											"end": 12770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12742,
											"end": 12770,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12786,
											"end": 12823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12786,
											"end": 12823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12786,
											"end": 12823,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12803,
											"end": 12804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12803,
											"end": 12804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12823,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12786,
											"end": 12823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7917,
											"end": 7919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12786,
											"end": 12823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12786,
											"end": 12823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12823,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12786,
											"end": 12823,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12493,
											"end": 12892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12493,
											"end": 12892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12493,
											"end": 12892,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1240,
											"end": 1517,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1240,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1348,
											"end": 1357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1358,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1363,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1380,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1328,
											"end": 1380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1374,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1378,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1380,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1328,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1418,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1466,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1467,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1447,
											"end": 1468,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1469,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 1427,
											"end": 1487,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1480,
											"end": 1481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1485,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1702,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1522,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1581,
											"end": 1587,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1622,
											"end": 1631,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1620,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1632,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1605,
											"end": 1637,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1654,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1602,
											"end": 1654,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1651,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1652,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1654,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1602,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1673,
											"end": 1696,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1696,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1522,
											"end": 1702,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1707,
											"end": 1891,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1707,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1832,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1828,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1833,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1848,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 1798,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1869,
											"end": 1885,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1885,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1891,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3176,
											"end": 3773,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3176,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3288,
											"end": 3292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3319,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3344,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3328,
											"end": 3349,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3384,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3427,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3414,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3428,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3596,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3456,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3477,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3596,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3456,
											"end": 3596,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3579,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3584,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3531,
											"end": 3548,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3531,
											"end": 3548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3531,
											"end": 3548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3550,
											"end": 3552,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3527,
											"end": 3553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3456,
											"end": 3596,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3596,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3456,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3611,
											"end": 3612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3621,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3696,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3605,
											"end": 3696,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3684,
											"end": 3685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3681,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3670,
											"end": 3676,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3659,
											"end": 3668,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3655,
											"end": 3677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3651,
											"end": 3682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3644,
											"end": 3686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3696,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3605,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3759,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3736,
											"end": 3751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3732,
											"end": 3761,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3762,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3762,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3713,
											"end": 3767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3767,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3176,
											"end": 3773,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3176,
											"end": 3773,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8407,
											"end": 8535,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 8407,
											"end": 8535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8447,
											"end": 8450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8474,
											"end": 8480,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 8471,
											"end": 8472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8468,
											"end": 8481,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8504,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 8465,
											"end": 8504,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8484,
											"end": 8502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 8484,
											"end": 8502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 8484,
											"end": 8502,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8484,
											"end": 8502,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 8484,
											"end": 8502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8520,
											"end": 8529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8520,
											"end": 8529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8407,
											"end": 8535,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8540,
											"end": 8757,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 8540,
											"end": 8757,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8607,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8596,
											"end": 8728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 8596,
											"end": 8728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8650,
											"end": 8660,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 8645,
											"end": 8648,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8641,
											"end": 8661,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8638,
											"end": 8639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8631,
											"end": 8662,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8685,
											"end": 8689,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 8682,
											"end": 8683,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8675,
											"end": 8690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8713,
											"end": 8717,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8710,
											"end": 8711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8703,
											"end": 8718,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8596,
											"end": 8728,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 8596,
											"end": 8728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8742,
											"end": 8751,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8742,
											"end": 8751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8540,
											"end": 8757,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8762,
											"end": 8930,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8762,
											"end": 8930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 8809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8868,
											"end": 8869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8860,
											"end": 8866,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 8856,
											"end": 8870,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8853,
											"end": 8854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8850,
											"end": 8871,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8845,
											"end": 8846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 8847,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8831,
											"end": 8848,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8827,
											"end": 8872,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8824,
											"end": 8895,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8824,
											"end": 8895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 8824,
											"end": 8895,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8875,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 8875,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 8875,
											"end": 8893,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8875,
											"end": 8893,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 8875,
											"end": 8893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8915,
											"end": 8924,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8915,
											"end": 8924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8762,
											"end": 8930,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8935,
											"end": 9060,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 8935,
											"end": 9060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8975,
											"end": 8979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9003,
											"end": 9004,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8997,
											"end": 9005,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8994,
											"end": 9028,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8994,
											"end": 9028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 8994,
											"end": 9028,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 9008,
											"end": 9026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9045,
											"end": 9054,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9045,
											"end": 9054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8935,
											"end": 9060,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9065,
											"end": 9445,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 9065,
											"end": 9445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9144,
											"end": 9145,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9140,
											"end": 9152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9152,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9187,
											"end": 9199,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9187,
											"end": 9199,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9187,
											"end": 9199,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 9208,
											"end": 9269,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9262,
											"end": 9266,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 9254,
											"end": 9260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9250,
											"end": 9267,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9240,
											"end": 9267,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9240,
											"end": 9267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9269,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 9208,
											"end": 9269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9307,
											"end": 9313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9304,
											"end": 9318,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9284,
											"end": 9302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9281,
											"end": 9319,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9278,
											"end": 9439,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9278,
											"end": 9439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 9278,
											"end": 9439,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9361,
											"end": 9371,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 9356,
											"end": 9359,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9352,
											"end": 9372,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9342,
											"end": 9373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9400,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9393,
											"end": 9394,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9386,
											"end": 9401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9424,
											"end": 9428,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9421,
											"end": 9422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9429,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9278,
											"end": 9439,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 9278,
											"end": 9439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9278,
											"end": 9439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9065,
											"end": 9445,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9065,
											"end": 9445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9065,
											"end": 9445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9065,
											"end": 9445,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9450,
											"end": 9577,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 9450,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9511,
											"end": 9521,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 9506,
											"end": 9509,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9502,
											"end": 9522,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9492,
											"end": 9523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9542,
											"end": 9546,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 9539,
											"end": 9540,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9532,
											"end": 9547,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9566,
											"end": 9570,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9563,
											"end": 9564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9556,
											"end": 9571,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"enter(uint256)": "a59f3e0c",
							"increaseAllowance(address,uint256)": "39509351",
							"leave(uint256)": "67dfd4c9",
							"name()": "06fdde03",
							"shareRevenue(uint256)": "139e41e4",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"vestingToken()": "19d152fa"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_vestingToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vestingInAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"Enter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vestingOutAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnedAmount\",\"type\":\"uint256\"}],\"name\":\"Leave\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ShareRevenue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shareOfveWVLT\",\"type\":\"uint256\"}],\"name\":\"leave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"shareRevenue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/veWVLT.sol\":\"WVLTBar\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/veWVLT.sol\":{\"keccak256\":\"0xf88a435e66a1589d336d5565876925e0a50fafcbee09151fd221f096eea53f7b\",\"urls\":[\"bzz-raw://9ef26e0c1f74853b7cf6dc10a9b3b54b21d6d7fb0f77cc3f2d99436bbbed6f63\",\"dweb:/ipfs/QmVP9q2YRHdU1uL9KFMJMv8B36vJW2ydUT8rQB4R3UWeMJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 133,
								"contract": "contracts/veWVLT.sol:WVLTBar",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 139,
								"contract": "contracts/veWVLT.sol:WVLTBar",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 141,
								"contract": "contracts/veWVLT.sol:WVLTBar",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 143,
								"contract": "contracts/veWVLT.sol:WVLTBar",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 145,
								"contract": "contracts/veWVLT.sol:WVLTBar",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1192,
								"contract": "contracts/veWVLT.sol:WVLTBar",
								"label": "vestingToken",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IERC20)77"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/veWVLT.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/veWVLT.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/veWVLT.sol": {
				"ast": {
					"absolutePath": "contracts/veWVLT.sol",
					"exportedSymbols": {
						"Address": [
							959
						],
						"Context": [
							121
						],
						"ERC20": [
							663
						],
						"IERC20": [
							77
						],
						"IERC20Metadata": [
							100
						],
						"SafeERC20": [
							1180
						],
						"WVLTBar": [
							1383
						]
					},
					"id": 1384,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "27:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "111:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "125:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "208:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "219:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "245:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "244:9:0"
									},
									"scope": 77,
									"src": "199:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "262:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "351:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "369:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "361:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "401:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "400:9:0"
									},
									"scope": 77,
									"src": "342:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "418:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "648:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "665:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "657:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "684:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "676:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "710:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "710:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "709:6:0"
									},
									"scope": 77,
									"src": "639:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "724:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1009:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1027:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1019:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1042:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1034:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1074:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:9:0"
									},
									"scope": 77,
									"src": "1000:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1091:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1761:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1777:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1769:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1794:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1786:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1768:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1820:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1820:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1819:6:0"
									},
									"scope": 77,
									"src": "1752:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1834:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2153:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2184:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2176:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2176:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2209:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2201:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2237:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2229:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2229:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2165:85:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2269:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2269:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2268:6:0"
									},
									"scope": 77,
									"src": "2144:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2283:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nameLocation": "2458:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2483:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2467:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2467:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2505:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2489:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2517:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2509:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:57:0"
									},
									"src": "2452:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2532:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nameLocation": "2695:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2720:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2704:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2743:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2727:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2760:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2752:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2752:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:63:0"
									},
									"src": "2689:78:0"
								}
							],
							"scope": 1384,
							"src": "101:2669:0",
							"usedErrors": []
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2774:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "2951:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "2951:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "2801:120:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "2933:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2965:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3036:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3040:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3066:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3066:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3065:15:0"
									},
									"scope": 100,
									"src": "3027:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3089:58:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3162:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3168:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3194:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3194:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:15:0"
									},
									"scope": 100,
									"src": "3153:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3217:67:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3299:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3333:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3333:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:7:0"
									},
									"scope": 100,
									"src": "3290:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1384,
							"src": "2923:420:0",
							"usedErrors": []
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3347:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3374:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "Context",
							"nameLocation": "3899:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "3976:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3994:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3994:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "3987:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "3923:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3933:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "3967:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3967:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3966:9:0"
									},
									"scope": 121,
									"src": "3914:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4087:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4105:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4105:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4098:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4029:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4037:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4071:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4071:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:16:0"
									},
									"scope": 121,
									"src": "4020:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1384,
							"src": "3881:243:0",
							"usedErrors": []
						},
						{
							"id": 122,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4128:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 124,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "5371:7:0"
									},
									"id": 125,
									"nodeType": "InheritanceSpecifier",
									"src": "5371:7:0"
								},
								{
									"baseName": {
										"id": 126,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "5380:6:0"
									},
									"id": 127,
									"nodeType": "InheritanceSpecifier",
									"src": "5380:6:0"
								},
								{
									"baseName": {
										"id": 128,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "5388:14:0"
									},
									"id": 129,
									"nodeType": "InheritanceSpecifier",
									"src": "5388:14:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 123,
								"nodeType": "StructuredDocumentation",
								"src": "4155:1196:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 663,
							"linearizedBaseContracts": [
								663,
								100,
								77,
								121
							],
							"name": "ERC20",
							"nameLocation": "5362:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 133,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "5446:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5410:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 132,
										"keyType": {
											"id": 130,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5418:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5410:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 131,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5429:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 139,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "5520:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5464:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 138,
										"keyType": {
											"id": 134,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5472:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5464:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 137,
											"keyType": {
												"id": 135,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5491:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "5483:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 136,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5502:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 141,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "5556:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5540:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5540:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 143,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "5592:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5577:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 142,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5577:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 145,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "5619:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 663,
									"src": "5604:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 144,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5604:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6003:60:0",
										"statements": [
											{
												"expression": {
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 153,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "6014:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 154,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "6022:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6014:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "6014:13:0"
											},
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 157,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "6038:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 158,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "6048:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6038:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "6038:17:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5635:306:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 162,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "5973:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "5959:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 147,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5959:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "5994:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "5980:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5980:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5958:44:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6003:0:0"
									},
									"scope": 663,
									"src": "5947:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "6202:31:0",
										"statements": [
											{
												"expression": {
													"id": 169,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 143,
													"src": "6220:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 168,
												"id": 170,
												"nodeType": "Return",
												"src": "6213:12:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6071:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "6142:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 165,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6169:8:0"
									},
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6146:2:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "6187:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6187:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6186:15:0"
									},
									"scope": 663,
									"src": "6133:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "6423:33:0",
										"statements": [
											{
												"expression": {
													"id": 179,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "6441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 178,
												"id": 180,
												"nodeType": "Return",
												"src": "6434:14:0"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "6241:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "6361:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6390:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6367:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6408:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6408:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6407:15:0"
									},
									"scope": 663,
									"src": "6352:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "7160:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7178:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 188,
												"id": 190,
												"nodeType": "Return",
												"src": "7171:9:0"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "6464:625:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "7104:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 185,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7135:8:0"
									},
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7112:2:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "7153:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 186,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7153:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7152:7:0"
									},
									"scope": 663,
									"src": "7095:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										8
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "7323:38:0",
										"statements": [
											{
												"expression": {
													"id": 199,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 141,
													"src": "7341:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 198,
												"id": 200,
												"nodeType": "Return",
												"src": "7334:19:0"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "7196:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "7262:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 195,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7296:8:0"
									},
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7273:2:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "7314:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7314:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7313:9:0"
									},
									"scope": 663,
									"src": "7253:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										16
									],
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "7507:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 211,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "7525:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 213,
													"indexExpression": {
														"id": 212,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "7535:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7525:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 210,
												"id": 214,
												"nodeType": "Return",
												"src": "7518:25:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "7369:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7433:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 207,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7480:8:0"
									},
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7451:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "7443:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7443:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7442:17:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "7498:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7498:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7497:9:0"
									},
									"scope": 663,
									"src": "7424:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "7856:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 228,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "7877:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7877:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 230,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7891:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 231,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "7902:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 227,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "7867:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7867:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "7867:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7927:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 226,
												"id": 235,
												"nodeType": "Return",
												"src": "7920:11:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "7559:199:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "7773:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 223,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7832:8:0"
									},
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7790:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "7782:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7809:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "7801:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7781:35:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "7850:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7850:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7849:6:0"
									},
									"scope": 663,
									"src": "7764:175:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										36
									],
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "8100:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 248,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "8118:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 250,
														"indexExpression": {
															"id": 249,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "8130:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8118:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 252,
													"indexExpression": {
														"id": 251,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "8137:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8118:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 253,
												"nodeType": "Return",
												"src": "8111:34:0"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "7947:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "8011:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 244,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8073:8:0"
									},
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8029:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "8021:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8044:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "8036:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8020:32:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "8091:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8090:9:0"
									},
									"scope": 663,
									"src": "8002:151:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										46
									],
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "8389:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 267,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "8409:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8409:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 269,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "8423:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 270,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8432:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 266,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "8400:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8400:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "8400:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8457:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 265,
												"id": 274,
												"nodeType": "Return",
												"src": "8450:11:0"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "8161:133:0",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "8309:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 262,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8365:8:0"
									},
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8325:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "8317:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8317:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8342:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "8334:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8316:33:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "8383:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8383:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8382:6:0"
									},
									"scope": 663,
									"src": "8300:169:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										58
									],
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "9097:346:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 290,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "9118:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 291,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "9126:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 292,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "9137:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 289,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "9108:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9108:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "9108:36:0"
											},
											{
												"assignments": [
													296
												],
												"declarations": [
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "9165:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 323,
														"src": "9157:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 295,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9157:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 303,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 297,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "9184:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 299,
														"indexExpression": {
															"id": 298,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "9196:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9184:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 302,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 300,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "9204:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9204:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9184:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9157:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 305,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "9236:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 306,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "9256:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9236:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9264:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9228:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9228:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "9228:79:0"
											},
											{
												"id": 320,
												"nodeType": "UncheckedBlock",
												"src": "9318:94:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 312,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "9352:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 313,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "9360:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9360:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 315,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "9374:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 316,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 283,
																		"src": "9393:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9374:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 311,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "9343:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9343:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 319,
														"nodeType": "ExpressionStatement",
														"src": "9343:57:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9431:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 288,
												"id": 322,
												"nodeType": "Return",
												"src": "9424:11:0"
											}
										]
									},
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "8477:468:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "8960:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 285,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9073:8:0"
									},
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8991:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "8983:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "9016:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9008:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9044:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9036:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8972:85:0"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "9091:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9091:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9090:6:0"
									},
									"scope": 663,
									"src": "8951:492:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "9946:121:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 335,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "9966:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9966:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "9980:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 338,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 139,
																		"src": "9989:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 341,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 339,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "10001:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10001:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9989:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 343,
																"indexExpression": {
																	"id": 342,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "10015:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9989:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 344,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "10026:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9989:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 334,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "9957:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9957:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "9957:80:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10055:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 333,
												"id": 349,
												"nodeType": "Return",
												"src": "10048:11:0"
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "9451:395:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "9861:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9887:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "9879:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "9904:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "9896:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9878:37:0"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "9940:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9940:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9939:6:0"
									},
									"scope": 663,
									"src": "9852:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "10669:314:0",
										"statements": [
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10688:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "10680:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10680:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 369,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 363,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "10707:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 366,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 364,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "10719:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10719:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10707:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 368,
													"indexExpression": {
														"id": 367,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "10733:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10707:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10680:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 371,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "10760:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 372,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "10780:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10760:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10797:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10752:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10752:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "10752:85:0"
											},
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "10848:104:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 378,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "10882:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10882:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 380,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "10896:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 381,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "10905:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 382,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 356,
																		"src": "10924:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10905:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 377,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "10873:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10873:67:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 385,
														"nodeType": "ExpressionStatement",
														"src": "10873:67:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10971:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 360,
												"id": 388,
												"nodeType": "Return",
												"src": "10964:11:0"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "10075:489:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "10579:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10605:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "10597:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10597:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "10622:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "10614:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10596:42:0"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "10663:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10663:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10662:6:0"
									},
									"scope": 663,
									"src": "10570:413:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "11594:612:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 401,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "11613:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11631:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11623:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11623:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11623:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11613:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11635:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11605:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11605:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "11605:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "11694:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11715:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11707:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 412,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11707:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11707:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11694:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11719:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11686:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11686:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "11686:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "11791:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 422,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "11799:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 423,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "11810:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "11770:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11770:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "11770:47:0"
											},
											{
												"assignments": [
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "11838:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "11830:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 426,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11830:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 431,
												"initialValue": {
													"baseExpression": {
														"id": 428,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "11854:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 430,
													"indexExpression": {
														"id": 429,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "11864:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11854:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11830:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 433,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "11890:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 434,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "11907:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11890:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11915:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11882:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11882:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "11882:74:0"
											},
											{
												"id": 447,
												"nodeType": "UncheckedBlock",
												"src": "11967:79:0",
												"statements": [
													{
														"expression": {
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 439,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "11992:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 441,
																"indexExpression": {
																	"id": 440,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "12002:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11992:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 442,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "12012:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 443,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "12028:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12012:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11992:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 446,
														"nodeType": "ExpressionStatement",
														"src": "11992:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 448,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "12056:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 450,
														"indexExpression": {
															"id": 449,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "12066:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12056:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 451,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "12080:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12056:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "12056:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 455,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "12113:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 456,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "12121:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 457,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "12132:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 454,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "12104:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12104:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "EmitStatement",
												"src": "12099:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "12172:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "12180:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "12191:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 460,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "12152:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12152:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "12152:46:0"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "10991:476:0",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11482:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "11510:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "11502:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11502:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "11535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "11527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11527:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11563:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "11555:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11555:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11491:85:0"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11594:0:0"
									},
									"scope": 663,
									"src": "11473:733:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "12558:334:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 476,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "12577:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12596:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12588:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 477,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12588:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12588:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12577:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12600:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12569:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12569:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "12569:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12676:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12668:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 486,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12668:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12668:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "12680:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "12689:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 485,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "12647:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12647:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "12647:49:0"
											},
											{
												"expression": {
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 494,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "12709:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 495,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "12725:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12709:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "12709:22:0"
											},
											{
												"expression": {
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 498,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "12742:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 500,
														"indexExpression": {
															"id": 499,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "12752:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12742:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 501,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "12764:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12742:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "12742:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12803:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12795:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 505,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12795:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12795:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "12807:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "12816:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 504,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "12786:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12786:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "EmitStatement",
												"src": "12781:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12864:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12856:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 514,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12856:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12856:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "12868:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "12877:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "12836:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12836:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "12836:48:0"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "12214:273:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "12502:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12516:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "12508:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12508:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12533:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "12525:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12525:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12507:33:0"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12558:0:0"
									},
									"scope": 663,
									"src": "12493:399:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "13290:526:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "13309:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13328:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13320:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 533,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13320:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13320:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13309:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13332:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13301:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13301:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "13301:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 542,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "13402:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13419:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13411:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 543,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13411:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13411:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 547,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "13423:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 541,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "13381:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13381:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "13381:49:0"
											},
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "13451:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 594,
														"src": "13443:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 550,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13443:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 555,
												"initialValue": {
													"baseExpression": {
														"id": 552,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "13468:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 554,
													"indexExpression": {
														"id": 553,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "13478:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13468:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13443:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 557,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "13505:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 558,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "13523:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13505:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13531:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 556,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13497:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13497:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "13497:71:0"
											},
											{
												"id": 571,
												"nodeType": "UncheckedBlock",
												"src": "13579:81:0",
												"statements": [
													{
														"expression": {
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 563,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "13604:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 565,
																"indexExpression": {
																	"id": 564,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "13614:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "13604:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 566,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "13625:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 567,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "13642:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13625:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13604:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 570,
														"nodeType": "ExpressionStatement",
														"src": "13604:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 572,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "13670:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 573,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "13686:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13670:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "13670:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 577,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "13719:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13736:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13728:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 578,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13728:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13728:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 582,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "13740:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 576,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "13710:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13710:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 584,
												"nodeType": "EmitStatement",
												"src": "13705:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 586,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "13780:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13797:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13789:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 587,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13789:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13789:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "13801:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 585,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "13760:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13760:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "13760:48:0"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "12900:319:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "13234:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13248:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "13240:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13240:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13265:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "13257:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13257:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13239:33:0"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13290:0:0"
									},
									"scope": 663,
									"src": "13225:591:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "14371:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 606,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "14390:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14407:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14399:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 607,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14399:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14399:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14390:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14411:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 605,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14382:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14382:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "14382:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 616,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "14469:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14488:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14480:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 617,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14480:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14480:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14469:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14492:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14461:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14461:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "14461:68:0"
											},
											{
												"expression": {
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 625,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "14542:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 628,
															"indexExpression": {
																"id": 626,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "14554:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14542:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 629,
														"indexExpression": {
															"id": 627,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "14561:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14542:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 630,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "14572:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14542:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "14542:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 634,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "14603:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "14610:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 636,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "14619:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 633,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "14594:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14594:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "EmitStatement",
												"src": "14589:37:0"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "13824:424:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14263:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14290:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "14282:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14282:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14314:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "14306:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14340:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "14332:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14271:82:0"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14371:0:0"
									},
									"scope": 663,
									"src": "14254:380:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "15357:2:0",
										"statements": []
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "14642:586:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15243:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15282:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "15274:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15305:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "15297:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15297:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15326:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "15318:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15318:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15263:76:0"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15357:0:0"
									},
									"scope": 663,
									"src": "15234:125:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "16085:2:0",
										"statements": []
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "15367:590:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "15972:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16010:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "16002:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16002:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16033:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "16025:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16054:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "16046:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15991:76:0"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16085:0:0"
									},
									"scope": 663,
									"src": "15963:124:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1384,
							"src": "5353:10737:0",
							"usedErrors": []
						},
						{
							"id": 664,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "16094:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 665,
								"nodeType": "StructuredDocumentation",
								"src": "16121:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 959,
							"linearizedBaseContracts": [
								959
							],
							"name": "Address",
							"nameLocation": "16200:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "16868:321:0",
										"statements": [
											{
												"assignments": [
													674
												],
												"declarations": [
													{
														"constant": false,
														"id": 674,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "17078:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 681,
														"src": "17070:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 673,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17070:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 675,
												"nodeType": "VariableDeclarationStatement",
												"src": "17070:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "17102:54:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17117:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "17137:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "17125:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "17125:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "17117:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 668,
														"isOffset": false,
														"isSlot": false,
														"src": "17137:7:0",
														"valueSize": 1
													},
													{
														"declaration": 674,
														"isOffset": false,
														"isSlot": false,
														"src": "17117:4:0",
														"valueSize": 1
													}
												],
												"id": 676,
												"nodeType": "InlineAssembly",
												"src": "17093:63:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 677,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "17173:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17180:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17173:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 672,
												"id": 680,
												"nodeType": "Return",
												"src": "17166:15:0"
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "16215:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "16811:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "16830:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "16822:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16821:17:0"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "16862:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16862:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16861:6:0"
									},
									"scope": 959,
									"src": "16802:387:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "18195:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 693,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "18222:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$959",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$959",
																				"typeString": "library Address"
																			}
																		],
																		"id": 692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18214:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 691,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "18214:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18214:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "18214:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 696,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "18239:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18214:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18247:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 690,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18206:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18206:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "18206:73:0"
											},
											{
												"assignments": [
													702,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 702,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "18298:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 715,
														"src": "18293:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 701,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "18293:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 709,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18341:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 703,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "18311:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "18311:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 705,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "18333:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "18311:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18311:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18292:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 711,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "18363:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18372:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 710,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18355:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18355:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "18355:78:0"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "17197:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "18133:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "18159:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "18143:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18143:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18178:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "18170:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18142:43:0"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18195:0:0"
									},
									"scope": 959,
									"src": "18124:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "19292:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 727,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "19323:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 728,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "19331:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19337:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 726,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															733,
															753
														],
														"referencedDeclaration": 753,
														"src": "19310:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19310:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 725,
												"id": 731,
												"nodeType": "Return",
												"src": "19303:67:0"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "18449:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "19212:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "19233:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "19225:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19225:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "19254:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "19241:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 720,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19241:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19224:35:0"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "19278:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 723,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19278:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19277:14:0"
									},
									"scope": 959,
									"src": "19203:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "19759:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 746,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "19799:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 747,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "19807:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19813:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 749,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "19816:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 745,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															773,
															823
														],
														"referencedDeclaration": 823,
														"src": "19777:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19777:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 744,
												"id": 751,
												"nodeType": "Return",
												"src": "19770:59:0"
											}
										]
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "19386:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "19617:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "19648:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "19640:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "19678:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "19665:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 737,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19665:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "19707:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "19693:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "19693:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19629:97:0"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "19745:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 742,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19745:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19744:14:0"
									},
									"scope": 959,
									"src": "19608:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "20359:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 766,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "20399:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 767,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "20407:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 768,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "20413:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20420:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 765,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															773,
															823
														],
														"referencedDeclaration": 823,
														"src": "20377:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20377:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 764,
												"id": 771,
												"nodeType": "Return",
												"src": "20370:94:0"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "19845:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "20221:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "20261:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "20253:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "20291:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "20278:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 757,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20278:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20314:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "20306:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20242:84:0"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "20345:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 762,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20345:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20344:14:0"
									},
									"scope": 959,
									"src": "20212:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "20912:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 790,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "20939:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$959",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$959",
																				"typeString": "library Address"
																			}
																		],
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "20931:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 788,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "20931:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20931:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "20931:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 793,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "20956:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20931:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20963:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 787,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20923:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20923:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "20923:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 800,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "21034:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 799,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "21023:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21023:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21043:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 798,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21015:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21015:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "21015:60:0"
											},
											{
												"assignments": [
													806,
													808
												],
												"declarations": [
													{
														"constant": false,
														"id": 806,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "21094:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 822,
														"src": "21089:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 805,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "21089:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "21116:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 822,
														"src": "21103:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 807,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "21103:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"initialValue": {
													"arguments": [
														{
															"id": 813,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "21156:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 809,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "21130:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "21130:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 811,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "21149:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "21130:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21130:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21088:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 817,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "21196:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 818,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "21205:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 819,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "21217:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 816,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "21179:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21179:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 786,
												"id": 821,
												"nodeType": "Return",
												"src": "21172:58:0"
											}
										]
									},
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "20480:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "20737:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "20777:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "20769:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "20807:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "20794:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 777,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20794:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "20822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "20860:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "20846:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 781,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "20846:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20758:121:0"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "20898:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 784,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20898:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20897:14:0"
									},
									"scope": 959,
									"src": "20728:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "21523:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 834,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "21560:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 835,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "21568:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21574:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 833,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															840,
															875
														],
														"referencedDeclaration": 875,
														"src": "21541:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21541:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 832,
												"id": 838,
												"nodeType": "Return",
												"src": "21534:80:0"
											}
										]
									},
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "21246:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "21432:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "21459:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "21451:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "21480:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "21467:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 827,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21467:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21450:35:0"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "21509:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 830,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21509:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21508:14:0"
									},
									"scope": 959,
									"src": "21423:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "21976:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 854,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "22006:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 853,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "21995:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21995:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22015:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 852,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21987:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21987:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "21987:67:0"
											},
											{
												"assignments": [
													860,
													862
												],
												"declarations": [
													{
														"constant": false,
														"id": 860,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "22073:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "22068:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 859,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "22068:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 862,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "22095:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "22082:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 861,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "22082:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 867,
												"initialValue": {
													"arguments": [
														{
															"id": 865,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "22127:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 863,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "22109:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "22109:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22109:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22067:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 869,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "22167:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 870,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "22176:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 871,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "22188:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 868,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "22150:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22150:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 851,
												"id": 873,
												"nodeType": "Return",
												"src": "22143:58:0"
											}
										]
									},
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "21630:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "21823:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "21860:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "21852:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "21890:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "21877:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 844,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21877:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "21919:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "21905:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 846,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "21905:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21841:97:0"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "21962:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 849,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21962:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21961:14:0"
									},
									"scope": 959,
									"src": "21814:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "22493:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 886,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "22532:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "22540:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22546:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 885,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															892,
															927
														],
														"referencedDeclaration": 927,
														"src": "22511:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22511:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 884,
												"id": 890,
												"nodeType": "Return",
												"src": "22504:84:0"
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "22217:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "22405:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "22434:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "22426:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "22455:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "22442:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 879,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22442:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22425:35:0"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "22479:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 882,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22479:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22478:14:0"
									},
									"scope": 959,
									"src": "22396:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "22949:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 906,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "22979:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 905,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "22968:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22968:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22988:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 904,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22960:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22960:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "22960:69:0"
											},
											{
												"assignments": [
													912,
													914
												],
												"declarations": [
													{
														"constant": false,
														"id": 912,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "23048:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 926,
														"src": "23043:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 911,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "23043:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 914,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "23070:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 926,
														"src": "23057:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 913,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "23057:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 919,
												"initialValue": {
													"arguments": [
														{
															"id": 917,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "23104:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 915,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "23084:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "23084:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23084:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23042:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 921,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "23144:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 922,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "23153:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 923,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "23165:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 920,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "23127:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23127:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 903,
												"id": 925,
												"nodeType": "Return",
												"src": "23120:58:0"
											}
										]
									},
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "22604:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "22799:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "22838:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "22830:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22830:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "22868:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "22855:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 896,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22855:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "22897:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "22883:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 898,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "22883:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22819:97:0"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "22935:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 901,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22935:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22934:14:0"
									},
									"scope": 959,
									"src": "22790:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "23578:548:0",
										"statements": [
											{
												"condition": {
													"id": 939,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 930,
													"src": "23593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 955,
													"nodeType": "Block",
													"src": "23652:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 943,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 932,
																		"src": "23738:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "23738:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23758:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "23738:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 953,
																"nodeType": "Block",
																"src": "24053:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 950,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 934,
																					"src": "24079:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 949,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "24072:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24072:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 952,
																		"nodeType": "ExpressionStatement",
																		"src": "24072:20:0"
																	}
																]
															},
															"id": 954,
															"nodeType": "IfStatement",
															"src": "23734:374:0",
															"trueBody": {
																"id": 948,
																"nodeType": "Block",
																"src": "23761:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "23884:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "23907:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "23936:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "23930:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "23930:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "23911:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "23980:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "23984:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "23976:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "23976:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "23997:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "23969:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "23969:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "23969:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 932,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "23936:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 932,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "23984:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 947,
																		"nodeType": "InlineAssembly",
																		"src": "23875:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 956,
												"nodeType": "IfStatement",
												"src": "23589:530:0",
												"trueBody": {
													"id": 942,
													"nodeType": "Block",
													"src": "23602:44:0",
													"statements": [
														{
															"expression": {
																"id": 940,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 932,
																"src": "23624:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 938,
															"id": 941,
															"nodeType": "Return",
															"src": "23617:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "23194:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "23423:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "23455:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "23450:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 929,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23450:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "23486:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "23473:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 931,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23473:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "23521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "23507:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 933,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23507:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23439:101:0"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "23564:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 936,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23564:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23563:14:0"
									},
									"scope": 959,
									"src": "23414:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1384,
							"src": "16192:7937:0",
							"usedErrors": []
						},
						{
							"id": 960,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "24133:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 961,
								"nodeType": "StructuredDocumentation",
								"src": "24160:465:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1180,
							"linearizedBaseContracts": [
								1180
							],
							"name": "SafeERC20",
							"nameLocation": "24635:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 964,
									"libraryName": {
										"id": 962,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 959,
										"src": "24658:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "24652:26:0",
									"typeName": {
										"id": 963,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "24670:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "24792:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 975,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "24823:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 978,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 967,
																			"src": "24853:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 26,
																		"src": "24853:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "24853:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 981,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "24878:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 982,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "24882:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 976,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "24830:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "24830:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24830:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 974,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "24803:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24803:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "24803:86:0"
											}
										]
									},
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "24695:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "24725:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "24718:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 966,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 965,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "24718:6:0"
													},
													"referencedDeclaration": 77,
													"src": "24718:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24749:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "24741:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24770:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "24762:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24707:75:0"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24792:0:0"
									},
									"scope": 1180,
									"src": "24686:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "25038:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1000,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "25069:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1003,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 990,
																			"src": "25099:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 58,
																		"src": "25099:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "25099:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1006,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "25128:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1007,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "25134:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1008,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "25138:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1001,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "25076:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "25076:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25076:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 999,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "25049:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25049:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "25049:96:0"
											}
										]
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "24914:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "24948:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "24941:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 989,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 988,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "24941:6:0"
													},
													"referencedDeclaration": 77,
													"src": "24941:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24972:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "24964:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24964:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24995:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "24987:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25016:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "25008:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24930:98:0"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25038:0:0"
									},
									"scope": 1180,
									"src": "24905:248:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "25532:506:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1025,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1021,
																			"src": "25786:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25795:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "25786:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1028,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "25785:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1033,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "25826:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1180",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1180",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1032,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "25818:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1031,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "25818:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1034,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "25818:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1035,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1019,
																					"src": "25833:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1029,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1017,
																					"src": "25802:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1030,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 36,
																				"src": "25802:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25802:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25845:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "25802:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1039,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "25801:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "25785:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25862:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1024,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25763:166:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "25763:166:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "25960:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1048,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1017,
																			"src": "25990:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "25990:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "25990:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1051,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "26014:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1052,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "26023:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1046,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "25967:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "25967:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25967:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1044,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "25940:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25940:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "25940:90:0"
											}
										]
									},
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "25161:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "25431:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "25460:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "25453:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1016,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1015,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "25453:6:0"
													},
													"referencedDeclaration": 77,
													"src": "25453:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "25484:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "25476:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25476:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25510:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "25502:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25442:80:0"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25532:0:0"
									},
									"scope": 1180,
									"src": "25422:616:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "26166:197:0",
										"statements": [
											{
												"assignments": [
													1068
												],
												"declarations": [
													{
														"constant": false,
														"id": 1068,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "26185:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1092,
														"src": "26177:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1067,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26177:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1079,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1073,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "26224:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1180",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1180",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26216:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1071,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "26216:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26216:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1075,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "26231:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1069,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "26200:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 36,
															"src": "26200:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26200:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1077,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "26242:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26200:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26177:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1081,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "26278:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1084,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "26308:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "26308:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "26308:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1087,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1062,
																	"src": "26332:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1088,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "26341:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1082,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "26285:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "26285:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26285:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1080,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "26258:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26258:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "26258:97:0"
											}
										]
									},
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "26055:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "26094:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "26087:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1059,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1058,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "26087:6:0"
													},
													"referencedDeclaration": 77,
													"src": "26087:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "26118:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "26110:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26144:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "26136:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26076:80:0"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26166:0:0"
									},
									"scope": 1180,
									"src": "26046:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "26491:377:0",
										"statements": [
											{
												"id": 1139,
												"nodeType": "UncheckedBlock",
												"src": "26502:359:0",
												"statements": [
													{
														"assignments": [
															1104
														],
														"declarations": [
															{
																"constant": false,
																"id": 1104,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "26535:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 1139,
																"src": "26527:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1103,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26527:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1113,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1109,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "26574:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1180",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1180",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "26566:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1107,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "26566:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26566:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1111,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "26581:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1105,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "26550:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "26550:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26550:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26527:62:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1115,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "26612:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1116,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1100,
																		"src": "26628:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "26612:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26635:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1114,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "26604:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26604:75:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1120,
														"nodeType": "ExpressionStatement",
														"src": "26604:75:0"
													},
													{
														"assignments": [
															1122
														],
														"declarations": [
															{
																"constant": false,
																"id": 1122,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "26702:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 1139,
																"src": "26694:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1121,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26694:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1126,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1123,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "26717:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1124,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1100,
																"src": "26732:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26717:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26694:43:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1128,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "26772:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1131,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1096,
																					"src": "26802:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1132,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 46,
																				"src": "26802:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "26802:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1134,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "26826:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1135,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1122,
																			"src": "26835:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1129,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "26779:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "26779:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26779:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1127,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "26752:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26752:97:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1138,
														"nodeType": "ExpressionStatement",
														"src": "26752:97:0"
													}
												]
											}
										]
									},
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "26380:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "26419:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "26412:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1095,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1094,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "26412:6:0"
													},
													"referencedDeclaration": 77,
													"src": "26412:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "26443:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "26435:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26435:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26469:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "26461:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26461:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26401:80:0"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26491:0:0"
									},
									"scope": 1180,
									"src": "26371:497:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "27329:646:0",
										"statements": [
											{
												"assignments": [
													1151
												],
												"declarations": [
													{
														"constant": false,
														"id": 1151,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "27696:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1178,
														"src": "27683:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1150,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "27683:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1160,
												"initialValue": {
													"arguments": [
														{
															"id": 1157,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "27737:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27743:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1154,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "27717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1152,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27709:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27709:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 753,
														"src": "27709:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27709:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27683:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1161,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "27793:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "27793:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27813:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27793:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1177,
												"nodeType": "IfStatement",
												"src": "27789:179:0",
												"trueBody": {
													"id": 1176,
													"nodeType": "Block",
													"src": "27816:152:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1168,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1151,
																				"src": "27890:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1170,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "27903:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1169,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "27903:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1171,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27902:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1166,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "27879:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "27879:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "27879:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27911:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1165,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "27871:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27871:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1175,
															"nodeType": "ExpressionStatement",
															"src": "27871:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "26876:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "27268:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "27295:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "27288:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1144,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1143,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "27288:6:0"
													},
													"referencedDeclaration": 77,
													"src": "27288:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "27315:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "27302:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1146,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27302:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27287:33:0"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27329:0:0"
									},
									"scope": 1180,
									"src": "27259:716:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1384,
							"src": "24627:3351:0",
							"usedErrors": []
						},
						{
							"id": 1181,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "27982:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"hexValue": "566f74696e67457363726f776564576176654c656e677468",
											"id": 1183,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "28034:26:0",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_2a4c93bb2c918a2e15c8c9c4a1aab9fba3b0e5b31102dc137c8323c1676a567f",
												"typeString": "literal_string \"VotingEscrowedWaveLength\""
											},
											"value": "VotingEscrowedWaveLength"
										},
										{
											"hexValue": "766557564c54",
											"id": 1184,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "28062:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_fb95182bd658b3ba2e236b3ea39ce941e51d1b78d016886257eea0410ddb0c37",
												"typeString": "literal_string \"veWVLT\""
											},
											"value": "veWVLT"
										}
									],
									"baseName": {
										"id": 1182,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "28028:5:0"
									},
									"id": 1185,
									"nodeType": "InheritanceSpecifier",
									"src": "28028:43:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1383,
							"linearizedBaseContracts": [
								1383,
								663,
								100,
								77,
								121
							],
							"name": "WVLTBar",
							"nameLocation": "28017:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1189,
									"libraryName": {
										"id": 1186,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1180,
										"src": "28085:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "28079:27:0",
									"typeName": {
										"id": 1188,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1187,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "28099:6:0"
										},
										"referencedDeclaration": 77,
										"src": "28099:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "19d152fa",
									"id": 1192,
									"mutability": "mutable",
									"name": "vestingToken",
									"nameLocation": "28128:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1383,
									"src": "28114:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1191,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1190,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "28114:6:0"
										},
										"referencedDeclaration": 77,
										"src": "28114:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1200,
									"name": "Enter",
									"nameLocation": "28155:5:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "28187:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "28171:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28171:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"indexed": false,
												"mutability": "mutable",
												"name": "vestingInAmount",
												"nameLocation": "28210:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "28202:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"indexed": false,
												"mutability": "mutable",
												"name": "mintedAmount",
												"nameLocation": "28244:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "28236:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28160:103:0"
									},
									"src": "28149:115:0"
								},
								{
									"anonymous": false,
									"id": 1208,
									"name": "Leave",
									"nameLocation": "28276:5:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "28308:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "28292:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28292:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"indexed": false,
												"mutability": "mutable",
												"name": "vestingOutAmount",
												"nameLocation": "28331:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "28323:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"indexed": false,
												"mutability": "mutable",
												"name": "burnedAmount",
												"nameLocation": "28366:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "28358:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28281:104:0"
									},
									"src": "28270:116:0"
								},
								{
									"anonymous": false,
									"id": 1212,
									"name": "ShareRevenue",
									"nameLocation": "28398:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "28419:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "28411:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28410:16:0"
									},
									"src": "28392:35:0"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "28469:47:0",
										"statements": [
											{
												"expression": {
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1218,
														"name": "vestingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "28480:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1219,
														"name": "_vestingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "28495:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "28480:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 1221,
												"nodeType": "ExpressionStatement",
												"src": "28480:28:0"
											}
										]
									},
									"id": 1223,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "_vestingToken",
												"nameLocation": "28454:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "28447:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1214,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1213,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "28447:6:0"
													},
													"referencedDeclaration": 77,
													"src": "28447:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28446:22:0"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28469:0:0"
									},
									"scope": 1383,
									"src": "28435:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "28565:920:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1228,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "28580:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28590:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "28580:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1302,
												"nodeType": "IfStatement",
												"src": "28576:902:0",
												"trueBody": {
													"id": 1301,
													"nodeType": "Block",
													"src": "28593:885:0",
													"statements": [
														{
															"assignments": [
																1232
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1232,
																	"mutability": "mutable",
																	"name": "totalLockedTokenSupply",
																	"nameLocation": "28616:22:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1301,
																	"src": "28608:30:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1231,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "28608:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1240,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1237,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "28690:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_WVLTBar_$1383",
																					"typeString": "contract WVLTBar"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_WVLTBar_$1383",
																					"typeString": "contract WVLTBar"
																				}
																			],
																			"id": 1236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "28682:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1235,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "28682:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28682:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1233,
																		"name": "vestingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1192,
																		"src": "28641:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 16,
																	"src": "28641:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28641:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "28608:102:0"
														},
														{
															"assignments": [
																1242
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1242,
																	"mutability": "mutable",
																	"name": "totalveWVLT",
																	"nameLocation": "28735:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1301,
																	"src": "28727:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1241,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "28727:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1245,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1243,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "28749:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28749:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "28727:35:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1249,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "28805:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "28805:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1253,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "28825:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_WVLTBar_$1383",
																					"typeString": "contract WVLTBar"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_WVLTBar_$1383",
																					"typeString": "contract WVLTBar"
																				}
																			],
																			"id": 1252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "28817:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1251,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "28817:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28817:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1255,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1225,
																		"src": "28832:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1246,
																		"name": "vestingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1192,
																		"src": "28779:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 58,
																	"src": "28779:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28779:61:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1257,
															"nodeType": "ExpressionStatement",
															"src": "28779:61:0"
														},
														{
															"assignments": [
																1259
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1259,
																	"mutability": "mutable",
																	"name": "mintAmount",
																	"nameLocation": "28863:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1301,
																	"src": "28855:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1258,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "28855:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1260,
															"nodeType": "VariableDeclarationStatement",
															"src": "28855:18:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1261,
																		"name": "totalveWVLT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1242,
																		"src": "28962:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28977:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "28962:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1264,
																		"name": "totalLockedTokenSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1232,
																		"src": "28982:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29008:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "28982:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "28962:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1286,
																"nodeType": "Block",
																"src": "29190:175:0",
																"statements": [
																	{
																		"assignments": [
																			1274
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1274,
																				"mutability": "mutable",
																				"name": "shareOfveWVLT",
																				"nameLocation": "29217:13:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1286,
																				"src": "29209:21:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1273,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "29209:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1281,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1277,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1275,
																							"name": "_amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1225,
																							"src": "29234:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1276,
																							"name": "totalveWVLT",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1242,
																							"src": "29244:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "29234:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1278,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "29233:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1279,
																				"name": "totalLockedTokenSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1232,
																				"src": "29280:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "29233:69:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "29209:93:0"
																	},
																	{
																		"expression": {
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1282,
																				"name": "mintAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1259,
																				"src": "29323:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1283,
																				"name": "shareOfveWVLT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1274,
																				"src": "29336:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "29323:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1285,
																		"nodeType": "ExpressionStatement",
																		"src": "29323:26:0"
																	}
																]
															},
															"id": 1287,
															"nodeType": "IfStatement",
															"src": "28958:407:0",
															"trueBody": {
																"id": 1272,
																"nodeType": "Block",
																"src": "29011:55:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1268,
																				"name": "mintAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1259,
																				"src": "29030:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1269,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1225,
																				"src": "29043:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "29030:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1271,
																		"nodeType": "ExpressionStatement",
																		"src": "29030:20:0"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1289,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "29385:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "29385:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1291,
																		"name": "mintAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "29397:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1288,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "29379:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29379:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1293,
															"nodeType": "ExpressionStatement",
															"src": "29379:29:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1295,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "29434:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "29434:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1297,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1225,
																		"src": "29446:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1298,
																		"name": "mintAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "29455:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1294,
																	"name": "Enter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "29428:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29428:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1300,
															"nodeType": "EmitStatement",
															"src": "29423:43:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "a59f3e0c",
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enter",
									"nameLocation": "28533:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "28547:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "28539:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28538:17:0"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28565:0:0"
									},
									"scope": 1383,
									"src": "28524:961:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "29541:567:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1309,
														"name": "_shareOfveWVLT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "29556:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29573:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29556:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1358,
												"nodeType": "IfStatement",
												"src": "29552:549:0",
												"trueBody": {
													"id": 1357,
													"nodeType": "Block",
													"src": "29576:525:0",
													"statements": [
														{
															"assignments": [
																1313
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1313,
																	"mutability": "mutable",
																	"name": "totalVestedTokenSupply",
																	"nameLocation": "29599:22:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1357,
																	"src": "29591:30:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1312,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29591:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1321,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1318,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "29673:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_WVLTBar_$1383",
																					"typeString": "contract WVLTBar"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_WVLTBar_$1383",
																					"typeString": "contract WVLTBar"
																				}
																			],
																			"id": 1317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "29665:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1316,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "29665:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29665:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1314,
																		"name": "vestingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1192,
																		"src": "29624:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 16,
																	"src": "29624:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29624:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "29591:102:0"
														},
														{
															"assignments": [
																1323
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1323,
																	"mutability": "mutable",
																	"name": "totalveWVLT",
																	"nameLocation": "29716:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1357,
																	"src": "29708:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1322,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29708:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1326,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1324,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "29730:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29730:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "29708:35:0"
														},
														{
															"assignments": [
																1328
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1328,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "29841:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1357,
																	"src": "29833:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1327,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29833:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1335,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1329,
																				"name": "_shareOfveWVLT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1306,
																				"src": "29851:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1330,
																				"name": "totalVestedTokenSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1313,
																				"src": "29868:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "29851:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1332,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "29850:41:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1333,
																	"name": "totalveWVLT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1323,
																	"src": "29911:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29850:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "29833:89:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1337,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "29943:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "29943:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1339,
																		"name": "_shareOfveWVLT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1306,
																		"src": "29955:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1336,
																	"name": "_burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "29937:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29937:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1341,
															"nodeType": "ExpressionStatement",
															"src": "29937:33:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1345,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "30007:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "30007:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1347,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1328,
																		"src": "30019:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1342,
																		"name": "vestingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1192,
																		"src": "29985:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 26,
																	"src": "29985:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29985:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1349,
															"nodeType": "ExpressionStatement",
															"src": "29985:41:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1351,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "30054:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "30054:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1353,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1328,
																		"src": "30066:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1354,
																		"name": "_shareOfveWVLT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1306,
																		"src": "30074:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1350,
																	"name": "Leave",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1208,
																	"src": "30048:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30048:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1356,
															"nodeType": "EmitStatement",
															"src": "30043:46:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "67dfd4c9",
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leave",
									"nameLocation": "29502:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "_shareOfveWVLT",
												"nameLocation": "29516:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "29508:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29508:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29507:24:0"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29541:0:0"
									},
									"scope": 1383,
									"src": "29493:615:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "30164:117:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1368,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "30201:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "30201:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1372,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "30221:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_WVLTBar_$1383",
																		"typeString": "contract WVLTBar"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_WVLTBar_$1383",
																		"typeString": "contract WVLTBar"
																	}
																],
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30213:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1370,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30213:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30213:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1374,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "30228:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1365,
															"name": "vestingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "30175:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 58,
														"src": "30175:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30175:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1376,
												"nodeType": "ExpressionStatement",
												"src": "30175:61:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1378,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "30265:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1377,
														"name": "ShareRevenue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "30252:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30252:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "EmitStatement",
												"src": "30247:26:0"
											}
										]
									},
									"functionSelector": "139e41e4",
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "shareRevenue",
									"nameLocation": "30125:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "30146:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "30138:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30137:17:0"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30164:0:0"
									},
									"scope": 1383,
									"src": "30116:165:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1384,
							"src": "28008:2276:0",
							"usedErrors": []
						}
					],
					"src": "0:30284:0"
				},
				"id": 0
			}
		}
	}
}