/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { WaveBar, WaveBarInterface } from "../../WAVEBar.sol/WaveBar";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_vestingToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "vestingInAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintedAmount",
        type: "uint256",
      },
    ],
    name: "Enter",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "vestingOutAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "burnedAmount",
        type: "uint256",
      },
    ],
    name: "Leave",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ShareRevenue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "enter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_shareOfveWave",
        type: "uint256",
      },
    ],
    name: "leave",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "shareRevenue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200121a3803806200121a83398101604081905262000034916200017d565b604080518082018252601481527f566f74696e6720457363726f776564205761766500000000000000000000000060208083019182528351808501909452600684526576655741564560d01b9084015281519192916200009791600391620000d7565b508051620000ad906004906020840190620000d7565b5050600580546001600160a01b0319166001600160a01b03939093169290921790915550620001ec565b828054620000e590620001af565b90600052602060002090601f01602090048101928262000109576000855562000154565b82601f106200012457805160ff191683800117855562000154565b8280016001018555821562000154579182015b828111156200015457825182559160200191906001019062000137565b506200016292915062000166565b5090565b5b8082111562000162576000815560010162000167565b6000602082840312156200019057600080fd5b81516001600160a01b0381168114620001a857600080fd5b9392505050565b600181811c90821680620001c457607f821691505b60208210811415620001e657634e487b7160e01b600052602260045260246000fd5b50919050565b61101e80620001fc6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80633950935111610097578063a457c2d711610066578063a457c2d714610206578063a59f3e0c14610219578063a9059cbb1461022c578063dd62ed3e1461023f57600080fd5b806339509351146101af57806367dfd4c9146101c257806370a08231146101d557806395d89b41146101fe57600080fd5b806318160ddd116100d357806318160ddd1461015057806319d152fa1461016257806323b872dd1461018d578063313ce567146101a057600080fd5b806306fdde03146100fa578063095ea7b314610118578063139e41e41461013b575b600080fd5b610102610278565b60405161010f9190610ed2565b60405180910390f35b61012b610126366004610e54565b61030a565b604051901515815260200161010f565b61014e610149366004610ea0565b610320565b005b6002545b60405190815260200161010f565b600554610175906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b61012b61019b366004610e18565b6103e1565b6040516012815260200161010f565b61012b6101bd366004610e54565b610490565b61014e6101d0366004610ea0565b6104cc565b6101546101e3366004610dc3565b6001600160a01b031660009081526020819052604090205490565b610102610648565b61012b610214366004610e54565b610657565b61014e610227366004610ea0565b6106f0565b61012b61023a366004610e54565b610881565b61015461024d366004610de5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461028790610f97565b80601f01602080910402602001604051908101604052809291908181526020018280546102b390610f97565b80156103005780601f106102d557610100808354040283529160200191610300565b820191906000526020600020905b8154815290600101906020018083116102e357829003601f168201915b5050505050905090565b600061031733848461088e565b50600192915050565b6005546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561037257600080fd5b505af1158015610386573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103aa9190610e7e565b506040518181527f8345132cbbbde83001e783cdfdd5190dedc863ae82cae7abe302b22322a602749060200160405180910390a150565b60006103ee8484846109b3565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104785760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610485853385840361088e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103179185906104c7908690610f27565b61088e565b8015610645576005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561051657600080fd5b505afa15801561052a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054e9190610eb9565b9050600061055b60025490565b905060008161056a8486610f61565b6105749190610f3f565b90506105803385610b82565b60055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156105cc57600080fd5b505af11580156105e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106049190610e7e565b50604080518281526020810186905233917f0f0f7f8153c6d63a5696720d4cc434e56bb5ac1cf8c791ed9c180defb6e9215391015b60405180910390a25050505b50565b60606004805461028790610f97565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156106d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161046f565b6106e6338585840361088e565b5060019392505050565b8015610645576005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561073a57600080fd5b505afa15801561074e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107729190610eb9565b9050600061077f60025490565b6005546040516323b872dd60e01b8152336004820152306024820152604481018690529192506001600160a01b0316906323b872dd90606401602060405180830381600087803b1580156107d257600080fd5b505af11580156107e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080a9190610e7e565b506000811580610818575082155b1561082457508261083f565b6000836108318487610f61565b61083b9190610f3f565b9150505b6108493382610cc8565b604080518581526020810183905233917f5087fbec8bdd9b358f62d89babb5f4dd44f8576230a9520c90e3407d6f4dd1fb9101610639565b60006103173384846109b3565b6001600160a01b0383166108f05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161046f565b6001600160a01b0382166109515760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161046f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610a175760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161046f565b6001600160a01b038216610a795760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161046f565b6001600160a01b03831660009081526020819052604090205481811015610af15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161046f565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610b28908490610f27565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b7491815260200190565b60405180910390a350505050565b6001600160a01b038216610be25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161046f565b6001600160a01b03821660009081526020819052604090205481811015610c565760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161046f565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610c85908490610f80565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016109a6565b6001600160a01b038216610d1e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161046f565b8060026000828254610d309190610f27565b90915550506001600160a01b03821660009081526020819052604081208054839290610d5d908490610f27565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b0381168114610dbe57600080fd5b919050565b600060208284031215610dd557600080fd5b610dde82610da7565b9392505050565b60008060408385031215610df857600080fd5b610e0183610da7565b9150610e0f60208401610da7565b90509250929050565b600080600060608486031215610e2d57600080fd5b610e3684610da7565b9250610e4460208501610da7565b9150604084013590509250925092565b60008060408385031215610e6757600080fd5b610e7083610da7565b946020939093013593505050565b600060208284031215610e9057600080fd5b81518015158114610dde57600080fd5b600060208284031215610eb257600080fd5b5035919050565b600060208284031215610ecb57600080fd5b5051919050565b600060208083528351808285015260005b81811015610eff57858101830151858201604001528201610ee3565b81811115610f11576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610f3a57610f3a610fd2565b500190565b600082610f5c57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610f7b57610f7b610fd2565b500290565b600082821015610f9257610f92610fd2565b500390565b600181811c90821680610fab57607f821691505b60208210811415610fcc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212201f5d033d78f21b72cadcb4c3dbe912f2d44f2314907036f6be2351b6f2d6e0d564736f6c63430008070033";

type WaveBarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WaveBarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WaveBar__factory extends ContractFactory {
  constructor(...args: WaveBarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vestingToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WaveBar> {
    return super.deploy(_vestingToken, overrides || {}) as Promise<WaveBar>;
  }
  override getDeployTransaction(
    _vestingToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_vestingToken, overrides || {});
  }
  override attach(address: string): WaveBar {
    return super.attach(address) as WaveBar;
  }
  override connect(signer: Signer): WaveBar__factory {
    return super.connect(signer) as WaveBar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WaveBarInterface {
    return new utils.Interface(_abi) as WaveBarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WaveBar {
    return new Contract(address, _abi, signerOrProvider) as WaveBar;
  }
}
